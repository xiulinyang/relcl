sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	at	_	at	IN	O	_	i	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	end	_	end	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	1	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	scale	_	scale	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
9	we've	_	we've	NN	O	_	mean-01	_	0	IGNORE	true
10	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	1	APP_o	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	make	_	make	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
13	sure	_	sure	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	en$LEMMA$-01	(o(s()))	10	APP_o	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	49	APP_op2	true
16	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
17	eat	_	eat	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
23	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
24	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
26	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
27	teenage	_	teenage	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	boy	_	boy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
30	comes	_	come	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
31	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
32	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
33	school	_	school	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
35	eats	_	eat	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
36	a	_	a	DT	O	_	1	_	0	IGNORE	true
37	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	loaf	_	loaf	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	bread	_	bread	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
41	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
42	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
43	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	1	MOD_mod	true
44	people	_	people	NNS	O	_	person	_	0	IGNORE	true
45	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	46	MOD_mod	true
46	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	49	APP_op1	true
47	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	much	_	much	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
50	get	_	get	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
51	overdose,"	_	overdose,"	NNP	O	_	cause-01	_	0	IGNORE	true
52	Ms_Bauchtman	_name_	Bauchtman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	53	APP_s	true
53	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@obligate-01, 52@@p@@person, 24@@p@@all, 28@@d@@boy, 1@@h@@contrast-01, 53@@s@@say-01, 52@@n@@_NAME_, 43@@p@@that, 46@@s@@get-05, 8@@d@@scale, 25@@s@@know-01, 4@@p@@other, 19@@explicitanon0@@lot, 35@@s@@eat-01, 21@@d@@food, 31@@d@@home, 38@@d@@loaf, 30@@g@@come-01, 37@@p@@whole, 47@@s@@too, 27@@p@@teenage, 23@@d@@we, 40@@p@@bread, 49@@a@@and, 13@@c@@ensure-01, 17@@s@@eat-01, 45@@explicitanon0@@-, 15@@d@@person, 5@@w@@end, 33@@s@@school, 48@@d@@much]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
4	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
5	who's	_	who'	NNS	O	_	person	_	0	IGNORE	true
6	going	_	go	VBG	O	_	accompany-01	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	treat	_	treat	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_o	true
10	nicely	_	nicely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	nice-01	(s())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	8	MOD_s	true
12	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	11	APP_op2	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@s@@cause-01, 8@@s@@treat-01, 10@@s@@nice-01, 11@@a@@and, 12@@s@@well-09, 4@@d@@someone, 3@@s@@want-01, 9@@d@@person, 2@@d@@i]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
4	walked	_	walk	VBD	O	(p<root> / --LEX--  :ARG2 (g<o>)  :ARG0 (g2<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
5	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	shallow	_	shallow	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	crystal	_	crystal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	stream	_	stream	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	saw	_	see	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	1	APP_op2	true
12	unwonted	_	unwonted	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	warrant-01	(s())	13	MOD_s	true
13	ripples	_	ripple	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	tipped	_	tip	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	yellow	_	yellow	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_o	true
17	light,	_	light,	NNS	O	_	thing	_	0	IGNORE	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
20	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	22	MOD_mod	true
21	placid	_	placid	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	waters	_	water	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	were	_	be	VBD	O	_	person	_	0	IGNORE	true
24	drawn	_	draw	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_mod	true
25	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
27	resistless	_	resistless	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	$LEMMA$	(s())	28	MOD_s	true
28	currents	_	current	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
30	strange	_	strange	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	oceans	_	ocean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
32	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	true
33	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	1	MOD_s	true
34	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
35	in	_	in	IN	O	_	i	_	0	IGNORE	true
36	the	_	the	DT	O	_	-	_	0	IGNORE	true
37	world	_	world	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@p@@that, 33@@s@@be-located-at-91, 8@@p@@crystal, 3@@d@@i, 22@@d@@water, 9@@d@@stream, 13@@d@@ripple, 28@@t@@current, 7@@p@@shallow, 12@@explicitanon0@@-, 37@@b@@world, 34@@explicitanon0@@-, 1@@a@@and, 11@@t@@see-01, 12@@n@@warrant-01, 30@@p@@strange, 21@@p@@placid, 31@@d@@ocean, 27@@n@@resistless, 27@@explicitanon0@@-, 24@@s@@draw-01, 16@@d@@yellow-02, 4@@p@@walk-01, 14@@s@@tip-01]
sentence=1	Once	once	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	figured	_	figure	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-05	(mod(), s(), o())	9	MOD_mod	true
4	out	_	out	RP	O	_	thing	_	0	IGNORE	true
5	what	_	what	WP	O	_	thing	_	0	IGNORE	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	was,	_	was,	VBD	O	_	thing	_	0	IGNORE	true
8	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	manuscript	_	manuscript	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
15	tag,	_	tag,	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
18	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
19	challenging	_	challenging	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	challenge-01	(s())	14	MOD_s	true
20	and	_	and	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	9	MOD_s	true
21	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
22	consuming	_	consume	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
23	given	_	give	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
24	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
25	differing	_	differ	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	schedules	_	schedule	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
27	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	folks	_	folk	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	terms	_	term	NNS	O	_	$LEMMA$	_	0	IGNORE	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	travel,	_	travel,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	9	MOD_mod	true
34	field	_	field	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
35	work,	_	work,	CD	O	_	and	_	0	IGNORE	true
36	etc	_	etc	FW	O	(p<root> / --LEX--  :mod-of (s<mod>))	et-cetera	(mod())	29	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@lot, 21@@d@@time, 14@@d@@email-01, 36@@p@@et-cetera, 13@@p@@manuscript, 9@@s@@play-01, 23@@s@@give-01, 25@@s@@differ-01, 17@@s@@possible-01, 22@@s@@consume-01, 6@@d@@it, 2@@d@@we, 3@@t@@figure-out-05, 29@@s@@keep-01, 34@@p@@field, 28@@d@@folk, 20@@s@@and, 26@@d@@schedule-01, 19@@s@@challenge-01, 33@@p@@mean-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	suggested	_	suggest	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	talent	_	talent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	for	_	for	IN	O	_	1	_	0	IGNORE	true
6	daily	_name_	daily	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	7	MOD_mod	true
7	organization	_	organization	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	organize-01	(mod())	4	MOD_mod	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	filled	_	fill	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
10	Carroll's	_name_	carroll's	PRP$	O	_	_NAME_	_	0	IGNORE	true
11	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	admiration	_	admiration	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o2	true
15	lust	_	lust	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@d@@admiration-01, 9@@b@@fill-01, 2@@s@@suggest-01, 4@@d@@talent, 6@@t@@temporal-quantity, 7@@o@@organize-01, 6@@d@@day, 1@@d@@It, 14@@a@@and, 6@@r@@rate-entity-91, 11@@d@@heart, 15@@d@@lust-01]
sentence=1	Can	can	Can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	recite	_	recite	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	stanza	_	stanza	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	interrogative	_	0	IGNORE	true
7	expresses	_	express	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
9	you	_	you	PRP	O	_	thing	_	0	IGNORE	true
10	feel	_	feel	VBP	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	7	APP_o	true
11	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true

nodealignment=[3@@s@@recite-01, 12@@n@@now, 13@@explicitanon0@@interrogative, 2@@d@@you, 1@@s@@possible-01, 11@@p@@right, 10@@d@@feel-01, 7@@s@@express-01, 5@@d@@stanza, 10@@t@@thing]
sentence=1	The	the	the	DT	O	(d<root> / --LEX--)	cause-01	()	8	APP_o	true
2	accident,	_	accident,	NNS	O	_	include-91	_	0	IGNORE	true
3	which	_	which	WDT	O	_	event	_	0	IGNORE	true
4	occurred	_	occur	VBD	O	_	event	_	0	IGNORE	true
5	yesterday	_name_	yesterday	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
6	afternoon,	_	afternoon,	NNS	O	_	cause-01	_	0	IGNORE	true
7	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
8	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
10	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	winds	_	wind	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
13	heavy	_	heavy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	rain	_	rain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	14	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	crane	_	crane	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	fall	_	fall	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
21	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@d@@crane, 14@@d@@rain-01, 16@@t@@lead-03, 13@@p@@heavy, 12@@a@@and, 20@@s@@fall-01, 10@@s@@strong-02, 11@@d@@wind, 8@@s@@cause-01, 1@@d@@cause-01, 5@@n@@yesterday]
sentence=1	Mof-Ávvi	_name_	Mof-Ávvi	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
4	peninsula	_	peninsula	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	0	ROOT	true
5	bordered	_	border	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
6	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the_Casamance_River	_name_	River	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_s	true
8	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	north,	_	north,	NNS	O	_	_NAME_	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	separates	_	separate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	Jóola_Búluf	_name_	Búluf	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
18	Jóola_Fogny_areas,	_name_	areas,	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	4	APP_mod	true
20	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	east	_	east	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	19	APP_op2	true
23	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	relative-position	_	0	IGNORE	true
25	villages	_	village	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
26	Brin	_name_	Brin	NNP	O	(d<root> / --LEX--)	_NAME_	()	27	APP_op1	true
27	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	22	APP_poss	true
28	Djibonker,	_name_	djibonker,	CD	O	_	_NAME_	_	0	IGNORE	true
29	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	speakers	_	speaker	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	write-01	(s())	36	APP_s	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	Kujireray	_name_	Kujireray	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	34	MOD_mod	true
34	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	Baïnounk_Gubëeher	_name_	Gubëeher	NNP	O	_	_NUMBER_	_	0	IGNORE	true
36	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	27	APP_mod	true
37	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[19@@a@@and, 26@@d@@_NAME_, 27@@b@@and, 17@@a@@and, 34@@d@@and, 12@@s@@separate-01, 7@@d@@_NAME_, 31@@s@@write-01, 25@@d@@village, 22@@h@@east, 5@@s@@border-01, 33@@n@@_NAME_, 36@@s@@live-01, 1@@p@@Mof-Ávvi, 16@@d@@Búluf, 4@@b@@peninsula, 18@@d@@areas,]
sentence=1	Example	example	example	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	exemplify-01	(s())	0	ROOT	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	aerated	_	aerated	JJ	O	(d<root> / --LEX--)	heat-01	()	1	APP_s	true
4	concrete,	_	concrete,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
5	which	_	which	WDT	O	_	it	_	0	IGNORE	true
6	provided	_	provide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	for	_	for	IN	O	_	person	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	subjects	_	subject	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@provide-01, 3@@d@@heat-01, 8@@d@@home, 11@@i@@subject, 1@@s@@exemplify-01]
sentence=1	In	in	in	IN	O	_	have-concession-91	_	0	IGNORE	true
2	addition,	_	addition,	NNS	O	_	and	_	0	IGNORE	true
3	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	8	APP_s	true
4	participating	_	participate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	in	_	in	IN	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	interview	_	interview	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	preference	_	preference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	prefer-01	(s())	8	APP_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	that	_	that	WDT	O	_	multi-sentence	_	0	IGNORE	true
14	involve	_	involve	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
15	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
16	solving,	_	solving,	NNP	O	_	and	_	0	IGNORE	true
17	recognize	_	recognize	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
18	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
19	need	_	need	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	plan	_	plan	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_s	true
22	actions	_	action	NNS	O	(d<root> / --LEX--)	act-02	()	21	APP_s	true
23	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
24	relation	_	relation	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	8	MOD_s	true
25	to	_	to	IN	O	_	and	_	0	IGNORE	true
26	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	importance	_	importance	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	important	(mod(), s())	22	MOD_mod	true
28	for	_	for	IN	O	_	thing	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	game	_	game	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op1	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_s	true
32	for	_	for	IN	O	_	and	_	0	IGNORE	true
33	daily	_name_	daily	JJ	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	day	()	31	APP_op2	true
34	activities,	_	activities,	NNS	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	8	MOD_op1	true
36	realize	_	realize	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op3	true
37	improvements	_	improvement	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	improve-01	(s())	36	APP_s	true
38	in	_	in	IN	O	_	thing	_	0	IGNORE	true
39	the	_	the	DT	O	_	thing	_	0	IGNORE	true
40	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	capable-01	(s())	37	APP_s	true
41	to	_	to	TO	O	_	thing	_	0	IGNORE	true
42	sustain	_	sustain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_s	true
43	attention	_	attention	NN	O	(d<root> / --LEX--)	attend-02	()	42	APP_s	true
44	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[43@@d@@attend-02, 14@@s@@involve-01, 31@@a@@and, 33@@t@@temporal-quantity, 42@@s@@sustain-01, 33@@m@@day, 7@@d@@interview-01, 4@@s@@participate-01, 27@@r@@important, 3@@e2@@study-01, 10@@s@@prefer-01, 12@@d@@game, 30@@d@@game, 19@@s@@need-01, 17@@s@@recognize-01, 15@@d@@problem, 3@@p2@@person, 21@@s@@plan-01, 40@@s@@capable-01, 22@@d@@act-02, 37@@s@@improve-01, 24@@s@@relate-01, 36@@s@@realize-01, 8@@s@@report-01, 35@@a@@and]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	introduces	_	introduce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	errors	_	error	NNS	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$	(o(s()))	2	APP_o	true
4	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	processing	_	processing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	process-01	(s())	3	APP_o	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	geometries,	_	geometries,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	manipulating	_	manipulate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	result	_	result	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	of	_	of	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	operations	_	operation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
16	carry	_	carry	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	14	MOD_s	true
17	out	_	out	RP	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	verification	_	verification	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	indicate-01	(s())	16	APP_o	true
20	of	_	of	IN	O	_	-	_	0	IGNORE	true
21	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	23	MOD_s	true
22	topological	_	topological	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	restrictions	_	restriction	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	restrict-01	(s())	19	APP_s	true
24	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	geometries,	_	geometries,	NNP	O	_	and	_	0	IGNORE	true
26	such	_	such	JJ	O	_	and	_	0	IGNORE	true
27	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
28	intersects,	_	intersects,	NNS	O	_	mean-01	_	0	IGNORE	true
29	covers	_	cover	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op1	true
30	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	23	MOD_mod	true
31	overlap	_	overlap	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op2	true
32	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[14@@d@@operation, 11@@s@@result-01, 3@@o@@error, 9@@s@@manipulate-01, 23@@s@@restrict-01, 6@@s@@process-01, 1@@d@@It, 29@@d@@cover-01, 21@@s@@differ-02, 30@@a@@or, 22@@d@@topological, 31@@d@@overlap-01, 19@@s@@indicate-01, 16@@s@@carry-out-03, 2@@s@@introduce-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	styler	_	styler	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	as	_	as	IN	O	_	and	_	0	IGNORE	true
6	well,	_	well,	NNP	O	_	and	_	0	IGNORE	true
7	which	_	which	WDT	O	_	i	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
9	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
10	gel	_	gel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
11	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[3@@p@@another, 2@@s@@have-03, 4@@d@@styler, 10@@p@@gel, 1@@d@@i]
sentence=1	Savage's	_name_	savage's	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	2	APP_s	true
2	readers	_	reader	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	read-01	(s())	3	APP_s	true
3	voted	_	vote	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	define	_	define	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
6	santorum	_	santorum	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
7	as;	_	as;	NNP	O	_	thing	_	0	IGNORE	true
8	"the	_	"the	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	frothy	_	frothy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	mixture	_	mixture	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	mix-01	(s())	5	APP_o2	true
11	of	_	of	IN	O	_	name	_	0	IGNORE	true
12	lube	_	lube	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
14	fecal	_	fecal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	matter	_	matter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	byproduct	_	byproduct	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	10	MOD_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	anal	_	anal	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	sex.	_	sex.	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[5@@b@@define-01, 2@@s@@read-01, 3@@c@@vote-01, 20@@s@@byproduct, 1@@n2@@_NAME_, 18@@o@@sometimes, 6@@n@@_NAME_, 14@@p@@fecal, 13@@a@@and, 10@@s@@mix-01, 15@@d@@matter, 6@@p@@person, 12@@d@@lube, 8@@p@@"the, 1@@n@@newspaper, 9@@p@@frothy, 22@@t@@anal]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	result	_	result	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	indicates	_	indicate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	improvement	_	improvement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	improve-01	(s())	3	APP_o	true
6	in	_	in	IN	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	performance	_	performance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	perform-02	(s())	5	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	sustained	_	sustained	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	sustain-01	(s())	12	MOD_s	true
12	attention	_	attention	NN	O	(d<root> / --LEX--)	attend-02	()	8	APP_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	test,	_	test,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	as	_	as	RB	O	_	and	_	0	IGNORE	true
17	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	dispersion,	_	dispersion,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	3	MOD_o	true
22	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	reveals	_	reveal	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	variation	_	variation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	23	APP_o	true
26	in	_	in	IN	O	_	instead-of-91	_	0	IGNORE	true
27	relation	_	relation	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	3	MOD_s	true
28	to	_	to	IN	O	_	thing	_	0	IGNORE	true
29	the	_	the	DT	O	_	thing	_	0	IGNORE	true
30	performance	_	performance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@s@@differ-02, 20@@s@@high-02, 11@@s@@sustain-01, 30@@d@@performance, 5@@s@@improve-01, 21@@s@@include-91, 12@@d@@attend-02, 27@@s@@relate-01, 23@@s@@reveal-01, 3@@s@@indicate-01, 2@@d@@result-01, 8@@s@@perform-02, 4@@s@@significant-02]
sentence=1	psychologists	_	psychologist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	have	_	have	VBP	O	_	person	_	0	IGNORE	true
3	examined	_	examine	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	mental	_	mental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	mind	(mod())	6	MOD_mod	true
6	processes	_	process	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_o	true
7	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
8	underpin	_	underpin	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	conscious	_	conscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	unconscious	_	unconscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	biases	_	bias	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	[6]	_	[6]	XX	O	_	thing	_	0	IGNORE	true
14	;	_	;	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@d@@psychologist, 3@@s@@examine-01, 12@@d@@bias, 8@@s@@underpin-01, 6@@d@@process-02, 11@@p@@unconscious, 5@@p@@mind, 9@@p@@conscious]
sentence=1	Most	most	Most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	1	MOD_s	true
3	the,	_	the,	NNS	O	_	expressive	_	0	IGNORE	true
4	uh,	_	uh,	JJ	O	_	-	_	0	IGNORE	true
5	contractors	_	contractor	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	17	MOD_s	true
6	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
7	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	town,	_	town,	NNP	O	_	_NAME_	_	0	IGNORE	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	15	APP_s	true
11	independents	_	independent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
12	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	15	MOD_s	true
13	Mitchell,	_name_	mitchell,	CD	O	_	_NAME_	_	0	IGNORE	true
14	don't	_	don't	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
17	to	_	to	TO	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	15	MOD_mod	true
18	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_o	true
19	prevailing	_	prevail	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	wage	_	wage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	statements	_	statement	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	state-01	(s())	18	APP_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@b@@here, 18@@s@@do-02, 12@@s@@resemble-01, 5@@s@@contractor, 14@@explicitanon0@@-, 11@@d@@independent, 19@@s@@prevail-02, 15@@s@@know-01, 17@@t@@thing, 10@@d@@person, 2@@s@@include-91, 20@@d@@wage, 21@@s@@state-01, 1@@p@@Most]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	operators	_	operator	NNS	O	(d<root> / --LEX--)	operate-01	()	3	APP_s	true
3	reproduce	_	reproduce	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	programming	_	programming	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	program-01	(mod())	5	MOD_mod	true
5	errors	_	error	NNS	O	(d<root> / --LEX--)	err-01	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
8	litely	_	litely	JJ	O	_	lot	_	0	IGNORE	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	occur	_	occur	VB	O	_	event	_	0	IGNORE	true
11	during	_	during	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	development	_	development	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	develop-02	(mod(), s())	5	MOD_mod	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	applications	_	application	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@d@@application, 1@@p@@this, 3@@s@@reproduce-01, 2@@d@@operate-01, 4@@p@@program-01, 13@@s@@develop-02, 5@@d@@err-01, 15@@p@@this, 16@@p@@type]
sentence=1	Open	open	open	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	3	MOD_s	true
2	Educational	educational	Educational	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	educate-01	(mod())	3	MOD_mod	true
3	Resources	resources	Resources	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
4	(OER)	(oer)	(oer)	NN	O	_	mean-01	_	0	IGNORE	true
5	are	_	be	VBP	O	_	mean-01	_	0	IGNORE	true
6	teaching,	_	teaching,	CD	O	_	and	_	0	IGNORE	true
7	learning,	_	learning,	NNS	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	_	$LEMMA$	_	10	IGNORE	true
9	research	_	research	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	materials	_	material	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	medium	_	medium	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	reside	_	reside	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
16	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	MOD_s	true
19	domain	_	domain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	or	_	or	CC	O	_	$LEMMA$	_	10	IGNORE	true
21	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
22	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	released	_	release	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
24	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	an	_	an	DT	O	_	-	_	0	IGNORE	true
26	open	_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	27	MOD_s	true
27	license	_	license	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	permits	_	permit	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
30	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
31	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	32	MOD_s	true
32	use	_	use	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_op1	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_o	true
34	re-purposing	_	re-purpose	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	33	APP_op2	true
35	by	_	by	IN	O	_	-	_	0	IGNORE	true
36	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
37	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@p@@educate-01, 12@@p@@any, 23@@s@@release-01, 33@@a@@and, 15@@s@@reside-01, 27@@t@@license, 18@@s@@public, 29@@s@@permit-01, 31@@s@@free-04, 34@@s@@re-purpose-01, 32@@d@@use-01, 26@@s@@open-04, 10@@r@@material, 3@@d@@Resources, 36@@d@@other, 9@@p@@research-01, 1@@s@@open-04, 13@@m@@medium, 19@@d@@domain]
sentence=1	All	all	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	4	MOD_mod	true
3	decisions	_	decision	NNS	O	(d<root> / --LEX--)	decide-01	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
5	actions	_	action	NNS	O	(d<root> / --LEX--)	act-02	()	4	APP_op2	true
6	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
7	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	0	ROOT	true
8	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
9	limit	_	limit	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	-	_	0	IGNORE	true
11	spread	_	spread	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	sporadic	_	sporadic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	COVID-19	_name_	COVID-19	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	cases	_	case	NNS	O	(d<root> / --LEX--)	$LEMMA$-04	()	11	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
19	arrive	_	arrive	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
20	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
21	New_Zealand	_name_	Zealand	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[5@@d@@act-02, 19@@s@@arrive-01, 15@@p@@_NAME_, 4@@a@@and, 11@@s@@spread-03, 21@@c@@country, 9@@s@@limit-01, 21@@n@@_NAME_, 1@@p@@all, 16@@d@@case-04, 2@@p@@this, 13@@p@@any, 7@@f@@design-01, 18@@s@@possible-01, 3@@d@@decide-01, 14@@p@@sporadic]
sentence=1	Pierre_Charles_L'Enfant	_name_	L'Enfant	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
2	(French:	(french:	(French:	NNP	O	_	person	_	0	IGNORE	true
3	[pjɛʁ	_	[pjɛʁ	NNP	O	_	$LEMMA$	_	0	IGNORE	true
4	ʃɑʁl	_	ʃɑʁl	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
5	lɑ̃fɑ̃];	_	lɑ̃fɑ̃];	-RRB-	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	http://webcache.googleusercontent.com/search?q=cache:HPAOjwf9XhQJ:www.benet.org/teachers/wmyers/Atomic_Bomb_DBQ_readings.doc+www.benet.org/teachers/wmyers/Atomic_Bomb_DBQ_readings.doc&cd=1&hl=en&ct=clnk&ie=UTF-8&client=ms-rim	(mod())	8	MOD_mod	true
6	August	august	August	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	8	(mod())	7	MOD_mod	true
7	2,	_	2,	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	date-interval	(mod())	26	MOD_mod	true
8	1754	_	1754	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
9	–	_	–	SYM	O	_	date-interval	_	0	IGNORE	true
10	June	_name_	June	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	6	(mod())	26	MOD_mod	true
11	14,	_	14,	NNP	O	_	date-interval	_	0	IGNORE	true
12	1825),	_	1825),	CD	O	_	and	_	0	IGNORE	true
13	self-identified	_	self-identified	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	Peter_Charles_L'Enfant	_name_	L'Enfant	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
16	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
17	living	_	live	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	13	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	(d<root> / --LEX--)	person	()	26	APP_s	true
20	United	united	United	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	17	MOD_mod	true
21	States,	states,	States,	NNP	O	_	and	_	0	IGNORE	true
22	was	_	be	VBD	O	_	person	_	0	IGNORE	true
23	a	_	a	DT	O	_	person	_	0	IGNORE	true
24	French-born_American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	26	MOD_mod	true
25	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	engineer	_	engineer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
27	who	_	who	WP	O	_	name	_	0	IGNORE	true
28	designed	_	design	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
29	the	_	the	DT	O	_	thing	_	0	IGNORE	true
30	basic	_	basic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	plan	_	plan	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_o	true
32	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
33	Washington,_D.C.	_name_	D.C.	NNP	O	_	_NAME_	_	0	IGNORE	true
34	(capital	_	(capital	,	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	city	_	city	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	U.S.)	u.s.)	U.S.)	NNP	O	_	$LEMMA$	_	0	IGNORE	true
39	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	31	MOD_s	true
40	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
41	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
42	the	_	the	DT	O	_	person	_	0	IGNORE	true
43	L'Enfant	l'enfant	L'Enfant	NNP	O	_	_NAME_	_	0	IGNORE	true
44	Plan	plan	Plan	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	39	APP_o	true
45	(1791)	_	(1791)	NNP	O	_	mean-01	_	0	IGNORE	true
46	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[35@@p@@city, 5@@explicitanon1@@http://webcache.googleusercontent.com/search?q=cache:HPAOjwf9XhQJ:www.benet.org/teachers/wmyers/Atomic_Bomb_DBQ_readings.doc+www.benet.org/teachers/wmyers/Atomic_Bomb_DBQ_readings.doc&cd=1&hl=en&ct=clnk&ie=UTF-8&client=ms-rim, 26@@s@@engineer-01, 39@@s@@know-02, 17@@t@@live-01, 8@@explicitanon0@@_NUMBER_, 20@@n@@_NAME_, 34@@p@@(capital, 1@@n@@_NAME_, 24@@n@@_NAME_, 25@@p@@military, 30@@p@@basic, 4@@p@@ʃɑʁl, 40@@n@@today, 24@@c@@country, 31@@d@@plan-01, 15@@p@@person, 44@@d@@Plan-01, 28@@s@@design-01, 13@@s@@self-identified-01, 7@@explicitanon0@@date-interval, 20@@c@@country, 19@@d@@person, 15@@n@@_NAME_, 10@@explicitanon1@@6, 6@@explicitanon1@@8]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	filmed	_	film	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
5	like	_	like	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	portion	_	portion	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	channel	_	channel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	outside,	_	outside,	NNP	O	_	and	_	0	IGNORE	true
15	that	_	that	WDT	O	_	i	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	fun	_	fun	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@like, 10@@p@@channel, 1@@d@@i, 17@@s@@really, 9@@p@@main, 6@@h@@portion, 3@@s@@film-01, 11@@d@@video, 18@@s@@fun-01, 2@@p@@just]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	response	_	response	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	respond-01	(s(), o())	11	MOD_o	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	said	_	say	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	problem,	_	problem,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	project	_	project	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	study	_	study	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
10	gives	_	give	VBZ	O	_	$LEMMA$-01	_	0	IGNORE	true
11	solution	_	solution	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	solve-01	(s(), o())	0	ROOT	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	problem	_	problem	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
18	concerning	_	concern	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
19	environment,	_	environment,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op3 (c2<op3>)  :op1 (m<op1>)  :topic-of (e<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	14	MOD_mod	true
22	safety	_	safety	NN	O	(d<root> / --LEX--)	safe-01	()	21	APP_op2	true
23	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
24	well	_	well	JJ	O	_	$LEMMA$	_	0	IGNORE	true
25	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op3	true
26	conservation,	_	conservation,	NNS	O	_	and	_	0	IGNORE	true
27	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
28	developing	_	develop	VBG	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-02	(mod(), s(), o())	11	MOD_mod	true
29	a	_	a	DT	O	_	so	_	0	IGNORE	true
30	segmented	_	segmented	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	ground	(s())	35	MOD_s	true
31	compact	_	compact	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	33	MOD_s	true
32	light-emitting	_	light-emitting	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$	(mod(), s())	33	MOD_s	true
33	diode	_	diode	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	(SCLED)	(scled)	(SCLED)	NNP	O	_	mean-01	_	0	IGNORE	true
35	bulb	_	bulb	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
36	from	_	from	IN	O	_	thing	_	0	IGNORE	true
37	busted	_	bust	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	38	MOD_s	true
38	CFL	_name_	CFL	NNP	O	(d<root> / --LEX--)	_NAME_	()	28	APP_o	true
39	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
40	are	_	be	VBP	O	_	person	_	0	IGNORE	true
41	efficient,	_	efficient,	NNP	O	_	-	_	0	IGNORE	true
42	economical,	_	economical,	NNS	O	_	-	_	0	IGNORE	true
43	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
44	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
45	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	46	MOD_mod	true
46	contain	_	contain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	MOD_s	true
47	toxic	_	toxic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	chemicals	_	chemical	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_o	true
49	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[48@@d@@chemical, 30@@s@@ground, 2@@s@@respond-01, 33@@p@@diode, 37@@s@@bust-01, 46@@s@@contain-01, 20@@d@@health, 38@@d@@_NAME_, 22@@d@@safe-01, 6@@p@@problem,, 11@@s@@solve-01, 35@@d@@bulb, 9@@d@@study-01, 5@@s@@say-01, 8@@p@@project, 7@@p@@this, 25@@d@@energy, 14@@m@@problem, 31@@s@@compact, 47@@p@@toxic, 45@@explicitanon0@@-, 28@@b@@develop-02, 17@@d@@society, 32@@i@@light-emitting, 21@@a@@and]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	Olmec	_name_	Olmec	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	worshipped	_	worship	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	rain	_	rain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
9	god,	_	god,	VB	O	_	mean-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	maize	_	maize	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
12	god,	_	god,	NN	O	_	mean-01	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	6	APP_o	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	feathered	_	feathered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	serpent	_	serpent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op3	true
17	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	pantheons	_	pantheon	NNS	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	18	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Aztecs	_name_	Aztecs	NNPS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_poss	true
26	(who	_	(who	-RRB-	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
27	called	_	call	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
28	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	Quetzalcoatl)	quetzalcoatl)	Quetzalcoatl)	NNP	O	_	person	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	27	APP_o	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	Maya	_name_	Maya	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	30	APP_op2	true
33	(to	_	(to	NFP	O	_	person	_	0	IGNORE	true
34	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
35	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	was	_	be	VBD	O	_	person	_	0	IGNORE	true
37	Kukulkan)	_name_	Kukulkan)	NNP	O	_	name	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@serpent, 32@@n@@_NAME_, 32@@e@@ethnic-group, 13@@a@@and, 21@@n@@future, 15@@s@@feathered-01, 27@@t@@call-01, 30@@a@@and, 4@@n@@_NAME_, 26@@explicitanon0@@(who, 22@@w@@pantheon, 18@@p@@important, 6@@s@@worship-01, 17@@s@@so, 4@@e@@ethnic-group, 25@@d@@_NAME_, 8@@d@@rain, 11@@d@@maize]
sentence=1	Mutation-based	mutation-based	mutation-based	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	base-02	(mod())	2	MOD_mod	true
2	testing	_	testing	NN	O	(d<root> / --LEX--)	test-01	()	7	APP_dom	true
3	[1]	_name_	[1]	''	O	_	mean-01	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	test	_	test	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	technique	_	technique	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	involves	_	involve	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	artificially	_	artificially	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	clandestine	(mod())	11	MOD_mod	true
11	introducing	_	introduce	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
12	errors	_	error	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
13	into	_	into	IN	O	_	-	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	System	system	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	Under	under	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	Test	test	Test	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	(SUT)	(sut)	(SUT)	VBN	O	_	mean-01	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@test-01, 7@@r@@technique, 17@@s@@Test-01, 2@@d@@test-01, 11@@s@@introduce-01, 12@@d@@error, 1@@t@@base-02, 9@@s@@involve-01, 15@@d@@system, 10@@t@@clandestine]
sentence=1	As	as	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	undergoing	_	undergo	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_dom	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	pilgrimage	_	pilgrimage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_s	true
5	to	_	to	IN	O	_	person	_	0	IGNORE	true
6	Mecca	_name_	Mecca	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	1	MOD_mod	true
9	mandatory	_	mandatory	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	religion	(mod())	11	MOD_mod	true
11	duty	_	duty	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_o	true
12	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	Muslims	_name_	Muslims	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	2	MOD_mod	true
15	who	_	who	WP	O	(d<root> / --LEX--)	person	()	1	APP_s	true
16	physically	_	physically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	physical	(mod())	23	MOD_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	financially	_	financially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	finance	(mod())	15	MOD_mod	true
19	can,	_	can,	JJ	O	_	person	_	0	IGNORE	true
20	millions	_	million	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000000	(mod())	22	MOD_mod	true
21	of	_	of	IN	O	_	multiple	_	0	IGNORE	true
22	pilgrims	_	pilgrim	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	23	APP_s	true
23	arrive	_	arrive	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	Mecca	_name_	Mecca	NNP	O	_	_NAME_	_	0	IGNORE	true
26	each_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	for	_	for	IN	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Hajj	_name_	Hajj	NNP	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	23	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@e2@@tour-01, 23@@g@@arrive-01, 26@@n@@year, 1@@s@@cause-01, 29@@n@@_NAME_, 2@@s@@undergo-01, 14@@r@@religious-group, 16@@p@@physical, 29@@p2@@person, 20@@explicitanon0@@1000000, 6@@n@@_NAME_, 14@@n@@_NAME_, 22@@p2@@person, 13@@p@@all, 6@@c@@city, 8@@explicitanon0@@1, 15@@d@@person, 18@@p@@finance, 4@@s@@pilgrimage, 20@@m@@multiple, 10@@p@@religion, 11@@r@@duty, 9@@p@@mandatory]
sentence=1	For	for	for	IN	O	_	say-01	_	0	IGNORE	true
2	optimal	_	optimal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	comparability,	_	comparability,	NNP	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	studied	_	study	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	conversational	_	conversational	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
11	across	_	across	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
12	languages:	_	languages:	XX	O	_	and	_	0	IGNORE	true
13	that	_	that	DT	O	_	thing	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	other-initiated	_	other-initiated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	depend-01	(s())	16	MOD_s	true
16	repair	_	repair	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
17	(OIR),	(oir),	(OIR),	NFP	O	_	include-91	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	which	_	which	WDT	O	_	contrast-01	_	0	IGNORE	true
20	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	participant	_	participant	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	22	APP_s	true
22	produces	_	produce	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
23	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
24	turn	_	turn	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
25	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
26	talk,	_	talk,	NNS	O	_	mean-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
29	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	signals	_	signal	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
31	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	trouble	_	trouble	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	turn,	_	turn,	NNS	O	_	and	_	0	IGNORE	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
37	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	40	MOD_mod	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	first	_	first	JJ	O	(d<root> / --LEX--)	1	()	40	APP_s	true
40	produces	_	produce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	APP_op2	true
41	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	turn	_	turn	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
44	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
45	aims	_	aim	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	43	MOD_s	true
46	to	_	to	TO	O	_	thing	_	0	IGNORE	true
47	solve	_	solve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	45	APP_o	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	trouble,	_	trouble,	NNS	O	_	-	_	0	IGNORE	true
50	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	47	MOD_mod	true
51	by	_	by	IN	O	_	resemble-01	_	0	IGNORE	true
52	means	_	mean	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
53	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
54	repetition	_	repetition	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
55	and/or	_	and/or	CC	O	(d<root> / --LEX--)	and-or	()	56	APP_s	true
56	modification	_	modification	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	modify-01	(s())	47	APP_o	true
57	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[55@@d@@and-or, 5@@s@@study-01, 28@@d@@other, 21@@p2@@person, 15@@s@@depend-01, 36@@a@@and, 30@@t@@signal-01, 29@@n@@then, 7@@p@@exact, 9@@p@@conversational, 10@@d@@environment, 32@@d@@trouble, 21@@e2@@participant, 50@@p@@usual, 56@@s@@modify-01, 24@@d@@turn-01, 20@@explicitanon0@@one, 45@@c@@aim-01, 11@@p@@across, 4@@d@@we, 16@@p@@repair, 37@@n@@final, 54@@p@@repetition, 2@@p@@optimal, 47@@s@@solve-01, 42@@p@@next, 8@@s@@same-01, 31@@p@@some, 40@@s@@produce-01, 22@@t@@produce-01, 39@@d@@1, 43@@d@@turn]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	topic	_	topic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
6	which	_	which	WDT	O	_	event	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	mathematics	_	mathematic	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
14	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
15	representation	_	representation	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[16@@d@@theory, 5@@d@@topic, 1@@a@@and, 11@@p@@mathematic, 15@@a@@representation, 9@@p@@important, 14@@s@@call-01, 4@@p@@another, 8@@s@@very]
sentence=1	Globe	_name_	Globe	NNP	O	(d<root> / --LEX--)	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
3	Greek	_name_	greek	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	basil	_	basil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
5	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
6	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	difficult	_	difficult	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
9	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
10	grow,	_	grow,	NN	O	_	cause-01	_	0	IGNORE	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	form	_	form	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
13	pretty	_	pretty	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	bushes	_	bush	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
17	stay	_	stay	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
18	well-contained	_	well-contained	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	well-09	(s())	17	MOD_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@d@@basil, 1@@d@@_NAME_, 2@@a@@and, 8@@d@@difficult, 3@@c@@country, 17@@s@@stay-01, 15@@d@@bush, 6@@s@@much, 12@@s@@form-01, 11@@s@@contrast-01, 14@@p@@little, 3@@n@@_NAME_, 13@@p@@pretty, 7@@s@@more, 18@@s@@well-09]
sentence=1	To	to	to	TO	O	_	say-01	_	0	IGNORE	true
2	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
3	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_dom	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	proud,	_	proud,	NNP	O	_	thing	_	0	IGNORE	true
6	anyone	_	anyone	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
7	who	_	who	WP	O	_	person	_	0	IGNORE	true
8	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	in	_	in	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	i	(mod())	14	MOD_mod	true
10	giants	_	giant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
12	shame,	_	shame,	NNS	O	_	et-cetera	_	0	IGNORE	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	hilarious	_	hilarious	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@anyone, 11@@a@@or, 9@@explicitanon0@@i, 14@@r@@hilarious, 8@@s@@believe-01, 2@@s@@find-01, 3@@d@@anyone, 4@@p@@still, 10@@d@@giant]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	mean	_	mean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	cost	_	cost	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
4	per	_	per	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	rate-entity-91	(s(), o())	3	MOD_s	true
5	student	_	student	NN	O	(d<root> / --LEX--)	study-01	()	3	APP_o	true
6	criterion	_	criterion	NN	O	(d<root> / --LEX--)	$FORM$	()	8	APP_s	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	tax	_	tax	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	schools	_	school	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
15	receive	_	receive	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	a	_	a	DT	O	_	-	_	0	IGNORE	true
17	fee	_	fee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	17	MOD_s	true
19	than	_	than	IN	O	_	monetary-quantity	_	0	IGNORE	true
20	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
21	mean	_	mean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	cost	_	cost	NN	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
23	per	_	per	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	rate-entity-91	(mod())	17	MOD_mod	true
24	student	_	student	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
25	fixed	_	fix	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	22	MOD_o	true
26	by	_	by	IN	O	_	thing	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	State	_name_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[13@@d@@school, 17@@d@@fee, 24@@d@@student, 28@@d@@state, 6@@d@@criterion, 22@@b@@cost-01, 18@@b@@high-02, 21@@s@@mean-01, 15@@s@@receive-01, 4@@s@@rate-entity-91, 11@@p@@only, 8@@s@@use-01, 25@@s@@fix-03, 5@@d@@study-01, 3@@s@@cost-01, 23@@p@@rate-entity-91, 10@@s@@tax-01, 18@@m@@more, 2@@s@@mean-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	pattern	_	pattern	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	holds	_	hold	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
5	for	_	for	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_s	true
6	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	workers,	_	workers,	NNS	O	_	include-91	_	0	IGNORE	true
8	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
9	assembly	_	assembly	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	line	_	line	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	laborers	_	laborer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	5	APP_o	true
12	who	_	who	WP	O	_	person	_	0	IGNORE	true
13	build	_	build	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	cars,	_	cars,	NNS	O	_	and	_	0	IGNORE	true
15	stylists	_	stylist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	19	APP_op2	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	15	MOD_s	true
18	hair,	_	hair,	NNS	O	_	and	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
20	doctors	_	doctor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
21	who	_	who	WP	O	_	person	_	0	IGNORE	true
22	perform	_	perform	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	MOD_s	true
23	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	surgery	_	surgery	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
25	.	_	.	.	O	_	have-03	_	0	IGNORE	true

nodealignment=[8@@s@@include-01, 1@@p@@this, 9@@p@@assembly, 20@@d@@doctor, 15@@p2@@person, 23@@d@@heart, 15@@e2@@stylist, 17@@s@@cut-02, 11@@p2@@person, 5@@s@@and, 3@@c@@hold-01, 10@@p@@line, 2@@d@@pattern, 24@@s@@surgery-01, 11@@e2@@work-01, 22@@s@@perform-02, 6@@explicitanon0@@many, 4@@s@@true-01, 19@@a@@and, 13@@s@@build-01]
sentence=1	The	the	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
2	archipelago	_	archipelago	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	trail	_	trail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
4	(da:	_	(da:	.	O	_	mean-01	_	0	IGNORE	true
5	Øhavsstien)	øhavsstien)	Øhavsstien)	NNP	O	_	and	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	220	_	220	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
9	km	_	km	NN	O	(d<root> / distance-quantity  :unit (k / --LEX--)  :quant-of (r<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	hiking	_	hiking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	11	MOD_mod	true
11	trail	_	trail	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
12	connected	_	connect	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
13	by	_	by	IN	O	_	and	_	0	IGNORE	true
14	ferries	_	ferry	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	circles	_	circle	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@ferry, 8@@explicitanon0@@_NUMBER_, 18@@p@@entire, 3@@d@@trail, 9@@k@@km, 10@@p@@hiking-01, 2@@p@@_NAME_, 9@@d@@distance-quantity, 11@@r@@trail, 16@@s@@circle-01, 12@@s@@connect-01, 19@@d@@area]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
3	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	2	MOD_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	stamp	_	stamp	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	Protected	protected	protect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
8	B	b	B	NNP	O	(explicitanon1<root> / --LEX--  :value-of (s / string-entity  :mod-of (w<mod>)))	$FORM$	(mod())	7	MOD_mod	true
9	on	_	on	IN	O	_	3	_	0	IGNORE	true
10	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	page	_	page	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	detailed	_	detail	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	vulnerabilities	_	vulnerability	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	NEMISIS	_name_	NEMISIS	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	database	_	database	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	used	_	use	VBN	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	19	MOD_o	true
23	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	officers	_	officer	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	22	APP_s	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	track	_	track	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	22	APP_o2	true
28	prosecute	_	prosecute	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op2	true
29	environmental	_	environmental	JJ	O	(d<root> / --LEX--)	environment	()	30	APP_s	true
30	law-breakers	_	law-breaker	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	break-18	(s())	27	APP_o	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[30@@p@@person, 24@@p@@person, 28@@s@@prosecute-01, 8@@s@@string-entity, 12@@s@@detail-01, 18@@p@@_NAME_, 26@@s@@track-01, 13@@p@@various, 14@@p@@security, 15@@s@@vulnerability, 24@@e@@officer, 24@@h@@have-org-role-91, 4@@s@@person, 22@@i@@use-01, 30@@w@@break-18, 8@@explicitanon1@@B, 27@@a@@and, 11@@b@@page, 2@@d@@document, 19@@d@@database, 29@@d@@environment, 10@@p@@every, 7@@s@@protect-01, 6@@d@@stamp]
sentence=1	Listen	listen	listen	VB	O	(c<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	up,	_	up,	NN	O	_	say-01	_	0	IGNORE	true
3	kids:	_	kids:	NNP	O	_	and	_	0	IGNORE	true
4	You'll	you'll	you'll	RB	O	_	i	_	0	IGNORE	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_s	true
7	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	solution	_	solution	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	that's	_	that's	PRP	O	(m<root> / --LEX--  :unit-of (a<mod>))	product-of	(mod())	13	MOD_mod	true
11	near	_	near	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	9	MOD_s	true
12	a	_	a	DT	O	_	year	_	0	IGNORE	true
13	12	_	12	CD	O	(d<root> / --LEX--)	_NUMBER_	()	11	APP_o	true
14	on	_	on	IN	O	_	3	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	pH	ph	ph	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	scale	_	scale	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@c@@listen-01, 9@@d@@solution, 10@@m@@product-of, 17@@b@@scale, 13@@d@@_NUMBER_, 11@@s@@near-02, 6@@s@@work-01, 1@@explicitanon0@@imperative, 16@@a@@ph]
sentence=1	Most	most	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	notable	_	notable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
3	among	_	among	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
5	city's	_	city'	NNS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	facelift	_	facelift	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
7	projects	_	project	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	the_Unification_of_Archaeological_Sites	_name_	Sites	NNPS	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	32	APP_op1	true
10	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
11	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	connects	_	connect	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	city's	_	city's	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	19	MOD_mod	true
15	classical	_	classical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
17	era	_	era	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	ruins	_	ruin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
20	monuments	_	monument	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	each	_	each	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	true
24	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
26	network	_	network	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	pleasant	_	pleasant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	30	MOD_s	true
29	pedestrianized	_	pedestrianize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	streets	_	street	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
33	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
34	restoration	_	restoration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	restore-01	(s())	32	APP_op2	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	picturesque	_	picturesque	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
38	neoclassical	_	neoclassical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
39	Thissio	_name_	Thissio	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	42	MOD_mod	true
40	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
41	Pláka	_name_	Pláka	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	districts	_	district	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
43	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@n2@@_NAME_, 32@@a@@and, 28@@s@@pleasant, 26@@m@@network, 1@@s@@most, 14@@n@@_NAME_, 30@@g@@street, 2@@s@@notable, 7@@d@@project, 5@@n@@_NAME_, 42@@d@@district, 9@@f@@facility, 14@@c@@country, 29@@s@@pedestrianize-01, 20@@d@@monument, 19@@a@@and, 12@@b@@connect-01, 38@@p@@neoclassical, 15@@p@@classical, 39@@p@@_NAME_, 34@@s@@restore-01, 40@@p@@and, 17@@p@@era, 41@@p@@Pláka, 18@@d@@ruin, 6@@a@@facelift-01, 5@@c@@country, 23@@d@@other, 37@@p@@picturesque]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	regret	_	regret	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	deeply	_	deeply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	deep-02	(s())	2	MOD_s	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	injuries	_	injury	NNS	O	(d<root> / --LEX--)	injure-01	()	2	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
8	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
9	been	_	be	VBN	O	_	person	_	0	IGNORE	true
10	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	event	_	0	IGNORE	true
13	course	_	course	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	events	_	event	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	16	MOD_s	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	decision	_	decision	NN	O	(d<root> / --LEX--)	decide-01	()	18	APP_o	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@s@@deep-02, 16@@n@@event, 20@@p@@this, 4@@p@@any, 7@@s@@possible-01, 18@@t@@lead-03, 10@@s@@do-02, 21@@d@@decide-01, 1@@d@@i, 2@@s@@regret-01, 5@@d@@injure-01]
sentence=1	In	in	in	IN	O	_	cause-01	_	0	IGNORE	true
2	May,	may,	May,	NNP	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
3	Maxime_Bernier	_name_	Bernier	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
5	forced	_	force	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	resign	_	resign	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	Foreign_Affairs	_name_	Affairs	NNPS	O	(n<root> / --LEX--  :name-of (o / organization  :mod-of (e<mod>)))	_NAME_	(mod())	10	MOD_mod	true
10	minister	_	minister	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
12	it	_	it	PRP	O	_	cause-01	_	0	IGNORE	true
13	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
14	known	_	known	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
15	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-11	(s())	14	APP_s	true
18	sensitive	_	sensitive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
19	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	at	_	at	IN	O	_	person	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	apartment	_	apartment	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	17	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
25	then-girlfriend	_	then-girlfriend	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	26	MOD_s	true
26	Julie_Couillard	_name_	Couillard	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_poss	true
27	who	_	who	WP	O	_	name	_	0	IGNORE	true
28	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
29	ties	_	tie	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
30	to	_	to	IN	O	_	-	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	Hells_Angels	_name_	Angels	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	34	MOD_mod	true
33	biker	_	biker	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	gang	_	gang	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
35	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[3@@n@@_NAME_, 29@@s@@tie-01, 25@@s@@then-girlfriend, 22@@w@@apartment, 5@@o@@force-01, 2@@d@@date-entity, 19@@d@@document, 32@@n@@_NAME_, 33@@p@@biker, 26@@p@@person, 18@@s@@sensitive-03, 26@@n@@_NAME_, 7@@s@@resign-01, 9@@o@@organization, 34@@d@@gang, 17@@s@@leave-11, 14@@s@@known-01, 2@@explicitanon2@@_NUMBER_, 3@@p@@person, 13@@s@@become-01, 10@@d@@minister, 11@@w@@after, 9@@n@@_NAME_]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	background,	_	background,	NNS	O	_	include-91	_	0	IGNORE	true
4	shining,	_	shining,	NNP	O	_	and	_	0	IGNORE	true
5	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	Renata,	_name_	renata,	CD	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	healthy	_	healthy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	good,	_	good,	NNP	O	_	and	_	0	IGNORE	true
14	raising	_	raise	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	arm	_	arm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
18	show	_	show	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
19	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	grandmother	_	grandmother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	18	APP_o	true
21	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
23	chip	_	chip	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_dom	true
24	is	_	be	VBZ	O	_	prove-01	_	0	IGNORE	true
25	nothing,	_	nothing,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	6	MOD_s	true
26	nothing	_	nothing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	25	APP_o	true
27	at	_	at	RB	O	_	$LEMMA$	_	0	IGNORE	true
28	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	26	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@arm, 23@@d@@chip, 11@@p@@healthy, 26@@r@@nothing, 14@@s@@raise-01, 25@@s@@mean-01, 6@@d@@renata,, 18@@s@@show-01, 20@@f@@grandmother, 28@@p@@at-all, 20@@h@@have-rel-role-91, 9@@p@@young, 20@@p@@person]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
3	rum	_	rum	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	distilleries	_	distillery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	tours	_	tour	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
7	(check	_	(check	NFP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$-00	(mod())	6	MOD_mod	true
8	for	_	for	IN	O	_	and	_	0	IGNORE	true
9	opening	_	opening	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	open-01	(mod())	10	MOD_mod	true
10	times	_	time	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
14	very	_	very	RB	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
15	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	season	_	season	NN	O	(g<root> / --LEX--  :prep-from-of (f<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	to	_	to	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	and	(mod())	5	MOD_mod	true
18	season)	_	season)	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
20	are	_	be	VBP	O	_	deserve-01	_	0	IGNORE	true
21	certainly	_	certainly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	certain	(mod())	22	MOD_mod	true
22	worth	_	worth	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	while	_	while	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	22	MOD_o	true
26	rum	_	rum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	production	_	production	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	produce-01	(s())	32	APP_dom	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	a	_	a	DT	O	_	thing	_	0	IGNORE	true
30	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	integral	_	integral	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
32	part	_	part	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	25	APP_s	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	Guadeloupe's	guadeloupe's	Guadeloupe's	NNP	O	(d<root> / --LEX--)	_NAME_	()	35	APP_poss	true
35	economy	_	economy	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	32	APP_poss	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@b@@and, 7@@explicitanon0@@(check-00, 32@@c@@part, 5@@s@@offer-01, 6@@d@@tour-01, 30@@s@@very, 16@@g@@season, 3@@p@@rum, 27@@s@@produce-01, 31@@p@@integral, 34@@d@@_NAME_, 14@@explicitanon0@@very-01, 35@@m@@economy, 26@@d@@rum, 21@@p@@certain, 2@@s@@local-02, 13@@s@@possible-01, 25@@s@@cause-01, 4@@d@@distillery, 9@@p@@open-01, 24@@d@@while, 10@@b@@time, 22@@s@@worth-02]
sentence=1	I've	i've	I've	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	an	_	an	DT	O	_	thing	_	0	IGNORE	true
4	app	_	app	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	called"	_	called"	NFP	O	_	thing	_	0	IGNORE	true
6	what	_	what	WP	O	_	and	_	0	IGNORE	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	expect",	_	expect",	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	2	MOD_s	true
9	put	_	put	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
10	in	_	in	RP	O	(d<root> / --LEX--)	i	()	2	APP_s	true
11	my,	_	my,	NNS	O	_	and	_	0	IGNORE	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	know,	_	know,	CD	O	_	and	_	0	IGNORE	true
14	cycle	_	cycle	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$	(mod(), s())	15	MOD_mod	true
15	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	MOD_s	true
17	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	16	APP_op2	true
18	an	_	an	DT	O	_	1	_	0	IGNORE	true
19	estimated	_	estimate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
20	due	_	due	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	date,	_	date,	NNP	O	_	and	_	0	IGNORE	true
22	which	_	which	WDT	O	_	i	_	0	IGNORE	true
23	is	_	be	VBZ	O	_	equal-01	_	0	IGNORE	true
24	about	_	about	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
25	mid-September	mid-september	mid-september	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@p@@about, 9@@s@@put-01, 15@@d@@situation, 8@@s@@thing, 2@@s@@get-01, 16@@a@@and, 19@@s@@estimate-01, 20@@d@@due, 10@@d@@i, 4@@d@@app, 14@@i@@cycle, 12@@d@@you, 25@@n@@mid-september, 17@@s@@have-03]
sentence=1	Flowers	flowers	flower	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	blooming	_	bloom	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
3	create	_	create	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	hormone	_	hormone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	change	_	change	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	dramatically	_	dramatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	dramatic	(mod())	9	MOD_mod	true
9	reduces	_	reduce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	flavor	_	flavor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	leaves,	_	leaves,	NNS	O	_	and	_	0	IGNORE	true
15	as	_	as	RB	O	_	and	_	0	IGNORE	true
16	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	reducing	_	reduce	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
19	the	_	the	DT	O	_	and	_	0	IGNORE	true
20	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	foliage	_	foliage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_mod	true
23	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
24	grows	_	grow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	MOD_s	true
25	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[22@@d@@foliage, 6@@s@@change-01, 11@@d@@flavor, 5@@d@@hormone, 8@@t@@dramatic, 3@@s@@create-01, 2@@s@@bloom-01, 1@@d@@flower, 9@@s@@reduce-01, 18@@s@@reduce-01, 20@@explicitanon0@@amount, 24@@s@@grow-03]
sentence=1	Those	those	those	DT	O	_	that	_	0	IGNORE	true
2	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	TwenCen	_name_	TwenCen	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	relics	_	relic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	in	_	in	IN	O	_	person	_	0	IGNORE	true
9	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
10	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	held	_	hold	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
12	that	_	that	IN	O	_	-	_	0	IGNORE	true
13	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	shouldn't	_	shouldn't	XX	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	try	_	try	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_o	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	improve	_	improve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
19	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	handiwork	_	handiwork	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@d@@one, 20@@d@@handiwork, 9@@n@@_NAME_, 3@@p@@_NAME_, 10@@p@@also, 11@@s@@hold-02, 2@@explicitanon0@@few, 17@@s@@improve-01, 7@@s@@believe-01, 4@@d@@relic, 14@@explicitanon0@@-, 6@@p@@still, 15@@c@@try-01, 9@@p@@person]
sentence=1	In	in	in	IN	O	_	name	_	0	IGNORE	true
2	April_1864,	_name_	1864,	DT	O	_	name	_	0	IGNORE	true
3	Southern	_name_	southern	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	attempted	_	attempt	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	take	_	take	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	APP_o	true
8	Fort_Pillow	_name_	Pillow	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
9	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
10	Tennessee	_name_	Tennessee	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	from	_	from	IN	O	_	name	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Union	_name_	Union	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	had	_	have	VBD	O	_	person	_	0	IGNORE	true
17	captured	_	capture	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
20	1862	_name_	1862	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	17	MOD_mod	true
21	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[10@@n2@@_NAME_, 20@@d@@date-entity, 8@@p@@person, 10@@s@@state, 3@@n@@_NAME_, 13@@p@@_NAME_, 5@@c@@attempt-01, 20@@explicitanon0@@_NUMBER_, 14@@d@@force, 7@@b@@take-01, 8@@n@@_NAME_, 3@@c@@country, 17@@s@@capture-01, 4@@d@@force]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	model	_	model	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
3	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	5	APP_s	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	include	_	include	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
7	effect	_	effect	NN	O	_	$LEMMA$-03	_	0	IGNORE	true
8	of	_	of	IN	O	_	affect-01	_	0	IGNORE	true
9	rising	_	rise	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	carbon	_	carbon	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	dioxide	_	dioxide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
12	concentration,	_	concentration,	NNS	O	_	cause-01	_	0	IGNORE	true
13	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
14	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
15	complex	_	complex	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
16	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
17	potentially	_	potentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	potential	(mod())	18	MOD_mod	true
18	offsetting	_	offset	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	impacts	_	impact	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
20	on	_	on	IN	O	_	-	_	0	IGNORE	true
21	global	_	global	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	globe	(mod())	23	MOD_mod	true
22	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	supply	_	supply	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@offset-01, 22@@d@@food, 3@@s@@cause-01, 9@@s@@rise-01, 5@@s@@include-01, 2@@d@@model, 17@@p@@potential, 4@@explicitanon0@@-, 21@@p@@globe, 11@@d@@dioxide, 19@@s@@impact-01, 15@@p@@complex, 10@@p@@carbon, 23@@s@@supply-01]
sentence=1	Several	several	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	35	MOD_s	true
3	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	trademark	_	trademark	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	themes	_	theme	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	appear;	_	appear;	NNP	O	_	and	_	0	IGNORE	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	example,	_	example,	NNS	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	triangular	_	triangular	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
11	relationship	_	relationship	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	relation-03	(s(), o())	35	APP_op1	true
12	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	lonely,	_	lonely,	CD	O	_	and	_	0	IGNORE	true
15	beautiful,	_	beautiful,	JJ	O	_	include-91	_	0	IGNORE	true
16	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
18	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
19	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
20	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_s	true
21	her	_	she	PRP$	O	_	person	_	0	IGNORE	true
22	parents,	_	parents,	IN	O	_	person	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	handsome	_	handsome	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	25	MOD_mod	true
25	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
26	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
27	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
28	abandoned	_	abandon	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	MOD_s	true
29	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	(and	_	(and	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	remains	_	remain	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	the	_	the	DT	O	_	he	_	0	IGNORE	true
34	background),	_	background),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
36	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	lonely	_	lonely	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
38	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
39	desperate	_	desperate	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	40	MOD_s	true
40	ragamuffin	_	ragamuffin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op2	true
41	who	_	who	WP	O	_	name	_	0	IGNORE	true
42	falls	_	fall	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-07	(o(s()))	40	MOD_s	true
43	in	_	in	IN	O	_	i	_	0	IGNORE	true
44	love	_	love	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	42	APP_o	true
45	with	_	with	IN	O	_	-	_	0	IGNORE	true
46	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@several, 5@@d@@theme, 40@@d@@ragamuffin, 17@@d@@woman, 42@@o@@fall-07, 16@@p@@young, 37@@p@@lonely, 28@@s@@abandon-01, 25@@d@@man, 31@@s@@remain-01, 10@@d@@triangular, 20@@s@@lose-02, 44@@s@@love-01, 24@@p@@handsome-02, 39@@s@@desperate-02, 4@@p@@trademark, 11@@t@@relation-03, 35@@a@@and, 2@@s@@include-91]
sentence=1	There's_Jeff_[Drake],	_name_	[drake],	XX	O	_	_NAME_	_	0	IGNORE	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	is	_	be	VBZ	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	0	ROOT	true
4	behind	_	behind	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	camera	_	camera	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
7	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[4@@b@@behind, 3@@d@@be-located-at-91, 6@@d@@camera]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	opening	_	opening	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	remarks	_	remark	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
5	for	_	for	IN	O	_	thing	_	0	IGNORE	true
6	attendees,	_	attendees,	NNP	O	_	and	_	0	IGNORE	true
7	Waters	waters	Waters	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	pointed	_	point	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-02	(s(), o())	0	ROOT	true
9	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	11	MOD_mod	true
11	features	_	feature	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	attendees,	_	attendees,	NNP	O	_	and	_	0	IGNORE	true
14	noting	_	note	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	touches	_	touch	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Warhol	warhol	Warhol	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
20	Factory,	factory,	Factory,	NNP	O	_	and	_	0	IGNORE	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	studio	_	studio	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
24	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	worked,	_	worked,	VBZ	O	_	name	_	0	IGNORE	true
27	that	_	that	WDT	O	_	name	_	0	IGNORE	true
28	were	_	be	VBD	O	_	person	_	0	IGNORE	true
29	present	_	present	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
30	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
31	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@p@@person, 30@@b@@around, 23@@d@@studio, 11@@d@@feature, 4@@v@@remark-01, 14@@l@@note-01, 7@@p@@person, 7@@n@@_NAME_, 29@@s@@present-02, 10@@p@@that, 3@@s@@opening-01, 21@@a@@or, 8@@s@@point-out-02, 16@@s@@touch-01, 19@@n@@_NAME_]
sentence=1	Realism	realism	realism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	regards	_	regard	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	APP_s	true
3	artistic	_	artistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	beauty	_	beauty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	property	_	property	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_o2	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	artworks	_	artwork	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	independent	_	independent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	depend-01	(s())	7	MOD_s	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	subject,	_	subject,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
17	non-realism	_	non-realism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	holds	_	hold	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	16	APP_o	true
19	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
20	artistic	_	artistic	JJ	O	_	$LEMMA$	_	0	IGNORE	true
21	beauty	_	beauty	NN	O	_	$LEMMA$	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
24	an	_	an	DT	O	_	thing	_	0	IGNORE	true
25	independent	_	independent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	depend-01	(s())	26	MOD_s	true
26	property	_	property	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	artworks	_	artwork	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@hold-02, 17@@d@@non-realism, 23@@explicitanon0@@-, 16@@s@@contrast-01, 2@@b@@regard-01, 12@@s@@depend-01, 26@@d@@property, 9@@d@@artwork, 7@@m@@property, 3@@p@@artistic, 1@@d@@realism, 4@@d@@beauty, 25@@s@@depend-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Hegelian	_name_	hegelian	JJ	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	definition	_	definition	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	define-01	(s(), o())	25	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	aesthetics	_	aesthetic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	philosophy	_	philosophy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	of	_	of	IN	O	_	thing	_	0	IGNORE	true
10	art	_	art	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	considers	_	consider	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	issue	_	issue	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_o	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	artistic	_	artistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
17	beauty	_	beauty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
20	core	_	core	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	concern	_	concern	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
22	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
23	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
24	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	enchanting	_	enchanting	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_poss	true
28	time	_	time	NN	O	(p<root> / --LEX--  :poss (h<poss>)  :time-of (a<mod>))	$LEMMA$	(mod(), poss())	25	MOD_mod	true
29	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@d@@beauty, 27@@d@@our, 20@@p@@core, 14@@s@@issue-02, 23@@explicitanon0@@-, 21@@d@@concern-01, 8@@d@@philosophy, 2@@p@@person, 24@@s@@more, 3@@s@@define-01, 2@@n@@_NAME_, 5@@d@@aesthetic, 10@@p@@art, 28@@p@@time, 16@@p@@artistic, 25@@s@@enchanting-01, 12@@s@@consider-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	the_Chardonnay-Pinot_Noir,	_name_	Noir,	NNP	O	_	_NAME_	_	0	IGNORE	true
4	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	blended	_	blended	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	wine	_	wine	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_op1	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	60%	_	60%	CD	O	_	name	_	0	IGNORE	true
11	Chardonnay	_name_	Chardonnay	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
12	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
13	40%_Pinot_Noir,	_name_	Noir,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	so	_	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	1	MOD_s	true
15	it's	_	it's	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
16	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	33	APP_op1	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	dry	_	dry	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
20	rosé	_	rosé	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	http://caselaw.findlaw.com/us-supreme-court/307/174.html	(mod())	21	MOD_mod	true
21	style	_	style	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	wine	_	wine	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
25	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	of	_	of	IN	O	_	name	_	0	IGNORE	true
27	strawberry	_	strawberry	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
28	flavors,	_name_	flavors,	NNS	O	_	and	_	0	IGNORE	true
29	hints	_	hint	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
30	of	_	of	IN	O	_	name	_	0	IGNORE	true
31	yellow	_	yellow	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	29	APP_o	true
32	apple,	_	apple,	NNS	O	_	and	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
34	it's	_	it's	PRP$	O	_	and	_	0	IGNORE	true
35	2018	_name_	2018	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	36	MOD_mod	true
36	vintage,	_	vintage,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op3	true
37	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
38	is	_	be	VBZ	O	_	long-03	_	0	IGNORE	true
39	unwooded	_	unwooded	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	handle-01	(s())	35	MOD_s	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@cause-01, 33@@a@@and, 29@@s@@hint-01, 27@@d@@strawberry, 23@@p@@wine, 16@@s@@more, 11@@d@@Chardonnay, 12@@d@@and, 19@@s@@dry-02, 8@@r@@wine, 21@@d@@style, 35@@explicitanon0@@_NUMBER_, 7@@s@@blended-01, 17@@s@@resemble-01, 1@@a@@and, 39@@s@@handle-01, 15@@s@@it's-01, 35@@d@@date-entity, 36@@d@@vintage,, 2@@n@@then, 25@@explicitanon0@@lot, 31@@d@@yellow-02, 20@@p@@http://caselaw.findlaw.com/us-supreme-court/307/174.html]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	hypothesized	_	hypothesize	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	original	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	children,	_	children,	NNS	O	_	and	_	0	IGNORE	true
6	who	_	who	WP	O	_	foot	_	0	IGNORE	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	over	_	over	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o2	true
9	the_age_of_six	_name_	six	CD	O	(d<root> / --LEX--)	_NAME_	()	8	APP_op1	true
10	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	of	_	of	IN	O	_	-	_	0	IGNORE	true
14	collection,	_	collection,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
15	would	_	would	MD	O	_	name	_	0	IGNORE	true
16	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_s	true
17	adult-like	_	adult-like	JJ	O	(d<root> / --LEX--)	bigfoot	()	19	APP_o	true
18	SI	si	SI	NNP	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
19	interpretations	_	interpretation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	interpret-01	(s(), o())	2	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[16@@s@@have-03, 9@@d@@_NAME_, 8@@o@@over, 2@@b@@hypothesize-01, 19@@s@@interpret-01, 18@@d@@_NAME_, 17@@d@@bigfoot, 1@@d@@We]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
4	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	modern_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	day	(mod())	7	MOD_mod	true
6	air	_	air	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	747,	_	747,	CD	O	_	_NAME_	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
13	gracefully	_	gracefully	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	slow-05	(mod())	14	MOD_mod	true
14	transported	_	transport	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	shuttles	_	shuttle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
16	for	_	for	IN	O	_	or	_	0	IGNORE	true
17	the_last_30	_name_	30	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
18	years,	_	years,	NNP	O	_	_NAME_	_	0	IGNORE	true
19	Seattle	_name_	Seattle	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	25	APP_o	true
20	would	_	would	MD	O	_	-	_	0	IGNORE	true
21	have	_	have	VB	O	_	1	_	0	IGNORE	true
22	been	_	be	VBN	O	_	possible-01	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
25	fit	_	fit	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	0	ROOT	true
26	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@p@@air, 14@@s@@transport-01, 13@@t@@slow-05, 15@@d@@shuttle, 8@@a@@and, 3@@d@@home, 17@@explicitanon0@@_NUMBER_, 24@@s@@perfect-02, 19@@c@@city, 7@@d@@travel-01, 25@@s@@fit-06, 5@@n@@day, 19@@n@@_NAME_]
sentence=1	The_Osage_Trail	_name_	Trail	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
3	a	_	a	DT	O	_	3	_	0	IGNORE	true
4	rails-to-trails	_	rails-to-trails	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	route	_	route	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	0	ROOT	true
6	that	_	that	WDT	O	_	name	_	0	IGNORE	true
7	begins	_	begin	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	OSU-Tulsa	osu-tulsa	osu-tulsa	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	campus	_	campus	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_mod	true
13	travels	_	travel	VBZ	O	(g<root> / --LEX--  :ARG1 (i<s>)  :ARG4 (j3<o2>)  :ARG3 (j2<o>))	$LEMMA$-01	(o2(), s(), o())	5	MOD_s	true
14	north	_	north	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	15	_	15	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
16	miles	_	mile	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	13	APP_o	true
17	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Skiatook	_name_	Skiatook	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	13	APP_o2	true
19	.	_	.	.	O	_	up-to	_	0	IGNORE	true

nodealignment=[15@@explicitanon0@@_NUMBER_, 10@@n@@_NAME_, 14@@a@@north, 18@@n@@_NAME_, 11@@b@@campus, 18@@c@@city, 12@@d@@and, 13@@g@@travel-01, 16@@m@@mile, 1@@n@@_NAME_, 5@@p@@route, 4@@n@@_NAME_, 7@@s@@begin-01, 16@@d@@distance-quantity]
sentence=1	Paralympic	paralympic	paralympic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	sport	_	sport	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	brings	_	bring	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	attend-02	(s())	3	APP_o	true
5	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
6	athletes	_	athlete	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	typically	_	typically	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	typical-02	(s())	10	MOD_s	true
10	overlooked	_	overlook	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	in	_	in	IN	O	_	name	_	0	IGNORE	true
12	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	society	_	society	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	majority	_	majority	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	APP_s	true
23	to	_	to	TO	O	_	person	_	0	IGNORE	true
24	identify	_	identify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	24	APP_o	true
27	who	_	who	WP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	disabled	_	disabled	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	disable-01	(s())	26	MOD_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@explicitanon0@@majority, 14@@s@@cause-01, 13@@b@@society, 29@@s@@disable-01, 12@@c@@country, 19@@d@@population, 6@@d@@athlete, 3@@s@@bring-01, 12@@n@@_NAME_, 22@@c@@want-01, 4@@s@@attend-02, 2@@d@@sport, 1@@p@@_NAME_, 9@@s@@typical-02, 24@@s@@identify-01, 21@@explicitanon0@@-, 10@@s@@overlook-01, 26@@d@@person]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	don’t	_	don’t	XX	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	person	_	0	IGNORE	true
5	call	_	call	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	APP_o	true
6	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
7	dad	_	dad	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	5	APP_o	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	5	MOD_mod	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	Joyce,	_name_	Joyce,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	girlfriend,	_	girlfriend,	NNS	O	_	have-rel-role-91	_	0	IGNORE	true
15	anyway	_	anyway	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@call-02, 3@@c@@want-01, 1@@d@@i, 7@@f@@dad, 7@@h@@have-rel-role-91, 10@@p@@probable, 15@@p@@anyway, 7@@p@@person, 2@@explicitanon0@@-]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	15	MOD_s	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
5	solo	_	solo	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_o	true
6	jump,	_	jump,	NNP	O	_	shit	_	0	IGNORE	true
7	which	_	which	WDT	O	_	i	_	0	IGNORE	true
8	constitutes	_	constitute	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	minority	_	minority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	skydivers,	_	skydivers,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	recourse	_	recourse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
21	least	_	least	RBS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	at-$LEMMA$	(op1(), mod())	26	MOD_mod	true
22	one	_	one	CD	O	(d<root> / --LEX--)	1	()	21	APP_op1	true
23	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	22	MOD_s	true
24	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	own	_	own	JJ	O	_	person	_	0	IGNORE	true
26	chutes	_	chute	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	opens	_	open	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[27@@s@@open-01, 18@@s@@ensure-01, 2@@d@@this, 23@@s@@include-91, 26@@d@@chute, 14@@p@@only, 5@@r@@solo, 8@@s@@constitute-01, 15@@d@@recourse, 10@@d@@minority, 21@@s@@at-least, 1@@s@@have-condition-91, 22@@d@@1]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	be	_	be	VB	O	_	person	_	0	IGNORE	true
4	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	attempt	_	attempt	NN	O	(i<root> / --LEX--  :domain (t<dom>)  :ARG1 (j<s>))	$LEMMA$-01	(dom(), s())	2	APP_s	true
6	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
7	play	_	play	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	5	APP_s	true
8	dead,	_	dead,	NNP	O	_	and	_	0	IGNORE	true
9	discouraging	_	discourage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	predators	_	predator	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	prefer	_	prefer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	live	_	live	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	prey	_	prey	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
15	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[7@@d@@play-02, 12@@s@@prefer-01, 14@@d@@prey-01, 9@@s@@discourage-01, 10@@d@@predator, 5@@i@@attempt-01, 1@@d@@this, 2@@s@@possible-01, 13@@s@@live-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	population	_	population	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	Łódź	_name_	Łódź	NNP	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NUMBER_	()	2	APP_poss	true
5	soared	_	soar	VBD	O	(g<root> / --LEX--  :ARG1 (i<s>)  :ARG4 (j3<o2>)  :ARG3 (j2<o>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	from	_	from	IN	O	_	rate-entity-91	_	0	IGNORE	true
7	some	_	some	DT	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
8	4,000	_	4,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	7	APP_op1	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_op1	true
10	in	_	in	IN	O	_	after	_	0	IGNORE	true
11	the_1830s	_name_	1830	NNS	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
13	40,000	_	40,000	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	12	APP_op2	true
14	in	_	in	IN	O	_	year	_	0	IGNORE	true
15	1865	_name_	1865	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	over	_	over	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	300,000	_	300,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	19	MOD_mod	true
19	inhabitants	_	inhabitant	NNS	O	(d<root> / --LEX--)	inhabit-01	()	5	APP_o2	true
20	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	turn	_	turn	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	century,	_	century,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	an	_	an	DT	O	_	1	_	0	IGNORE	true
29	unprecedented	_	unprecedented	JJ	O	(h2<root> / --LEX--  :polarity (explicitanon0 / -)  :mod-of (l<mod>))	precedent	(mod())	30	MOD_mod	true
30	growth	_	growth	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	grow-01	(s())	19	MOD_s	true
31	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
32	a	_	a	DT	O	_	1	_	0	IGNORE	true
33	worldwide	_	worldwide	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	scale	_	scale	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@explicitanon0@@_NUMBER_, 9@@d@@person, 29@@h2@@precedent, 33@@p@@worldwide, 13@@d@@date-entity, 8@@d@@_NUMBER_, 4@@u@@url-entity, 11@@d@@date-entity, 29@@explicitanon0@@-, 18@@explicitanon0@@_NUMBER_, 2@@m@@population, 4@@explicitanon0@@_NUMBER_, 12@@a@@and, 17@@p@@over, 15@@explicitanon2@@_NUMBER_, 7@@s@@some, 19@@d@@inhabit-01, 15@@d@@date-entity, 5@@g@@soar-01, 11@@explicitanon2@@_NAME_, 22@@s@@turn-01, 30@@s@@grow-01, 34@@p@@scale]
sentence=1	Theres	theres	there	NNS	O	_	person	_	0	IGNORE	true
2	[sic]	_	[sic]	XX	O	_	-	_	0	IGNORE	true
3	something	_	something	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	0	ROOT	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	hilarious	_	hilarious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	anarchy	_	anarchy	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	3	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	net	_	net	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	produces	_	produce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
13	these	_	these	DT	O	(d<root> / --LEX--)	this	()	12	APP_o	true
14	'events'	_	'events'	,	O	_	thing	_	0	IGNORE	true
15	every	_	every	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	now	_	now	RB	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	3	APP_mod	true
18	again.	_	again.	JJ	O	_	$LEMMA$	_	0	IGNORE	true
19	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@d@@now, 12@@s@@produce-01, 13@@d@@this, 10@@d@@net, 7@@w@@anarchy, 17@@o@@and, 3@@p@@something, 6@@p@@hilarious, 15@@p@@every]
sentence=1	To	to	to	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	say-01	(s(), o())	22	MOD_s	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
4	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
5	George_Floyd	_name_	Floyd	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	that	_	that	WDT	O	_	name	_	0	IGNORE	true
7	came	_	come	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
8	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	when	_	when	WRB	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	being	_	be	VBG	O	_	person	_	0	IGNORE	true
14	reviewed	_	review	VBN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
15	by	_	by	IN	O	_	i	_	0	IGNORE	true
16	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
17	committee,	_	committee,	CD	O	_	say-01	_	0	IGNORE	true
18	Mr	mr	Mr	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	say-01	(s(), o())	22	MOD_s	true
19	Chairman	chairman	Chairman	NNP	O	(d<root> / --LEX--)	$REPL$	()	18	APP_o	true
20	–	_	–	:	O	_	say-01	_	0	IGNORE	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	remember	_	remember	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
23	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@p@@that, 19@@d@@chairman, 24@@n@@day, 3@@d@@family, 16@@d@@your, 22@@s@@remember-01, 14@@t@@review-01, 11@@d@@bill, 8@@d@@here, 21@@d@@you, 7@@g@@come-01, 1@@s@@say-01, 5@@n@@_NAME_, 18@@s@@say-01]
sentence=1	Interestingly,	interestingly,	interestingly,	CD	O	_	name	_	0	IGNORE	true
2	Ruse’s	ruse’s	ruse’s	FW	O	_	_NAME_	_	0	IGNORE	true
3	methodological	_	methodological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	naturalism	_	naturalism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	leads	_	lead	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	to	_	to	TO	O	_	name	_	0	IGNORE	true
8	embrace	_	embrace	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	view	_	view	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_s	true
11	that	_	that	WDT	O	_	oppose-01	_	0	IGNORE	true
12	goes	_	go	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	10	MOD_s	true
13	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	metaphysical	_	metaphysical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	naturalist	_	naturalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	position	_	position	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_o	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	facts	_	fact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@d@@view-02, 4@@d@@naturalism, 21@@s@@exist-01, 17@@s@@position-02, 16@@d@@naturalist, 12@@s@@go-06, 20@@d@@fact, 8@@s@@embrace-01, 3@@p@@methodological, 15@@p@@metaphysical, 5@@s@@lead-03, 19@@s@@moral-02]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	double-aught	_	double-aught	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
4	aught,	_	aught,	NNS	O	(d<root> / --LEX--)	et-cetera	()	3	APP_op2	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	popular	_	popular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_op2	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@a@@and, 2@@n@@_NAME_, 2@@p@@person, 3@@a@@and, 11@@s@@popular-02, 4@@d@@et-cetera, 10@@s@@most]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
2	said,	_	said,	NNP	O	_	resemble-01	_	0	IGNORE	true
3	first	_name_	first	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	all,	_	all,	NN	O	_	and	_	0	IGNORE	true
6	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
10	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	8	MOD_o	true
14	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	35	APP_op1	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	those	_	those	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	willing	_	willing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	will-02	(s())	10	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	work,	_	work,	CD	O	_	and	_	0	IGNORE	true
24	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
25	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
26	waste	_	waste	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	41	MOD_o	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	idle	_	idle	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	29	MOD_s	true
29	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	APP_s	true
31	machines	_	machine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
32	could	_	could	MD	O	(d<root> / --LEX--)	possible-01	()	35	APP_op2	true
33	be	_	be	VB	O	_	person	_	0	IGNORE	true
34	avoided,	_	avoided,	NNP	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	8	APP_o	true
36	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
37	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	39	MOD_mod	true
38	economic	_	economic	JJ	O	(d<root> / --LEX--)	economy	()	39	APP_s	true
39	growth	_	growth	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	grow-01	(s())	41	APP_s	true
40	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_op3	true
41	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	APP_s	true
42	the	_	the	DT	O	_	he	_	0	IGNORE	true
43	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	44	MOD_s	true
44	jobs	_	job	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op1	true
45	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	41	APP_o	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
48	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op2	true
49	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
50	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_poss	true
51	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	true
52	Nation	nation	Nation	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	53	APP_s	true
53	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	MOD_o	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@s@@possible-01, 29@@d@@man, 50@@d@@our, 44@@d@@job, 43@@s@@new-01, 30@@a@@and, 37@@f2@@great, 47@@s@@new-01, 12@@d@@work-01, 28@@s@@idle, 35@@a@@and, 41@@s@@provide-01, 14@@s@@available-02, 31@@d@@machine, 32@@d@@possible-01, 39@@s@@grow-01, 19@@s@@will-02, 38@@d@@economy, 10@@n@@_NAME_, 3@@p@@1, 52@@m@@Nation, 53@@s@@need-01, 51@@s@@grow-01, 8@@s@@believe-01, 26@@s@@waste-01, 1@@d@@i, 45@@a@@and, 10@@c@@country, 48@@d@@market, 37@@m@@more, 40@@s@@possible-01, 13@@s@@person]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	number	_	number	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	separates	_	separate	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
7	ordered	_	order	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	6	APP_o	true
9	into	_	into	IN	O	_	-	_	0	IGNORE	true
10	halves	_	half	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
11	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@r@@number, 6@@b@@separate-01, 7@@s@@order-01, 1@@d@@It, 8@@d@@data, 10@@d@@half]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-temporally-at-91	(mod())	13	MOD_mod	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
5	about_170_years	_name_	year	NNS	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NAME_	()	4	APP_op1	true
6	later,	_	later,	NNS	O	_	2	_	0	IGNORE	true
7	in	_	in	IN	O	_	name	_	0	IGNORE	true
8	1896	_name_	1896	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	4	MOD_mod	true
9	that	_	that	IN	O	_	name	_	0	IGNORE	true
10	an	_	an	DT	O	_	1	_	0	IGNORE	true
11	Italian	_name_	italian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	doctor	_	doctor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	discovered	_	discover	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	less	_	less	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	painful	_	painful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	pain-01	(s())	17	MOD_s	true
17	method	_	method	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	which	_	which	WDT	O	_	i	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	in	_	in	IN	O	_	thing	_	0	IGNORE	true
22	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
23	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@_NAME_, 20@@p@@still, 15@@s@@less, 22@@s@@use-01, 4@@w@@until, 5@@d@@date-entity, 13@@s@@discover-01, 12@@d@@doctor, 11@@n@@_NAME_, 23@@n@@today, 3@@explicitanon0@@-, 8@@explicitanon0@@_NUMBER_, 2@@p@@be-temporally-at-91, 11@@c@@country, 16@@s@@pain-01, 17@@d@@method, 8@@d@@date-entity]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	have-condition-91	_	0	IGNORE	true
3	challenge	_	challenge	VB	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
4	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o2	true
8	hopeful	_	hopeful	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
11	listening	_	listen	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op1	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	Amanda_Gorman,	_name_	gorman,	VB	O	_	and	_	0	IGNORE	true
14	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_o	true
15	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	18	MOD_s	true
16	22–year-old	_	22–year-old	CD	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	18	MOD_mod	true
17	poet,	_	poet,	NNP	O	_	mean-01	_	0	IGNORE	true
18	wise	_	wise	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
19	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	beyond	_	beyond	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	years,	_	years,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
23	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
24	told	_	tell	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
25	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
27	:	_	:	:	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@t@@tell-01, 9@@n@@today, 7@@s@@feel-01, 5@@explicitanon0@@-, 16@@t@@temporal-quantity, 4@@d@@anyone, 3@@t@@challenge-01, 15@@s@@amaze-01, 16@@y@@year, 8@@d@@hopeful, 14@@s@@person, 19@@s@@far, 18@@d@@wise, 20@@s@@beyond, 1@@d@@i, 11@@s@@listen-01, 10@@w@@after, 25@@d@@us]
sentence=1	Seventy-five	seventy-five	seventy-five	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
2	percent	_	percent	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	8	MOD_s	true
4	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
5	people	_	people	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	person	(poss())	6	APP_s	true
6	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
7	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	10	MOD_s	true
8	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_s	true
9	witnesses	_	witness	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	6	APP_o	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
11	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
14	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	understand-01	(s(), o())	10	MOD_s	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	trial	_	trial	NN	O	(d<root> / --LEX--)	try-02	()	14	APP_o	true
19	is,	_	is,	VBP	O	_	thing	_	0	IGNORE	true
20	not	_	not	RB	O	_	-	_	0	IGNORE	true
21	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	argument	_	argument	NN	O	(d<root> / --LEX--)	argue-01	()	26	APP_op1	true
23	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
25	beginning	_	beginning	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	begin-01	(mod())	22	MOD_mod	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	31	APP_s	true
27	argument	_	argument	NN	O	(d<root> / --LEX--)	argue-01	()	26	APP_op2	true
28	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	end,	_	end,	NNS	O	_	and	_	0	IGNORE	true
31	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	10	APP_s	true
32	evidence	_	evidence	NN	O	(t<root> / thing  :ARG0-of (a / --LEX--))	$LEMMA$-01	()	31	APP_o	true
33	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
34	jurors	_	juror	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
35	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
36	have	_	have	VBP	O	_	person	_	0	IGNORE	true
37	pledged	_	pledge	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	42	MOD_o	true
38	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
39	be	_	be	VB	O	_	person	_	0	IGNORE	true
40	impartial	_	impartial	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
41	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
42	consider	_	consider	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	34	MOD_s	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@have-03, 6@@s@@want-01, 9@@e2@@witness-01, 5@@m@@person, 21@@p@@just, 31@@s@@contrast-01, 27@@d@@argue-01, 7@@s@@person, 42@@s@@consider-02, 34@@i@@juror, 40@@d@@impartial, 1@@p@@_NAME_, 32@@t@@thing, 14@@s@@understand-01, 10@@s@@cause-01, 18@@d@@try-02, 4@@d@@our, 9@@p2@@person, 37@@t@@pledge-01, 26@@a@@and, 3@@s@@include-91, 22@@d@@argue-01, 32@@a@@evidence-01, 2@@explicitanon0@@percent, 25@@b@@begin-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	proud	_	proud	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	pride-01	(s(), o())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
7	House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
8	managers,	_	managers,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
9	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
10	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
13	colleagues	_	colleague	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
14	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	4	MOD_s	true
16	Democratic	_name_	democratic	JJ	O	(p2<root> / political-party  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	side	_	side	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	13	MOD_mod	true
18	of	_	of	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	aisle	_	aisle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
21	are	_	be	VBP	O	_	person	_	0	IGNORE	true
22	proud	_	proud	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	pride-01	(s())	9	APP_s	true
23	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	managers	_	manager	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	22	APP_s	true
26	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
27	made	_	make	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	25	MOD_s	true
28	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
29	case	_	case	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	27	APP_o	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@c@@make-01, 22@@s@@pride-01, 1@@d@@i, 10@@p@@all, 4@@s@@pride-01, 17@@h@@side, 25@@s@@manager, 15@@s@@have-org-role-91, 13@@d@@colleague, 24@@d@@our, 16@@n@@_NAME_, 20@@d@@aisle, 29@@s@@case-03, 16@@p2@@political-party, 7@@n@@_NAME_, 9@@s@@cause-01, 7@@g@@government-organization, 3@@p@@also]
sentence=1	Furthermore,	furthermore,	furthermore,	CD	O	_	and	_	0	IGNORE	true
2	before	_	before	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	3	APP_op1	true
3	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
4	after	_	after	IN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	implementation	_	implementation	NN	O	(d<root> / --LEX--)	implement-01	()	2	APP_op1	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	intervention,	_	intervention,	NNS	O	_	2	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	performed	_	perform	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	D2	d2	D2	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	2	(mod())	14	MOD_mod	true
14	Test	test	Test	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_o	true
15	of	_	of	IN	O	_	name	_	0	IGNORE	true
16	attention	_	attention	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
18	measures	_	measure	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
19	selective	_	selective	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	sustained	_	sustain	VBD	O	(d<root> / --LEX--)	sustain-01	()	29	APP_op2	true
22	attention,	_	attention,	NNS	O	_	and	_	0	IGNORE	true
23	as	_	as	RB	O	_	and	_	0	IGNORE	true
24	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
26	visual	_	visual	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_s	true
27	scanning	_	scanning	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_s	true
28	accuracy	_	accuracy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accurate	(s())	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	18	APP_o	true
30	speed	_	speed	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op3	true
31	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[21@@d@@sustain-01, 26@@d@@visual-02, 2@@o@@before, 29@@a@@and, 13@@p@@2, 16@@d@@attention, 14@@s@@Test-01, 11@@s@@perform-01, 18@@s@@measure-02, 10@@d@@we, 27@@s@@scanning-01, 3@@d@@and, 30@@d@@speed, 6@@d@@implement-01, 4@@d@@after, 19@@s@@selective-02, 28@@s@@accurate]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
4	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	7	APP_s	true
5	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_dom	true
6	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	it's	_	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
9	um	_	um	UH	O	_	$LEMMA$	_	0	IGNORE	true
10	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
11	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
12	for	_	for	IN	O	_	and	_	0	IGNORE	true
13	um	_	um	UH	O	_	$LEMMA$	_	0	IGNORE	true
14	like	_	like	UH	O	_	resemble-01	_	0	IGNORE	true
15	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	watching	_	watching	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
18	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	care	_	care	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
21	um	_	um	UH	O	_	$LEMMA$	_	0	IGNORE	true
22	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	20	APP_op2	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	shirt	_	shirt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
28	bird	_	bird	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	nerd	_	nerd	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	27	APP_o	true
30	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_s	true
33	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
34	bought	_	buy	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_o	true
35	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	34	MOD_o	true
37	I	i	I	PRP	O	_	1	_	0	IGNORE	true
38	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_s	true
39	it	_	it	PRP	O	_	i	_	0	IGNORE	true
40	was	_	be	VBD	O	_	person	_	0	IGNORE	true
41	funny	_	funny	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@s@@have-03, 22@@d@@they, 32@@s@@cause-01, 28@@p@@bird, 7@@s@@contrast-01, 38@@s@@think-01, 4@@d@@amr-unknown, 29@@r@@nerd, 34@@d@@buy-01, 27@@s@@say-01, 36@@s@@cause-01, 1@@d@@i, 41@@d@@funny, 16@@s@@watching-01, 20@@a@@and, 19@@s@@care-03, 15@@d@@bird, 11@@d@@society, 18@@d@@bird, 17@@a@@and, 2@@explicitanon0@@-, 25@@d@@shirt, 5@@d@@that, 3@@s@@know-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
5	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	pain	_	pain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
9	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
13	possibly	_	possibly	RB	O	(d<root> / --LEX--)	possible-01	()	11	APP_s	true
14	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
15	occurred	_	occur	VBN	O	_	event	_	0	IGNORE	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@d@@possible-01, 2@@d@@memory, 5@@s@@cause-01, 8@@d@@pain-01, 12@@explicitanon0@@-, 14@@s@@cause-01, 10@@b@@year, 7@@s@@such, 11@@s@@possible-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	that	_	that	IN	O	_	hate-01	_	0	IGNORE	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
5	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
6	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_s	true
7	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	who	_	who	WP	O	_	person	_	0	IGNORE	true
9	loved	_	love	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	pain	_	pain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	effort	_	effort	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
18	understanding	_	understand	VBG	O	(d<root> / --LEX--)	understand-01	()	17	APP_op2	true
19	troubled	_	trouble	VBD	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
20	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	deeply	_	deeply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	deep-02	(s())	19	MOD_s	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@p@@little, 19@@c@@trouble-01, 16@@d@@effort-01, 17@@a@@and, 9@@s@@love-01, 18@@d@@understand-01, 12@@d@@pain-01, 6@@s@@cause-01, 21@@s@@deep-02, 7@@d@@someone, 11@@s@@such, 4@@d@@he, 14@@s@@so]
sentence=1	Set	set	Set	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
3	lush	_	lush	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	gardens	_	garden	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	which	_	which	WDT	O	_	have-concession-91	_	0	IGNORE	true
6	are	_	be	VBP	O	_	and	_	0	IGNORE	true
7	free	_	free	JJ	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-04	(o(s()))	4	MOD_s	true
8	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
9	roam	_	roam	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	want	_	want	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	7	MOD_mod	true
14	to	_	to	TO	O	_	-	_	0	IGNORE	true
15	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	13	APP_o	true
16	inside	_	inside	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	-	_	0	IGNORE	true
18	building	_	building	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@f@@free-04, 15@@g@@go-02, 13@@d@@want-01, 18@@d@@building, 11@@d@@you, 1@@s@@Set-01, 3@@p@@lush, 12@@explicitanon0@@-, 9@@s@@roam-01, 4@@d@@garden]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	true
2	launched	_	launch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
3	LibriVox,	_name_	LibriVox,	NNP	O	_	and	_	0	IGNORE	true
4	emailed	_	email	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
8	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	podcasters	_	podcaster	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	7	APP_op2	true
10	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
11	where	_	where	WRB	O	_	person	_	0	IGNORE	true
12	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	MOD_s	true
13	literary	_	literary	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	stuff,	_	stuff,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
16	invited	_	invite	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	15	APP_op2	true
17	them	_	they	PRP	O	_	person	_	0	IGNORE	true
18	to	_	to	TO	O	_	person	_	0	IGNORE	true
19	record	_	record	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o2	true
20	a	_	a	DT	O	_	person	_	0	IGNORE	true
21	chapter	_	chapter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	Joseph_Conrad's_Secret	_name_	Secret	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	Agent	agent	Agent	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@some, 23@@n@@_NAME_, 7@@a@@and, 6@@p@@person, 9@@p2@@person, 4@@s@@email-01, 1@@d@@i, 13@@d@@literary, 6@@f@@friend, 21@@d@@chapter, 6@@h@@have-rel-role-91, 16@@t@@invite-01, 5@@explicitanon0@@some, 24@@p@@Agent, 15@@a@@and, 19@@s@@record-01, 12@@s@@do-02, 9@@e2@@podcaster, 2@@s@@launch-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	map	_	map	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
6	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	9	MOD_s	true
9	forms	_	form	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	government	_	government	NN	O	(g<root> / government-organization  :mod-of (p<mod>)  :ARG0-of (g2 / --LEX--))	govern-01	(mod())	9	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	14	MOD_mod	true
14	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
15	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[5@@d@@world, 11@@g@@government-organization, 11@@g2@@govern-01, 2@@m@@map, 13@@n@@current, 8@@s@@differ-02, 9@@d@@form, 14@@s@@exist-01, 6@@s@@show-01]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	what	_	what	WP	O	_	thing	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
7	called	_	call	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	tag	_	tag	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
11	topper,	_	topper,	NNS	O	_	and	_	0	IGNORE	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
14	an	_	an	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
15	additional	_	additional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	punchline	_	punchline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
17	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[9@@d@@tag, 3@@p@@also, 2@@d@@joke, 16@@p@@punchline, 10@@a@@or, 1@@explicitanon0@@some, 4@@s@@have-03, 7@@d@@call-01, 15@@p@@additional]
sentence=1	Temescal	_name_	Temescal	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
3	a	_	a	DT	O	_	relative-position	_	0	IGNORE	true
4	neighborhood	_	neighborhood	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	lies	_	lie	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	be-$LEMMA$-at-91	(s())	4	MOD_s	true
7	north-northwest	_	north-northwest	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	northwest	(mod())	6	MOD_mod	true
8	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	Downtown,	_name_	downtown,	CD	O	_	_NAME_	_	0	IGNORE	true
10	centered	_	center	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
11	along	_	along	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	reach	_	reach	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op1	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	Telegraph_Avenue,	_name_	avenue,	NN	O	_	_NAME_	_	0	IGNORE	true
16	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	and	_	and	CC	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
18	near	_	near	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	17	MOD_s	true
19	51st_Street	_name_	Street	NNP	O	(s<root> / street  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
20	.	_	.	.	O	_	relative-position	_	0	IGNORE	true

nodealignment=[4@@r@@neighborhood, 7@@b@@northwest, 13@@s@@reach-01, 6@@s@@be-lie-at-91, 19@@s@@street, 11@@b@@along, 10@@s@@center-01, 17@@b@@and, 18@@s@@near-02, 19@@n@@_NAME_, 1@@p@@person, 1@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	ordinal-entity	_	0	IGNORE	true
4	37th	_name_	37th	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	_NUMBER_	(mod())	8	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	have	_	have	VBP	O	(n<root> / --LEX--  :time-of (p<mod>))	person	(mod())	8	MOD_mod	true
8	spoken	_	speak	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	office,	_	office,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
15	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	decisions	_	decision	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	decide-01	(s())	7	MOD_s	true
18	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
19	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
21	that	_	that	IN	O	_	thing	_	0	IGNORE	true
22	shaped	_	shape	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	history	_	history	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	22	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	Nation	nation	Nation	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@explicitanon0@@many, 27@@d@@Nation, 24@@m@@history, 7@@n@@person, 4@@o@@ordinal-entity, 15@@s@@so, 26@@p@@this, 12@@p@@this, 4@@explicitanon0@@_NUMBER_, 17@@s@@decide-01, 22@@s@@shape-01, 8@@t@@speak-01, 10@@d@@you, 1@@p@@this, 6@@d@@i]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	easier	_	easy	JJR	O	(h<root> / --LEX--  :degree (m2 / more)  :ARG1 (s<o>))	easy-05	(o(s()))	9	APP_op1	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	prepare	_	prepare	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	than	_	than	IN	O	_	thing	_	0	IGNORE	true
8	rice	_	rice	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	rapidly	_	rapidly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	rapid	(mod())	12	MOD_mod	true
12	gaining	_	gain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op2	true
13	in	_	in	IN	O	_	thing	_	0	IGNORE	true
14	popularity,	_	popularity,	NNP	O	_	oppose-01	_	0	IGNORE	true
15	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	vegetarians	_	vegetarian	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
18	who	_	who	WP	O	_	person	_	0	IGNORE	true
19	value	_	value	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
22	protein	_	protein	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	levels	_	level	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@s@@high-02, 17@@p@@vegetarian, 6@@s@@prepare-01, 23@@d@@level, 8@@p@@rice, 12@@s@@gain-01, 9@@a@@and, 11@@t@@rapid, 1@@d@@It, 3@@s@@much, 4@@m2@@more, 19@@s@@value-01, 4@@h@@easy-05, 15@@p@@especially, 22@@p@@protein]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	culture,	_	culture,	NNS	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	sayings	_	saying	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
11	aphorisms	_	aphorism	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	capture	_	capture	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	essence	_	essence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	grit:	_	grit:	NNP	O	_	$LEMMA$	_	0	IGNORE	true
18	“If	“if	“If	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	at	_	at	IN	O	_	1	_	0	IGNORE	true
20	first	_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	1	(mod())	26	MOD_mod	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
22	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_s	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
24	succeed,	_	succeed,	VBN	O	_	contrast-01	_	0	IGNORE	true
25	try,	_	try,	NNS	O	_	contrast-01	_	0	IGNORE	true
26	try	_	try	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_o	true
27	again,”	_	again,”	NNP	O	_	and	_	0	IGNORE	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	5	APP_o	true
29	the	_	the	DT	O	_	thing	_	0	IGNORE	true
30	famous	_	famous	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fame-01	(s())	31	MOD_s	true
31	quote	_	quote	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_op2	true
32	by	_	by	IN	O	_	name	_	0	IGNORE	true
33	Thomas_Edison:_“Genius	_name_	“Genius	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
34	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
35	one	_	one	CD	O	(p<root> / percentage-entity  :value (explicitanon0 / --LEX--)  :quant-of (m<mod>))	1	(mod())	36	MOD_mod	true
36	percent	_	percent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
37	inspiration,	_	inspiration,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	5	MOD_s	true
38	ninety-nine	_	ninety-nine	JJ	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	$LEMMA$	()	37	APP_o	true
39	percent	_	percent	NN	O	_	$LEMMA$	_	0	IGNORE	true
40	perspiration.	_	perspiration.	NN	O	_	mean-01	_	0	IGNORE	true
41	”	_	"	''	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@s@@and, 31@@s@@quote-01, 11@@d@@aphorism, 13@@s@@capture-01, 22@@s@@cause-01, 30@@s@@fame-01, 23@@explicitanon0@@-, 20@@n@@1, 36@@p@@percent, 38@@explicitanon1@@ninety-nine, 35@@p@@percentage-entity, 28@@a@@or, 33@@n@@_NAME_, 7@@explicitanon0@@number, 10@@a@@and, 4@@d@@we, 5@@s@@have-03, 9@@d@@saying, 33@@p@@person, 21@@d@@you, 26@@s@@try-01, 35@@explicitanon0@@1, 15@@d@@essence, 38@@p@@percentage-entity]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	is	_	be	VBZ	O	_	concern-02	_	0	IGNORE	true
4	an	_	an	DT	O	_	thing	_	0	IGNORE	true
5	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	1	APP_op2	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	scientific	_	scientific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	science	(mod())	10	MOD_mod	true
10	endeavor	_	endeavor	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_o	true
12	build	_	build	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
13	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	rules	_	rule	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
18	norms	_	norm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	govern	_	govern	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	cooperation	_	cooperation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cooperate-01	(s())	20	APP_o	true
23	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	space	_	space	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@p@@international, 22@@s@@cooperate-01, 1@@a@@and, 24@@b@@space, 2@@d@@it, 17@@a@@and, 16@@d@@rule-01, 20@@s@@govern-01, 9@@p@@science, 10@@d@@endeavor-01, 18@@d@@norm, 21@@d@@our, 12@@s@@build-01, 11@@s@@possible-01, 5@@s@@exemplify-01]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	17	MOD_mod	true
3	of	_	of	IN	O	(p<root> / person  :ARG1-of (p2 / --LEX--  :ARG2 (g<s>)))	include-91	(s())	2	MOD_s	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
5	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
6	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
8	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	and	_	and	CC	O	_	$LEMMA$	_	17	IGNORE	true
10	don't	_	don't	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
12	me,	_	me,	NN	O	_	say-01	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
14	name	_	name	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	Jasmine,	jasmine,	jasmine,	CD	O	(d<root> / --LEX--)	_NAME_	()	17	APP_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
18	I'm	i'm	I'm	NNPS	O	_	i	_	0	IGNORE	true
19	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	glad	_	glad	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_op2	true
21	you're	_	you're	PRP	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	17	MOD_mod	true
22	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	on	_	on	IN	O	_	i	_	0	IGNORE	true
24	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
25	channel	_	channel	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[16@@d@@_NAME_, 19@@s@@so, 25@@b@@channel, 11@@s@@know-02, 21@@b@@you're-located-at-91, 2@@p@@that, 8@@d@@here, 7@@s@@new-01, 17@@a@@and, 22@@d@@here, 14@@s@@name-01, 20@@s@@glad-02, 3@@p2@@include-91, 3@@p@@person, 10@@explicitanon0@@-, 4@@d@@you]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	went	_	go	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	1	APP_op2	true
5	to	_	to	IN	O	_	then	_	0	IGNORE	true
6	Rotus,	rotus,	rotus,	JJ	O	_	_NAME_	_	0	IGNORE	true
7	who's	_	who'	NNS	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	name	_	0	IGNORE	true
9	seasoned	_	seasoned	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
10	politician,	_	politician,	NNP	O	_	capable-01	_	0	IGNORE	true
11	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
12	there	_	there	EX	O	_	event	_	0	IGNORE	true
13	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	was	_	be	VBD	O	(r<root> / --LEX--  :condition-of (c<mod>))	person	(mod())	1	MOD_mod	true
15	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[2@@n@@then, 14@@r@@person, 1@@a@@and, 4@@s@@go-02, 13@@n@@ever, 3@@d@@i, 9@@s@@seasoned]
sentence=1	In	in	in	IN	O	_	describe-01	_	0	IGNORE	true
2	1968,	_name_	1968,	CD	O	_	and	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	published	_	publish	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	0	ROOT	true
5	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
6	theory	_	theory	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	Case	case	Case	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-03	(mod())	9	MOD_mod	true
9	Grammar	grammar	Grammar	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	(Fillmore	(fillmore	(Fillmore	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
11	1968),	_	1968),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
13	highlighted	_	highlight	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
17	syntactic	_	syntactic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	structure	_	structure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
19	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_o	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	predicted	_	predict	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_s	true
22	by	_	by	IN	O	_	thing	_	0	IGNORE	true
23	semantic	_	semantic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	participants	_	participant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	participate-01	()	21	APP_s	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 24@@e2@@participate-01, 9@@p@@Grammar, 8@@p@@Case-03, 17@@p@@syntactic, 19@@s@@possible-01, 21@@s@@predict-01, 3@@d@@he, 13@@s@@highlight-01, 24@@p2@@person, 23@@p@@semantic, 6@@m@@theory, 4@@l@@publish-01, 18@@d@@structure]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	true
3	am	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	glad	_	glad	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-02	(s(s_UNIFY_o()))	1	APP_op2	true
5	to	_	to	TO	O	_	say-01	_	0	IGNORE	true
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	4	APP_s	true
7	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	with	_	with	IN	O	_	be-located-at-91	_	0	IGNORE	true
9	Judge	judge	Judge	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	10	MOD_s	true
10	Hoffman	_name_	Hoffman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (u<op1>)  :op2 (b2<op2>)  :accompanier-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
12	Senator	senator	Senator	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	13	MOD_s	true
13	Mahady	_name_	Mahady	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_op2	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	run	_	run	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
17	this_fall	_name_	fall	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
18	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
19	the_State_of_Pennsylvania	_name_	Pennsylvania	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	17	MOD_mod	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@n@@_NAME_, 13@@p@@person, 19@@n@@_NAME_, 11@@a@@and, 17@@p@@person, 12@@p2@@senator, 6@@s@@be-located-at-91, 9@@h@@have-org-role-91, 2@@d@@i, 10@@p@@person, 19@@c@@city, 9@@p2@@judge, 1@@a@@and, 4@@c@@glad-02, 12@@h@@have-org-role-91, 10@@n@@_NAME_, 13@@n@@_NAME_, 15@@p@@also, 7@@d@@here, 16@@s@@run-01]
sentence=1	By	by	by	IN	O	_	cause-01	_	0	IGNORE	true
2	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	gracious	_	gracious	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	cooperation	_	cooperation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cooperate-01	(s())	11	APP_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	transition	_	transition	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
8	process,	_	process,	NNS	O	_	and	_	0	IGNORE	true
9	you	_	you	PRP	O	_	$LEMMA$	_	38	IGNORE	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	shown	_	show	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	38	APP_op1	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	watching	_	watch	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_dom	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	united	_	united	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	unite-01	(s())	20	MOD_s	true
20	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	11	APP_o	true
21	pledged	_	pledge	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	20	MOD_s	true
22	to	_	to	IN	O	_	thing	_	0	IGNORE	true
23	maintaining	_	maintain	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	26	MOD_mod	true
26	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
27	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	guarantees	_	guarantee	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
29	individual	_	individual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	liberty	_	liberty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	a	_	a	DT	O	_	more	_	0	IGNORE	true
33	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	28	MOD_mod	true
34	degree	_	degree	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
35	than	_	than	IN	O	_	cause-01	_	0	IGNORE	true
36	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
37	other,	_	other,	NNS	O	_	thing	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
39	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	40	APP_s	true
40	thank	_	thank	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	38	APP_op2	true
41	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	40	APP_o	true
43	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
44	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	42	APP_op2	true
45	for	_	for	IN	O	_	thing	_	0	IGNORE	true
46	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
47	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
48	help	_	help	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_o2	true
49	in	_	in	IN	O	_	i	_	0	IGNORE	true
50	maintaining	_	maintain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	APP_s	true
51	the	_	the	DT	O	_	thing	_	0	IGNORE	true
52	continuity	_	continuity	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	50	APP_s	true
53	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
54	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
55	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
56	bulwark	_	bulwark	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	52	APP_s	true
57	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
58	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
59	Republic	republic	Republic	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_poss	true
60	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[56@@m@@bulwark, 36@@p@@any, 25@@p@@politics, 21@@o@@pledge-01, 44@@d@@person, 34@@s@@degree, 48@@s@@help-01, 42@@a@@and, 29@@p@@individual, 59@@d@@Republic, 40@@b@@thank-01, 26@@d@@system, 16@@d@@we, 4@@s@@cooperate-01, 3@@t@@gracious, 7@@d@@transition-01, 46@@p@@all, 13@@s@@watch-01, 19@@s@@unite-01, 14@@d@@world, 50@@s@@maintain-01, 39@@d@@i, 30@@d@@liberty, 11@@b@@show-01, 33@@f2@@great, 52@@s@@continuity, 20@@r@@person, 23@@s@@maintain-01, 33@@m@@more, 28@@s@@guarantee-01, 38@@a@@and]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	team	_	team	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	Formica	_name_	Formica	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o	true
5	fusca,	_	fusca,	VBZ	O	_	-	_	0	IGNORE	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	ant	_	ant	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	species	_	specie	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	form	_	form	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	thousand-strong	_	thousand-strong	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	colonies	_	colony	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	.	_	.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@p@@specie, 4@@d@@_NAME_, 3@@s@@use-01, 7@@p@@ant, 11@@s@@form-01, 10@@s@@possible-01, 2@@d@@team, 12@@p@@thousand-strong, 13@@d@@colony]
sentence=1	Originally	originally	originally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	original	(mod())	2	MOD_mod	true
2	buried	_	bury	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	Foreign	foreign	Foreign	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	Quarter,	quarter,	Quarter,	NFP	O	_	and	_	0	IGNORE	true
7	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	remains	_	remain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	reinterred	_	reinterre	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
11	at	_	at	IN	O	_	name	_	0	IGNORE	true
12	Azov	_name_	Azov	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	in	_	in	IN	O	_	and	_	0	IGNORE	true
14	1877,	_name_	1877,	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	an	_	an	DT	O	_	1	_	0	IGNORE	true
17	inscription	_	inscription	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	German	_name_	German	NNP	O	(n3<root> / --LEX--  :name-of (l / language  :medium-of (n<mod>)))	_NAME_	(mod())	17	MOD_mod	true
20	which	_	which	WDT	O	_	i	_	0	IGNORE	true
21	mistakenly	_	mistakenly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	mistake-01	(s())	22	MOD_s	true
22	gives	_	give	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	rank	_	rank	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
26	Oberst,	_name_	oberst,	CD	O	(d<root> / --LEX--)	mean-01	()	24	APP_s	true
27	Colonel	colonel	Colonel	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[19@@n3@@_NAME_, 5@@p@@Foreign, 8@@d@@remain, 17@@y@@inscription, 12@@n@@_NAME_, 19@@l@@language, 1@@p@@original, 26@@d@@mean-01, 10@@s@@reinterre-01, 2@@s@@bury-01, 27@@d@@Colonel, 21@@s@@mistake-01, 12@@c@@country, 24@@s@@rank-01, 22@@t@@give-01]
sentence=1	2.	_	2.	LS	O	_	D	_	0	IGNORE	true
2	An	an	an	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
3	element	_	element	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	consists	_	consist	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
8	type	_	type	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	atom,	_	atom,	NNS	O	_	and	_	0	IGNORE	true
11	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
12	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_s	true
13	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
14	mass	_	mass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	characteristic	_	characteristic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	represent-01	(mod())	14	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
20	element	_	element	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
25	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
26	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	atoms	_	atom	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
30	element	_	element	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	(Figure	(figure	(Figure	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
32	2.2)	_	2.2)	NNP	O	_	mean-01	_	0	IGNORE	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@only, 26@@p@@all, 4@@s@@consist-01, 31@@p@@(Figure, 27@@p@@atom, 7@@explicitanon0@@1, 24@@s@@same-01, 17@@p@@represent-01, 8@@d@@type, 12@@s@@have-03, 3@@d@@element, 14@@d@@mass]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	we	_	we	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	love	_	love	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	boyfriend	_	boyfriend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	supports	_	support	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	YouTube	_name_	YouTube	NNP	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	hustle	_	hustle	VB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p@@publication, 2@@p@@we, 5@@p@@person, 3@@s@@love-01, 1@@d@@We, 10@@d@@hustle, 7@@s@@support-01, 5@@f@@boyfriend, 9@@n@@_NAME_, 5@@h@@have-rel-role-91]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	ultimate	_	ultimate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	3	APP_s	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
8	focus	_	focus	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	on	_	on	IN	O	_	monetary-quantity	_	0	IGNORE	true
10	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
11	preferences	_	preference	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	prefer-01	()	12	APP_op2	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
13	talents,	_	talents,	NNP	O	_	and	_	0	IGNORE	true
14	learn	_	learn	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	APP_op1	true
17	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
18	specialized	_	specialized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	jobs	_	job	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	better,	_	better,	NNS	O	_	and	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
22	work	_	work	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_op2	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	25	MOD_mod	true
25	organizations	_	organization	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
27	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
29	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
30	a	_	a	DT	O	_	thing	_	0	IGNORE	true
31	whole	_	whole	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
33	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_op1	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	32	APP_s	true
35	consume	_	consume	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_op2	true
36	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
38	than	_	than	IN	O	_	more-$LEMMA$	_	0	IGNORE	true
39	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
40	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
42	tried	_	try	VBD	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	32	MOD_mod	true
43	to	_	to	TO	O	_	thing	_	0	IGNORE	true
44	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	APP_o	true
45	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
48	or	_	or	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
49	her	_	she	PRP$	O	_	thing	_	0	IGNORE	true
50	own	_	own	JJ	O	_	person	_	0	IGNORE	true
51	goods	_	good	NNS	O	(d<root> / --LEX--)	good	()	52	APP_op1	true
52	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	44	APP_o	true
53	services	_	service	NNS	O	(d<root> / --LEX--)	serve-02	()	52	APP_op2	true
54	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[42@@d@@try-01, 37@@d@@more, 51@@d@@good, 36@@s@@far, 11@@t@@thing, 53@@d@@serve-02, 11@@d@@prefer-01, 19@@d@@job, 21@@a@@and, 16@@s@@do-02, 24@@m@@more, 8@@s@@focus-01, 5@@e2@@work-01, 48@@p@@or, 31@@p@@whole, 5@@p2@@person, 12@@a@@and, 24@@f2@@large, 2@@p@@ultimate, 7@@s@@possible-01, 52@@a@@and, 41@@d@@person, 28@@d@@society, 45@@p@@all, 25@@b@@organization, 22@@d@@work-01, 34@@a@@and, 33@@s@@produce-01, 35@@s@@consume-01, 18@@s@@specialized-02, 14@@s@@learn-01, 32@@s@@possible-01, 40@@p@@each, 3@@s@@result-01, 44@@s@@produce-01]
sentence=1	People	people	People	NNS	O	(d<root> / --LEX--)	person	()	6	APP_s	true
2	who	_	who	WP	O	_	person	_	0	IGNORE	true
3	study	_	study	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
4	ballet	_	ballet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	retain	_	retain	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	flexibility	_	flexibility	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	throughout	_	throughout	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
10	adult	_	adult	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	lives,	_	lives,	NNS	O	_	cause-01	_	0	IGNORE	true
12	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	technique	_	technique	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	basis	_	basis	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	base-02	(s(), o())	12	MOD_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	training	_	training	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	train-01	(s())	16	APP_s	true
19	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	of	_	of	IN	O	_	name	_	0	IGNORE	true
23	dance	_	dance	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@make-02, 23@@d@@dance-01, 16@@s@@base-02, 7@@d@@flexibility, 13@@p@@this, 1@@d@@person, 6@@s@@retain-01, 4@@d@@ballet, 18@@s@@train-01, 20@@p@@all, 14@@d@@technique, 21@@p@@type, 5@@p@@also, 3@@s@@study-01, 10@@p@@adult]
sentence=1	“Is	“is	“Is	NNP	O	_	_NAME_	_	0	IGNORE	true
2	there	_	there	RB	O	_	interrogative	_	0	IGNORE	true
3	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	6	MOD_s	true
4	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	logic	_	logic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	opposite	_	opposite	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	extreme	_	extreme	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	which	_	which	WDT	O	_	name	_	0	IGNORE	true
12	denies	_	deny	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	of	_	of	IN	O	_	person	_	0	IGNORE	true
16	sound	_	sound	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	symbolism	_	symbolism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	(apart	_	(apart	NFP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$-00	(mod())	12	MOD_mod	true
19	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	class	_	class	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	evident	_	evident	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	25	MOD_s	true
25	echoisms	_	echoisms	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	MOD_op1	true
27	‘onomatopoeia’)	_name_	‘onomatopoeia’)	NNPS	O	_	cause-01	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
29	sees	_	see	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op2	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
32	words	_	word	NNS	O	(w<root> / --LEX--  :ARG0 (t<s>)  :compared-to-of (m<mod>))	$LEMMA$	(mod(), s())	29	MOD_mod	true
33	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	a	_	a	DT	O	_	thing	_	0	IGNORE	true
35	collection	_	collection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	collect-01	(s())	29	APP_s	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	accidental	_	accidental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
38	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
39	irrational	_	irrational	JJ	O	(explicitanon0<root> / -  :polarity-of (h / --LEX--  :mod-of (l<mod>)))	rational	(mod())	40	MOD_mod	true
40	associations	_	association	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	associate-01	(s())	35	APP_s	true
41	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
42	sound	_	sound	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
43	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
44	meaning?	_	meaning?	NNS	O	_	et-cetera	_	0	IGNORE	true
45	..	_	..	.	O	_	mean-01	_	0	IGNORE	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@deny-01, 26@@a@@and, 16@@p@@sound, 37@@p@@accidental, 24@@s@@evident, 9@@s@@opposite-01, 32@@w@@word, 35@@s@@collect-01, 3@@s@@real-04, 17@@d@@symbolism, 18@@explicitanon0@@(apart-00, 31@@d@@our, 33@@p@@only, 40@@s@@associate-01, 13@@p@@any, 21@@p@@small, 4@@s@@much, 28@@a@@and, 39@@explicitanon0@@-, 42@@d@@sound, 10@@b@@extreme, 22@@p@@class, 39@@h@@rational, 14@@p@@kind, 6@@d@@logic, 29@@s@@see-01, 25@@d@@echoisms, 5@@s@@more]
sentence=1	DIY_Dentistry	_name_	Dentistry	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	4	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	had	_	have	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
7	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	8	MOD_mod	true
8	crossed	_	cross	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
9	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
10	horizon	_	horizon	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_o	true
11	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
12	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[8@@s@@cross-02, 4@@r@@something, 1@@g@@government-organization, 9@@d@@our, 10@@m@@horizon, 11@@n@@before, 1@@n@@_NAME_, 7@@n@@ever, 6@@explicitanon0@@-, 3@@p@@just]
sentence=1	Who	who	who	WP	O	_	amr-unknown	_	0	IGNORE	true
2	d-	_	d-	VBP	O	_	-	_	0	IGNORE	true
3	isn't	_	isn't	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	necessarily	_	necessarily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	5	MOD_s	true
5	inclined	_	incline	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	incline-01	(o(s()))	0	ROOT	true
6	to	_	to	TO	O	_	-	_	0	IGNORE	true
7	deal	_	deal	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	details	_	detail	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	that	_	that	WDT	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	much,	_	much,	NNS	O	_	person	_	0	IGNORE	true
13	who's	_	who's	NNP	O	_	person	_	0	IGNORE	true
14	guiding,	_	guiding,	NFP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	5	MOD_o	true
15	those	_	those	DT	O	_	that	_	0	IGNORE	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	5	APP_s	true
18	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	14	MOD_s	true
19	to	_	to	TO	O	_	person	_	0	IGNORE	true
20	sit	_	sit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	APP_o	true
21	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@d@@person, 18@@c@@will-02, 20@@s@@sit-01, 7@@t@@deal-01, 21@@d@@there, 4@@s@@need-01, 14@@s@@guiding,, 10@@d@@detail, 3@@explicitanon0@@-, 5@@o@@incline-01, 11@@s@@that]
sentence=1	Moreau	_name_	Moreau	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	Paris,	paris,	paris,	CD	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	have-rel-role-91	(mod())	3	MOD_mod	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	daughter	_	daughter	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	Katherine	_name_	Katherine	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
10	(née	_	(née	NNP	O	_	person	_	0	IGNORE	true
11	Buckley),	_name_	Buckley),	NNP	O	_	and	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	dancer	_	dancer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	MOD_s	true
14	who	_	who	WP	O	_	person	_	0	IGNORE	true
15	performed	_	perform	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	13	MOD_s	true
16	at	_	at	IN	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	Folies	folies	Folies	NNP	O	(r<root> / --LEX--  :scale-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
19	Bergère	bergère	Bergère	NNP	O	_	_NAME_	_	0	IGNORE	true
20	(d.	_	(d.	VBG	O	_	date-interval	_	0	IGNORE	true
21	1990),	_	1990),	NNP	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	Anatole-Désiré	anatole-désiré	anatole-désiré	JJ	O	_	person	_	0	IGNORE	true
24	Moreau,	moreau,	Moreau,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
25	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
26	restaurateur	_	restaurateur	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
27	(d.	_	(d.	FW	O	_	person	_	0	IGNORE	true
28	1975).	_	1975).	XX	O	_	hyperlink-91	_	0	IGNORE	true
29	[1]	_	[1]	ADD	O	_	date-entity	_	0	IGNORE	true
30	[2	_	[2	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	26	MOD_mod	true
31	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@p@@person, 1@@n@@_NAME_, 30@@p@@_NUMBER_, 13@@s@@dancer-01, 18@@r@@_NAME_, 3@@s@@bear-02, 15@@s@@perform-01, 5@@c@@city, 26@@p@@restaurateur, 7@@s@@daughter, 9@@n@@_NAME_, 5@@n@@have-rel-role-91]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	salute	_	salute	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	Congresswoman	congresswoman	Congresswoman	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	4	MOD_s	true
4	Karen_Bass	_name_	Bass	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	been	_	be	VBN	O	_	person	_	0	IGNORE	true
8	relentless,	_	relentless,	NNP	O	_	so	_	0	IGNORE	true
9	persistent	_	persistent	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	4	MOD_s	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	absolutely	_	absolutely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	absolute	(mod())	12	MOD_mod	true
12	courageous	_	courageous	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	4	MOD_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	her	_	she	PRP$	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	2	MOD_o	true
15	leadership	_	leadership	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lead-02	(s(), o())	14	MOD_s	true
16	on	_	on	IN	O	_	thing	_	0	IGNORE	true
17	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	legislation	_	legislation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@p@@absolute, 3@@h@@have-org-role-91, 12@@s@@courageous-02, 4@@p@@person, 4@@n@@_NAME_, 15@@s@@lead-02, 14@@s@@she, 9@@s@@persistent-02, 17@@p@@this, 1@@d@@i, 2@@s@@salute-01, 3@@p2@@congresswoman, 18@@d@@legislation]
sentence=1	Many	many	many	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	17	APP_s	true
2	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	1	MOD_mod	true
3	who	_	who	WP	O	_	person	_	0	IGNORE	true
4	migrated	_	migrate	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
5	to	_	to	IN	O	_	person	_	0	IGNORE	true
6	Texas	_name_	Texas	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	at	_	at	IN	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	invitation	_	invitation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	invite-01	(s(), o())	4	MOD_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Mexican	_name_	mexican	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	9	APP_s	true
14	did	_	do	VBD	O	_	person	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
16	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	17	MOD_s	true
17	shed	_	shed	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
18	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
19	identity	_	identity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
21	loyalty	_	loyalty	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	loyal-01	(s())	20	APP_op2	true
22	to	_	to	IN	O	_	person	_	0	IGNORE	true
23	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[15@@explicitanon0@@-, 12@@n@@_NAME_, 1@@n@@many, 13@@g@@government-organization, 4@@t@@migrate-01, 23@@n@@_NAME_, 12@@c@@country, 13@@g2@@govern-01, 9@@s@@invite-01, 16@@s@@complete-02, 1@@p@@person, 2@@n@@_NAME_, 20@@a@@or, 2@@c@@country, 6@@n@@_NAME_, 21@@s@@loyal-01, 19@@d@@identity, 6@@s@@state, 23@@c@@country, 17@@s@@shed-02]
sentence=1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	while	_	while	IN	O	_	he	_	0	IGNORE	true
3	at	_	at	IN	O	_	name	_	0	IGNORE	true
4	Cambridge	_name_	Cambridge	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	formed	_	form	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
7	lifelong	_	lifelong	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	friendships	_	friendship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	men	_	man	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
12	as	_	as	IN	O	_	1	_	0	IGNORE	true
13	John_Cam	_name_	Cam	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
14	Hobhouse,	hobhouse,	hobhouse,	NN	O	_	person	_	0	IGNORE	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	initiated	_	initiate	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	him	_	he	PRP	O	_	name	_	0	IGNORE	true
18	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Cambridge	_name_	Cambridge	NNP	O	_	_NAME_	_	0	IGNORE	true
21	Whig	whig	Whig	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_o	true
22	Club,	_name_	Club,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
23	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	endorsed	_	endorse	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
25	liberal	_	liberal	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_o	true
26	politics,_[28]	_name_	[28]	NNP	O	_	have-org-role-91	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
28	Francis_Hodgson,	_name_	Hodgson,	NNP	O	_	include-91	_	0	IGNORE	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	Fellow	fellow	fellow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
31	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
32	King's	king's	king's	XX	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	30	MOD_mod	true
33	College,	college,	college,	CD	O	_	have-org-role-91	_	0	IGNORE	true
34	with	_	with	IN	O	_	person	_	0	IGNORE	true
35	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
36	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	corresponded	_	correspond	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
38	on	_	on	IN	O	_	and	_	0	IGNORE	true
39	literary	_	literary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
40	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
41	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	matters	_	matter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
43	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	37	MOD_mod	true
44	the	_	the	DT	O	_	person	_	0	IGNORE	true
45	end	_	end	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_op1	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
48	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[45@@s@@end-01, 48@@d@@life, 8@@d@@friendship, 42@@d@@matter, 4@@c@@city, 39@@p@@literary, 13@@n@@_NAME_, 6@@s@@form-02, 32@@c@@city, 7@@p@@lifelong, 43@@w@@until, 4@@n@@_NAME_, 41@@p@@other, 10@@y@@man, 21@@d@@_NAME_, 37@@s@@correspond-01, 5@@d@@he, 16@@t@@initiate-01, 30@@d@@fellow, 25@@d@@liberal-02, 1@@p@@also, 27@@a@@and, 24@@s@@endorse-01, 32@@n@@_NAME_]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	explain	_	explain	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	say-01	_	0	IGNORE	true
4	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	dorm	_	dorm	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	25	APP_s	true
6	is	_	be	VBZ	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	2	APP_o	true
7	at	_	at	IN	O	_	relative-position	_	0	IGNORE	true
8	6400	_	6400	CD	O	(d<root> / --LEX--)	_NUMBER_	()	25	APP_o	true
9	College_Avenue,	_name_	avenue,	NN	O	_	mean-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	street	_	street	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	runs	_	run	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
14	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
16	left-right	_	left-right	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	right-04	(mod())	17	MOD_mod	true
17	direction	_	direction	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	on	_	on	IN	O	_	thing	_	0	IGNORE	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	map	_	map	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	town;	_	town;	NNP	O	_	and	_	0	IGNORE	true
24	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	are	_	be	VBP	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	2	MOD_mod	true
26	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	fifth	_name_	fifth	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	5	(mod())	25	MOD_mod	true
29	floor,	_	floor,	NNS	O	_	and	_	0	IGNORE	true
30	which	_	which	WDT	O	_	i	_	0	IGNORE	true
31	tells	_	tell	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
32	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
33	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
35	in	_	in	IN	O	_	i	_	0	IGNORE	true
36	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
37	up-down	_	up-down	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
38	direction;	_	direction;	NNP	O	_	and	_	0	IGNORE	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
40	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
42	the	_	the	DT	O	_	more	_	0	IGNORE	true
43	sixth	_name_	sixth	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	6	(mod())	44	MOD_mod	true
44	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
45	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
46	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
47	the	_	the	DT	O	_	thing	_	0	IGNORE	true
48	elevator,	_	elevator,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
49	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
50	tells	_	tell	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	44	MOD_s	true
51	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
52	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
53	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
54	in	_	in	IN	O	_	i	_	0	IGNORE	true
55	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
56	forward-backward	_	forward-backward	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	57	MOD_mod	true
57	direction	_	direction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_o	true
58	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@d@@be-located-at-91, 25@@b@@be-located-at-91, 20@@b@@map, 50@@s@@tell-01, 39@@a@@and, 13@@s@@run-04, 43@@o@@ordinal-entity, 16@@p@@right-04, 37@@d@@up-down, 2@@s@@explain-01, 43@@explicitanon0@@6, 1@@d@@You, 45@@a@@back, 44@@d@@room, 5@@m@@dorm, 31@@s@@tell-01, 17@@p@@direction, 8@@d@@_NUMBER_, 28@@explicitanon0@@5, 56@@p@@_NAME_, 11@@d@@street, 28@@o@@ordinal-entity, 57@@d@@direction]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	will	_	will	MD	O	_	i	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	bring	_	bring	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	George_Floyd,_Breonna_Taylor–say	_name_	Taylor–say	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o2	true
7	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	name,	_	name,	CD	O	_	mean-01	_	0	IGNORE	true
9	Breonna_Taylor–Ahmaud_Arbery,	_name_	Arbery,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	4	APP_o	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	countless	_	countless	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	count	(mod())	15	MOD_mod	true
13	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_op2	true
16	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	senselessly	_	senselessly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	pain-01	(s())	22	MOD_s	true
22	injured	_	injure	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[16@@d@@woman, 6@@p@@person, 13@@p@@other, 1@@d@@It, 5@@a@@back, 15@@a@@and, 3@@explicitanon0@@-, 18@@s@@die-01, 4@@b@@bring-01, 10@@a@@or, 12@@explicitanon0@@count, 21@@s@@pain-01, 14@@d@@man, 6@@n@@_NAME_, 22@@s@@injure-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	therefore	_	therefore	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	2	MOD_s	true
4	wish	_	wish	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_s	true
5	to	_	to	TO	O	_	company	_	0	IGNORE	true
6	start	_	start	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	APP_op1	true
7	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	in	_	in	RB	O	_	$LEMMA$	_	0	IGNORE	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	true
12	page	_	page	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	text	_	text	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_o	true
18	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	return	_	return	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
21	to	_	to	IN	O	_	person	_	0	IGNORE	true
22	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	introduction	_	introduction	NN	O	(d<root> / --LEX--)	introduce-01	()	20	APP_o	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@cause-01, 4@@c@@wish-01, 14@@p@@text, 12@@b@@page, 2@@s@@possible-01, 20@@g@@return-01, 16@@s@@follow-01, 1@@d@@You, 19@@n@@then, 22@@p@@this, 11@@o@@ordinal-entity, 18@@p@@only, 7@@p@@right, 17@@a@@and, 6@@s@@start-01, 11@@explicitanon0@@1, 23@@d@@introduce-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
2	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	APP_op1	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	mathematical	_	mathematical	JJ	O	(d<root> / --LEX--)	$LEMMA$ematics	()	2	APP_o	true
5	system,	_	system,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
6	built	_	build	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op2	true
7	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	edifices,	_	edifices,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
10	devised	_	devise	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op3	true
11	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	calendar	_	calendar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	accurately	_	accurately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	accurate	(mod())	15	MOD_mod	true
15	predicted	_	predict	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	eclipses	_	eclipse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
18	solstices	_	solstice	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	and	_	and	CC	O	_	$LEMMA$	_	15	IGNORE	true
20	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	priest-astronomers	_	priest-astronomer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	used	_	use	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	12	MOD_o	true
23	to	_	to	TO	O	_	person	_	0	IGNORE	true
24	direct	_	direct	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o2	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	planting	_	planting	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	24	APP_o	true
28	harvesting	_	harvesting	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op2	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	crops	_	crop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[28@@s@@harvesting-01, 15@@s@@predict-01, 21@@d@@priest-astronomer, 4@@d@@mathematicalematics, 7@@p@@huge, 30@@d@@crop, 22@@i@@use-01, 14@@t@@accurate, 10@@s@@devise-01, 2@@s@@develop-02, 12@@d@@calendar, 26@@s@@planting-01, 18@@d@@solstice, 27@@a@@and, 16@@d@@eclipse, 6@@s@@build-01, 1@@d@@They, 24@@s@@direct-01, 17@@a@@and, 9@@a@@and]
sentence=1	Oh,	oh,	oh,	UH	O	_	expressive	_	0	IGNORE	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
3	by	_	by	IN	O	_	expressive	_	0	IGNORE	true
4	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
5	way	_	way	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
6	guys,	_	guys,	NNS	O	_	say-01	_	0	IGNORE	true
7	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	10	APP_o2	true
8	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	call	_	call	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_op2	true
11	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	that's	_	that's	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	multi-sentence	(s())	11	MOD_s	true
13	hard,	_	hard,	NNPS	O	_	thing	_	0	IGNORE	true
14	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	2	MOD_s	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	ice	_	ice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
17	here,	_	here,	NNS	O	_	mean-01	_	0	IGNORE	true
18	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
20	table,	_	table,	CD	O	_	mean-01	_	0	IGNORE	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
22	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
23	rock	_	rock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
24	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[21@@a@@or, 15@@p@@this, 5@@p@@way, 23@@d@@rock, 2@@a@@and, 14@@s@@resemble-01, 7@@d@@amr-unknown, 10@@b@@call-01, 11@@d@@something, 12@@s@@multi-sentence, 9@@d@@we, 16@@d@@ice]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
2	ten	_	ten	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	10	(mod())	1	MOD_mod	true
3	days,	_	days,	NNS	O	(d<root> / --LEX--)	and	()	1	APP_op1	true
4	however,	_	however,	NNS	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
10	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
11	but	_	but	IN	O	_	contrast-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	include-91	_	0	IGNORE	true
13	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	13	MOD_s	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	defenders	_	defender	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	defend-01	()	22	APP_s	true
17	were	_	be	VBD	O	(d<root> / --LEX--)	person	()	9	APP_op2	true
18	dead,	_	dead,	NNP	O	_	and	_	0	IGNORE	true
19	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	Travis	_name_	Travis	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
22	James_Bowie,	_name_	Bowie,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-org-role-91	(s(), o())	9	MOD_o	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	famed	_	famed	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	fame-01	(mod())	25	MOD_mod	true
25	frontiersman	_	frontiersman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
26	who	_	who	WP	O	_	name	_	0	IGNORE	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	land	_	land	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	speculator	_	speculator	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_op3	true
33	slave	_	slave	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
34	trader	_	trader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	trade-01	(s())	32	APP_op2	true
35	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@a@@and, 17@@d@@person, 16@@e2@@defend-01, 33@@d@@slave, 28@@p@@also, 20@@n@@_NAME_, 24@@p@@fame-01, 3@@d@@and, 6@@d@@mission, 34@@s@@trade-01, 1@@w@@after, 10@@p@@all, 14@@s@@include-91, 25@@d@@frontiersman, 22@@s@@have-org-role-91, 20@@p@@person, 31@@s@@speculator, 19@@s@@include-01, 30@@d@@land, 13@@explicitanon0@@few, 2@@explicitanon0@@10, 8@@s@@take-01, 32@@a@@and, 21@@a@@and, 16@@p2@@person]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	that's	_	that's	PRP	O	_	thing	_	0	IGNORE	true
5	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-17	(s())	0	ROOT	true
6	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[3@@p@@all, 6@@explicitanon0@@interrogative, 2@@d@@that, 5@@s@@leave-17]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	lime	_	lime	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	green	_	green	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	Skittles	skittles	Skittles	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	add	_	add	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	sourness	_	sourness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	to	_	to	IN	O	_	name	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	drink,	_	drink,	NNS	O	_	and	_	0	IGNORE	true
11	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_s	true
12	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
14	want	_	want	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
15	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
16	that's	_	that's	PRP	O	_	thing	_	0	IGNORE	true
17	sweet,	_	sweet,	NNS	O	_	and	_	0	IGNORE	true
18	leave	_	leave	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-14	(s(), o())	23	APP_op1	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	green	_	green	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	MOD_s	true
21	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	out	_	out	RP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_o	true
24	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	23	APP_op2	true
25	them	_	they	PRP	O	_	person	_	0	IGNORE	true
26	to	_	to	IN	O	_	thing	_	0	IGNORE	true
27	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
28	own	_	own	JJ	O	_	person	_	0	IGNORE	true
29	bottle	_	bottle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
30	for	_	for	IN	O	_	or	_	0	IGNORE	true
31	a	_	a	DT	O	_	thing	_	0	IGNORE	true
32	sour	_	sour	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	lime	_	lime	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	vodka	_	vodka	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@a@@and, 2@@p@@lime, 24@@s@@add-02, 33@@g@@lime, 32@@p@@sour, 7@@d@@sourness, 3@@s@@green-02, 18@@s@@leave-14, 4@@d@@Skittles, 22@@d@@out, 20@@s@@green-03, 29@@d@@bottle, 15@@p@@one, 13@@d@@you, 14@@o@@want-01, 5@@s@@add-02, 34@@o@@vodka, 11@@s@@cause-01]
sentence=1	Back	back	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	out	_	out	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	mall,	_	mall,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
6	Cara	_name_	Cara	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
7	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	8	APP_op2	true
8	wailing,	_	wailing,	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	start	_	start	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
12	an	_	an	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
13	asthma	_	asthma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	attack,	_	attack,	XX	O	_	cause-01	_	0	IGNORE	true
15	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_s	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	distract	_	distract	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
18	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	true
20	say,	_	say,	NN	O	_	and	_	0	IGNORE	true
21	“You	“you	“You	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	want	_	want	VBP	O	(u<root> / --LEX--  :ARG0 (y / you)  :ARG1 (s<s>))	$LEMMA$-01	(s())	15	APP_o	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	cookie?	_	cookie?	NN	O	_	interrogative	_	0	IGNORE	true
25	”	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 13@@d@@asthma, 11@@s@@start-01, 1@@p@@back, 10@@s@@possible-01, 7@@d@@person, 19@@d@@i, 8@@a@@wailing,, 22@@u@@want-01, 15@@s@@cause-01, 21@@d@@“You, 22@@y@@you, 6@@p@@person, 17@@i@@distract-01]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	remembered	_	remember	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_o	true
5	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
6	“yellow	_	“yellow	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
7	man”	_	man”	NNP	O	_	slash	_	0	IGNORE	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
9	had	_	have	VBD	O	_	person	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
11	seen,	_	seen,	NNS	O	_	and	_	0	IGNORE	true
12	an	_	an	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
13	Olondrian	_name_	olondrian	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
14	wizard	_	wizard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
16	doctor	_	doctor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	who	_	who	WP	O	_	name	_	0	IGNORE	true
18	had	_	have	VBD	O	_	person	_	0	IGNORE	true
19	visited	_	visit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
20	Tyom	_name_	Tyom	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	my	_	my	PRP$	O	_	name	_	0	IGNORE	true
23	childhood,	_name_	childhood,	NNS	O	_	and	_	0	IGNORE	true
24	who	_	who	WP	O	_	name	_	0	IGNORE	true
25	wore	_	wear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
26	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	true
27	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	glass	_	glass	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	eyes,	_	eyes,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
33	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
34	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	ears	_	ear	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
38	wires,	_	wires,	NNS	O	_	cause-01	_	0	IGNORE	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
40	roamed	_	roam	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op2	true
41	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
42	hills	_	hill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	Tinimavet,	_name_	tinimavet,	NN	O	_	and	_	0	IGNORE	true
45	cutting	_	cut	VBG	O	(g<root> / --LEX--  :ARG2 (o<o2>)  :ARG1 (i<o>)  :ARG0 (y<s>)  :purpose-of (a<mod>))	$LEMMA$-03	(mod(), o2(), s(), o())	40	MOD_mod	true
46	bits	_	bit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
47	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	trees	_	tree	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o2	true
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@explicitanon0@@2, 10@@n@@ever, 8@@d@@i, 2@@d@@i, 13@@n@@_NAME_, 19@@s@@visit-01, 25@@s@@wear-01, 16@@d@@doctor, 27@@d@@piece, 20@@n@@_NAME_, 36@@d@@ear, 39@@a@@and, 20@@p@@person, 49@@d@@tree, 15@@a@@and, 3@@s@@remember-01, 45@@g@@cut-03, 40@@s@@roam-01, 13@@e@@ethnic-group, 1@@n@@then, 6@@p@@_NAME_, 4@@s@@person, 5@@p@@only, 46@@d@@bit, 14@@d@@wizard, 29@@g@@glass, 42@@d@@hill, 33@@s@@attach-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	protégé	_	protégé	NNS	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	person	(mod())	15	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	Pope	pope	Pope	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	5	MOD_s	true
5	Damasus	_name_	Damasus	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	I,	i,	I,	NNP	O	_	name	_	0	IGNORE	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	December	_name_	December	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	12	(mod())	8	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	384,	_	384,	CD	O	_	name	_	0	IGNORE	true
13	Jerome	_name_	Jerome	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	known	_	know	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-02	(o(s()))	0	ROOT	true
16	for	_	for	IN	O	_	name	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
18	teachings	_	teaching	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	teach-01	(s(), o())	15	APP_o	true
19	on	_	on	IN	O	_	name	_	0	IGNORE	true
20	Christian	_name_	christian	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	moral	_	moral	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_o	true
22	life,	_	life,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
23	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	18	MOD_mod	true
24	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
25	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	15	MOD_mod	true
26	living	_	live	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	MOD_s	true
27	in	_	in	IN	O	_	person	_	0	IGNORE	true
28	cosmopolitan	_	cosmopolitan	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	centers	_	center	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
30	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
31	as	_	as	IN	O	_	and	_	0	IGNORE	true
32	Rome	_name_	Rome	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	29	MOD_mod	true
33	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@explicitanon1@@person, 28@@p@@cosmopolitan, 26@@s@@live-01, 4@@p2@@pope, 5@@n@@_NAME_, 10@@explicitanon0@@12, 13@@n@@_NAME_, 32@@c@@city, 13@@p@@person, 29@@b@@center, 32@@n@@_NAME_, 15@@f@@know-02, 21@@d@@moral-02, 20@@r@@religious-group, 4@@h@@have-org-role-91, 25@@p@@person, 18@@s@@teach-01, 8@@s@@die-01, 20@@n@@_NAME_, 10@@d@@date-entity, 23@@p@@particular]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	although	_	although	IN	O	_	have-concession-91	_	0	IGNORE	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	deal	_	deal	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	vehicle	_	vehicle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	traffic	_	traffic	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the_George_Washington_Bridge,	_name_	Bridge,	NNS	O	_	_NAME_	_	0	IGNORE	true
15	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	connects	_	connect	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	Fort_Lee	_name_	Lee	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	Manhattan,	_name_	manhattan,	CD	O	_	_NAME_	_	0	IGNORE	true
20	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	1	APP_op2	true
21	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	20	APP_mod	true
22	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
23	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	24	MOD_mod	true
24	perks	_	perk	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	town	_	town	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
30	walking	_	walk	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_s	true
31	access	_	access	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
32	to	_	to	IN	O	_	and	_	0	IGNORE	true
33	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
34	restaurants,	_	restaurants,	NNP	O	_	and	_	0	IGNORE	true
35	convenience	_	convenience	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	stores	_	store	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	31	MOD_op1	true
38	mass	_	mass	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
39	transit,	_	transit,	NNS	O	_	counter-01	_	0	IGNORE	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
42	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	buses	_	bus	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op1	true
45	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	42	MOD_mod	true
46	vans	_	van	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op2	true
47	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
48	frequently	_	frequently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	frequent-02	(s())	49	MOD_s	true
49	run	_	run	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	45	MOD_s	true
50	across	_	across	IN	O	(a<root> / --LEX--  :op1 (t<op1>)  :path-of (r<mod>))	$LEMMA$	(op1(), mod())	49	MOD_mod	true
51	the	_	the	DT	O	_	person	_	0	IGNORE	true
52	bridge	_	bridge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_op1	true
53	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_o	true
54	up	_	up	IN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_op1	true
55	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f2<op2>)  :op1 (b2<op1>)  :direction-of (f<mod>))	$LEMMA$	(op2(), op1(), mod())	49	MOD_mod	true
56	down	_	down	IN	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_op2	true
57	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	58	MOD_s	true
58	streets	_	street	NNS	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@p@@this, 17@@n@@_NAME_, 20@@explicitanon0@@1, 1@@a@@and, 21@@s@@include-91, 16@@s@@connect-01, 49@@s@@run-02, 58@@t@@street, 30@@d@@walk-01, 44@@d@@bus, 52@@d@@bridge, 24@@m@@perk, 53@@d@@and, 27@@d@@town, 7@@explicitanon0@@deal, 17@@p@@person, 23@@m@@most, 9@@p@@vehicle, 55@@a@@and, 37@@a@@and, 48@@s@@frequent-02, 33@@explicitanon0@@many, 54@@d@@up, 31@@s@@access-01, 23@@t@@large, 57@@s@@major-02, 56@@d@@down, 50@@a@@across, 45@@a@@and, 38@@p@@mass, 42@@p@@form, 35@@p@@convenience, 10@@p@@traffic, 46@@d@@van, 36@@d@@store, 6@@p@@great]
sentence=1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
3	need,	_	need,	NNP	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
5	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
6	developed	_	develop	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_op1	true
7	software,	_	software,	NNS	O	(d<root> / --LEX--)	thing	()	17	APP_s	true
8	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
9	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
10	Natural_Language_Processing,	_name_	processing,	NN	O	_	_NAME_	_	0	IGNORE	true
11	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
12	automatically	_	automatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	13	MOD_mod	true
13	identifies	_	identify	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
14	enjambment	_	enjambment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	Spanish,	spanish,	spanish,	NN	O	_	_NAME_	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
18	applied	_	apply	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	17	APP_op2	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	corpus	_	corpus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	approx.	_	approx.	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	3750	_	3750	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	26	MOD_mod	true
26	sonnets	_	sonnet	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	by	_	by	IN	O	_	name	_	0	IGNORE	true
28	ca.	_	ca.	NN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	26	MOD_mod	true
29	1000	_	1000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	28	APP_op1	true
30	authors,	_	authors,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	17	MOD_o	true
31	from	_	from	IN	O	_	date-interval	_	0	IGNORE	true
32	the_15th_to_the_19th_century	_name_	century	NN	O	(n2<root> / --LEX--  :name-of (g / government-organization  :mod-of (o2<mod>)))	_NAME_	(mod())	30	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@s@@ca., 24@@explicitanon0@@approx., 2@@d@@that, 13@@s@@identify-01, 6@@s@@develop-02, 18@@s@@apply-02, 4@@d@@we, 17@@a@@and, 22@@d@@corpus, 32@@n2@@_NAME_, 8@@s@@base-02, 7@@d@@thing, 26@@p@@sonnet, 29@@d@@_NUMBER_, 25@@explicitanon0@@_NUMBER_, 32@@g@@government-organization, 12@@t@@automatic, 14@@d@@enjambment, 30@@s@@authors,, 1@@s@@give-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
4	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	7	MOD_mod	true
5	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	7	MOD_mod	true
6	basic	_	basic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	principles	_	principle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	–	_	–	:	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	mean-01	(s(), o())	2	MOD_s	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	‘arbitrariness	_	‘arbitrariness	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	sign’,	_	sign’,	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
15	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
16	‘selectiveness	_name_	‘selectiveness	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_op2	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	sound	_	sound	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	systems’	_	systems’	NNP	O	_	and	_	0	IGNORE	true
21	–	_	–	NFP	O	_	and	_	0	IGNORE	true
22	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
24	words	_	word	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
25	that	_	that	WDT	O	_	name	_	0	IGNORE	true
26	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	world's	_	world'	NNS	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	30	MOD_mod	true
30	languages	_	language	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	38	APP_op1	true
32	sound	_	sound	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	31	APP_s	true
33	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	different	_	different	JJ	O	(d<root> / --LEX--)	differ-02	()	32	APP_s	true
35	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
36	each	_	each	DT	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
37	other,	_	other,	NNS	O	_	and	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
39	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
40	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
41	likelihood	_	likelihood	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	likely-01	(s())	49	APP_dom	true
42	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
43	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
44	are	_	be	VBP	O	_	exist-01	_	0	IGNORE	true
45	universal	_	universal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
47	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
48	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	49	MOD_mod	true
49	small	_	small	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	38	APP_op2	true
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@n@@_NAME_, 2@@s@@follow-01, 49@@r@@small, 45@@p@@universal, 34@@d@@differ-02, 29@@c@@country, 30@@b@@language, 14@@a@@and, 46@@d@@word, 7@@d@@principle, 4@@p@@this, 32@@s@@sound-01, 6@@p@@basic, 38@@a@@and, 8@@s@@mean-01, 5@@explicitanon0@@2, 33@@s@@quite, 26@@s@@exist-01, 16@@s@@‘selectiveness, 41@@s@@likely-01, 48@@s@@extreme, 18@@p@@particular, 31@@s@@recommend-01, 36@@d@@each, 10@@d@@‘arbitrariness, 24@@p@@word, 19@@d@@sound]
sentence=1	When	when	when	WRB	O	_	he	_	0	IGNORE	true
2	Tyler	_name_	Tyler	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
5	young,	_	young,	NNPS	O	_	and	_	0	IGNORE	true
6	his	_	he	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
7	grandmother	_	grandmother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	11	APP_dom	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	favorite	_	favorite	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	favor-01	(s())	11	MOD_s	true
11	person	_	person	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	35	APP_o2	true
12	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	world	_	world	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	because,	_	because,	NNP	O	_	resemble-01	_	0	IGNORE	true
16	unlike	_	unlike	IN	O	_	resemble-01	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	-	_	0	IGNORE	true
18	parents,	_	parents,	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	35	MOD_mod	true
19	who	_	who	WP	O	_	name	_	0	IGNORE	true
20	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
21	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
22	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
23	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	20	APP_o	true
24	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	be	_	be	VB	O	_	person	_	0	IGNORE	true
26	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	APP_s	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	truth	_	truth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
30	adults	_	adult	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	understood	_	understand	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
32	it,	_	it,	XX	O	_	thing	_	0	IGNORE	true
33	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	would	_	would	MD	O	_	thing	_	0	IGNORE	true
35	fill	_	fill	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-in-02	(o2(), s(), o())	0	ROOT	true
36	in	_	in	RP	O	_	th$LEMMA$g	_	0	IGNORE	true
37	the	_	the	DT	O	_	he	_	0	IGNORE	true
38	gaps	_	gap	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
39	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
40	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
41	knowledge	_	knowledge	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	know-01	(mod())	38	MOD_mod	true
42	—	_	—	:	O	_	name	_	0	IGNORE	true
43	Santa	santa	Santa	NNP	O	(p<root> / person  :name (n / --LEX--)  :source-of (t<mod>))	_NAME_	(mod())	45	MOD_mod	true
44	Claus,	claus,	claus,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	35	MOD_s	true
45	the	_	the	DT	O	(d<root> / --LEX--)	person	()	35	APP_s	true
46	Easter	easter	Easter	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	48	MOD_mod	true
47	Bunny,	bunny,	Bunny,	NNP	O	_	mean-01	_	0	IGNORE	true
48	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	44	APP_o	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[46@@n@@_NAME_, 43@@p@@person, 43@@n@@_NAME_, 22@@d@@child, 2@@n@@_NAME_, 7@@p@@person, 30@@d@@adult, 10@@s@@favor-01, 18@@explicitanon0@@-, 11@@r@@person, 20@@s@@believe-01, 26@@s@@tell-01, 38@@d@@gap, 45@@d@@person, 7@@h@@have-rel-role-91, 7@@f@@grandmother, 31@@s@@understand-01, 44@@s@@mean-01, 14@@p@@world, 48@@n@@_NAME_, 23@@s@@recommend-01, 4@@s@@very, 35@@b@@fill-in-02, 41@@explicitanon0@@know-01, 28@@d@@truth, 48@@p@@person, 24@@n@@always]
sentence=1	Mérida	_name_	Mérida	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
3	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
4	rich	_	rich	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	6	MOD_mod	true
6	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	which	_	which	WDT	O	_	i	_	0	IGNORE	true
8	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	reflects	_	reflect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
11	diversity	_	diversity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@s@@have-03, 1@@p@@Mérida, 6@@d@@life, 9@@s@@reflect-01, 5@@p@@culture, 11@@d@@diversity, 4@@p@@rich, 8@@p@@also]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	download	_	download	VB	O	(u<root> / --LEX--  :ARG0 (y / you)  :ARG1 (s<s>))	$LEMMA$-01	(s())	6	APP_op1	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
4	on	_	on	IN	O	_	you	_	0	IGNORE	true
5	GitHub	_name_	GitHub	NNP	O	(p<root> / publication  :name (n / --LEX--)  :location-of (a<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	then,	_	then,	NNP	O	_	and	_	0	IGNORE	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	devise	_	devise	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
10	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	together	_	together	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
17	free	_	free	JJ	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-04	(s())	18	MOD_s	true
18	access	_	access	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
19	to	_	to	IN	O	_	and	_	0	IGNORE	true
20	science	_	science	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
22	technology	_	technology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[1@@p@@just, 22@@d@@technology, 5@@p@@publication, 18@@s@@access-01, 8@@d@@we, 9@@s@@devise-01, 2@@u@@download-01, 11@@t@@together, 10@@d@@something, 2@@y@@you, 21@@a@@and, 6@@a@@and, 5@@n@@_NAME_, 20@@d@@science, 17@@l@@free-04, 3@@d@@it]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	parts	_	part	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	that	_	that	WDT	O	_	event	_	0	IGNORE	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	legend	_	legend	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
7	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@just, 2@@d@@part, 6@@s@@legend-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	aimed	_	aim	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	at	_	at	IN	O	_	thing	_	0	IGNORE	true
5	developing	_	develop	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_o	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	grammar	_	grammar	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	would	_	would	MD	O	_	thing	_	0	IGNORE	true
13	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	14	MOD_mod	true
14	acknowledge	_	acknowledge	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	role	_	role	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	14	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	semantics	_	semantic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_poss	true
19	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
20	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	start,	_	start,	NNS	O	_	person	_	0	IGNORE	true
23	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	3	MOD_s	true
24	simultaneously	_	simultaneously	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	simultaneous	(mod())	25	MOD_mod	true
25	adopting	_	adopt	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
26	constraint-based	_	constraint-based	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	base-02	(s())	27	MOD_s	true
27	formalisms	_	formalism	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	popular	_	popular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
30	in	_	in	IN	O	_	terrorism	_	0	IGNORE	true
31	computer	_	computer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	science	_	science	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op1	true
33	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	29	MOD_mod	true
34	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	35	MOD_s	true
35	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	processing	_	processing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	process-01	(s())	33	APP_op2	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@p@@right, 25@@s@@adopt-01, 32@@d@@science, 2@@d@@work-01, 3@@s@@aim-01, 7@@s@@complete-02, 35@@d@@language, 13@@s@@full, 14@@s@@acknowledge-01, 29@@s@@popular-02, 10@@p@@grammar, 16@@m@@role, 1@@p@@this, 27@@d@@formalism, 5@@s@@develop-02, 23@@s@@contrast-01, 18@@d@@semantic, 8@@d@@theory, 36@@s@@process-01, 33@@b@@and, 26@@s@@base-02, 31@@p@@computer, 34@@s@@natural-03, 24@@p@@simultaneous]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
3	example,	_	example,	NN	O	_	and	_	0	IGNORE	true
4	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
5	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
7	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	8	MOD_mod	true
8	diversity	_	diversity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
9	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	community	_	community	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	or	_	or	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
13	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_o	true
15	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	14	APP_s	true
16	to	_	to	IN	O	_	thing	_	0	IGNORE	true
17	improved	_	improve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
18	critical	_	critical	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	criticism-04	(mod())	19	MOD_mod	true
19	thinking	_	thinking	NN	O	(d<root> / --LEX--)	think-01	()	21	APP_op1	true
20	[1]	_name_	[1]	ADD	O	_	thing	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
22	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	creative	_	creative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	solutions	_	solution	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	solve-01	(s())	21	APP_op2	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	complex	_	complex	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	tasks	_	task	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
28	[2,_3]	_name_	3]	CD	O	_	cause-01	_	0	IGNORE	true
29	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
30	pairing	_	pair	VBG	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
31	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
32	individuals	_	individual	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
34	unique	_	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	skillsets	_	skillset	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op1	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	40	APP_op2	true
37	perspectives	_	perspective	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
38	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
39	complement	_	complement	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	36	MOD_s	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
41	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	augment	_	augment	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	MOD_s	true
43	the	_	the	DT	O	_	person	_	0	IGNORE	true
44	abilities	_	ability	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	42	APP_o	true
45	of	_	of	IN	O	_	person	_	0	IGNORE	true
46	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
47	peers	_	peer	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	44	APP_poss	true
48	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[37@@d@@perspective, 32@@d@@individual, 4@@d@@research-01, 17@@s@@improve-01, 44@@m@@ability, 15@@t@@lead-03, 34@@p@@unique, 24@@t@@thing, 11@@d@@community, 13@@d@@group, 41@@o@@often, 7@@m@@more, 7@@f2@@great, 30@@b@@pair-01, 26@@p@@complex, 36@@a@@and, 31@@p@@together, 39@@s@@complement-01, 18@@t@@criticism-04, 24@@c@@solve-01, 12@@b@@or, 47@@f@@peer, 27@@d@@task, 47@@h@@have-rel-role-91, 8@@d@@diversity, 42@@s@@augment-01, 5@@s@@show-01, 14@@s@@possible-01, 40@@a@@and, 19@@d@@think-01, 47@@p@@person, 22@@s@@more, 21@@a@@and, 35@@d@@skillset, 23@@p@@creative]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	such,	_	such,	NNP	O	_	cause-01	_	0	IGNORE	true
3	the_Game_of_Thrones	_name_	Thrones	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	storyworld	_	storyworld	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	remarkably	_	remarkably	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	incredible	(s())	8	MOD_s	true
8	rich	_	rich	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	challenging	_	challenging	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	environment	_	environment	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_o	true
12	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	fans	_	fan	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
14	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
16	new,	_	new,	NN	O	_	and	_	0	IGNORE	true
17	who	_	who	WP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	amr-unknown	(s(), o())	5	MOD_o	true
18	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	19	MOD_o	true
19	negotiate	_	negotiate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
20	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	increasingly	_	increasingly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	increase-01	(s())	22	MOD_s	true
22	complex	_	complex	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	network	_	network	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	paratexts	_	paratext	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	23	MOD_mod	true
27	intertexts	_	intertext	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
28	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
29	order	_	order	NN	O	_	and	_	0	IGNORE	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	32	MOD_mod	true
32	engage	_	engage	VB	O	(i2<root> / --LEX--  :ARG0 (i<s>)  :ARG2 (t<o>)  :purpose-of (l<mod>))	$LEMMA$-01	(mod(), s(), o())	19	MOD_mod	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
35	narratives	_	narrative	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
36	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@p@@old, 19@@s@@negotiate-01, 3@@n@@_NAME_, 31@@s@@full, 4@@d@@storyworld, 22@@p@@complex, 26@@a@@and, 21@@s@@increase-01, 23@@d@@network, 8@@p@@rich, 10@@s@@challenging-01, 17@@s@@amr-unknown, 11@@r@@environment, 7@@s@@incredible, 25@@d@@paratext, 18@@s@@obligate-01, 15@@d@@and, 5@@s@@represent-01, 32@@i2@@engage-01, 35@@d@@narrative, 13@@i@@fan, 27@@d@@intertext]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
2	am	_	be	VBP	O	_	cause-01	_	0	IGNORE	true
3	curious	_	curious	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op1	true
4	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
6	population	_	population	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	structure	_	structure	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	"fields"	_	"fields"	NNP	O	_	include-91	_	0	IGNORE	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	anemones	_	anemone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
13	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	which	_	which	WDT	O	_	name	_	0	IGNORE	true
18	Edwardsiella	_name_	Edwardsiella	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	andrillae	_	andrillae	RB	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	belongs	_	belong	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
21	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	APP_op2	true
22	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	reproduce	_	reproduce	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	asexually,	_	asexually,	NNS	O	_	and	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
28	it's	_	it's	PRP$	O	_	multi-sentence	_	0	IGNORE	true
29	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op3	true
30	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
31	the	_	the	DT	O	_	thing	_	0	IGNORE	true
32	fields	_	field	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
33	are	_	be	VBP	O	_	person	_	0	IGNORE	true
34	"clones"	_	"clones"	NNP	O	_	thing	_	0	IGNORE	true
35	produced	_	produce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	true
36	asexually	_	asexually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	collective	(mod())	35	MOD_mod	true
37	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	35	MOD_s	true
38	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
39	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
40	result	_	result	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	37	APP_o	true
41	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
42	sexual	_	sexual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	sex	(mod())	43	MOD_mod	true
43	reproduction	_	reproduction	NN	O	(d<root> / --LEX--)	reproduce-01	()	40	APP_s	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@explicitanon0@@many, 7@@m@@structure, 18@@d@@Edwardsiella, 37@@s@@instead-of-91, 21@@s@@include-01, 29@@s@@possible-01, 15@@d@@group, 19@@n@@_NAME_, 12@@d@@anemone, 43@@d@@reproduce-01, 20@@s@@belong-01, 6@@p@@population, 25@@s@@reproduce-01, 3@@s@@curious-01, 1@@d@@i, 40@@s@@result-01, 35@@s@@produce-01, 42@@p@@sex, 32@@d@@field, 23@@d@@specie, 27@@a@@and, 36@@t@@collective]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	know	_	know	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	if	_	if	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true
6	I	i	I	PRP	O	_	1	_	0	IGNORE	true
7	told	_	tell	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
8	you,	_	you,	NNS	O	_	thing	_	0	IGNORE	true
9	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	about	_	about	IN	O	_	i	_	0	IGNORE	true
14	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	woman,	_	woman,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
17	uh,	_	uh,	VBD	O	_	person	_	0	IGNORE	true
18	went	_	go	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	12	MOD_s	true
19	after	_	after	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
23	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[18@@s@@go-03, 12@@d@@story, 21@@d@@guy, 7@@t@@tell-01, 22@@b@@there, 3@@explicitanon0@@-, 20@@p@@that, 4@@c@@know-01, 9@@s@@tell-01, 5@@explicitanon0@@interrogative, 11@@p@@that, 2@@d@@i, 23@@explicitanon0@@interrogative, 1@@p@@well]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	brothers	_	brother	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
8	sisters	_	sister	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	cut	_	cut	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_s	true
13	off	_	off	RP	O	_	-	_	0	IGNORE	true
14	from	_	from	IN	O	_	-	_	0	IGNORE	true
15	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
17	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	18	MOD_mod	true
18	boundaries	_	boundary	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
21	unhappily	_	unhappily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	discriminate-01	(s())	24	MOD_s	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	24	MOD_s	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
24	share	_	share	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
25	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
26	present	_	present	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	24	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
32	come	_	come	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@share-01, 21@@s@@discriminate-01, 29@@d@@free-04, 22@@s@@possible-01, 32@@s@@come-01, 18@@d@@boundary, 26@@n@@present, 17@@p@@politics, 6@@p@@person, 3@@p@@also, 12@@s@@cut-02, 2@@s@@think-01, 1@@d@@We, 7@@a@@and, 8@@d@@sister, 23@@explicitanon0@@-, 6@@h@@have-rel-role-91, 6@@f@@brother]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	institutional	_	institutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	institution	(mod())	3	MOD_mod	true
3	structure	_	structure	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_op1	true
4	of	_	of	IN	O	_	thing	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	state	_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
8	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	constitution	_	constitution	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
10	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
11	responsible	_	responsible	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
13	restricting	_	restrict	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
14	predatory	_	predatory	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	action—even	_	action—even	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	state	_	state	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	itself—and	_	itself—and	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
20	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
21	creating	_	create	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op2	true
22	rules	_	rule	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
23	that	_	that	WDT	O	_	-	_	0	IGNORE	true
24	benefit	_	benefit	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	community	_	community	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	[18]	_	[18]	XX	O	_	and	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@d@@community, 6@@d@@state, 24@@s@@benefit-01, 19@@a@@itself—and, 13@@s@@restrict-01, 14@@d@@predatory, 11@@s@@responsible-01, 15@@d@@action—even, 22@@d@@rule-01, 21@@s@@create-01, 9@@d@@constitution, 7@@a@@and, 2@@p@@institution, 3@@m@@structure]
sentence=1	Each	each	each	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	$LEMMA$	(mod(), s())	5	MOD_mod	true
2	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
5	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	so	_	so	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	discuss	_	discuss	VB	O	(g<root> / --LEX--  :ARG2 (o<o2>)  :ARG1 (i<o>)  :ARG0 (y<s>)  :purpose-of (a<mod>))	$LEMMA$-01	(mod(), o2(), s(), o())	5	MOD_mod	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
11	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	matter	_	matter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	affected	_	affect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	19	MOD_mod	true
19	interest	_	interest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@d@@interest-01, 6@@d@@so, 3@@d@@i, 10@@d@@you, 12@@d@@matter, 8@@g@@discuss-01, 2@@d@@time, 1@@r@@each, 11@@p@@some, 5@@s@@do-02, 15@@s@@believe-01, 16@@s@@affect-01, 18@@p@@nation]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	had	_	have	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-03	(o(poss_UNIFY_s()))	0	ROOT	true
4	our	_	our	PRP$	O	_	person	_	0	IGNORE	true
5	own	_	own	JJ	O	_	person	_	0	IGNORE	true
6	interests	_	interest	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
7	—	_	—	.	O	_	and	_	0	IGNORE	true
8	drawing,	_	drawing,	NNP	O	_	and	_	0	IGNORE	true
9	electronics,	_	electronics,	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	3	MOD_op1	true
10	collecting	_	collect	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_op2	true
11	beer	_	beer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	caps	_	cap	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	—	_	—	:	O	_	$LEMMA$	_	0	IGNORE	true
14	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
16	appeared	_	appear	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
17	obscure	_	obscure	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	$LEMMA$	(s())	16	APP_o	true
18	to	_	to	IN	O	_	name	_	0	IGNORE	true
19	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@d@@We, 10@@s@@collect-01, 9@@a@@and, 12@@d@@cap, 6@@m@@interest, 3@@l@@have-03, 15@@p@@each, 2@@p@@all, 17@@p@@obscure, 19@@d@@anyone, 16@@s@@appear-02, 17@@explicitanon0@@-, 11@@p@@beer, 20@@p@@else]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	thanks	_	thank	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thank-01	(s(), o())	1	MOD_o	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	dedicated	_	dedicated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	2	APP_s	true
6	who	_	who	WP	O	_	1	_	0	IGNORE	true
7	have	_	have	VBP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	1	MOD_mod	true
8	been	_	be	VBN	O	_	person	_	0	IGNORE	true
9	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	decades	_name_	decade	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	9	MOD_mod	true
12	in	_	in	IN	O	_	multiple	_	0	IGNORE	true
13	engineering	_	engineering	NN	O	(d<root> / --LEX--)	engineer-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
15	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	scientific	_	scientific	JJ	O	(d<root> / --LEX--)	science	()	14	APP_op2	true
17	marvels,	_	marvels,	NNS	O	_	and	_	0	IGNORE	true
18	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_op2	true
20	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_s	true
21	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	sky	_	sky	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	understanding	_	understanding	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	understand-01	(mod())	20	MOD_mod	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@a@@and, 26@@t@@understand-01, 9@@s@@work-01, 7@@explicitanon0@@1, 25@@s@@new-01, 1@@a@@and, 2@@s@@thank-01, 18@@d@@we, 23@@d@@sky, 19@@s@@possible-01, 11@@t2@@temporal-quantity, 5@@d@@person, 11@@m@@decade, 11@@m2@@multiple, 4@@s@@dedicated-01, 13@@d@@engineer-01, 20@@s@@look-01, 16@@d@@science]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	24	MOD_o	true
2	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	facts	_	fact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	24	APP_s	true
5	explanatorily	_	explanatorily	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	artificial	(mod())	6	MOD_mod	true
6	redundant,	_	redundant,	NNP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	and	(mod(), s())	24	MOD_mod	true
7	indeed,	_	indeed,	NNP	O	_	contrast-01	_	0	IGNORE	true
8	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	realists	_	realist	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
10	(those	_	(those	-LRB-	O	_	_NAME_	_	0	IGNORE	true
11	who	_	who	WP	O	_	contrast-01	_	0	IGNORE	true
12	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
13	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	mind-independent,	_	mind-independent,	NNP	O	_	contrast-01	_	0	IGNORE	true
16	objective	_	objective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	facts	_	fact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	morality,	_	morality,	NNP	O	_	thing	_	0	IGNORE	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	Chapter_1)	_name_	1)	CD	O	_	and	_	0	IGNORE	true
24	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
27	why	_	why	WRB	O	(d<root> / --LEX--)	cause-01	()	26	APP_s	true
28	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
29	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	26	APP_o	true
30	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	suppose	_	suppose	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	APP_s	true
32	that	_	that	IN	O	_	thing	_	0	IGNORE	true
33	moral	_	moral	JJ	O	_	$LEMMA$-02	_	0	IGNORE	true
34	facts	_	fact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
35	do	_	do	VBP	O	_	person	_	0	IGNORE	true
36	exist	_	exist	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@moral-02, 9@@p@@realist, 1@@s@@have-condition-91, 36@@s@@exist-01, 21@@s@@discuss-01, 3@@d@@fact, 12@@s@@believe-01, 5@@p@@artificial, 31@@s@@suppose-01, 28@@d@@we, 6@@o@@and, 29@@s@@recommend-01, 16@@p@@objective, 26@@s@@say-01, 34@@d@@fact, 4@@d@@person, 30@@p@@still, 27@@d@@cause-01, 24@@s@@need-01, 2@@s@@moral-02, 17@@d@@fact]
sentence=1	With	with	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	that,	_	that,	NNP	O	_	cause-01	_	0	IGNORE	true
3	it	_	it	PRP	O	_	i	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
5	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
6	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	honor	_	honor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	leader	_	leader	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	9	APP_s	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	7	MOD_o	true
14	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	believed	_	believe	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	power	_	power	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	innovation	_	innovation	NN	O	(d<root> / --LEX--)	innovate-01	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
23	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	cooperation	_	cooperation	NN	O	(d<root> / --LEX--)	cooperate-01	()	22	APP_op2	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	achieve	_	achieve	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	remarkable:	_	remarkable:	NNP	O	_	cause-01	_	0	IGNORE	true
29	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
30	President,	president,	president,	NN	O	_	mean-01	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	President	president	President	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	37	MOD_s	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	United	_name_	United	NNP	O	_	_NAME_	_	0	IGNORE	true
36	States,	states,	States,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
37	Joe_Biden	_name_	Biden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@h@@have-org-role-91, 20@@n@@_NAME_, 6@@p@@great, 11@@e2@@lead-02, 7@@s@@honor-01, 22@@a@@and, 37@@n@@_NAME_, 23@@p@@international, 20@@c@@country, 21@@d@@innovate-01, 11@@p2@@person, 29@@d@@our, 32@@g@@president, 14@@n@@always, 24@@d@@cooperate-01, 18@@s@@power-01, 15@@s@@believe-01, 13@@s@@person, 9@@s@@introduce-01, 26@@i@@achieve-01, 37@@p@@person]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	emphasizes	_	emphasize	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op1	true
3	consumerism,	_	consumerism,	NNP	O	_	mean-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
5	belief	_	belief	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	believe-01	(s())	2	APP_o	true
6	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
7	success	_	success	NN	O	(d<root> / --LEX--)	succeed-01	()	9	APP_s	true
8	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	goes	_	go	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-10	(s(), o())	5	APP_s	true
10	to	_	to	IN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_o	true
12	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
13	merit	_	merit	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	13	MOD_o	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	abilities,	_	abilities,	CD	O	_	$LEMMA$	_	0	IGNORE	true
19	dedication	_	dedication	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
21	qualifications,	_	qualifications,	NNP	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
23	reinforces,	_	reinforces,	NNP	O	_	mean-01	_	0	IGNORE	true
24	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	10	MOD_s	true
25	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	changes,	_	changes,	NNS	O	_	-	_	0	IGNORE	true
27	existing	_	exist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
28	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
29	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	28	MOD_s	true
30	to	_	to	IN	O	_	thing	_	0	IGNORE	true
31	gender,	_	gender,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
32	ethnicity	_	ethnicity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op1	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_o	true
34	nationality	_	nationality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
35	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[22@@a@@and, 9@@s@@go-10, 7@@d@@succeed-01, 13@@s@@merit-01, 2@@s@@emphasize-01, 11@@d@@person, 5@@s@@believe-01, 20@@a@@and, 34@@d@@nationality, 28@@d@@idea, 29@@s@@relate-01, 27@@s@@exist-01, 1@@d@@It, 19@@d@@dedication, 32@@d@@ethnicity, 15@@s@@cause-01, 24@@s@@instead-of-91, 33@@a@@and, 8@@n@@always, 10@@d@@to]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	anyways	_	anyways	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	we're	_	we're	VBP	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	1	APP_s	true
4	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	down	_	down	RB	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
6	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	river	_	river	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
9	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	that's	_	that's	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	like	_	like	UH	O	(s<root> / --LEX--  :ARG2 (g<s>))	resemble-01	(s())	8	MOD_s	true
12	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
14	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
15	Columbia_Falls	_name_	Falls	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
17	we're	_	we're	NN	O	_	i	_	0	IGNORE	true
18	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
19	to	_	to	TO	O	_	and	_	0	IGNORE	true
20	eat	_	eat	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
21	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	ice	_	ice	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	cream	_	cream	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_op2	true
25	enjoy	_	enjoy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op2	true
26	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	evening	_	evening	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@p@@ice, 5@@b@@down, 29@@b@@here, 27@@p@@last, 28@@d@@evening, 13@@b@@here, 2@@p@@anyways, 24@@a@@and, 20@@s@@eat-01, 25@@s@@enjoy-01, 15@@c@@city, 7@@p@@this, 9@@b@@here, 15@@n@@_NAME_, 12@@p@@right, 11@@s@@resemble-01, 3@@d@@we're-located-at-91, 16@@a@@and, 8@@d@@river, 4@@p@@just, 1@@s@@contrast-01, 23@@d@@cream]
sentence=1	A	a	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	year	_	year	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
3	later,	_	later,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
4	the_National_Library_of_the_Netherlands	_name_	Netherlands	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	7	APP_op1	true
5	(Koninklijke	(koninklijke	(Koninklijke	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
6	Bibliotheek),	_name_	Bibliotheek),	NNP	O	_	_NAME_	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
8	the_University_Library_of_the_Vrije_Universiteit_Amsterdam	_name_	Amsterdam	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_op2	true
9	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	concluded	_	conclude	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
12	librarians	_	librarian	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
13	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	institutes	_	institute	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	true
18	to	_	to	TO	O	_	person	_	0	IGNORE	true
19	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	10	MOD_s	true
20	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	DH	_name_	DH	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	needed	_	need	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_o	true
24	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	training	_	training	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	train-01	(s())	23	APP_o	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	adequately	_	adequately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	adequate	(mod())	28	MOD_mod	true
28	support	_	support	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	25	MOD_mod	true
29	researchers	_	researcher	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	research-01	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_s	true
31	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	30	APP_op2	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	field	_	field	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p@@again, 33@@p@@this, 2@@t@@temporal-quantity, 2@@y@@year, 1@@explicitanon0@@1, 30@@a@@and, 23@@c@@need-01, 15@@b@@institute, 12@@d@@librarian, 4@@o2@@organization, 29@@e2@@research-01, 22@@d@@DH, 5@@p@@_NAME_, 29@@p2@@person, 10@@s@@conclude-01, 27@@t@@adequate, 7@@a@@and, 8@@n@@_NAME_, 31@@e2@@study-01, 20@@s@@involve-01, 24@@p@@more, 34@@b@@field, 4@@n@@_NAME_, 17@@c@@want-01, 31@@p2@@person, 25@@s@@train-01, 8@@g@@government-organization, 19@@s@@get-05, 28@@i@@support-01]
sentence=1	In	in	in	IN	O	_	regardless-91	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	case,	_	case,	NN	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
5	will	_	will	MD	O	_	have-concession-91	_	0	IGNORE	true
6	(in	_	(in	NFP	O	_	-	_	0	IGNORE	true
7	our	_	our	PRP$	O	_	cause-01	_	0	IGNORE	true
8	imaginations)	_	imaginations)	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	9	MOD_s	true
9	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	rubber	_	rubber	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	sheet	_	sheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	stretch	_	stretch	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	MOD_s	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	MOD_op1	true
17	warp	_	warp	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	MOD_s	true
18	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
19	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	put	_	put	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	16	APP_op2	true
21	objects	_	object	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
22	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@put-01, 9@@s@@use-01, 11@@g@@rubber, 16@@a@@or, 2@@p@@this, 15@@s@@stretch-01, 21@@d@@object, 12@@d@@sheet, 14@@s@@possible-01, 8@@s@@mean-01, 4@@d@@we, 17@@s@@warp-01]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	hand,	_	hand,	NFP	O	_	and	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	adopts	_	adopt	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	policies	_	policy	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
10	promoting	_	promote	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_s	true
11	inclusive	_	inclusive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
12	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	13	MOD_mod	true
13	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	will	_	will	MD	O	_	thing	_	0	IGNORE	true
15	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
16	pluralist	_	pluralist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	centralized	_	centralized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	MOD_s	true
19	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@adopt-01, 15@@s@@develop-02, 13@@d@@institution, 16@@p@@pluralist, 9@@d@@policy-01, 18@@s@@centralized, 12@@p@@politics, 6@@d@@society, 19@@d@@institution, 10@@s@@promote-02, 11@@s@@inclusive-02]
sentence=1	wikiHow	_name_	wikiHow	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	own-01	(s())	5	MOD_s	true
4	wiki-based	_	wiki-based	JJ	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	site	_	site	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	aims	_	aim	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	to	_	to	IN	O	_	person	_	0	IGNORE	true
9	"build	_	"build	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	world's	_	world'	NNS	O	(d<root> / --LEX--)	_NAME_	()	9	APP_o	true
12	largest,	_	largest,	NNP	O	_	and	_	0	IGNORE	true
13	highest	_	high	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	high-02	(s())	14	MOD_s	true
14	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	how-to	_	how-to	VBD	O	(d<root> / --LEX--)	slash	()	9	APP_s	true
16	manual.	_	manual.	NN	O	_	_NAME_	_	0	IGNORE	true
17	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[13@@b2@@high-02, 1@@p@@person, 3@@s@@own-01, 5@@r@@site, 4@@c@@city, 7@@s@@aim-01, 14@@p@@quality, 15@@d@@slash, 11@@d@@_NAME_, 4@@n@@_NAME_, 9@@s@@"build-01, 1@@n@@_NAME_, 13@@m@@most]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	individual	_	individual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	had	_	have	VBD	O	_	person	_	0	IGNORE	true
4	entered	_	enter	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	two_days_earlier	_name_	earlier	RBR	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	bad-05	(mod())	4	MOD_mod	true
8	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
9	spending	_	spend	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_op1	true
10	some_weeks	_name_	week	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	Iran,	_name_	Iran,	NNP	O	_	_NAME_	_	0	IGNORE	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	currently	_	currently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	current	(mod())	16	MOD_mod	true
16	experiencing	_	experience	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	sizable	_	sizable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	outbreak	_	outbreak	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_o	true
20	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	disease	_	disease	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[10@@d@@week, 22@@d@@disease, 6@@d@@country, 7@@m@@most, 2@@d@@individual, 8@@w@@after, 16@@s@@experience-01, 15@@n@@current, 18@@p@@sizable, 4@@s@@enter-01, 9@@s@@spend-02, 7@@t@@bad-05, 19@@s@@outbreak]
sentence=1	40.	_	40.	LS	O	_	multi-sentence	_	0	IGNORE	true
2	“Beauty	“beauty	“Beauty	NFP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	quality	_	quality	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	18	APP_op1	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	things	_	thing	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	themselves:	_	themselves:	ADD	O	_	and	_	0	IGNORE	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	exists	_	exist	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
11	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	mere	(mod())	10	MOD_mod	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
14	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	contemplates	_	contemplate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	them;	_name_	them;	NNP	O	_	multi-sentence	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
19	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	perceives	_	perceive	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op3	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	24	MOD_s	true
24	beauty	_	beauty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	…	_	…	:	O	_	multi-sentence	_	0	IGNORE	true
26	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	individual	_	individual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
28	ought	_	ought	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	42	APP_s	true
29	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
30	acquiesce	_	acquiesce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_s	true
31	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
32	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
33	own	_	own	JJ	O	_	person	_	0	IGNORE	true
34	sentiment,	_	sentiment,	NNS	O	_	and	_	0	IGNORE	true
35	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	36	MOD_mod	true
36	pretending	_	pretend	VBG	O	(r<root> / --LEX--  :ARG1 (p<o>)  :ARG0 (c<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), o(s()))	30	MOD_mod	true
37	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
38	regulate	_	regulate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_o	true
39	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	18	MOD_mod	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
42	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	18	MOD_o	true

nodealignment=[30@@s@@acquiesce-01, 16@@s@@contemplate-01, 26@@p@@every, 19@@p@@each, 24@@d@@beauty, 35@@explicitanon0@@-, 10@@s@@exist-01, 18@@a@@and, 11@@p@@mere, 42@@s@@multi-sentence, 20@@d@@mind, 38@@s@@regulate-01, 7@@a@@thing, 4@@explicitanon0@@-, 39@@p@@that, 23@@s@@differ-02, 36@@r@@pretend-01, 27@@d@@individual, 21@@s@@perceive-01, 2@@d@@“Beauty, 14@@d@@mind, 28@@s@@obligate-01, 41@@p@@other, 5@@r@@quality]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	behind	_	behind	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
6	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	scenes	_	scene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
10	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	13	MOD_mod	true
11	will	_	will	MD	O	_	-	_	0	IGNORE	true
12	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	13	MOD_mod	true
13	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
14	again	_	again	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	a	_	a	DT	O	_	-	_	0	IGNORE	true
17	video	_	video	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	down	_	down	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	23	APP_s	true
23	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
24	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	filming	_	film	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
28	gear	_	gear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
31	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	32	MOD_s	true
32	fit	_	fit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
33	anywhere	_	anywhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
34	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
35	in	_	in	IN	O	_	or	_	0	IGNORE	true
36	the	_	the	DT	O	_	instead-of-91	_	0	IGNORE	true
37	room:	_	room:	NNS	O	_	mean-01	_	0	IGNORE	true
38	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	39	MOD_mod	true
39	sets	_	set	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	tripods,	_	tripods,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
42	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
43	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	23	MOD_s	true
45	a	_	a	DT	O	_	1	_	0	IGNORE	true
46	c-stand	_	c-stand	NN	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	44	APP_o	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@p@@probable, 9@@d@@you, 32@@s@@fit-01, 13@@s@@see-01, 33@@d@@anywhere, 39@@p@@set, 2@@p@@then, 43@@p@@also, 17@@b@@video, 46@@n@@_NAME_, 31@@s@@real-04, 4@@s@@little, 12@@n@@ever, 7@@d@@scene, 14@@explicitanon0@@-, 34@@p@@else, 5@@b@@behind, 1@@a@@and, 28@@d@@gear, 20@@b@@down, 44@@s@@have-03, 38@@explicitanon0@@2, 46@@t@@thing, 27@@s@@film-01, 23@@s@@keep-01, 21@@b@@here, 22@@d@@i, 30@@explicitanon0@@-, 24@@p@@all]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	hope	_	hope	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	that	_	that	IN	O	_	thing	_	0	IGNORE	true
5	over	_	over	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
6	time,	_	time,	NNP	O	_	-	_	0	IGNORE	true
7	internet	_	internet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	users	_	user	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	use-01	(s())	10	APP_s	true
9	will	_	will	MD	O	_	person	_	0	IGNORE	true
10	demand	_	demand	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
11	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	site	_	site	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	APP_o2	true
15	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
16	they	_	they	PRP	O	_	person	_	0	IGNORE	true
17	invest	_	invest	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	14	APP_mod	true
18	their	_	they	PRP$	O	_	monetary-quantity	_	0	IGNORE	true
19	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	creates	_	create	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
25	value	_	value	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
26	for	_	for	IN	O	_	person	_	0	IGNORE	true
27	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[11@@d@@this, 13@@p@@any, 2@@s@@hope-01, 17@@s@@invest-01, 27@@d@@other, 24@@s@@create-01, 19@@d@@time, 8@@w@@use-01, 14@@b@@site, 25@@s@@value-01, 5@@p@@over, 7@@d@@internet, 8@@p@@person, 10@@b@@demand-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	1	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	problem,	_	problem,	NNP	O	_	thing	_	0	IGNORE	true
6	exactly,	_	exactly,	NNP	O	_	thing	_	0	IGNORE	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_o	true
9	beliefs	_	belief	NNS	O	(d<root> / --LEX--)	believe-01	()	8	APP_s	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
12	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	coincidentally	_	coincidentally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	ironic	(s())	14	MOD_s	true
14	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
15	?	_	?	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@s@@true-01, 2@@d@@amr-unknown, 13@@s@@ironic, 9@@d@@believe-01, 8@@s@@have-03, 12@@p@@only, 1@@s@@contrast-01]
sentence=1	Monks	monks	monk	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
2	will	_	will	MD	O	_	person	_	0	IGNORE	true
3	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	be	_	be	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	5	MOD_mod	true
5	aided	_	aid	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	by	_	by	IN	O	_	and	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	layman	_	layman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
10	will	_	will	MD	O	_	person	_	0	IGNORE	true
11	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	women	_	woman	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
15	merit-makers	_	merit-maker	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	make-01	(s())	4	MOD_s	true
16	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
18	behalf	_	behalf	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[15@@s@@make-01, 8@@d@@layman, 14@@p@@woman, 12@@d@@thing, 5@@s@@aid-01, 3@@o@@sometimes, 1@@d@@monk, 11@@s@@accept-01, 4@@p@@person]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	interested	_	interested	JJ	O	(m<root> / --LEX--  :ARG1 (i<s>)  :ARG2 (y<o>)  :condition-of (k<mod>))	interest-01	(mod(), s(), o())	17	MOD_mod	true
5	ornithology	_	ornithology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	shallow	_	shallow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	9	MOD_s	true
9	waters	_	water	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_dom	true
10	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
11	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
12	islands	_	island	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_op1	true
14	islets	_	islet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	treat	_	treat	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	22	APP_op2	true
18	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
19	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	21	MOD_mod	true
20	of	_	of	IN	O	_	multiple	_	0	IGNORE	true
21	birds	_	bird	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_o	true
23	colonies,	_	colonies,	NNP	O	_	and	_	0	IGNORE	true
24	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
25	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	24	MOD_s	true
26	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
27	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	notable	_	notable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	22	MOD_s	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
31	Arctic	_name_	Arctic	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	32	MOD_mod	true
32	Tern,	tern,	Tern,	NNP	O	(d<root> / --LEX--)	include-91	()	0	ROOT	true
33	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
34	migrates	_	migrate	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
35	to	_	to	IN	O	_	and	_	0	IGNORE	true
36	Antarctica	_name_	Antarctica	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	34	APP_o	true
37	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	34	MOD_mod	true
38	back	_	back	RB	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op1	true
39	(nearly	_	(nearly	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	decade	(mod())	42	MOD_mod	true
40	40,000	_	40,000	CD	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	37	APP_op2	true
41	kilometers)	_	kilometers)	NN	O	_	1	_	0	IGNORE	true
42	every	_	every	DT	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	$LEMMA$	(mod(), s())	34	MOD_mod	true
43	year	_	year	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	42	APP_s	true
44	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[19@@m@@multiple, 14@@d@@islet, 9@@d@@water, 27@@s@@more, 12@@d@@island, 25@@s@@include-91, 7@@explicitanon0@@many, 36@@n@@_NAME_, 4@@m@@interest-01, 40@@m2@@monetary-quantity, 37@@s@@and, 34@@g@@migrate-01, 2@@d@@you, 42@@r@@every, 24@@explicitanon0@@one, 38@@d@@back, 28@@s@@notable, 43@@m@@year, 31@@b@@_NAME_, 13@@a@@and, 32@@d@@include-91, 36@@c@@continent, 39@@p@@decade, 5@@d@@ornithology, 19@@explicitanon0@@1000, 8@@s@@shallow-04, 10@@b@@around, 17@@r@@treat, 22@@a@@and, 21@@d@@bird, 43@@t@@temporal-quantity, 40@@explicitanon0@@_NUMBER_]
sentence=1	Neiafu	_name_	Neiafu	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	official	_	official	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	port	_	port	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	entry	_	entry	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	enter-01	(s(), o())	5	MOD_o	true
8	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
9	yachts	_	yacht	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
11	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	Vava'u,	vava'u,	Vava'u,	NNP	O	_	_NAME_	_	0	IGNORE	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	attracts	_	attract	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	over	_	over	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
16	500	_	500	CD	O	(d<root> / --LEX--)	_NUMBER_	()	15	APP_op1	true
17	yachts	_	yacht	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	every	_	every	DT	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	rate-entity-91	(mod(), s())	14	MOD_mod	true
19	winter	_	winter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	sailing	_	sailing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	season	_	season	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
22	between_June_and_October	_name_	October	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@s@@over, 5@@r@@port, 22@@explicitanon0@@_NAME_, 16@@d@@_NUMBER_, 7@@s@@enter-01, 9@@d@@yacht, 22@@d@@date-entity, 19@@p@@winter, 21@@n@@season, 4@@p@@official, 17@@d@@yacht, 1@@p@@person, 1@@n@@_NAME_, 18@@r@@rate-entity-91, 20@@p@@sailing, 14@@s@@attract-01, 10@@s@@come-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
2	observe	_	observe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_op1	true
3	that	_	that	IN	O	_	thing	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	item	_	item	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	fulfils	_	fulfil	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	crucial	_	crucial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	need	_	need	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
10	shared	_	share	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
11	by	_	by	IN	O	_	thing	_	0	IGNORE	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	languages	_	language	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	–	_	–	.	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	efficient	_	efficient	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	MOD_s	true
17	signalling	_	signalling	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	hearing	_	hearing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	19	MOD_mod	true
23	understanding	_	understanding	NN	O	(d<root> / --LEX--)	understand-01	()	22	APP_op2	true
24	–	_	–	:	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
26	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	propose	_	propose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_op2	true
28	that	_	that	IN	O	_	thing	_	0	IGNORE	true
29	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
30	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
31	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
32	constrained	_	constrain	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_o	true
33	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
34	selective	_	selective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	select-01	(mod())	35	MOD_mod	true
35	pressures	_	pressure	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_s	true
36	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
37	a	_	a	DT	O	_	1	_	0	IGNORE	true
38	conversational	_	conversational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	environment	_	environment	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
40	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
41	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
42	essentially	_	essentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	essential	(mod())	44	MOD_mod	true
43	the	_	the	DT	O	_	thing	_	0	IGNORE	true
44	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
45	in	_	in	IN	O	_	i	_	0	IGNORE	true
46	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
47	languages	_	language	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
48	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[47@@b@@language, 32@@s@@constrain-01, 30@@d@@form, 27@@s@@propose-01, 25@@a@@and, 19@@d@@problem, 4@@p@@this, 17@@s@@signalling-01, 35@@d@@pressure-01, 1@@d@@We, 39@@b@@environment, 22@@a@@and, 12@@p@@all, 38@@p@@conversational, 10@@s@@share-01, 21@@d@@hearing-01, 9@@s@@need-01, 16@@s@@efficient-04, 13@@d@@language, 8@@p@@crucial, 6@@s@@fulfil-01, 5@@d@@item, 2@@s@@observe-01, 42@@p@@essential, 34@@p@@select-01, 46@@p@@all, 23@@d@@understand-01, 44@@s@@same-01]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	3	MOD_mod	true
3	campaign	_	campaign	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
4	raised	_	raise	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	funds	_	fund	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	To_Write_Love_On_Her_Arms,	_name_	Arms,	NNP	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	supports	_	support	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_o	true
11	struggling	_	struggle	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	depression,	_	depression,	NNP	O	_	and	_	0	IGNORE	true
14	addiction,	_	addiction,	NFP	O	_	and	_	0	IGNORE	true
15	self-injury,	_	self-injury,	NNP	O	_	and	_	0	IGNORE	true
16	and	_	and	CC	O	_	$LEMMA$	_	11	IGNORE	true
17	suicide	_	suicide	NN	O	_	$LEMMA$-01	_	16	IGNORE	true
18	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@1, 11@@s@@struggle-01, 3@@d@@campaign-01, 9@@s@@support-01, 5@@d@@fund-01, 10@@d@@person, 4@@s@@raise-01, 2@@o@@ordinal-entity]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	3	MOD_mod	true
3	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	0	ROOT	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	mayor	_	mayor	NN	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$FORM$	(s())	8	MOD_s	true
8	Luca_Pastorino	_name_	Pastorino	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
9	that	_	that	IN	O	_	name	_	0	IGNORE	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	last_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
13	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	refusals	_	refusal	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	requests	_	request	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
18	for	_	for	IN	O	_	thing	_	0	IGNORE	true
19	payment	_	payment	NN	O	(d<root> / --LEX--)	pay-01	()	17	APP_s	true
20	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_o	true
21	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	nursery	_	nursery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
27	retirement	_	retirement	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	retire-01	(mod())	28	MOD_mod	true
28	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@p@@retire-01, 3@@s@@case-04, 7@@h2@@have-org-role-91, 24@@p@@nursery, 7@@m@@mayor, 11@@n@@_NAME_, 25@@d@@school, 14@@s@@refusal-01, 26@@a@@and, 20@@s@@cause-01, 2@@o@@ordinal-entity, 8@@n@@_NAME_, 19@@d@@pay-01, 2@@explicitanon0@@1, 13@@explicitanon0@@several, 8@@p@@person, 12@@s@@receive-01, 17@@s@@request-01, 28@@d@@home, 23@@p@@religious]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	beginning	_	beginning	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	begin-01	(s(), o())	0	ROOT	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	social	_	social	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	revolution,	_	revolution,	NNS	O	_	oppose-01	_	0	IGNORE	true
11	which	_	which	WDT	O	_	name	_	0	IGNORE	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	democracy	_	democracy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	Clisthenes	_name_	Clisthenes	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
20	(508	_	(508	ADD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	17	MOD_mod	true
21	BC)	_name_	BC)	NNP	O	_	name	_	0	IGNORE	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@d@@this, 5@@s@@begin-01, 14@@s@@result-01, 9@@d@@social, 4@@p@@great, 19@@n@@_NAME_, 17@@d@@democracy, 20@@explicitanon0@@_NUMBER_, 8@@s@@new-01]
sentence=1	Also,	_name_	Also,	NNP	O	_	name	_	0	IGNORE	true
2	an	_	an	DT	O	_	have-org-role-91	_	0	IGNORE	true
3	independent	_	independent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
4	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
5	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	claim	_	claim	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	belong	_	belong	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	either	_	either	CC	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	camp,	_	camp,	NNP	O	_	person	_	0	IGNORE	true
13	Edward_Yiu	_name_	Yiu	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Architectural,	_name_	architectural,	CD	O	_	$LEMMA$	_	0	IGNORE	true
17	Surveying,	surveying,	surveying,	CD	O	_	have-org-role-91	_	0	IGNORE	true
18	Planning	planning	planning	NN	O	(d<root> / --LEX--)	plan-01	()	19	APP_op2	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	25	MOD_op1	true
20	Landscape	_name_	Landscape	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op3	true
21	constituency,	_	constituency,	NNS	O	_	cause-01	_	0	IGNORE	true
22	defeated	_	defeat	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_op1	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	opponents	_	opponent	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	oppose-01	()	22	APP_o	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
26	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	25	MOD_s	true
27	elected	_	elect	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op2	true
28	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[25@@a@@and, 18@@d@@plan-01, 6@@explicitanon0@@-, 7@@s@@claim-01, 11@@d@@either, 26@@s@@person, 24@@e2@@oppose-01, 19@@a@@and, 13@@n@@_NAME_, 24@@p2@@person, 3@@d@@independent, 27@@d@@elect-01, 9@@s@@belong-01, 20@@d@@Landscape, 22@@s@@defeat-01, 13@@p@@person]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_s	true
3	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
4	searching	_	search	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
5	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	virtual	_	virtual	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	microscope,	_	microscope,	NNS	O	_	and	_	0	IGNORE	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
10	will	_	will	MD	O	_	and	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
14	for	_	for	IN	O	_	contrast-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
16	particles,	_	particles,	NNP	O	_	contrast-01	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	12	MOD_s	true
18	for	_	for	IN	O	_	contrast-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
20	tracks	_	track	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
23	particles	_	particle	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	make,	_	make,	NNP	O	_	and	_	0	IGNORE	true
25	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
26	are	_	be	VBP	O	_	1	_	0	IGNORE	true
27	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	larger	_	large	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	large	(mod())	20	MOD_mod	true
29	—	_	—	HYPH	O	_	more	_	0	IGNORE	true
30	several	_	several	JJ	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	33	MOD_mod	true
31	microns	_	micron	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
32	in	_	in	IN	O	_	between	_	0	IGNORE	true
33	diameter	_	diameter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@virtual, 4@@v@@search-01, 20@@d@@track, 12@@s@@look-01, 27@@s@@much, 13@@explicitanon0@@-, 17@@s@@contrast-01, 9@@d@@they, 30@@s@@several, 28@@p@@large, 2@@d@@person, 5@@l@@use-01, 31@@d@@micron, 33@@p@@diameter]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	brunt	_	brunt	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_o	true
5	of	_	of	IN	O	_	more	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	pixies’	_	pixies’	JJ	O	_	_NAME_	_	0	IGNORE	true
8	odd	_	odd	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_s	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	humor	_	humor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
14	than	_	than	IN	O	_	cause-01	_	0	IGNORE	true
15	I	i	I	PRP	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$REPL$	(mod())	2	MOD_mod	true
16	did,	_	did,	VBP	O	_	$LEMMA$	_	0	IGNORE	true
17	because	_	because	IN	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	cause-01	(s(s_UNIFY_o()))	0	ROOT	true
18	she’s	_	she’s	NNP	O	_	person	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	one	_	one	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	who	_	who	WP	O	_	person	_	0	IGNORE	true
22	likes	_	like	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	APP_s	true
23	to	_	to	TO	O	_	person	_	0	IGNORE	true
24	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
25	baths	_	bath	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$e-01	(s())	22	APP_o	true
26	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@s@@more, 11@@d@@humor, 25@@s@@bathe-01, 8@@p@@odd, 12@@s@@much, 17@@c@@cause-01, 15@@p@@i, 4@@s@@brunt, 1@@d@@She, 22@@c@@like-01, 2@@s@@get-01, 9@@s@@sense-01]
sentence=1	Instead	instead	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	9	MOD_s	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	writing	_	write	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
4	"Silver	"silver	"silver	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	Service	service	Service	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	-	_	-	HYPH	O	_	and	_	0	IGNORE	true
7	Fragile"	fragile"	Fragile"	NNP	O	_	and	_	0	IGNORE	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
10	write	_	write	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_s	true
11	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	that	_	that	WDT	O	_	and	_	0	IGNORE	true
13	makes	_	make	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	11	MOD_s	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	sound	_	sound	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
16	less	_	less	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	theft	_	theft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	inviting	_	invite	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	9	MOD_s	true
20	showing	_	show	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	fragile	_	fragile	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	nature	_	nature	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	20	APP_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	contents	_	content	NNS	O	(d<root> / --LEX--)	contain-01	()	23	APP_poss	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@write-01, 23@@m@@nature, 15@@s@@sound-01, 5@@d@@Service, 4@@p@@"silver, 10@@s@@write-01, 8@@d@@you, 17@@d@@theft, 1@@s@@instead-of-91, 26@@d@@contain-01, 19@@s@@contrast-01, 16@@s@@less, 13@@c@@make-02, 22@@p@@fragile, 11@@d@@something, 20@@s@@show-01, 18@@s@@invite-01, 9@@s@@recommend-01]
sentence=1	By	by	by	IN	O	_	cause-01	_	0	IGNORE	true
2	using	_	use	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
3	Open_Educational_Resources,_OER,_School_of_Open	_name_	Open	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	opening	_	opening	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-03	(s())	0	ROOT	true
6	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
7	to	_	to	IN	O	_	and	_	0	IGNORE	true
8	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	5	APP_s	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	would	_	would	MD	O	_	name	_	0	IGNORE	true
12	have	_	have	VB	O	_	person	_	0	IGNORE	true
13	otherwise	_	otherwise	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	missed	_	miss	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_s	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	accessing	_	access	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	education,	_	education,	NNS	O	_	and	_	0	IGNORE	true
20	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
23	marginalized	_	marginalize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	areas	_	area	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
25	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
26	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	29	MOD_s	true
27	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
28	adequately	_	adequately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	adequate	(mod())	29	MOD_mod	true
29	access	_	access	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
30	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	education	_	education	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[16@@d@@opportunity, 5@@s@@opening-up-03, 27@@explicitanon0@@-, 3@@n@@_NAME_, 31@@d@@education, 13@@p@@otherwise, 14@@s@@miss-02, 24@@b@@area, 29@@s@@access-01, 3@@c@@company, 28@@t@@adequate, 8@@explicitanon0@@many, 18@@s@@access-01, 9@@p2@@person, 2@@b@@use-01, 23@@s@@marginalize-01, 26@@s@@possible-01, 9@@e2@@study-01, 30@@p@@quality, 20@@p@@especially]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	continue	_	continue	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
4	depend	_	depend	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	virtuous	_	virtuous	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	cycle:	_	cycle:	NN	O	_	mean-01	_	0	IGNORE	true
10	More	more	More	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	readers,	_	readers,	NNS	O	_	mean-01	_	0	IGNORE	true
12	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
13	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	editors,	_	editors,	NNS	O	_	and	_	0	IGNORE	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	creates	_	create	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	better	_	well	JJR	O	(c<root> / --LEX--  :degree (m / more))	good-02	()	16	APP_o	true
18	instructions,	_	instructions,	NNS	O	_	thing	_	0	IGNORE	true
19	leading	_	lead	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	16	MOD_s	true
20	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	to	_	to	IN	O	_	-	_	0	IGNORE	true
22	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	readers	_	reader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	read-01	()	19	APP_o	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@c@@continue-01, 13@@d@@more, 1@@d@@We, 8@@d@@virtuous, 22@@explicitanon0@@more, 17@@c@@good-02, 23@@p2@@person, 17@@m@@more, 23@@e2@@read-01, 20@@p@@again, 6@@p@@this, 16@@s@@create-01, 10@@explicitanon0@@More, 4@@s@@depend-01, 19@@t@@lead-03, 12@@s@@mean-01, 7@@s@@same-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	government-organization	_	0	IGNORE	true
3	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	4	APP_s	true
4	continues	_	continue	VBZ	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	28	MOD_mod	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	modalities	_	modality	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	ensuring	_	ensure	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
11	universal	_	universal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	access	_	access	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
13	to	_	to	IN	O	_	and	_	0	IGNORE	true
14	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	12	APP_s	true
15	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
16	increasing	_	increase	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
17	the	_	the	DT	O	_	and	_	0	IGNORE	true
18	internet	_	internet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	penetration	_	penetration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	implement-01	(s())	16	APP_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	parts	_	part	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	country,	_	country,	NNS	O	_	and	_	0	IGNORE	true
26	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
27	are	_	be	VBP	O	_	person	_	0	IGNORE	true
28	pleased	_	pleased	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
29	to	_	to	TO	O	_	thing	_	0	IGNORE	true
30	witness	_	witness	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_s	true
31	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	mode	_	mode	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
33	of	_	of	IN	O	_	thing	_	0	IGNORE	true
34	study	_	study	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	32	MOD_mod	true
35	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
36	will	_	will	MD	O	_	thing	_	0	IGNORE	true
37	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	38	MOD_mod	true
38	translate	_	translate	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	32	MOD_s	true
39	to	_	to	IN	O	_	-	_	0	IGNORE	true
40	affordable	_	affordable	JJ	O	(p<root> / --LEX--  :ARG1 (g<s>)  :ARG1-of (p2 / possible-01))	afford-01	(s())	41	MOD_s	true
41	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	38	APP_o	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@c@@pleased-01, 15@@s@@and, 12@@s@@access-01, 30@@s@@witness-01, 22@@b@@part, 10@@s@@ensure-01, 21@@p@@all, 16@@s@@increase-01, 40@@p@@afford-01, 4@@d@@continue-01, 32@@d@@mode, 34@@p@@study-01, 19@@s@@implement-01, 41@@d@@educate-01, 37@@p@@definite, 8@@d@@modality, 40@@p2@@possible-01, 11@@p@@universal, 3@@g2@@govern-01, 31@@p@@this, 26@@d@@we, 3@@g@@government-organization, 38@@s@@translate-01, 18@@d@@internet, 6@@s@@work-01, 14@@d@@educate-01]
sentence=1	An	an	an	DT	O	_	1	_	0	IGNORE	true
2	atom	_	atom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	-	_	0	IGNORE	true
5	smallest	_	small	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	small	(mod())	6	MOD_mod	true
6	unit	_	unit	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	an	_	an	DT	O	_	thing	_	0	IGNORE	true
9	element	_	element	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
10	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
12	participate	_	participate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	chemical	_	chemical	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	change	_	change	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@d@@element, 12@@s@@participate-01, 6@@c@@unit, 16@@s@@change-01, 15@@d@@chemical, 2@@d@@atom, 5@@t@@small, 11@@s@@possible-01, 5@@m@@most]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	stranger	_	stranger	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
5	to	_	to	IN	O	_	-	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	taunts	_	taunt	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	10	MOD_mod	true
9	insults,	_	insults,	NNP	O	_	shit	_	0	IGNORE	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	4	APP_o	true
11	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
12	foot	_	foot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	appears	_	appear	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	from	_	from	IN	O	_	i	_	0	IGNORE	true
16	nowhere	_	nowhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	to	_	to	TO	O	_	-	_	0	IGNORE	true
18	trip	_	trip	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	12	MOD_s	true
19	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
21	en	_	en	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	route	_	route	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
23	from	_	from	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
24	A	a	a	NN	O	(n3<root> / --LEX--  :name-of (l3 / location  :source-of (g<mod>)))	_N$FORM$ME_	(mod())	22	MOD_mod	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	B	b	b	NN	O	(n2<root> / --LEX--  :name-of (v2 / variable  :mod-of (t2<mod>)))	$FORM$	(mod())	23	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@foot, 22@@p@@route, 23@@p@@from, 24@@l3@@location, 19@@d@@you, 16@@d@@nowhere, 10@@a@@or, 14@@s@@appear-01, 3@@explicitanon0@@-, 7@@d@@taunt-01, 4@@s@@stranger, 8@@a@@and, 26@@n2@@B, 18@@s@@trip-out-03, 24@@n3@@_NAME_, 26@@v2@@variable, 1@@d@@i]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	have-purpose-91	_	0	IGNORE	true
3	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	establishes,	_	establishes,	NNP	O	_	thing	_	0	IGNORE	true
6	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	15	MOD_mod	true
8	processes,	_	processes,	.	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	3	MOD_s	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	13	MOD_mod	true
13	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	true
14	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
15	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	3	MOD_s	true
16	adopted	_	adopt	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@thing, 8@@s@@mean-01, 3@@d@@society, 12@@p@@economy, 10@@p@@type, 16@@s@@adopt-01, 7@@p@@politics, 13@@d@@institution]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	$LEMMA$n	_	0	IGNORE	true
5	event	_	event	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
9	rite	_	rite	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_o	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	passage	_	passage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	enter-01	(s())	9	APP_s	true
12	into	_	into	IN	O	_	i	_	0	IGNORE	true
13	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
14	group	_	group	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_s	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	misfits	_	misfit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	MOD_op1	true
18	outcasts:	_	outcasts:	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	making	_	make	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
20	a	_	a	DT	O	_	person	_	0	IGNORE	true
21	mould	_	mould	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	APP_s	true
22	of	_	of	IN	O	_	product	_	0	IGNORE	true
23	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
24	teeth	_	tooth	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	21	APP_s	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@our, 24@@h@@tooth, 17@@a@@and, 5@@d@@event, 19@@b@@make-01, 7@@s@@become-01, 14@@m@@group, 1@@n@@then, 16@@d@@misfit, 23@@d@@your, 9@@s@@rite, 11@@s@@enter-01, 21@@s@@mould]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	islands	_	island	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	volcanic	_	volcanic	VBN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	origin	_	origin	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$ate-01	(s(), o())	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	APP_op2	true
9	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	unique	_	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	sensitive	_	sensitive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
13	habitat	_	habitat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	supports	_	support	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	rare	_	rare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
18	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	endangered	_	endangered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
20	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
21	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[10@@p@@unique, 7@@a@@and, 13@@d@@habitat, 2@@d@@island, 19@@s@@endangered-01, 8@@s@@have-03, 15@@s@@support-01, 12@@s@@sensitive-03, 20@@d@@specie, 16@@explicitanon0@@many, 4@@d@@volcanic, 6@@s@@originate-01, 17@@s@@rare-02]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	conclude	_	conclude	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	take	_	take	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	applaud	_	applaud	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	UNESCO’s	unesco’s	UNESCO’s	NNP	O	_	_NAME_	_	0	IGNORE	true
11	efforts	_	effort	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_o	true
13	contribution	_	contribution	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	contribute-01	(s())	12	APP_op2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	development	_	development	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	12	APP_s	true
18	growth	_	growth	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	grow-01	(s())	17	APP_op2	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
22	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	noble	_	noble	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	initiative	_	initiative	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	enables	_	enable	VBZ	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	25	MOD_s	true
28	the	_	the	DT	O	_	and	_	0	IGNORE	true
29	primary,	_	primary,	NNP	O	_	govern-01	_	0	IGNORE	true
30	secondary	_	secondary	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op1	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_o2	true
32	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op2	true
33	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
34	optimize	_	optimize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_o	true
35	the	_	the	DT	O	_	and	_	0	IGNORE	true
36	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	34	APP_o	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	Information_and_Communication_Technology	_name_	Technology	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
39	(ICT)	(ict)	(ict)	NN	O	_	thing	_	0	IGNORE	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	learning	_	learning	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	36	APP_o	true
42	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@conclude-01, 17@@a@@and, 16@@s@@develop-02, 36@@s@@use-01, 9@@s@@applaud-01, 30@@d@@secondary, 21@@d@@country, 27@@w@@enable-01, 5@@s@@take-01, 23@@p@@this, 32@@d@@university, 2@@d@@i, 38@@d@@Technology, 34@@s@@optimize-01, 4@@d@@i, 25@@t@@initiative, 24@@p@@noble, 6@@p@@this, 31@@a@@and, 41@@d@@learning-01, 18@@s@@grow-01, 11@@s@@effort-01, 12@@a@@and, 13@@s@@contribute-01, 7@@d@@opportunity]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	instance,	_	instance,	NNP	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	evolutionary	_	evolutionary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	regards	_	regard	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_op1	true
7	artistic	_	artistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	beauty	_	beauty	NN	O	(d<root> / --LEX--)	beautiful-02	()	6	APP_o	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	“fitness	_	“fitness	FW	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
11	signal”	_	signal”	XX	O	_	name	_	0	IGNORE	true
12	that	_	that	DT	O	_	name	_	0	IGNORE	true
13	displays	_	display	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
14	desirable	_	desirable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
15	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	qualities	_	quality	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	_	and	_	0	IGNORE	true
18	strengthen	_	strengthen	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	reproductive	_	reproductive	JJ	O	(d<root> / --LEX--)	reproduce-01	()	18	APP_o	true
20	advantage,	_	advantage,	NNS	O	_	and	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	pleasant	_	pleasant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	feeling	_	feeling	NN	O	(d<root> / --LEX--)	feel-01	()	33	APP_s	true
25	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_o	true
26	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
27	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
28	beautiful,	_	beautiful,	NNPS	O	_	thing	_	0	IGNORE	true
29	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	21	MOD_s	true
30	sexual	_	sexual	JJ	O	(d<root> / --LEX--)	sex	()	29	APP_o	true
31	pleasure,	_	pleasure,	NNS	O	_	and	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
33	engraved	_	engrave	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	minds	_	mind	NNS	O	(d<root> / --LEX--)	$LEMMA$-05	()	33	APP_o	true
37	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
39	process	_	process	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	33	MOD_o	true
40	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
41	evolution,	_	evolution,	NNP	O	_	cause-01	_	0	IGNORE	true
42	assisting	_	assist	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
43	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
45	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	“the	_	“the	NNP	O	(s<root> / --LEX--  :degree-of (t<mod>))	_NAME_	(mod())	50	MOD_mod	true
48	most	_	most	JJS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
49	adaptive	_	adaptive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	decisions	_	decision	NNS	O	(d<root> / --LEX--)	decide-01	()	42	APP_o	true
51	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
52	survival	_	survival	NN	O	(d<root> / --LEX--)	survive-01	()	53	APP_op2	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	50	MOD_op1	true
54	reproduction.”	_	reproduction.”	XX	O	_	$LEMMA$	_	0	IGNORE	true
55	[41	_	[41	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	21	MOD_mod	true
56	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[29@@s@@resemble-01, 23@@s@@pleasant-01, 7@@p@@artistic, 19@@d@@reproduce-01, 21@@a@@and, 6@@b@@regard-01, 10@@d@@“fitness, 18@@s@@strengthen-01, 36@@d@@mind-05, 49@@p@@adaptive, 27@@d@@something, 33@@s@@engrave-01, 5@@d@@theory, 39@@s@@process-02, 24@@d@@feel-01, 25@@s@@cause-01, 55@@p@@_NUMBER_, 8@@d@@beautiful-02, 30@@d@@sex, 42@@s@@assist-01, 4@@p@@evolutionary, 15@@s@@personal-02, 52@@d@@survive-01, 16@@d@@quality, 47@@s@@_NAME_, 50@@d@@decide-01, 53@@a@@and, 14@@s@@desirable-02, 48@@s@@most, 13@@s@@display-01]
sentence=1	A	a	a	DT	O	_	thing	_	0	IGNORE	true
2	related	_	related	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	3	MOD_s	true
3	set	_	set	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	APP_dom	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
6	about	_	about	IN	O	_	thing	_	0	IGNORE	true
7	ethics	_	ethic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	metaethical	_	metaethical	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
10	questions,	_	questions,	NNS	O	_	mean-01	_	0	IGNORE	true
11	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
12	concern	_	concern	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	meaning	_	meaning	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	mean-01	(s())	26	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
17	terms,	_	terms,	NNS	O	_	mean-01	_	0	IGNORE	true
18	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
19	ways	_	way	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	14	APP_s	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	gaining	_	gain	VBG	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-02	(mod(), s())	19	MOD_mod	true
22	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	know-01	()	21	APP_s	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	moral	_	moral	JJ	O	_	$LEMMA$-02	_	0	IGNORE	true
25	facts,	_	facts,	NNP	O	_	mean-01	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	nature	_	nature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	moral	_	moral	JJ	O	_	$LEMMA$-02	_	0	IGNORE	true
32	facts	_	fact	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@r@@metaethical, 5@@s@@question-01, 32@@p@@fact, 3@@s@@set, 26@@a@@and, 7@@d@@ethic, 18@@d@@our, 28@@d@@nature, 21@@i@@gain-02, 16@@s@@moral-02, 19@@m@@way, 2@@s@@relate-01, 12@@s@@concern-01, 22@@d@@know-01, 14@@s@@mean-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
3	moves	_	move	VBZ	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
4	over	_	over	RP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
5	land,	_	land,	NNS	O	_	and	_	0	IGNORE	true
6	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	cut	_	cut	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-off-04	(s(), o())	0	ROOT	true
9	off	_	off	RP	O	_	cause-01	_	0	IGNORE	true
10	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
12	source	_	source	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	APP_o	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	driving	_	drive	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	storm	_	storm	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_o	true
18	[which	_	[which	.	O	_	cause-01	_	0	IGNORE	true
19	is]	_	is]	NNP	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	and	_	0	IGNORE	true
21	evaporation	_	evaporation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	rotate-01	(s())	12	APP_o	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	warm	_	warm	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	28	MOD_s	true
27	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	surface	_	surface	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
29	;	_	;	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@s@@cut-off-04, 2@@d@@it, 28@@s@@surface, 17@@d@@storm-01, 21@@s@@rotate-01, 27@@p@@sea, 12@@s@@source-02, 14@@d@@energy, 15@@s@@drive-01, 3@@v@@move-01, 23@@d@@water, 26@@s@@warm-05, 4@@d@@over]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
4	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
5	maps	_	map	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	New_York_City	_name_	City	NNP	O	(n<root> / --LEX--  :name-of (c2 / city  :location-of (l<mod>)))	_NAME_	(mod())	5	MOD_mod	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	squeeze	_	squeeze	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	MOD_s	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	13	MOD_mod	true
13	dimensions	_	dimension	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	towering	_	tower	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
17	metropolis	_	metropolis	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_poss	true
18	onto	_	onto	IN	O	_	-	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	flat	_	flat	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	21	MOD_s	true
21	sheet	_	sheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
22	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
23	paper	_	paper	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
25	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	24	APP_op2	true
27	enough	_	enough	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
29	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
30	tourists	_	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	34	APP_s	true
31	will	_	will	MD	O	_	person	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
33	get	_	get	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
34	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	29	APP_o	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@You, 28@@d@@information, 25@@p@@still, 29@@s@@cause-01, 11@@p@@full, 26@@s@@have-03, 2@@s@@possible-01, 34@@s@@lose-02, 27@@explicitanon0@@enough, 32@@explicitanon0@@-, 7@@n@@_NAME_, 20@@s@@flat-06, 30@@p2@@person, 16@@p@@tower-01, 7@@c2@@city, 15@@p@@this, 5@@d@@map, 23@@g@@paper, 24@@a@@and, 9@@b@@squeeze-01, 13@@m@@dimension, 30@@e2@@tour-01, 17@@d@@metropolis, 12@@explicitanon0@@3, 21@@d@@sheet, 4@@s@@see-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	mean	_	mean	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	there’s	_	there’s	NNP	O	_	event	_	0	IGNORE	true
4	certainly	_	certainly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	certain	(mod())	5	MOD_mod	true
5	signs	_	sign	VBZ	O	(d<root> / --LEX--)	$LEMMA$al-07	()	8	APP_op1	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	it,	_	it,	NNS	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
9	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	8	APP_op2	true
11	too,	_	too,	NN	O	_	multi-sentence	_	0	IGNORE	true
12	in	_	in	IN	O	_	contrast-01	_	0	IGNORE	true
13	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	19	MOD_mod	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_o2	true
16	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
17	sit	_	sit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
18	down	_	down	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	strike	_	strike	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	15	APP_o	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
24	ago,	_	ago,	DT	O	_	and	_	0	IGNORE	true
25	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
26	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	militant	_	militant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	labor	_	labor	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	action	_	action	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@in-fact, 4@@p@@certain, 28@@s@@very, 15@@s@@have-03, 19@@d@@strike-02, 30@@p@@labor, 21@@n@@_NAME_, 1@@d@@i, 10@@n@@_NAME_, 14@@d@@we, 29@@p@@militant, 10@@c@@country, 2@@b@@mean-01, 23@@s@@long-03, 21@@c@@country, 31@@p@@action, 22@@explicitanon0@@-, 17@@s@@sit-01, 8@@a@@and, 5@@d@@signal-07]
sentence=1	After	after	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	this,	_	this,	NNP	O	_	-	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
4	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	stop,	_	stop,	NNS	O	(d<root> / --LEX--)	have-concession-91	()	8	APP_s	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	11	MOD_s	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	change	_	change	VBP	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_o	true
12	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
13	approach	_	approach	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	APP_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	use	_	use	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	MOD_s	true
20	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
21	you	_	you	PRP	O	_	thing	_	0	IGNORE	true
22	have	_	have	VBP	O	_	thing	_	0	IGNORE	true
23	learned	_	learn	VBN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	19	APP_o	true
24	fresh	_	fresh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
27	mind	_	mind	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@still, 1@@n@@after, 23@@d@@learn-01, 27@@b@@mind, 9@@s@@instead-of-91, 3@@d@@you, 23@@t@@thing, 13@@s@@approach-02, 6@@explicitanon0@@-, 19@@s@@keep-02, 15@@i@@use-01, 16@@p@@other, 8@@s@@contrast-01, 11@@h@@change-01, 17@@d@@method, 7@@d@@have-concession-91, 24@@s@@fresh-02]
sentence=1	More	more	More	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
2	recently,	_	recently,	JJ	O	_	and	_	0	IGNORE	true
3	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	academic	_	academic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	academia	(mod())	6	MOD_mod	true
6	expertise	_	expertise	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	expert-01	(s())	3	MOD_s	true
7	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
8	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	true
9	subject	_	subject	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	outbreak	_	outbreak	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	so	(s())	9	MOD_s	true
17	so-called	_	so-calle	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	call-01	(s())	19	MOD_s	true
18	predatory	_	predatory	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	journals	_	journal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	—	_	—	:	O	_	and	_	0	IGNORE	true
21	journals	_	journal	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	that	_	that	WDT	O	_	name	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	publish	_	publish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
25	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	for	_	for	IN	O	_	-	_	0	IGNORE	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	fee	_	fee	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
30	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@p@@predatory, 12@@p@@large, 16@@s@@so, 14@@s@@grow-01, 26@@d@@anything, 3@@d@@institution, 29@@o@@fee, 5@@p@@academia, 17@@s@@call-01, 1@@s@@More, 9@@s@@subject-01, 15@@s@@outbreak-01, 19@@d@@journal, 6@@s@@expert-01, 21@@g@@journal, 24@@s@@publish-01, 25@@p@@almost]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	4	APP_s	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	drawn	_	draw	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
5	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	praise	_	praise	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	helping	_	help	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	enter	_	enter	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
15	criticism	_	criticism	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	criticize-01	(s())	14	APP_op2	true
16	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
18	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
19	ban,	_	ban,	NN	O	_	cause-01	_	0	IGNORE	true
20	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
24	Afghanistan,	afghanistan,	afghanistan,	RB	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	4	APP_o2	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	atmosphere	_	atmosphere	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	hostility	_	hostility	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
31	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	Muslims	_name_	Muslims	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	38	MOD_mod	true
33	that	_	that	IN	O	_	person	_	0	IGNORE	true
34	critics	_	critic	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$ize-01	()	35	APP_s	true
35	blame	_	blame	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	30	MOD_o	true
36	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
37	denying	_	deny	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_o2	true
38	them	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	4	MOD_o	true
39	entry	_	entry	NN	O	(d<root> / --LEX--)	enter-01	()	37	APP_s	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	43	MOD_mod	true
43	place	_	place	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@e2@@criticize-01, 13@@n@@_NAME_, 2@@e@@president, 2@@h@@have-org-role-91, 22@@explicitanon0@@-, 42@@o@@ordinal-entity, 30@@p@@hostility, 37@@s@@deny-01, 13@@c@@country, 28@@d@@atmosphere, 35@@b@@blame-01, 4@@b@@draw-02, 11@@s@@enter-01, 32@@n@@_NAME_, 43@@t@@place, 39@@d@@enter-01, 10@@d@@girl, 2@@p@@person, 42@@explicitanon0@@1, 15@@s@@criticize-01, 18@@d@@travel-01, 38@@s@@person, 23@@s@@cover-01, 25@@a@@and, 14@@a@@and, 32@@r@@religious-group, 8@@s@@help-01, 6@@s@@praise-01, 34@@p2@@person]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	clear	_	clear	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	4	MOD_s	true
4	passages	_	passage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	Scripture,	scripture,	scripture,	NN	O	_	and	_	0	IGNORE	true
7	which	_	which	WDT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	amr-unknown	(s(), o())	2	MOD_s	true
8	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	indicate	_	indicate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
11	that	_	that	DT	O	_	cause-01	_	0	IGNORE	true
12	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	APP_s	true
14	a	_	a	DT	O	_	-	_	0	IGNORE	true
15	free	_	free	JJ	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$-04	(s())	17	APP_op1	true
16	will,	_	will,	NNS	O	_	mean-01	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	10	APP_o	true
18	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	17	APP_op2	true
21	exercise	_	exercise	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
22	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	will,	_	will,	VBZ	O	_	mean-01	_	0	IGNORE	true
24	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
25	follow,	_	follow,	NNP	O	_	mean-01	_	0	IGNORE	true
26	or	_	or	CC	O	_	$LEMMA$	_	2	IGNORE	true
27	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	follow	_	follow	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@s@@amr-unknown, 15@@l@@free-04, 2@@s@@have-03, 12@@d@@man, 1@@d@@We, 17@@a@@and, 10@@s@@indicate-01, 3@@s@@clear-06, 20@@f@@possible-01, 8@@s@@seem-01, 29@@d@@follow-01, 27@@explicitanon0@@-, 13@@s@@have-03, 4@@d@@passage, 21@@s@@exercise-01]
sentence=1	Daniel	_name_	Daniel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	14	MOD_s	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	son	_	son	NN	O	(h<root> / have-rel-role-91  :ARG2 (b / --LEX--)  :ARG1 (i<o>)  :ARG0 (h2<s>))	$LEMMA$	(s(), o())	14	APP_op1	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	Johann_Bernoulli	_name_	Bernoulli	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	(one	_	(one	ADD	O	_	$LEMMA$	_	0	IGNORE	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	"early	_	"early	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	2	MOD_s	true
11	developers"	_	developers"	NFP	O	_	include-91	_	0	IGNORE	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	calculus)	_	calculus)	NN	O	_	person	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	nephew	_	nephew	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	14	APP_op2	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	Jacob_Bernoulli	_name_	Bernoulli	NNP	O	_	_NAME_	_	0	IGNORE	true
19	(who"	_	(who"	NNP	O	_	person	_	0	IGNORE	true
20	was	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	14	MOD_mod	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	20	MOD_mod	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	discover	_	discover	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	probability")	_	probability")	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@p@@person, 4@@b@@son, 6@@p@@person, 14@@a@@and, 6@@n@@_NAME_, 22@@o@@ordinal-entity, 1@@p@@person, 26@@d@@theory, 24@@s@@discover-01, 16@@h@@have-rel-role-91, 4@@h@@have-rel-role-91, 22@@explicitanon0@@1, 2@@s@@person, 16@@b@@nephew, 10@@s@@_NAME_, 1@@n@@_NAME_]
sentence=1	Again,	again,	Again,	LS	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	Master	master	Master	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
4	plan,	_	plan,	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
5	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
6	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
7	flagship	_	flagship	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	projects	_	project	NNS	O	(i<root> / --LEX--  :prep-with-of (l<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	pilot	_	pilot	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_s	true
11	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	implementation,	_	implementation,	NNS	O	_	and	_	0	IGNORE	true
13	will	_	will	MD	O	_	thing	_	0	IGNORE	true
14	steer	_	steer	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	march	_	march	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
17	towards	_	towards	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	future	_	future	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
23	transform	_	transform	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	MOD_s	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	29	MOD_mod	true
29	technical	_	technical	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o2	true
30	hub,	_	hub,	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	raise	_	raise	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	country’s	_	country’	VBN	O	_	_NAME_	_	0	IGNORE	true
34	competitiveness	_	competitiveness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	20	MOD_mod	true
36	align	_	align	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
37	the	_	the	DT	O	_	and	_	0	IGNORE	true
38	country	_	country	NN	O	_	$LEMMA$	_	0	IGNORE	true
39	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
40	line	_	line	NN	O	_	$LEMMA$	_	0	IGNORE	true
41	with	_	with	IN	O	_	conform-01	_	0	IGNORE	true
42	vision	_	vision	NN	O	(d<root> / --LEX--)	en$LEMMA$-01	()	45	APP_poss	true
43	2030’s	_	2030’s	CD	O	_	_NAME_	_	0	IGNORE	true
44	ICT	_name_	ICT	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	goals	_	goal	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	36	APP_s	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@i@@project, 35@@s@@and, 45@@m@@goal, 16@@d@@march-01, 23@@b@@transform-01, 10@@i@@pilot-01, 20@@d@@future, 42@@d@@envision-01, 44@@p@@ICT, 25@@d@@country, 14@@b@@steer-01, 19@@p@@digital, 31@@s@@raise-01, 29@@d@@technical, 7@@p@@flagship, 36@@s@@align-01, 3@@d@@Master, 34@@d@@competitiveness, 28@@p@@region]
sentence=1	The	the	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	4	MOD_mod	true
2	project	_	project	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
4	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Quilis’s	_name_	Quilis’s	NNP	O	_	_NAME_	_	0	IGNORE	true
6	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	syntactic	_	syntactic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	environments	_	environment	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
13	trigger	_	trigger	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
14	enjambment,	_	enjambment,	NNP	O	_	and	_	0	IGNORE	true
15	as	_	as	RB	O	_	and	_	0	IGNORE	true
16	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
17	as	_	as	IN	O	_	and	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
20	identified	_	identify	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
21	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
22	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_poss	true
23	system	_	system	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	20	APP_s	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@p@@type, 12@@s@@possible-01, 9@@p@@syntactic, 4@@s@@include-01, 13@@s@@trigger-01, 3@@d@@site, 22@@d@@our, 2@@p@@project, 23@@m@@system, 6@@s@@complete-02, 7@@d@@list, 20@@s@@identify-01, 1@@p@@person, 10@@p@@environment]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	characterized	_	characterize	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	conflict	_	conflict	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the_Church_of_Scientology	_name_	Scientology	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	anonymous	_	anonymous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	posters	_	poster	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$	(s())	4	APP_o	true
10	of	_	of	IN	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Cruise	_name_	Cruise	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	"another	_	"another	``	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	skirmish	_	skirmish	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o2	true
18	in	_	in	IN	O	_	name	_	0	IGNORE	true
19	a	_	a	DT	O	_	name	_	0	IGNORE	true
20	war	_	war	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
21	that	_	that	WDT	O	_	name	_	0	IGNORE	true
22	Scientology	_name_	Scientology	NNP	O	(d<root> / --LEX--)	_NAME_	()	25	APP_s	true
23	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
24	been	_	be	VBN	O	_	person	_	0	IGNORE	true
25	waging	_	wage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	almost	_	almost	RB	O	(a<root> / --LEX--  :op1 (t<op1>)  :duration-of (r<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
28	15	_	15	CD	O	(d<root> / --LEX--)	_NUMBER_	()	27	APP_op1	true
29	years,	_	years,	NNS	O	_	cause-01	_	0	IGNORE	true
30	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
31	the_early_days	_name_	day	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	_NAME_	(poss())	30	APP_op1	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	newsgroups	_	newsgroup	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
34	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
35	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	alt.religion.scientology,	_	alt.religion.scientology,	NNP	O	_	_NAME_	_	0	IGNORE	true
37	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
38	posted	_	post	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
39	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	41	MOD_s	true
40	church	_	church	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
42	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
43	1994	_name_	1994	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	38	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[40@@p@@church, 25@@s@@wage-01, 27@@a@@almost, 30@@w@@since, 39@@s@@internal-02, 12@@n@@_NAME_, 15@@p@@"another, 31@@m@@_NAME_, 41@@d@@document, 16@@p@@small, 4@@s@@conflict-01, 22@@d@@_NAME_, 9@@t@@thing, 20@@p@@war-01, 13@@d@@video, 1@@d@@He, 8@@p@@anonymous, 6@@n@@_NAME_, 38@@s@@post-01, 43@@d@@date-entity, 28@@d@@_NUMBER_, 43@@explicitanon0@@_NUMBER_, 33@@d@@newsgroup, 6@@o2@@organization, 17@@d@@skirmish-01, 2@@b@@characterize-01, 9@@c@@poster]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	will	_	will	MD	O	_	i	_	0	IGNORE	true
3	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	4	MOD_mod	true
4	insert	_	insert	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	clip	_	clip	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	show	_	show	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	7	MOD_s	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
13	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	shelf	_	shelf	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	life	_	life	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	symbol	_	symbol	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_o	true
19	like	_	like	IN	O	_	thing	_	0	IGNORE	true
20	on	_	on	IN	O	_	thing	_	0	IGNORE	true
21	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@clip-01, 16@@p@@life, 18@@s@@look-02, 3@@p@@definite, 8@@b@@here, 1@@d@@i, 11@@b@@show-01, 17@@d@@symbol, 21@@d@@product, 4@@s@@insert-01, 15@@p@@shelf, 6@@p@@little, 12@@d@@you]
sentence=1	Here,	_name_	Here,	NNP	O	_	and	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	present	_	present	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	novel	_	novel	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	system,	_	system,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_o	true
7	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
8	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	topical	_	topical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	web	_	web	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	crawler,	_	crawler,	NNS	O	_	mean-01	_	0	IGNORE	true
13	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	MOD_s	true
15	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	18	MOD_s	true
16	and	_	and	CC	O	_	$LEMMA$	_	3	IGNORE	true
17	automatically	_	automatically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	18	MOD_mod	true
18	assemble	_	assemble	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	census	_	census	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	an	_	an	DT	O	_	1	_	0	IGNORE	true
24	academic	_	academic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	academia	(mod())	25	MOD_mod	true
25	field	_	field	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
26	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
27	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	26	APP_o	true
29	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	28	MOD_s	true
30	on	_	on	IN	O	_	and	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	33	MOD_s	true
33	World_Wide_Web	_name_	Web	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	29	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@p@@topical, 2@@d@@we, 28@@d@@data, 24@@p@@academia, 32@@s@@public, 6@@s@@resemble-01, 7@@s@@base-02, 26@@l@@use-01, 18@@s@@assemble-01, 33@@b@@_NAME_, 14@@s@@possible-01, 5@@d@@novel, 21@@s@@census-01, 29@@s@@available-02, 20@@p@@full, 27@@p@@digital, 3@@s@@present-01, 25@@d@@field, 11@@d@@web, 17@@t@@automatic, 15@@s@@quick-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
3	heard	_	hear	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	families	_	family	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
6	the_South_Pacific	_name_	Pacific	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
8	fear	_	fear	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	MOD_s	true
9	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
10	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
11	being	_	be	VBG	O	_	person	_	0	IGNORE	true
12	swept	_	sweep	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
13	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
15	rising	_	rise	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
16	seas;	_	seas;	NNP	O	_	multi-sentence	_	0	IGNORE	true
17	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	refugees	_	refugee	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
19	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the_Middle_East	_name_	East	NNP	O	(n3<root> / --LEX--  :name-of (w / world-region  :location-of (s<mod>)))	_NAME_	(mod())	18	MOD_mod	true
21	yearning	_	yearn	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
22	for	_	for	IN	O	_	or	_	0	IGNORE	true
23	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	return	_	return	NN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
25	to	_	to	IN	O	_	-	_	0	IGNORE	true
26	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	MOD_op1	true
28	home;	_	home;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	Ebola	ebola	Ebola	NNP	O	(d2<root> / disease  :name (n2 / --LEX--))	_NAME_	()	30	APP_s	true
30	survivors	_	survivor	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	survive-01	(s())	33	APP_s	true
31	in	_	in	IN	O	_	name	_	0	IGNORE	true
32	North_Kivu	_name_	Kivu	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	30	MOD_mod	true
33	struggling	_	struggle	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	44	APP_s	true
34	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
35	rebuild	_	rebuild	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_o	true
36	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
37	lives;	_	lives;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
38	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
39	demanding	_	demand	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	MOD_s	true
40	equality	_	equality	NN	O	(d<root> / --LEX--)	equal-01	()	41	APP_op1	true
41	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	39	APP_o	true
42	opportunity;	_	opportunity;	NNP	O	_	and	_	0	IGNORE	true
43	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	41	APP_op2	true
44	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	3	MOD_o	true
45	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
46	beliefs	_	belief	NNS	O	(d<root> / --LEX--)	believe-01	()	47	APP_op1	true
47	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	43	MOD_mod	true
48	traditions	_	tradition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_op2	true
49	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
50	suffer	_	suffer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	43	MOD_s	true
51	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	52	MOD_s	true
52	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	50	MOD_o	true
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
54	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
55	they	_	they	PRP	O	_	person	_	0	IGNORE	true
56	are;	_	are;	NNP	O	_	thing	_	0	IGNORE	true
57	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	52	APP_s	true
58	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	59	MOD_mod	true
59	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	60	MOD_mod	true
60	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_op2	true
61	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[52@@s@@cause-01, 20@@w@@world-region, 41@@a@@and, 46@@d@@believe-01, 35@@s@@rebuild-01, 39@@s@@demand-01, 45@@p@@all, 60@@d@@other, 29@@n2@@_NAME_, 6@@c@@country, 20@@n3@@_NAME_, 4@@d@@family, 38@@d@@woman, 59@@explicitanon0@@many, 18@@d@@refugee, 33@@s@@struggle-01, 32@@n@@_NAME_, 43@@d@@person, 51@@s@@simple-02, 24@@g@@return-01, 3@@s@@hear-01, 30@@p@@person, 8@@c@@fear-01, 26@@d@@school, 50@@s@@suffer-01, 57@@a@@and, 17@@p@@young, 44@@s@@include-91, 58@@s@@so, 29@@d2@@disease, 27@@a@@and, 21@@s@@yearn-01, 47@@o@@and, 15@@s@@rise-01, 12@@s@@sweep-01, 1@@d@@i, 40@@d@@equal-01, 10@@d@@life, 48@@d@@tradition, 32@@c@@city, 30@@w@@survive-01, 6@@n@@_NAME_, 13@@a@@away]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	best	_	best	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	known	_	known	JJ	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
6	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
7	translation	_	translation	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	translate-01	(s(), o())	23	APP_op1	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Bible	_name_	Bible	NNP	O	(b<root> / book  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
13	into	_	into	IN	O	_	-	_	0	IGNORE	true
14	Latin	_name_	Latin	NNP	O	(l<root> / language  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
15	(the	_	(the	ADD	O	_	mean-01	_	0	IGNORE	true
16	translation	_	translation	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	translate-01	(s(), o())	7	MOD_s	true
17	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
18	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	Vulgate),	_name_	Vulgate),	NNS	O	_	_NAME_	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
24	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
25	commentaries	_	commentary	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
26	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	Gospels	gospels	Gospels	NNPS	O	(d<root> / --LEX--)	_NAME_	()	25	APP_s	true
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@s@@translate-01, 12@@b@@book, 25@@s@@commentary-01, 3@@s@@best, 4@@s@@known-02, 16@@s@@translate-01, 23@@a@@and, 9@@p@@most, 14@@l@@language, 12@@n@@_NAME_, 28@@d@@_NAME_, 1@@d@@He, 18@@s@@become-01, 14@@n@@_NAME_, 19@@s@@know-02]
sentence=1	Open-mindedness	open-mindedness	open-mindedness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	4	MOD_mod	true
4	characteristic	_	characteristic	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	supports	_	support	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	creativity,	_	creativity,	NNP	O	_	and	_	0	IGNORE	true
8	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
9	solving,	_	solving,	NNP	O	_	mean-01	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
11	innovation	_	innovation	NN	O	(d<root> / --LEX--)	innovate-01	()	10	APP_op2	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@r@@characteristic, 6@@s@@support-01, 10@@a@@and, 11@@d@@innovate-01, 1@@d@@open-mindedness, 8@@d@@problem, 3@@explicitanon0@@1]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	thought	_	think	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
4	atoms	_	atom	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
6	moving	_	move	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	differed	_	differ	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	7	MOD_s	true
10	in	_	in	IN	O	_	instead-of-91	_	0	IGNORE	true
11	shape	_	shape	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	MOD_op1	true
13	size,	_	size,	NNS	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
17	join	_	join	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	MOD_s	true
18	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
19	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[9@@s@@differ-02, 18@@p@@together, 12@@a@@and, 11@@d@@shape, 17@@s@@join-01, 6@@s@@move-01, 7@@d@@particle, 1@@d@@They, 2@@b@@think-01, 4@@d@@atom, 16@@s@@possible-01]
sentence=1	What	what	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	2	APP_s	true
2	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	0	ROOT	true
3	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
5	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
6	state	_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	itself	_	itself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	exhibits	_	exhibit	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	MOD_s	true
10	predatory	_	predatory	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
11	behavior	_	behavior	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	behave-01	(s(), o())	9	APP_o	true
12	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[2@@s@@have-condition-91, 10@@d@@predatory, 1@@d@@amr-unknown, 11@@s@@behave-01, 9@@c@@exhibit-01, 6@@d@@state]
sentence=1	University	university	university	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	collections	_	collection	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
3	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
4	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
5	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	Polaroids	_name_	polaroid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	"unknowns"	_	"unknowns"	NNP	O	_	thing	_	0	IGNORE	true
10	who	_	who	WP	O	_	name	_	0	IGNORE	true
11	have	_	have	VBP	O	_	person	_	0	IGNORE	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
13	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	had	_	have	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_s	true
15	their_fifteen_minutes	_name_	minute	NNS	O	(d<root> / --LEX--)	_NAME_	()	14	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	fame	_	fame	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@include-01, 12@@explicitanon0@@-, 14@@s@@have-03, 1@@p@@university, 4@@c@@country, 7@@d@@polaroid, 15@@d@@_NAME_, 3@@b@@across, 5@@p@@also, 13@@n@@yet, 17@@p@@fame, 2@@d@@collection, 4@@n@@_NAME_]
sentence=1	European	_name_	european	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	colonizers	_	colonizer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	viewed	_	view	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	lands	_	land	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	they	_	they	PRP	O	_	person	_	0	IGNORE	true
11	colonized	_	colonize	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	uncultured	_	uncultured	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	healthy	(s())	14	MOD_s	true
14	savages	_	savage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	were	_	be	VBD	O	_	person	_	0	IGNORE	true
17	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
18	need	_	need	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
19	of	_	of	IN	O	_	name	_	0	IGNORE	true
20	European	_name_	european	JJ	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op1	true
21	governance,	_	governance,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
22	dress,	_	dress,	NNP	O	_	and	_	0	IGNORE	true
23	religion,	_	religion,	NNS	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
25	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	27	APP_s	true
27	practices	_	practice	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op2	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[20@@d@@_NAME_, 1@@c@@continent, 11@@s@@colonize-01, 14@@d@@savage, 26@@d@@culture, 24@@a@@and, 25@@p@@other, 9@@b@@land, 2@@d@@colonizer, 3@@o@@often, 13@@p@@healthy, 1@@n2@@_NAME_, 4@@b@@view-01, 6@@d@@person, 18@@s@@need-01, 13@@explicitanon0@@-, 27@@s@@practice-01]
sentence=1	Write	write	write	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	thought	_	thought	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	think-01	()	1	APP_s	true
4	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-13	(s())	3	MOD_s	true
7	up	_	up	RP	O	_	thing	_	0	IGNORE	true
8	during	_	during	IN	O	_	i	_	0	IGNORE	true
9	work	_	work	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
10	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@y@@you, 9@@n@@work-01, 1@@explicitanon0@@imperative, 1@@b@@write-01, 2@@p@@every, 3@@t@@thing, 3@@d@@think-01, 6@@s@@come-up-13]
sentence=1	Everything	everything	Everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	detailed	_	detailed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	when	_	when	WRB	O	_	and	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	look	_	look	VBP	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	true
9	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	on	_	on	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	way	_	way	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
14	going	_	go	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	13	MOD_mod	true
15	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	shop	_	shop	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
19	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	owls	_	owl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	move	_	move	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
23	up	_	up	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	high	_	high	RB	O	(d<root> / --LEX--)	$LEMMA$-02	()	22	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@n@@way, 1@@d@@Everything, 10@@p@@even, 23@@a@@up, 14@@v@@go-02, 20@@d@@owl, 4@@s@@detail-01, 7@@d@@you, 22@@s@@move-01, 3@@s@@really, 17@@d@@shop, 5@@a@@and, 8@@v@@look-01, 24@@d@@high-02]
sentence=1	Also,	_name_	Also,	NNP	O	_	thing	_	0	IGNORE	true
2	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
3	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
4	representationalism,	_	representationalism,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	expression	_	expression	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	theories,	_	theories,	CD	O	_	mean-01	_	0	IGNORE	true
8	formalism,	_	formalism,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	neoformalism,	_	neoformalism,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
10	aesthetic	_	aesthetic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	theories	_	theory	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	defining	_	define	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	art	_	art	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	fail	_	fail	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	33	APP_op1	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	offer	_	offer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
19	an	_	an	DT	O	_	thing	_	0	IGNORE	true
20	account	_	account	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	capable	_	capable	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
24	of	_	of	IN	O	_	thing	_	0	IGNORE	true
25	coping	_	cope	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	dynamic	_	dynamic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	scenes	_	scene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	artworld,	_	artworld,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
34	when	_	when	WRB	O	_	be-temporally-at-91	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	anti-essentialist	_	anti-essentialist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	movement	_	movement	NN	O	(d<root> / --LEX--)	$LEMMA$-07	()	42	APP_s	true
38	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
39	philosophical	_	philosophical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	aesthetics	_	aesthetic	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
41	then	_	then	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	paves	_	pave	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	33	APP_op3	true
43	a	_	a	DT	O	_	thing	_	0	IGNORE	true
44	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
45	to	_	to	IN	O	_	thing	_	0	IGNORE	true
46	functionalism,	_	functionalism,	CD	O	_	mean-01	_	0	IGNORE	true
47	institutionalism	_	institutionalism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_op1	true
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	42	APP_o2	true
49	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	versions	_	version	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_op2	true
51	of	_	of	IN	O	_	name	_	0	IGNORE	true
52	historicism,	_	historicism,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
53	the	_	the	DT	O	_	he	_	0	IGNORE	true
54	question	_	question	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	62	APP_s	true
55	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
56	artistic	_	artistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	57	MOD_mod	true
57	beauty	_	beauty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	54	APP_s	true
58	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
59	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
60	not	_	not	RB	O	_	$LEMMA$	_	0	IGNORE	true
61	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
62	loses	_	lose	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	65	APP_s	true
63	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
64	limelight,	_	limelight,	NNS	O	_	and	_	0	IGNORE	true
65	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	33	APP_op2	true
66	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	71	MOD_mod	true
67	is,	_	is,	VBP	O	_	and	_	0	IGNORE	true
68	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
69	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	71	MOD_mod	true
70	extent,	_	extent,	NNS	O	_	cause-01	_	0	IGNORE	true
71	abandoned	_	abandon	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	65	APP_o	true
72	for	_	for	IN	O	_	thing	_	0	IGNORE	true
73	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	true
74	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	76	MOD_s	true
75	Hegelian	_name_	hegelian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	76	MOD_mod	true
76	colour	_	colour	NN	O	(d<root> / --LEX--)	color	()	71	APP_s	true
77	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[25@@s@@cope-01, 50@@d@@version, 23@@s@@capable-01, 40@@p@@aesthetic, 14@@d@@art, 29@@d@@scene, 65@@s@@contrast-01, 39@@p@@philosophical, 75@@p@@_NAME_, 13@@s@@define-01, 10@@p@@aesthetic, 54@@s@@question-01, 44@@d@@way, 57@@d@@beauty, 33@@a@@and, 74@@s@@strong-02, 18@@s@@offer-01, 36@@p@@anti-essentialist, 56@@p@@artistic, 47@@d@@institutionalism, 16@@o@@fail-01, 76@@d@@color, 71@@s@@abandon-01, 62@@s@@lose-02, 37@@d@@movement-07, 69@@p@@some, 66@@p@@also, 11@@d@@theory, 15@@p@@all, 20@@d@@account, 49@@p@@various, 48@@a@@and, 42@@b@@pave-01, 41@@p@@then, 6@@p@@expression, 28@@p@@dynamic]
sentence=1	Do	do	Do	VBP	O	_	cause-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	cross	_	cross	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	4	APP_s	true
7	paths	_	path	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_o2	true
10	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	stuck	_	stick	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	on	_	on	IN	O	_	and	_	0	IGNORE	true
14	themselves,	_	themselves,	NNP	O	_	and	_	0	IGNORE	true
15	intolerant	_	intolerant	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	9	MOD_s	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	15	APP_o	true
18	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	17	MOD_s	true
19	from	_	from	IN	O	_	instead-of-91	_	0	IGNORE	true
20	them,	_	them,	NNP	O	_	-	_	0	IGNORE	true
21	rude	_	rude	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op2 (v<op2>)  :op1 (a2<op1>)  :mod-of (c<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
23	downright	_	downright	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	arrogant	_	arrogant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
25	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[21@@d@@rude, 22@@a@@or, 23@@s@@downright, 24@@d@@arrogant, 15@@s@@intolerant, 9@@d@@person, 18@@s@@differ-02, 3@@n@@always, 25@@explicitanon0@@interrogative, 17@@d@@person, 6@@b@@cross-02, 2@@d@@you, 12@@s@@stick-01, 4@@s@@seem-01, 7@@d@@path]
sentence=1	Marbles	marbles	marble	NNS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
2	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
3	been	_	be	VBN	O	_	person	_	0	IGNORE	true
4	in	_	in	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	cause-01	(mod())	12	MOD_mod	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	relationship	_	relationship	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	relation-03	(s(), o())	12	APP_op1	true
7	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	fellow	_	fellow	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	YouTuber_Julien_Solomita	_name_	Solomita	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
10	since	_	since	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	2013,	_	2013,	CD	O	_	and	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	two	_	two	CD	O	_	2	_	0	IGNORE	true
15	live	_	live	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
16	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
18	California	_name_	California	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	15	MOD_mod	true
19	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
21	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	22	MOD_mod	true
22	dogs,	_	dogs,	NNP	O	(d<root> / --LEX--)	and	()	12	APP_op3	true
23	Marbles,	marbles,	marbles,	CD	O	_	mean-01	_	0	IGNORE	true
24	Kermit,_Peach	_name_	Peach	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	25	APP_op2	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
26	Bunny,	_name_	Bunny,	NNP	O	_	include-91	_	0	IGNORE	true
27	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
28	regularly	_	regularly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	regular-02	(s())	29	MOD_s	true
29	appear	_	appear	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	videos.	_	videos.	JJ	O	_	$LEMMA$	_	0	IGNORE	true
33	[26	_	[26	XX	O	_	_NUMBER_	_	0	IGNORE	true
34	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@p@@together, 8@@p@@fellow, 25@@a@@and, 10@@n@@since, 18@@n2@@_NAME_, 15@@d@@live-01, 9@@n@@_NAME_, 28@@s@@regular-02, 29@@s@@appear-01, 1@@p@@person, 24@@n@@_NAME_, 18@@s@@state, 24@@p@@person, 12@@a@@and, 4@@n@@cause-01, 22@@d@@and, 9@@p@@person, 1@@n@@_NAME_, 21@@explicitanon0@@4, 6@@t@@relation-03]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	yet	_	yet	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
4	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
5	in	_	in	IN	O	_	have-concession-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	spirit	_	spirit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
9	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
10	that	_	that	WDT	O	_	i	_	0	IGNORE	true
11	bring	_	bring	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	MOD_s	true
12	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	to	_	to	IN	O	_	i	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	Hall	_name_	Hall	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
16	.	_	.	.	O	_	today	_	0	IGNORE	true

nodealignment=[14@@p@@this, 15@@d@@Hall, 7@@d@@spirit, 4@@s@@believe-01, 9@@d@@idea, 8@@a@@and, 1@@a@@and, 3@@d@@person, 2@@p@@yet, 12@@d@@us, 11@@b@@bring-01]
sentence=1	Each	each	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	day	_	day	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	starts	_	start	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	with	_	with	IN	O	_	-	_	0	IGNORE	true
5	one	_	one	CD	O	(d<root> / --LEX--)	1	()	6	APP_op1	true
6	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	3	APP_o	true
7	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	at-least	(mod())	8	MOD_mod	true
8	lectures	_	lecture	NNS	O	(d<root> / --LEX--  :ARG0 (h<s>)  :manner-of (a<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
9	by	_	by	IN	O	_	have-03	_	0	IGNORE	true
10	researchers,	_	researchers,	NNS	O	_	_NAME_	_	0	IGNORE	true
11	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
12	address	_	address	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	conceptual	_	conceptual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@start-01, 5@@d@@1, 12@@s@@address-02, 16@@s@@need-01, 8@@d@@lecture-01, 15@@d@@knowledge, 14@@p@@conceptual, 1@@p@@each, 7@@explicitanon0@@at-least, 2@@d@@day, 6@@o@@or]
sentence=1	N-	n-	n-	XX	O	_	name	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	just,	_	just,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
5	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	3	APP_o	true
6	well,	_	well,	.	O	_	and	_	0	IGNORE	true
7	it	_	it	PRP	O	(d<root> / --LEX--)	i	()	3	APP_s	true
8	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	3	MOD_s	true
9	me	_	I	PRP	O	_	i	_	0	IGNORE	true
10	longer	_	long	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	long-03	(s())	8	MOD_s	true
11	than	_	than	IN	O	_	more	_	0	IGNORE	true
12	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	people,	_	people,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
14	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	know,	_	know,	.	O	_	and	_	0	IGNORE	true
17	I'm	i'm	i'm	PRP	O	_	person	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
19	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	20	MOD_mod	true
20	strong	_	strong	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	22	APP_op1	true
21	and,	_	and,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
23	I'm	i'm	i'm	PRP	O	_	person	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
25	as	_	as	IN	O	_	equal	_	0	IGNORE	true
26	good,	_	good,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	as	_	as	IN	O	_	equal	_	0	IGNORE	true
28	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	22	APP_op2	true
29	somebody	_	somebody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
32	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	29	MOD_s	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	time	_	time	NN	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@p@@all, 24@@explicitanon0@@-, 20@@d@@strong-02, 10@@b@@long-03, 8@@s@@take-10, 19@@s@@equal, 2@@d@@you, 5@@s@@take-10, 10@@m@@more, 32@@s@@do-02, 36@@o@@time, 29@@d@@somebody, 7@@d@@i, 12@@explicitanon0@@most, 13@@s@@people,-01, 22@@a@@and, 14@@s@@cause-01, 3@@s@@just,-01, 4@@d@@it, 18@@explicitanon0@@-, 28@@s@@resemble-01]
sentence=1	Santorum	_name_	Santorum	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_op1	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	person	_	person	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
4	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
5	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	13	MOD_s	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	news	_	news	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	throughout	_	throughout	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	primary	_	primary	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
12	season,	_	season,	NNS	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	would	_	would	MD	O	_	thing	_	0	IGNORE	true
18	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
19	interesting	_	interesting	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	15	APP_o	true
20	to	_	to	TO	O	_	and	_	0	IGNORE	true
21	try	_	try	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_s	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	create	_	create	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
24	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	delicious	_	delicious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	26	MOD_s	true
26	drink	_	drink	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
27	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	mimicked	_	mimic	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
29	the	_	the	DT	O	_	and	_	0	IGNORE	true
30	appearance	_	appearance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	appear-01	(s())	28	APP_o	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	Dan_Savage	_name_	Savage	NNP	O	(d<root> / --LEX--)	_NAME_	()	34	APP_s	true
34	meaning	_	meaning	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	mean-01	(s())	30	APP_s	true
35	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
36	"santorum.	_	"santorum.	NNS	O	_	_NAME_	_	0	IGNORE	true
37	"	_	"	''	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@d@@primary, 13@@a@@and, 8@@d@@news, 5@@s@@be-located-at-91, 19@@s@@interest-01, 25@@s@@delicious, 34@@c@@mean-01, 34@@t@@thing, 26@@d@@drink-01, 30@@s@@appear-01, 1@@n@@_NAME_, 33@@d@@_NAME_, 28@@s@@mimic-01, 14@@d@@we, 3@@p@@person, 21@@s@@try-01, 1@@p@@person, 23@@s@@create-01, 9@@w@@throughout, 15@@s@@think-01]
sentence=1	Sure	sure	sure	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
2	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	stronger	_	strong	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	strong-02	(s())	4	MOD_s	true
4	impulse	_	impulse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	vibrates	_	vibrate	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	here,	_	here,	.	O	_	thing	_	0	IGNORE	true
7	Which	which	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
8	whispers	_	whisper	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	friendship	_	friendship	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_dom	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	doubly	_	doubly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	dear	_	dear	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	8	APP_o	true
14	To	to	to	IN	O	_	thing	_	0	IGNORE	true
15	one,	_	one,	NN	O	_	multi-sentence	_	0	IGNORE	true
16	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
17	thus	_	thus	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_s	true
18	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
19	kindred	_	kindred	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	MOD_s	true
20	hearts	_	heart	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	23	APP_op1	true
21	must	_	must	MD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	31	MOD_s	true
22	roam,	_	roam,	NNP	O	_	cause-01	_	0	IGNORE	true
23	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	21	APP_o	true
24	seek	_	seek	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
25	abroad,	_	abroad,	NNS	O	_	thing	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	love	_	love	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	denied	_	deny	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
29	at	_	at	IN	O	_	1	_	0	IGNORE	true
30	home	_	home	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
31	.	_	.	.	O	(b<root> / --LEX--  :location-of (h<mod>))	multi-sentence	(mod())	5	MOD_mod	true

nodealignment=[9@@d@@friendship, 23@@a@@and, 5@@s@@vibrate-01, 12@@s@@doubly, 3@@m@@more, 24@@s@@seek-01, 21@@o@@obligate-01, 20@@s@@heart, 3@@b@@strong-02, 17@@s@@cause-01, 4@@d@@impulse, 30@@b@@home, 13@@r@@dear, 1@@s@@sure-02, 8@@s@@whisper-01, 28@@s@@deny-01, 2@@p@@some, 31@@b@@multi-sentence, 19@@s@@kindred, 27@@d@@love]
sentence=1	To	to	to	IN	O	_	say-01	_	0	IGNORE	true
2	those	_	those	DT	O	_	that	_	0	IGNORE	true
3	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
4	have	_	have	VBP	O	(d<root> / --LEX--)	person	()	0	ROOT	true
5	stood	_	stand	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
6	with	_	with	IN	O	_	i	_	0	IGNORE	true
7	me	_	I	PRP	O	_	and	_	0	IGNORE	true
8	during	_	during	IN	O	_	i	_	0	IGNORE	true
9	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	10	MOD_mod	true
10	past	_	past	JJ	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	5	MOD_mod	true
11	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	months--to	_name_	months--to	.	O	_	$LEMMA$	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	family,	_	family,	NNS	O	_	and	_	0	IGNORE	true
15	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	friends,	_	friends,	NNP	O	_	and	_	0	IGNORE	true
17	to	_	to	IN	O	_	and	_	0	IGNORE	true
18	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
20	who	_	who	WP	O	_	person	_	0	IGNORE	true
21	joined	_	join	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
23	supporting	_	support	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
24	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
25	cause	_	cause	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
27	they	_	they	PRP	O	_	person	_	0	IGNORE	true
28	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	was	_	be	VBD	O	_	person	_	0	IGNORE	true
31	right--I	right--i	right--I	NNP	O	(d<root> / --LEX--)	_NAME_	()	28	APP_s	true
32	will	_	will	MD	O	_	i	_	0	IGNORE	true
33	be	_	be	VB	O	_	person	_	0	IGNORE	true
34	eternally	_	eternally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	interest-01	(mod())	35	MOD_mod	true
35	grateful	_	grateful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	appreciate-02	(s(), o())	26	MOD_s	true
36	for	_	for	IN	O	_	thing	_	0	IGNORE	true
37	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
38	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	35	APP_o	true
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[37@@d@@your, 35@@s@@appreciate-02, 4@@d@@person, 34@@t@@interest-01, 25@@d@@cause, 23@@s@@support-01, 18@@explicitanon0@@many, 38@@s@@support-01, 10@@b@@before, 31@@d@@_NAME_, 9@@p@@this, 11@@p@@difficult, 26@@s@@cause-01, 19@@p@@other, 28@@s@@believe-01, 10@@n@@now, 21@@s@@join-01, 5@@s@@stand-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	traveled	_	travel	VBD	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	to	_	to	IN	O	_	and	_	0	IGNORE	true
4	Florida	_name_	Florida	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-03	(mod(), s(), o())	2	MOD_mod	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	Devocht,	devocht,	devocht,	CD	O	_	_NAME_	_	0	IGNORE	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	had	_	have	VBD	O	_	person	_	0	IGNORE	true
11	told	_	tell	VBN	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	6	MOD_s	true
12	Montalvo	_name_	Montalvo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_o2	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	would	_	would	MD	O	_	person	_	0	IGNORE	true
15	assist	_	assist	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
16	him	_	he	PRP	O	_	district	_	0	IGNORE	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	employment	_	employment	NN	O	(d<root> / --LEX--)	employ-01	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
21	housing	_	housing	NN	O	(d<root> / --LEX--)	house-01	()	20	APP_op2	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[20@@a@@and, 6@@s@@meet-03, 1@@d@@He, 15@@t@@assist-01, 11@@w@@tell-01, 21@@d@@house-01, 12@@p@@person, 12@@n@@_NAME_, 2@@g@@travel-01, 4@@n@@_NAME_, 19@@d@@employ-01, 18@@n@@future, 4@@s@@state]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	know,	_	know,	NNS	O	_	mean-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	contrast-01	_	0	IGNORE	true
4	pin,	_	pin,	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	44	APP_snt1	true
5	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	know,	_	know,	.	O	_	mean-01	_	0	IGNORE	true
7	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	17	APP_o	true
10	a	_	a	DT	O	_	name-01	_	0	IGNORE	true
11	pin,	_	pin,	NN	O	_	_NAME_	_	0	IGNORE	true
12	it's	_	it's	PRP$	O	_	possible-01	_	0	IGNORE	true
13	probably,	_	probably,	CD	O	_	and	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
16	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	18	MOD_mod	true
17	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	44	MOD_s	true
18	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	hundred	_	hundred	CD	O	(m<root> / multiple  :op1 (explicitanon0 / --LEX--)  :quant-of (s<mod>))	100	(mod())	21	MOD_mod	true
21	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	but,	_	but,	NN	O	_	thing	_	0	IGNORE	true
23	so	_	so	IN	O	(d<root> / --LEX--)	cause-01	()	44	APP_snt3	true
24	it's	_	it's	PRP	O	_	and	_	0	IGNORE	true
25	it's	_	it's	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	44	APP_snt2	true
26	that's	_	that's	PRP	O	_	multi-sentence	_	0	IGNORE	true
27	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	—	_	—	:	O	(d<root> / --LEX--)	thing	()	37	APP_dom	true
30	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
33	the,	_	the,	VBZ	O	_	cause-01	_	0	IGNORE	true
34	the	_	the	DT	O	_	more	_	0	IGNORE	true
35	least	_	least	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	expensive	_	expensive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	alternative	_	alternative	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	25	APP_s	true
38	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
39	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	41	MOD_mod	true
40	will	_	will	MD	O	_	thing	_	0	IGNORE	true
41	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	37	MOD_s	true
42	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
43	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
44	.	_	.	.	O	(m<root> / --LEX--  :snt2 (s<snt2>)  :snt3 (c2<snt3>)  :snt1 (c<snt1>))	multi-sentence	(snt2(), snt1(), snt3())	0	ROOT	true

nodealignment=[36@@p@@expensive, 31@@p@@this, 16@@p@@probable, 21@@p@@more, 44@@m@@multi-sentence, 17@@s@@person, 32@@n@@point, 23@@d@@cause-01, 8@@d@@we, 37@@r@@alternative, 25@@s@@_NAME_, 9@@s@@do-02, 35@@s@@least, 43@@d@@she, 20@@explicitanon0@@100, 1@@d@@You, 29@@d@@thing, 18@@p@@even, 41@@s@@work-09, 4@@s@@pin,, 20@@m@@multiple, 39@@p@@probable]
sentence=1	From	from	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	wireless	_	wireless	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	headset	_	headset	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
5	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
6	dangled	_	dangle	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	neck,	_	neck,	NNP	O	_	member	_	0	IGNORE	true
10	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	marine	_	marine	JJ	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	buddies	_	buddy	NNS	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	14	APP_s	true
14	called	_	call	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	with	_	with	IN	O	_	i	_	0	IGNORE	true
18	joyous	_	joyous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	profanity	_	profanity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	bass	_	bass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
23	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
24	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	gunfire	_	gunfire	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@p@@old, 19@@d@@profanity, 14@@s@@call-02, 12@@n@@_NAME_, 25@@p@@gunfire, 24@@p@@digital, 18@@p@@joyous, 6@@s@@dangle-01, 3@@p@@wireless, 20@@a@@and, 13@@b@@buddy, 13@@h@@have-rel-role-91, 12@@m@@military, 22@@d@@bass, 4@@m@@headset]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	finally,	_	finally,	NNP	O	_	and	_	0	IGNORE	true
3	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	6	APP_o2	true
4	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	call	_	call	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	APP_op2	true
7	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	that's	_	that's	WDT	O	_	name-01	_	0	IGNORE	true
9	loose,	_	loose,	ADD	O	_	shit	_	0	IGNORE	true
10	and	_	and	CC	O	_	$LEMMA$	_	6	IGNORE	true
11	floating	_	float	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	around	_	around	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	7	MOD_s	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	steam	_	steam	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o	true
16	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[16@@b@@here, 13@@s@@resemble-01, 7@@d@@something, 15@@d@@steam-01, 1@@a@@and, 12@@b@@around, 14@@p@@this, 5@@d@@we, 6@@b@@call-01, 3@@d@@amr-unknown, 11@@s@@float-01]
sentence=1	Implementing	implementing	implement	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	Tax	tax	tax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
4	System	system	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	allows	_	allow	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
8	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
9	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	4	MOD_s	true
10	under	_	under	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	9	APP_o	true
11	$	_	$	$	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	dollar	()	10	APP_op1	true
12	250,000	_	250,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
13	to	_	to	TO	O	_	monetary-quantity	_	0	IGNORE	true
14	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	MOD_o	true
17	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
18	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@p@@tax-01, 4@@d@@system, 6@@s@@allow-01, 11@@m2@@monetary-quantity, 15@@p@@all, 12@@explicitanon0@@_NUMBER_, 18@@d@@money, 8@@c@@country, 9@@s@@make-05, 8@@n@@_NAME_, 10@@o@@under, 16@@s@@include-91, 1@@s@@implement-01, 11@@d2@@dollar, 7@@s@@work-01, 14@@s@@keep-01]
sentence=1	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	notes	_	note	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	35	APP_o	true
8	had	_	have	VBD	O	_	person	_	0	IGNORE	true
9	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	from	_	from	IN	O	_	thing	_	0	IGNORE	true
11	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	9	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	MOD_op1	true
15	being	_	be	VBG	O	_	person	_	0	IGNORE	true
16	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	cause	_	cause	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op2	true
20	or	_	or	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	0	ROOT	true
21	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
22	leading	_	lead	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	20	MOD_s	true
23	to	_	to	IN	O	_	thing	_	0	IGNORE	true
24	memory's	_	memory'	NNS	O	_	and	_	0	IGNORE	true
25	importance	_	importance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
30	sources,	_	sources,	NNP	O	_	and	_	0	IGNORE	true
31	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	20	APP_op1	true
32	—	_	—	:	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	MOD_s	true
33	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
34	essentially	_	essentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	essential	(mod())	35	MOD_mod	true
35	changed	_	change	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	32	APP_o	true
36	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_dom	true
37	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
38	um	_	um	UH	O	_	$LEMMA$	_	0	IGNORE	true
39	"it's	_	"it's	XX	O	_	and	_	0	IGNORE	true
40	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
41	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	43	MOD_mod	true
42	persistent	_	persistent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	MOD_s	true
43	element	_	element	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	35	APP_o2	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	our	_	our	PRP$	O	_	$LEMMA$	_	20	IGNORE	true
46	existence	_	existence	NN	O	(d<root> / --LEX--)	exist-01	()	43	APP_poss	true
47	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
48	gives	_	give	VBZ	O	_	$LEMMA$-01	_	20	IGNORE	true
49	meaning	_	meaning	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	43	MOD_s	true
50	to	_	to	IN	O	_	mean-01	_	0	IGNORE	true
51	the	_	the	DT	O	_	thing	_	0	IGNORE	true
52	inheritance	_	inheritance	NN	O	(d<root> / --LEX--)	inherit-01	()	49	APP_o	true
53	of	_	of	IN	O	_	thing	_	0	IGNORE	true
54	memory"	_	memory"	ADD	O	_	thing	_	0	IGNORE	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@o@@or, 12@@p@@last, 36@@d@@it, 43@@h@@element, 25@@d@@importance, 31@@d@@i, 34@@p@@essential, 2@@explicitanon0@@lot, 32@@c@@—-01, 5@@d@@note, 13@@s@@meet-03, 9@@s@@take-01, 14@@a@@and, 11@@d@@our, 52@@d@@inherit-01, 42@@s@@persistent-02, 49@@s@@mean-01, 7@@d@@i, 46@@d@@exist-01, 19@@d@@cause-01, 41@@p@@1, 21@@s@@like-01, 22@@t@@lead-03, 35@@b@@change-01, 16@@s@@more, 27@@p@@each]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	thing	_	0	IGNORE	true
3	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	thing	_	0	IGNORE	true
5	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	these	_	these	DT	O	(d<root> / --LEX--)	this	()	11	APP_dom	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	tool	_	tool	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	will	_	will	MD	O	_	thing	_	0	IGNORE	true
14	enable	_	enable	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	you	_	you	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	engage	_	engage	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	14	APP_o	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	learning	_	learn	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	20	MOD_mod	true
20	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	not	_	not	RB	O	_	-	_	0	IGNORE	true
26	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
27	suits	_	suit	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
28	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	needs,	_	needs,	NNS	O	(d<root> / --LEX--)	and	()	27	APP_o	true
30	but	_	but	CC	O	_	contrast-01	_	0	IGNORE	true
31	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	gives	_	give	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_o	true
33	you	_	you	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	3	MOD_s	true
34	ownership	_	ownership	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possess-01	(s())	32	APP_s	true
35	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
37	own	_	own	JJ	O	_	person	_	0	IGNORE	true
38	learning	_	learning	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	39	APP_s	true
39	processes	_	process	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	34	APP_s	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@p@@each, 29@@d@@and, 33@@s@@you, 14@@s@@enable-01, 38@@d@@learning-01, 7@@d@@this, 15@@p@@you, 39@@s@@process-02, 11@@r@@tool, 20@@d@@material, 31@@p@@also, 34@@s@@possess-01, 27@@s@@suit-01, 3@@s@@find-01, 1@@d@@You, 10@@s@@strong-02, 17@@s@@engage-01, 32@@s@@give-01, 19@@p@@learn-01]
sentence=1	NASA	_name_	NASA	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	offering	_	offer	VBG	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	shuttle	_	shuttle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	heat	_	heat	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
7	shield	_	shield	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
8	tiles	_	tile	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	schools	_	school	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o2	true
12	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	MOD_s	true
15	to	_	to	TO	O	_	person	_	0	IGNORE	true
16	share	_	share	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	APP_o	true
17	technology	_	technology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	piece	_	piece	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	18	APP_op2	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_poss	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
26	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	16	APP_o2	true
27	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[11@@a@@and, 23@@d@@history, 26@@p2@@person, 7@@i@@shield-01, 5@@p@@shuttle, 18@@a@@and, 1@@c@@company, 12@@d@@university, 8@@d@@tile, 20@@h@@piece, 4@@t@@offer-01, 22@@p@@space, 3@@p@@also, 26@@e2@@study-01, 6@@d@@heat-01, 1@@n@@_NAME_, 16@@b@@share-01, 10@@d@@school, 14@@c@@want-01, 17@@d@@technology]
sentence=1	So,	so,	So,	NNS	O	_	cause-01	_	0	IGNORE	true
2	it’s	_	it’s	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
3	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	great,	_	great,	NNP	O	_	so	_	0	IGNORE	true
5	prayerful	_	prayerful	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	gratitude	_	gratitude	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	2	APP_o	true
7	to	_	to	IN	O	_	say-01	_	0	IGNORE	true
8	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
9	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	8	MOD_s	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
13	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	in	_	in	IN	O	_	have-03	_	0	IGNORE	true
15	blue,	_	blue,	NNS	O	_	_NAME_	_	0	IGNORE	true
16	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	sadly	_	sadly	RB	O	(s<root> / --LEX--  :ARG2 (g<s>))	sad-02	(s())	19	MOD_s	true
19	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
21	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_o	true
22	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
23	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	appreciation	_	appreciation	NN	O	(d<root> / --LEX--)	appreciate-02	()	28	APP_s	true
25	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
26	them	_	they	PRP	O	_	cause-01	_	0	IGNORE	true
27	cannot	_	cannot	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	APP_o	true
28	lapse	_	lapse	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	APP_s	true
29	into	_	into	IN	O	_	-	_	0	IGNORE	true
30	apathy	_	apathy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op1	true
31	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_o	true
32	acceptance	_	acceptance	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accept-01	(s())	31	APP_op2	true
33	of	_	of	IN	O	_	-	_	0	IGNORE	true
34	actions	_	action	NNS	O	(d<root> / --LEX--)	act-02	()	32	APP_s	true
35	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
36	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
37	fundamentally	_	fundamentally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	fundamental	(mod())	38	MOD_mod	true
38	incompatible	_	incompatible	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	compatible	(s())	34	MOD_s	true
39	with	_	with	IN	O	_	-	_	0	IGNORE	true
40	the	_	the	DT	O	_	thing	_	0	IGNORE	true
41	purpose	_	purpose	NN	O	_	have-$LEMMA$-91	_	0	IGNORE	true
42	of	_	of	IN	O	_	thing	_	0	IGNORE	true
43	policing,	_	policing,	NNP	O	_	mean-01	_	0	IGNORE	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	purpose	_	purpose	NN	O	_	$LEMMA$	_	0	IGNORE	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	policing	_	policing	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@a@@or, 9@@s@@include-91, 17@@d@@we, 18@@s@@sad-02, 21@@s@@say-01, 2@@s@@it’s-01, 38@@explicitanon0@@-, 6@@s@@gratitude, 19@@o@@obligate-01, 37@@p@@fundamental, 38@@p@@compatible, 13@@d@@woman, 24@@d@@appreciate-02, 34@@d@@act-02, 28@@s@@lapse-01, 5@@p@@prayerful, 11@@d@@man, 12@@a@@and, 27@@s@@possible-01, 30@@d@@apathy, 32@@s@@accept-01, 8@@p@@most]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	5	MOD_s	true
3	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	ran	_	run	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	an	_	an	DT	O	_	thing	_	0	IGNORE	true
7	article	_	article	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	a_couple_of_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
9	back	_	back	RB	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	7	MOD_mod	true
10	that	_	that	WDT	O	_	now	_	0	IGNORE	true
11	was,	_	was,	VBP	O	_	$LEMMA$-01	_	0	IGNORE	true
12	"No	"no	"No	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	Jennifer_Lopez_News	_name_	News	NNP	O	(p<root> / publication  :name (n / --LEX--)  :mod-of (q<mod>))	_NAME_	(mod())	7	MOD_mod	true
14	Today"	today"	Today"	NNPS	O	_	and	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@article, 13@@p@@publication, 13@@n@@_NAME_, 4@@d@@we, 8@@n@@_NAME_, 9@@b@@before, 12@@p@@_NAME_, 1@@explicitanon0@@1, 2@@s@@exemplify-01, 9@@n@@now, 5@@s@@run-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
3	give	_	give	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
5	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	to	_	to	TO	O	_	location	_	0	IGNORE	true
7	absorb	_	absorb	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
8	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	moisture	_	moisture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	MOD_s	true
12	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
16	pan	_	pan	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
17	.	_	.	.	O	_	be-located-at-91	_	0	IGNORE	true

nodealignment=[8@@p@@any, 3@@b@@give-01, 16@@b@@pan, 12@@p@@still, 11@@s@@possible-01, 5@@d@@time, 7@@i@@absorb-01, 9@@d@@moisture, 1@@d@@this, 4@@d@@it]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	makes	_	make	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
3	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	true
5	language	_	language	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_o2	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	proto-language	_	proto-language	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
8	—	_	—	:	O	_	mean-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
10	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	branches	_	branch	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	into	_	into	IN	O	_	-	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	languages	_	language	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[5@@m@@language, 4@@o@@ordinal-entity, 10@@d@@language, 18@@g@@language, 16@@d@@family, 7@@r@@proto-language, 3@@d@@your, 4@@explicitanon0@@1, 1@@d@@this, 2@@b@@make-02, 12@@s@@branch-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	elected	_	elect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	representatives	_	representative	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	represent-01	()	3	APP_mod	true
7	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
8	favor	_	favor	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	proposed	_	propose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	is	_	be	VBZ	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	monetary-quantity	(mod())	23	MOD_mod	true
13	greater	_	great	JJR	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	great	(s(), o())	23	MOD_o	true
14	than	_	than	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	those	_	those	DT	O	_	that	_	0	IGNORE	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	oppose	_	oppose	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	12	MOD_s	true
18	it,	_	it,	XX	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
21	will	_	will	MD	O	_	person	_	0	IGNORE	true
22	be	_	be	VB	O	_	person	_	0	IGNORE	true
23	enacted	_	enact	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
24	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@s@@great, 6@@p2@@person, 23@@s@@enact-01, 8@@s@@favor-01, 6@@e2@@represent-01, 3@@explicitanon0@@number, 17@@s@@oppose-01, 10@@s@@propose-01, 20@@d@@law, 12@@p@@monetary-quantity, 5@@s@@elect-01, 11@@d@@law]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
3	those	_	those	DT	O	_	that	_	0	IGNORE	true
4	who	_	who	WP	O	_	person	_	0	IGNORE	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	person	(s())	1	MOD_s	true
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	felt	_	feel	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
8	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	APP_o	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	give	_	give	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
11	me	_	I	PRP	O	_	and	_	0	IGNORE	true
12	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
13	support,	_	support,	NNS	O	_	and	_	0	IGNORE	true
14	let	_	let	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	APP_op2	true
15	me	_	I	PRP	O	_	and	_	0	IGNORE	true
16	say	_	say	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	APP_o	true
17	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
18	leave	_	leave	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-15	(s())	16	APP_o	true
19	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
20	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	bitterness	_	bitterness	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	1	MOD_mod	true
24	who	_	who	WP	O	_	person	_	0	IGNORE	true
25	have	_	have	VBP	O	_	person	_	0	IGNORE	true
26	opposed	_	oppose	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
27	me,	_	me,	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	18	MOD_o	true
29	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	us,	_	us,	FW	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	include-91	(mod())	1	MOD_mod	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
35	analysis,	_	analysis,	NNS	O	_	thing	_	0	IGNORE	true
36	have	_	have	VBP	O	_	person	_	0	IGNORE	true
37	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	1	APP_op1	true
38	concerned	_	concern	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
39	with	_	with	IN	O	_	-	_	0	IGNORE	true
40	the	_	the	DT	O	_	thing	_	0	IGNORE	true
41	good	_	good	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_o	true
42	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
43	the	_	the	DT	O	_	person	_	0	IGNORE	true
44	country,	_name_	country,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
45	however	_	however	RB	O	_	contrast-01	_	0	IGNORE	true
46	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
47	judgments	_	judgment	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	judge-01	()	49	APP_s	true
48	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	APP_s	true
49	differ	_	differ	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	APP_s	true
50	.	_	.	.	O	_	have-concession-91	_	0	IGNORE	true

nodealignment=[23@@p@@that, 6@@explicitanon0@@-, 16@@c@@say-01, 12@@d@@your, 29@@p@@all, 10@@d@@give-01, 20@@explicitanon0@@-, 1@@a@@and, 18@@s@@leave-15, 47@@d@@judge-01, 34@@p@@final, 14@@c@@let-01, 5@@s@@person, 8@@s@@possible-01, 7@@s@@feel-01, 38@@s@@concern-01, 47@@t@@thing, 41@@d@@good-01, 48@@s@@possible-01, 31@@explicitanon0@@include-91, 21@@t@@bitterness, 26@@s@@oppose-01, 49@@s@@differ-01, 37@@s@@person, 28@@s@@cause-01]
sentence=1	For	for	for	IN	O	_	and	_	0	IGNORE	true
2	example,	_	example,	NNS	O	_	and	_	0	IGNORE	true
3	imagine	_	imagine	VBP	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	have	_	have	VBP	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	3	APP_s	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	describe	_	describe	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	APP_o	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	worried	_	worried	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	11	MOD_s	true
10	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	7	APP_o2	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	fire	_	fire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
14	that	_	that	WDT	O	_	hate-01	_	0	IGNORE	true
15	broke	_	break	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	13	MOD_s	true
16	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	when	_	when	WRB	O	_	i	_	0	IGNORE	true
21	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	roommate	_	roommate	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_s	true
23	tried	_	try	VBD	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	15	MOD_mod	true
24	cooking	_	cook	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_o	true
25	shish	_	shish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	kebabs	_	kebab	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	fireplace	_	fireplace	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@d@@school, 24@@s@@cook-01, 11@@h@@have-org-role-91, 26@@d@@kebab, 5@@h@@obligate-01, 7@@b@@describe-01, 13@@d@@fire, 9@@s@@worried-02, 25@@p@@shish, 3@@b@@imagine-01, 23@@s2@@try-01, 3@@explicitanon0@@imperative, 22@@p@@person, 3@@y@@you, 22@@f@@roommate, 29@@b@@fireplace, 22@@h@@have-rel-role-91, 15@@s@@break-13, 19@@b@@room, 11@@o@@official, 4@@d@@you, 11@@p@@person]
sentence=1	"That	"that	"That	``	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	people,	_	people,	NNP	O	_	include-91	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
11	nation	_	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	14	MOD_s	true
14	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	MOD_s	true
15	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
16	clue	_	clue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@"That, 4@@d@@group, 14@@s@@have-03, 11@@d@@nation, 13@@s@@true-01, 7@@a@@and, 15@@explicitanon0@@-, 16@@d@@clue]
sentence=1	To	to	to	TO	O	_	thing	_	0	IGNORE	true
2	gain	_	gain	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	16	MOD_mod	true
3	insight	_	insight	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
4	into	_	into	IN	O	_	thing	_	0	IGNORE	true
5	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	6	MOD_mod	true
6	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	context	_	context	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	L2	l2	L2	NNP	O	_	_NAME_	_	0	IGNORE	true
12	research,	_	research,	NNP	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	systematic	_	systematic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	review	_	review	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
16	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	synthesis	_	synthesis	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	L2	l2	L2	NNP	O	_	name	_	0	IGNORE	true
21	studies	_	study	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_s	true
22	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
23	journal	_	journal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	articles	_	article	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
25	that	_	that	WDT	O	_	name	_	0	IGNORE	true
26	self-labeled	_	self-labele	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
27	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
28	replications	_	replication	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@synthesis, 24@@b@@article, 6@@d@@issue-02, 21@@d@@study-01, 16@@s@@provide-01, 23@@p@@journal, 26@@s@@self-labele-01, 2@@s@@gain-02, 15@@d@@review-01, 5@@p@@this, 14@@p@@systematic, 28@@d@@replication, 3@@s@@insight-01]
sentence=1	Additionally,	additionally,	additionally,	CD	O	_	cause-01	_	0	IGNORE	true
2	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	asked	_	ask	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
8	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	respondents	_	respondent	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	respond-01	()	7	APP_s	true
10	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
11	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	prior	_	prior	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	discrimination	_	discrimination	NN	O	(d<root> / --LEX--)	discriminate-02	()	11	APP_o	true
14	experiences,	_	experiences,	NNP	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	built-in	_	built-in	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	skip	_	skip	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
18	pattern	_	pattern	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	resulted	_	result	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
22	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	cases	_	case	NNS	O	(d<root> / --LEX--)	$LEMMA$-03	()	19	APP_o	true
26	scored	_	score	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
27	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
28	missing	_	miss	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_o	true
29	(legitimate	_	(legitimate	.	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
30	skip)	_	skip)	VBN	O	_	-	_	0	IGNORE	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@ask-01, 4@@d@@question-01, 16@@p@@built-in, 13@@d@@discriminate-02, 28@@d@@miss-01, 17@@p@@skip-01, 19@@s@@result-01, 6@@p@@only, 11@@s@@report-01, 22@@p@@large, 3@@p@@this, 23@@explicitanon0@@number, 2@@s@@cause-01, 29@@t@@(legitimate, 18@@d@@pattern, 26@@s@@score-01, 9@@e2@@respond-01, 12@@n@@prior, 9@@p2@@person, 25@@d@@case-03]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	2010_season	_name_	season	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	cut	_	cut	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	short	_	short	JJ	O	(d<root> / --LEX--)	$LEMMA$-06	()	4	APP_o	true
6	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
7	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
8	injury	_	injury	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	injure-01	(s())	6	APP_s	true
9	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	medial	_	medial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	collateral	_	collateral	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	ligament,	_	ligament,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	which	_	which	WDT	O	_	and	_	0	IGNORE	true
15	required	_	require	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
16	surgery.	_	surgery.	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
17	[8	_	[8	NNP	O	(d<root> / --LEX--)	_NUMBER_	()	15	APP_o	true
18	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@s@@require-01, 2@@n@@_NAME_, 17@@d@@_NUMBER_, 6@@s@@cause-01, 4@@s@@cut-02, 5@@d@@short-06, 11@@p@@medial, 12@@d@@collateral, 8@@s@@injure-01, 2@@e@@event]
sentence=1	Third,	third,	third,	CD	O	_	so	_	0	IGNORE	true
2	specialization	_	specialization	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	allows	_	allow	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	businesses	_	business	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	take	_	take	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	APP_o	true
7	advantage	_	advantage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
9	economies	_	economy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
10	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
11	scale,	_	scale,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
15	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
16	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	goods,	_	goods,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
20	level	_	level	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	production	_	production	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	produce-01	(mod())	20	MOD_mod	true
23	increases,	_	increases,	NNS	O	_	and	_	0	IGNORE	true
24	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
25	average	_	average	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	cost	_	cost	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	32	APP_s	true
27	of	_	of	IN	O	_	thing	_	0	IGNORE	true
28	producing	_	produce	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
29	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	individual	_	individual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	unit	_	unit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	declines	_	decline	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@c@@cost-01, 26@@t@@thing, 9@@d@@economy, 2@@d@@specialization, 16@@explicitanon0@@many, 4@@d@@business, 6@@b@@take-01, 28@@s@@produce-01, 20@@p@@level, 32@@s@@decline-01, 7@@d@@advantage, 30@@p@@individual, 3@@s@@allow-01, 22@@p@@produce-01, 31@@d@@unit, 29@@p@@each, 25@@s@@average-01, 13@@s@@mean-01]
sentence=1	Get	get	Get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	masking	_	mask	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	tape	_	tape	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	1	APP_o	true
5	packing	_	packing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
6	tape	_	tape	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op2	true
7	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
8	tape	_	tape	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	screws	_	screw	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op3	true
10	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
11	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	things	_	thing	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-out-09	(s(), o())	13	MOD_s	true
16	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@p@@other, 3@@d@@tape, 12@@p@@little, 13@@p@@thing, 2@@s@@mask-01, 1@@s@@Get-01, 18@@d@@something, 4@@a@@or, 19@@a@@back, 7@@d@@and, 9@@d@@screw, 10@@p@@and, 6@@d@@tape, 5@@p@@packing-01, 8@@p@@tape, 15@@s@@come-out-09]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	1	APP_op2	true
4	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	Arabs	_name_	Arabs	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
8	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@a@@and, 4@@n@@already, 3@@d@@person, 8@@d@@it, 5@@c@@country, 7@@s@@do-02, 5@@n@@_NAME_]
sentence=1	In	in	in	IN	O	_	person	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	context	_	context	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	strengthening	_	strengthen	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
6	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	5	MOD_mod	true
7	cooperation,	_	cooperation,	NNS	O	_	and	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	is	_	be	VBZ	O	_	free-04	_	0	IGNORE	true
11	committed	_	commit	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	enhanced	_	enhanced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	partnership	_	partnership	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	partner-01	(s(), o())	11	APP_o	true
17	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
18	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	21	MOD_mod	true
20	organizations	_	organization	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
22	initiatives	_	initiative	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	that	_	that	WDT	O	_	and	_	0	IGNORE	true
24	serve	_	serve	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
25	the	_	the	DT	O	_	and	_	0	IGNORE	true
26	promotion	_	promotion	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	promote-02	(s())	37	APP_op1	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	29	MOD_s	true
29	neighbourly	_	neighbourly	RB	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
30	relations;	_	relations;	NNP	O	_	and	_	0	IGNORE	true
31	the	_	the	DT	O	_	and	_	0	IGNORE	true
32	strengthening	_	strengthening	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op1	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	regional	_	regional	JJ	O	_	region	_	0	IGNORE	true
35	peace,	_	peace,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
36	security	_	security	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	APP_s	true
38	stability;	_	stability;	NNP	O	_	and	_	0	IGNORE	true
39	ensuring	_	ensure	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op2	true
40	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	41	MOD_mod	true
41	support	_	support	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
42	for	_	for	IN	O	_	and	_	0	IGNORE	true
43	integration	_	integration	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	integrate-01	(s())	41	APP_s	true
44	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
45	Euro-Atlantic	euro-atlantic	Euro-Atlantic	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	43	APP_s	true
46	structures,	_	structures,	NNS	O	_	_NAME_	_	0	IGNORE	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	16	APP_o	true
48	attracting	_	attract	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_op3	true
49	financing	_	financing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	fund-01	(s())	48	APP_s	true
50	for	_	for	IN	O	_	thing	_	0	IGNORE	true
51	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	54	MOD_mod	true
52	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
53	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	11	MOD_mod	true
54	projects	_	project	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
55	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
56	priority	_	priority	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	57	MOD_s	true
57	fields	_	field	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
58	such	_	such	JJ	O	_	and	_	0	IGNORE	true
59	as	_	as	IN	O	_	and	_	0	IGNORE	true
60	energy,	_	energy,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
61	transportation	_	transportation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_op1	true
62	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	57	MOD_mod	true
63	telecommunications	_	telecommunication	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	62	APP_op2	true
64	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[54@@d@@project, 24@@s@@serve-01, 57@@b@@field, 20@@d@@organization, 45@@c@@country, 14@@s@@more, 22@@d@@initiative, 18@@p@@all, 29@@d@@neighbourly, 16@@s@@partner-01, 9@@d@@country, 15@@s@@enhanced-01, 62@@a@@and, 19@@p@@region, 63@@d@@telecommunication, 41@@s@@support-01, 11@@s@@commit-01, 39@@s@@ensure-01, 36@@d@@security, 26@@s@@promote-02, 43@@s@@integrate-01, 5@@r@@strengthen-01, 49@@s@@fund-01, 32@@s@@strengthening-01, 48@@s@@attract-01, 40@@p@@politics, 61@@d@@transportation, 28@@s@@good-02, 56@@s@@priority, 37@@a@@and, 21@@a@@and, 53@@p@@region, 47@@a@@and, 51@@p@@nation, 6@@p@@region, 45@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	0	ROOT	true
4	features	_	feature	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_o	true
5	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
6	increasing	_	increase	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	challenges,	_	challenges,	NN	O	_	and	_	0	IGNORE	true
8	rules	_	rule	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	that	_	that	WDT	O	_	and	_	0	IGNORE	true
10	establish	_	establish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	what	_	what	WP	O	_	thing	_	0	IGNORE	true
12	can	_	can	MD	O	(d<root> / --LEX--)	possible-01	()	13	APP_op1	true
13	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	3	APP_o2	true
14	cannot	_	cannot	VB	O	(d<root> / --LEX--)	possible-01	()	10	APP_o	true
15	be	_	be	VB	O	_	thing	_	0	IGNORE	true
16	done,	_	done,	NNP	O	_	and	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
18	involvement	_	involvement	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	involve-01	(o(s()))	17	APP_op2	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	player	_	player	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	play-01	()	18	APP_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	quest	_	quest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
25	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
26	gain	_	gain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	APP_op1	true
27	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
28	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	24	MOD_mod	true
29	win	_	win	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_op2	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	game	_	game	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
32	(Kirriemuir	(kirriemuir	(Kirriemuir	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	29	APP_s	true
33	&	_	&	CC	O	_	$LEMMA$	_	0	IGNORE	true
34	McFarlane,	mcfarlane,	McFarlane,	NNP	O	_	and	_	0	IGNORE	true
35	2004;	_	2004;	CD	O	_	and	_	0	IGNORE	true
36	Prensky,	prensky,	prensky,	XX	O	_	and	_	0	IGNORE	true
37	2005)	_	2005)	CD	O	_	and	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@e2@@play-01, 29@@s@@win-01, 32@@n@@_NAME_, 21@@p2@@person, 32@@p@@person, 12@@d@@possible-01, 4@@s@@feature, 26@@s@@gain-02, 3@@b@@have-03, 31@@p@@game, 8@@d@@rule, 27@@d@@skill, 10@@s@@establish-01, 2@@d@@game, 14@@d@@possible-01, 6@@s@@increase-01, 24@@s@@quest-01, 28@@s@@and, 17@@a@@and, 13@@o@@and, 18@@o@@involve-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	4	MOD_mod	true
4	granddaughter	_	granddaughter	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	2	APP_o	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	survived	_	survive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@p@@person, 3@@explicitanon0@@1, 8@@d@@war, 4@@f@@granddaughter, 1@@d@@i, 6@@s@@survive-01, 2@@s@@have-03, 4@@h@@have-rel-role-91]
sentence=1	Uh	uh	uh	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	prevailing	_	prevail	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	wages,	_	wages,	NNP	O	(d<root> / --LEX--)	expressive	()	0	ROOT	true
4	that,	_	that,	NNP	O	_	expressive	_	0	IGNORE	true
5	um,	_	um,	VBP	O	_	-	_	0	IGNORE	true
6	that	_	that	WDT	O	_	expressive	_	0	IGNORE	true
7	indicate	_	indicate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
8	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	9	MOD_s	true
9	levels	_	level	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	agility,	_	agility,	NNS	O	_	thing	_	0	IGNORE	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	15	MOD_s	true
15	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
16	working	_	work	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@m@@level, 8@@s@@differ-02, 7@@s@@indicate-01, 15@@d@@man, 1@@p@@uh, 16@@s@@work-01, 3@@d@@expressive, 14@@s@@differ-02, 2@@s@@prevail-02]
sentence=1	“Daniels!	“daniels!	“Daniels!	NNP	O	_	_NAME_	_	0	IGNORE	true
2	Peterson!	_name_	Peterson!	NNP	O	_	and	_	0	IGNORE	true
3	Foster!_Brown!_Rye	_name_	Rye	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
4	...”	_	..."	,	O	_	expressive	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	voice	_	voice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	called	_	call	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	0	ROOT	true
8	out	_	out	RP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_o	true
9	above	_	above	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	sounds	_	sound	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	filled	_	fill	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	flight	_	flight	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	fly-01	(mod())	17	MOD_mod	true
17	deck	_	deck	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@d@@voice, 11@@p@@other, 8@@s@@out, 9@@b@@above, 17@@d@@deck, 7@@s@@call-out-03, 12@@n@@sound, 14@@s@@fill-01, 16@@p@@fly-01, 3@@p@@person, 3@@n@@_NAME_]
sentence=1	Among	among	among	IN	O	_	include-91	_	0	IGNORE	true
2	these	_	these	DT	O	(d<root> / --LEX--)	this	()	3	APP_o	true
3	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	11	MOD_s	true
4	the_Pyramid_of_the_Sun	_name_	Sun	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	11	APP_op1	true
5	(which	_	(which	NNPS	O	_	_NAME_	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	9	MOD_mod	true
8	hundred	_	hundred	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	100	(mod())	9	MOD_mod	true
9	feet	_	foot	NNS	O	(d<root> / distance-quantity  :unit (k / --LEX--)  :quant-of (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
10	high)	_	high)	.	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	the_Pyramid_of_the_Moon	_name_	Moon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_op2	true
13	(one	_	(one	-LRB-	O	_	1	_	0	IGNORE	true
14	hundred	_	hundred	CD	O	_	100	_	0	IGNORE	true
15	and	_	and	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
16	fifty	_	fifty	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	50	(mod())	17	MOD_mod	true
17	feet	_	foot	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	15	APP_op2	true
18	high)	_	high)	ADD	O	_	and	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@a@@and, 3@@s@@person, 4@@n@@newspaper, 15@@b2@@and, 2@@d@@this, 8@@explicitanon0@@100, 4@@n2@@_NAME_, 9@@d@@distance-quantity, 7@@explicitanon0@@2, 16@@explicitanon0@@50, 17@@d@@distance-quantity, 12@@p@@person, 12@@n@@_NAME_, 17@@m@@foot, 9@@k@@foot]
sentence=1	Lots	lots	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	ingredients	_	ingredient	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	it	_	it	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	kinda	_	kinda	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	9	MOD_mod	true
8	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	9	MOD_s	true
9	counteracts	_	counteract	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
10	what	_	what	WP	O	_	thing	_	0	IGNORE	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	would	_	would	MD	O	_	thing	_	0	IGNORE	true
13	typically	_	typically	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	typical-02	(s())	14	MOD_s	true
14	want	_	want	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
17	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@p@@kind-of, 1@@explicitanon0@@lot, 13@@s@@typical-02, 3@@d@@ingredient, 14@@s@@want-01, 5@@b@@it, 11@@d@@you, 8@@s@@resemble-01, 9@@s@@counteract-01, 17@@d@@hair]
sentence=1	“I	“i	“I	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
3	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	told	_	tell	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	sickness	_	sickness	NN	O	(d<root> / --LEX--)	sick-05	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
10	confusion	_	confusion	NN	O	(d<root> / --LEX--)	confuse-01	()	9	APP_op2	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	9	MOD_s	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	travelling	_	travel	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@come-03, 5@@d@@you, 14@@d@@time, 4@@b@@tell-01, 9@@a@@and, 3@@n@@already, 8@@d@@sick-05, 1@@d@@_NAME_, 10@@d@@confuse-01, 15@@s@@travel-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op1	true
4	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	me	_	I	PRP	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	news	_	news	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	5	MOD_mod	true
13	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	18	MOD_s	true
14	hadn’t	_	hadn’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
15	overslept;	_	overslept;	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	contrast-01	(mod())	5	MOD_mod	true
16	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	I’d	i’d	i’d	JJ	O	_	thing	_	0	IGNORE	true
18	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	MOD_o	true
19	was	_	be	VBD	O	_	contrast-01	_	0	IGNORE	true
20	miss	_	miss	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_s	true
21	breakfast:	_	breakfast:	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
22	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	hadn’t	_	hadn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	APP_s	true
25	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
26	wake	_	wake	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
30	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
31	needed	_	need	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	29	MOD_s	true
32	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
33	rest	_	rest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@s@@cause-01, 21@@s@@cause-01, 5@@a@@and, 18@@s@@do-02, 20@@d@@miss-02, 3@@s@@come-01, 16@@p@@all, 12@@p@@i, 22@@d@@they, 14@@explicitanon0@@-, 29@@d@@man, 6@@s@@give-01, 13@@s@@actual-02, 26@@s@@wake-01, 24@@c@@want-01, 28@@p@@old, 23@@explicitanon0@@-, 33@@s@@rest-01, 31@@c@@need-01, 9@@s@@good-02, 10@@d@@news, 2@@n@@soon, 1@@d@@He, 15@@explicitanon0@@contrast-01, 4@@a@@back]
sentence=1	Those	those	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	2	MOD_mod	true
2	monks	_	monk	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	that	_	that	WDT	O	_	-	_	0	IGNORE	true
4	accept	_	accept	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	fakes	_	fake	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
10	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[8@@n@@always, 7@@p@@almost, 5@@d@@money, 2@@d@@monk, 4@@s@@accept-01, 9@@r@@fake, 1@@p@@that]
sentence=1	Cats	cats	cat	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
2	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
3	spend	_	spend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
4	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	outdoors	_	outdoors	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	likely	_	likely	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	16	APP_op1	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	hunt	_	hunt	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	to	_	to	TO	O	_	he	_	0	IGNORE	true
12	find	_	find	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
14	own	_	own	JJ	O	_	person	_	0	IGNORE	true
15	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	may	_	may	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	16	APP_op2	true
18	track	_	track	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-down-02	(s(), o())	17	APP_o	true
19	down	_	down	RP	O	_	thing	_	0	IGNORE	true
20	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
21	mouse	_	mouse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[17@@f@@possible-01, 1@@d@@cat, 8@@f@@likely-01, 5@@b@@outdoors, 18@@s@@track-down-02, 16@@a@@and, 21@@d@@mouse, 4@@d@@time, 20@@p@@that, 12@@i@@find-01, 7@@s@@more, 10@@s@@hunt-01, 15@@d@@food, 3@@s@@spend-02]
sentence=1	Wilkins	_name_	Wilkins	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	observed	_	observe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	1	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	2007	_name_	2007	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	7	MOD_mod	true
6	starting	_	start	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	date	_	date	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	APP_s	true
8	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	donation	_	donation	NN	O	(d<root> / --LEX--)	donate-01	()	7	APP_mod	true
11	program,	_	program,	NNS	O	_	and	_	0	IGNORE	true
12	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	part	_	part	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	2	MOD_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the_Andy_Warhol_Foundation	_name_	Foundation	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
17	for	_	for	IN	O	_	3	_	0	IGNORE	true
18	the_Visual_Arts,	_name_	Arts,	NNP	O	_	_NAME_	_	0	IGNORE	true
19	coincided	_	coincide	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
20	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	20th	_name_	20th	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	20	(mod())	23	MOD_mod	true
23	anniversary	_	anniversary	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	of	_	of	IN	O	_	name	_	0	IGNORE	true
25	Andy_Warhol's	_name_	Warhol's	NNP	O	_	_NAME_	_	0	IGNORE	true
26	death	_	death	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	die-01	(mod())	23	MOD_mod	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	1987	_name_	1987	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	26	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@observe-01, 6@@s@@start-01, 1@@p@@person, 23@@d@@anniversary, 16@@n@@_NAME_, 16@@o2@@organization, 28@@explicitanon0@@_NUMBER_, 26@@a@@die-01, 28@@d@@date-entity, 22@@explicitanon0@@20, 19@@s@@coincide-01, 22@@o@@ordinal-entity, 7@@n@@date, 5@@explicitanon0@@_NUMBER_, 1@@n@@_NAME_, 10@@d@@donate-01, 5@@d@@date-entity, 14@@s@@part]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	definition	_	definition	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	define-01	(s(), o())	0	ROOT	true
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	4	MOD_s	true
6	disruptive	_	disruptive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	5	MOD_s	true
7	technology,	_	technology,	NNS	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
9	focus	_	focus	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
10	on	_	on	IN	O	_	mean-01	_	0	IGNORE	true
11	creating	_	create	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	idea	_	idea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
16	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	15	APP_op2	true
17	that	_	that	WDT	O	_	and	_	0	IGNORE	true
18	negates	_	negate	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	or	_	or	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	4	MOD_s	true
20	challenges	_	challenge	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
22	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
24	products.2	_	products.2	CD	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
25	4	_	4	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	23	MOD_mod	true

nodealignment=[25@@p@@_NUMBER_, 16@@d@@process-02, 9@@s@@focus-01, 15@@a@@or, 22@@d@@process, 19@@s@@or, 5@@s@@include-91, 20@@s@@challenge-01, 24@@d@@products.2, 18@@s@@negate-01, 6@@s@@disruptive, 14@@d@@idea, 23@@a@@or, 11@@s@@create-01, 4@@s@@define-01, 1@@d@@this, 13@@s@@new-01, 21@@s@@establish-01]
sentence=1	Tulsa	_name_	Tulsa	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	one	_	one	CD	O	_	1	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	APP_o	true
5	the	_	the	DT	O	_	law	_	0	IGNORE	true
6	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	7	MOD_mod	true
7	concentrations	_	concentration	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	4	APP_o	true
8	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_s	true
9	Art_Deco	_name_	Deco	NNP	O	(d<root> / --LEX--)	_NAME_	()	7	APP_s	true
10	in	_	in	IN	O	_	country	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	nation,	_	nation,	NNS	O	_	_NAME_	_	0	IGNORE	true
13	having	_	have	VBG	O	_	cause-01	_	0	IGNORE	true
14	been	_	be	VBN	O	_	person	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	booming	_	booming	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
18	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the_1920s	_name_	1920s	CD	O	(explicitanon0<root> / --LEX--  :decade-of (d / date-entity  :time-of (n<mod>)))	_NAME_	(mod())	25	MOD_mod	true
20	when	_	when	WRB	O	_	name	_	0	IGNORE	true
21	the	_	the	DT	O	_	date-entity	_	0	IGNORE	true
22	architecture	_	architecture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	25	MOD_mod	true
25	built	_	build	VBN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
26	by	_	by	IN	O	_	name	_	0	IGNORE	true
27	rich	_	rich	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	oil	_	oil	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	barons	_	baron	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
30	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
31	built	_	build	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_s	true
32	stately	_	stately	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	mansions	_	mansion	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
34	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
35	turned	_	turn	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	29	MOD_s	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	Downtown	downtown	Downtown	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
39	into	_	into	IN	O	_	-	_	0	IGNORE	true
40	a	_	a	DT	O	_	1	_	0	IGNORE	true
41	treasure	_	treasure	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	trove	_	trove	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o2	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	art	_	art	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
45	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@explicitanon0@@_NAME_, 29@@d@@baron, 31@@s@@build-01, 4@@s@@include-91, 37@@p@@Downtown, 35@@b@@turn-02, 8@@s@@include-91, 25@@t@@build-01, 32@@p@@stately, 16@@s@@booming-02, 7@@s@@concentration, 38@@d@@area, 22@@d@@architecture, 28@@p@@oil, 9@@d@@_NAME_, 24@@explicitanon0@@1, 6@@t@@large, 19@@d@@date-entity, 33@@d@@mansion, 41@@p@@treasure, 42@@d@@trove, 27@@p@@rich, 2@@s@@have-03, 17@@d@@city, 1@@c@@city, 24@@o@@ordinal-entity, 1@@n@@_NAME_, 6@@m@@most, 44@@g@@art]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	beaches	_	beach	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
3	which	_	which	WDT	O	_	name	_	0	IGNORE	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	primarily	_	primarily	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	primary	(mod())	7	MOD_mod	true
6	Thai	_name_	Thai	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	visitors	_	visitor	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	visit-01	(s())	2	MOD_s	true
8	however,	_	however,	NNP	O	_	and	_	0	IGNORE	true
9	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	advised	_	advise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
13	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[12@@s@@advise-01, 7@@s@@visit-01, 2@@b@@beach, 11@@explicitanon0@@-, 6@@n@@_NAME_, 9@@d@@this, 6@@c@@country, 5@@p@@primary]
sentence=1	Chalmers	_name_	Chalmers	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	feeling	_	feel	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	forced	_	force	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	3	APP_o	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	accept	_	accept	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	truth:	_	truth:	NNS	O	_	and	_	0	IGNORE	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
14	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-17	(s(), o())	13	MOD_s	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the_Imperial_Naval_Forces	_name_	Forces	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@s@@leave-17, 4@@o@@force-01, 1@@n@@_NAME_, 11@@p@@all, 6@@s@@accept-01, 1@@p@@person, 13@@s@@cause-01, 16@@n@@_NAME_, 9@@d@@they, 3@@c@@feel-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	event	_	0	IGNORE	true
4	sort	_	sort	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	of	_	of	IN	O	_	concern-02	_	0	IGNORE	true
6	fantasy	_	fantasy	NN	O	(t<root> / thing  :domain (t2<dom>)  :ARG1-of (g / --LEX--))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
9	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
10	occurred	_	occur	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	child	_	child	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
15	who	_	who	WP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	amr-unknown	(s(), o())	6	MOD_s	true
16	lost	_	lose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
17	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	relative	_	relative	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@p@@person, 15@@s@@amr-unknown, 6@@g@@fantasy, 12@@p@@any, 19@@f@@relative, 16@@s@@lose-02, 8@@s@@possible-01, 14@@d@@child, 1@@d@@this, 18@@p@@important, 6@@t@@thing, 10@@s@@occur-01, 4@@p@@sort, 19@@h@@have-rel-role-91, 13@@p@@young]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
4	clear,	_	clear,	NNP	O	_	thing	_	0	IGNORE	true
5	however,	_	however,	NNP	O	_	thing	_	0	IGNORE	true
6	whether	_	whether	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	interrogative	(s())	0	ROOT	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	why	_	why	WRB	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	amr-unknown	(s())	6	APP_s	true
9	evolutionary	_	evolutionary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	explanations	_	explanation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	explain-01	(s())	13	APP_s	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	morality	_	morality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	reveal	_	reveal	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
14	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	about	_	about	IN	O	_	thing	_	0	IGNORE	true
16	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
18	beliefs	_	belief	NNS	O	(g<root> / --LEX--  :ARG0 (r2<s>)  :topic-of (c<mod>))	believe-01	(mod(), s())	14	MOD_mod	true
19	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	22	MOD_mod	true
22	troubling	_	troubling	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
23	from	_	from	IN	O	_	thing	_	0	IGNORE	true
24	an	_	an	DT	O	_	thing	_	0	IGNORE	true
25	epistemological	_	epistemological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	perspective	_	perspective	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@d@@something, 12@@d@@morality, 3@@explicitanon0@@-, 25@@p@@epistemological, 26@@s@@perspective, 16@@d@@our, 17@@s@@moral-02, 9@@p@@evolutionary, 8@@t3@@thing, 21@@p@@particular, 13@@s@@reveal-01, 18@@g@@believe-01, 10@@s@@explain-01, 8@@t@@amr-unknown, 22@@s@@troubling-01, 6@@s@@interrogative]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	process,	_	process,	NNS	O	_	and	_	0	IGNORE	true
4	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
5	brain	_	brain	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	6	APP_s	true
6	gathers	_	gather	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	details	_	detail	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
9	inform	_	inform	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	6	APP_o2	true
11	refine	_	refine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	understanding	_	understanding	NN	O	(d<root> / --LEX--)	understand-01	()	10	APP_op2	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	related	_	related	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	16	MOD_s	true
16	concepts	_	concept	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
18	democracy,	_	democracy,	NNP	O	_	mean-01	_	0	IGNORE	true
19	power,	_	power,	NNP	O	_	mean-01	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	16	MOD_op1	true
21	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	20	APP_op2	true
22	.	_	.	.	O	_	free-04	_	0	IGNORE	true

nodealignment=[16@@p@@concept, 15@@s@@relate-01, 21@@d@@free-04, 10@@a@@and, 5@@h@@brain, 6@@b@@gather-01, 20@@a@@and, 7@@d@@detail, 11@@s@@refine-01, 13@@d@@understand-01, 4@@d@@your, 9@@s@@inform-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	focus	_	focus	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	stemmed	_	stem	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
5	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	8	MOD_s	true
7	patron	_	patron	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	relationships	_	relationship	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relation-03	(s(), o())	3	APP_o	true
9	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
10	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
11	prominent	_	prominent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	female	_	female	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	ascetics	_	ascetic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	were	_	be	VBD	O	_	person	_	0	IGNORE	true
16	members	_	member	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	13	MOD_s	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	affluent	_	affluent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	senatorial	_	senatorial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	families.	_	families.	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	[7	_	[7	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
22	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@s@@relation-03, 1@@p@@this, 3@@s@@stem-01, 13@@d@@ascetic, 2@@d@@focus-01, 10@@explicitanon0@@several, 19@@p@@senatorial, 12@@p@@female, 16@@p@@person, 18@@p@@affluent, 11@@p@@prominent, 21@@p@@_NUMBER_, 16@@o@@member, 6@@s@@close-13, 16@@h@@have-org-role-91, 7@@d@@patron]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	gave	_	give	VBD	O	_	have-org-role-91	_	0	IGNORE	true
3	birth	_	birth	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	bear-02	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	have-rel-role-91	_	0	IGNORE	true
5	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
6	father,	_	father,	NNS	O	_	i	_	0	IGNORE	true
7	who	_	who	WP	O	_	i	_	0	IGNORE	true
8	gave	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
9	birth	_	birth	NN	O	(d<root> / --LEX--)	bear-02	()	3	APP_o	true
10	to	_	to	IN	O	_	i	_	0	IGNORE	true
11	me	_	I	PRP	O	_	i	_	0	IGNORE	true
12	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@s@@bear-02, 9@@d@@bear-02, 1@@d@@She]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_dom	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
4	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	candidate	_	candidate	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_op1	true
6	who	_	who	WP	O	_	name	_	0	IGNORE	true
7	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	in	_	in	IN	O	_	person	_	0	IGNORE	true
9	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	11	MOD_mod	true
11	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
13	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	liberty	_	liberty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
16	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
17	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	candidate	_	candidate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
19	who	_	who	WP	O	_	name	_	0	IGNORE	true
20	stands	_	stand	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
22	principle	_	principle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	against	_	against	IN	O	_	oppose-01	_	0	IGNORE	true
24	cronyism	_	cronyism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
26	corporatism	_	corporatism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
27	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
29	favor	_	favor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	rule	_	rule	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_o	true
33	of	_	of	IN	O	_	person	_	0	IGNORE	true
34	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
35	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[17@@p@@only, 18@@d@@candidate, 14@@d@@liberty, 25@@a@@and, 12@@a@@and, 5@@r@@candidate, 22@@p@@principle, 34@@d@@law, 26@@d@@corporatism, 15@@a@@and, 11@@d@@free-04, 4@@p@@only, 7@@s@@believe-01, 13@@s@@personal-02, 1@@d@@i, 32@@s@@rule-01, 24@@d@@cronyism, 20@@s@@stand-01, 29@@s@@favor-01, 10@@p@@economy]
sentence=1	Systems	systems	system	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
2	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
3	assess	_	assess	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
4	expertise	_	expertise	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_op1	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	manipulated,	_	manipulated,	NNP	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	cases	_	case	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	14	MOD_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	such	_	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	manipulation	_	manipulation	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	manipulate-02	(mod())	10	MOD_mod	true
14	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op2	true
15	—	_	—	:	O	_	multi-sentence	_	0	IGNORE	true
16	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	16	MOD_s	true
20	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
21	the_University_of_Malaysia,	_name_	malaysia,	CD	O	_	_NAME_	_	0	IGNORE	true
22	which	_	which	WDT	O	_	name	_	0	IGNORE	true
23	attempted	_	attempt	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	true
24	to	_	to	TO	O	_	company	_	0	IGNORE	true
25	boost	_	boost	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_o	true
26	metrics	_	metric	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
27	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
28	urging	_	urge	VBG	O	(e<root> / --LEX--  :ARG2 (h<o2>)  :ARG1 (p<o>)  :ARG0 (c<s>)  :manner-of (l<mod>))	$LEMMA$-01	(mod(), o2(s_UNIFY_o()), s())	25	MOD_mod	true
29	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
30	faculty	_	faculty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
31	to	_	to	TO	O	_	person	_	0	IGNORE	true
32	cite	_	cite	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o2	true
33	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	another	_	another	DT	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
35	[28]	_	[28]	XX	O	_	mean-01	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@o@@manipulate-02, 16@@s@@take-01, 18@@n@@recent, 5@@s@@possible-01, 28@@e@@urge-01, 4@@d@@expertise, 1@@d@@system, 12@@p@@such, 33@@p@@one, 19@@s@@exemplify-01, 32@@s@@cite-01, 23@@c@@attempt-01, 30@@d@@faculty, 34@@d@@another, 8@@a@@and, 26@@d@@metric, 9@@explicitanon0@@many, 10@@s@@case-04, 25@@s@@boost-01, 3@@s@@assess-02, 14@@s@@exist-01]
sentence=1	Montalvo	_name_	Montalvo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	contacted	_	contact	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	members	_	member	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	of	_	of	IN	O	_	person	_	0	IGNORE	true
6	Scientology,	_name_	scientology,	CD	O	_	_NAME_	_	0	IGNORE	true
7	who	_	who	WP	O	_	person	_	0	IGNORE	true
8	helped	_	help	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	him	_	he	PRP	O	_	person	_	0	IGNORE	true
10	leave	_	leave	VB	O	(d<root> / --LEX--)	$LEMMA$-15	()	13	APP_op1	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	organization	_	organization	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
14	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	13	APP_op2	true
15	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	touch	_	touch	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	Devocht	_name_	Devocht	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
19	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[8@@s@@help-01, 3@@n@@former, 10@@d@@leave-15, 18@@n@@_NAME_, 18@@p@@person, 1@@n@@_NAME_, 13@@a@@and, 14@@s@@get-05, 4@@d@@member, 1@@p@@person, 16@@s@@touch-01, 2@@s@@contact-01]
sentence=1	Unlike	unlike	unlike	IN	O	_	resemble-01	_	0	IGNORE	true
2	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	Polish	_name_	polish	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
6	cities,	_	cities,	NNP	O	_	resemble-01	_	0	IGNORE	true
7	which	_	which	WDT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	name	(mod())	31	MOD_mod	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	31	MOD_s	true
9	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	8	MOD_s	true
10	histories,	_	histories,	.	O	_	$LEMMA$	_	0	IGNORE	true
11	Łódź	_name_	Łódź	NNP	O	(d<root> / --LEX--)	name	()	35	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	created	_	create	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op1	true
14	almost	_	almost	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	from	_	from	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
16	scratch	_	scratch	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
17	during	_	during	IN	O	_	name	_	0	IGNORE	true
18	the_19th_century	_name_	century	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	21	MOD_mod	true
19	textile	_	textile	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	industry	_	industry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	boom	_	boom	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	13	MOD_mod	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	house	_	house	NN	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	21	MOD_mod	true
24	textile	_	textile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
25	mills,	_	mills,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
26	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
27	owners	_	owner	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	own-01	(s())	28	APP_op2	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	23	APP_o	true
29	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
30	workers,	_	workers,	NNS	O	_	person	_	0	IGNORE	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
32	rapidly	_	rapidly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	rapid	(mod())	33	MOD_mod	true
33	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	31	APP_op2	true
34	to	_	to	TO	O	_	and	_	0	IGNORE	true
35	become	_	become	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	33	APP_o	true
36	an	_	an	DT	O	_	1	_	0	IGNORE	true
37	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
38	industrial	_	industrial	JJ	O	(d<root> / --LEX--)	industry	()	39	APP_op2	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	31	APP_s	true
40	commerce	_	commerce	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	centre	_	centre	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_o	true
42	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@large, 11@@d@@name, 33@@s@@grow-02, 9@@s@@long-03, 5@@c@@country, 28@@a@@and, 35@@s@@become-01, 14@@s@@almost, 20@@d@@industry, 13@@s@@create-01, 8@@s@@have-03, 21@@v@@boom-02, 41@@d@@centre, 32@@t@@rapid, 27@@s@@own-01, 16@@t@@scratch-01, 37@@p@@important, 18@@n@@_NAME_, 15@@p@@from, 23@@s@@house-01, 31@@a@@and, 24@@d@@textile, 5@@n@@_NAME_, 19@@p@@textile, 3@@p@@other, 40@@p@@commerce, 38@@d@@industry, 7@@explicitanon0@@name, 39@@a@@and, 2@@explicitanon0@@most]
sentence=1	Telling	telling	tell	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_dom	true
2	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_s	true
4	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	13	MOD_s	true
5	an	_	an	DT	O	_	thing	_	0	IGNORE	true
6	art	_	art	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	naturally	_	naturally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	natural-03	(s())	8	MOD_s	true
10	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	people,	_	people,	NNS	O	_	include-91	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	for	_	for	IN	O	_	contrast-01	_	0	IGNORE	true
15	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	13	APP_o	true
18	practice	_	practice	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
20	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
22	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[11@@d@@some, 18@@d@@practice-01, 13@@s@@contrast-01, 20@@s@@hard-02, 1@@s@@tell-01, 21@@d@@work-01, 4@@s@@person, 19@@a@@and, 9@@s@@natural-03, 8@@s@@come-01, 6@@r@@art, 2@@s@@good-02, 3@@d@@joke-01, 17@@s@@take-10, 15@@d@@other]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	commemorated	_	commemorate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Bernoulli's	_name_	Bernoulli's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
8	principle,	_	principle,	NNP	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	4	MOD_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	conservation	_	conservation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	energy,	_	energy,	NNP	O	_	_NAME_	_	0	IGNORE	true
17	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
18	describes	_	describe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
19	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
20	mathematics	_	mathematic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	of	_	of	IN	O	_	thing	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	mechanism	_	mechanism	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
24	underlying	_	underlie	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	operation	_	operation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	operate-01	(s())	24	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	30	MOD_mod	true
29	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	technologies	_	technology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	20th	_name_	20th	JJ	O	(explicitanon5<root> / --LEX--  :century-of (d2 / date-entity  :time-of (c2<mod>)))	20	(mod())	30	MOD_mod	true
34	century:	_	century:	NFP	O	_	mean-01	_	0	IGNORE	true
35	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
36	carburetor	_	carburetor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op1	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	30	MOD_mod	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	airplane	_	airplane	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_poss	true
40	wing	_	wing	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	37	APP_op2	true
41	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[33@@explicitanon5@@20, 23@@p@@mechanism, 2@@d@@name, 18@@s@@describe-01, 28@@explicitanon0@@2, 37@@a@@and, 24@@s@@underlie-01, 40@@h@@wing, 33@@d2@@date-entity, 11@@s@@exemplify-01, 7@@n@@_NAME_, 39@@d@@airplane, 14@@d@@conservation, 4@@s@@commemorate-01, 29@@p@@important, 20@@d@@mathematic, 26@@s@@operate-01, 10@@p@@particular, 30@@d@@technology, 36@@d@@carburetor]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
2	selected	_	select	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
3	Henry_Smith,	_name_	smith,	CD	O	_	_NAME_	_	0	IGNORE	true
4	leader	_	leader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lead-02	(s(), o())	15	MOD_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
7	Independence	independence	Independence	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_o	true
8	Party,	party,	party,	NN	O	_	have-org-role-91	_	0	IGNORE	true
9	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	governor	_	governor	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	2	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Texas	_name_	Texas	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	placed	_	place	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	13	APP_op2	true
15	Sam_Houston,	_name_	Houston,	NFP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	have-org-role-91	(mod())	13	MOD_mod	true
16	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
17	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	soldier	_	soldier	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
20	had	_	have	VBD	O	_	person	_	0	IGNORE	true
21	been	_	be	VBN	O	_	person	_	0	IGNORE	true
22	a	_	a	DT	O	_	have-org-role-91	_	0	IGNORE	true
23	congressman	_	congressman	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
24	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
25	governor	_	governor	NN	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	18	MOD_s	true
26	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
27	Tennessee,	tennessee,	tennessee,	CD	O	_	name	_	0	IGNORE	true
28	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
29	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-05	(s(), o())	14	APP_o2	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
32	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	force	_	force	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
35	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[12@@c@@country, 29@@s@@charge-05, 15@@explicitanon0@@have-org-role-91, 24@@p@@and, 13@@a@@and, 4@@s@@lead-02, 7@@d@@_NAME_, 33@@p@@military, 1@@d@@They, 25@@h2@@have-org-role-91, 14@@t@@place-01, 10@@h@@have-org-role-91, 18@@d@@soldier, 34@@d@@force, 23@@p@@congressman, 32@@p@@small, 10@@o@@governor, 12@@n@@_NAME_, 17@@n@@former, 10@@p@@person, 25@@m@@governor, 2@@s@@select-01]
sentence=1	His	his	he	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	genetic:	_	genetic:	NNP	O	_	$LEMMA$	_	0	IGNORE	true
4	an	_	an	DT	O	_	environment	_	0	IGNORE	true
5	uncontrolled	_	uncontrolled	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	control-01	(s())	6	MOD_s	true
6	genotype	_	genotype	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	6	MOD_s	true
9	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	predisposed	_	predisposed	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	nearsightedness,	_	nearsightedness,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	acne,	_	acne,	NNP	O	_	et-cetera	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
15	(as	_	(as	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	later	_	later	RB	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	late	(mod())	18	MOD_mod	true
18	turned	_	turn	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_op2	true
19	out)	_	out)	NNP	O	_	-	_	0	IGNORE	true
20	a	_	a	DT	O	_	-	_	0	IGNORE	true
21	susceptibility	_	susceptibility	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	18	APP_s	true
22	to	_	to	IN	O	_	-	_	0	IGNORE	true
23	narcotics	_	narcotic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@s@@susceptibility, 1@@d@@he, 5@@explicitanon0@@-, 5@@p@@control-01, 17@@m@@more, 17@@l@@late, 23@@d@@narcotic, 10@@d@@predisposed-01, 8@@s@@leave-13, 6@@r@@genotype, 14@@a@@and, 18@@s@@turn-02]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	bred	_	breed	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	domesticated	_	domesticated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	dogs	_	dog	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	which,	_	which,	NNS	O	_	and	_	0	IGNORE	true
8	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	fish,	_	fish,	NNS	O	_	and	_	0	IGNORE	true
11	provided	_	provide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
12	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
13	protein	_	protein	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@s@@breed-01, 1@@d@@They, 6@@d@@dog, 5@@s@@domesticated-01, 2@@p@@also, 4@@p@@small, 11@@s@@provide-01, 13@@d@@protein]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
4	attributed	_	attribute	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	pollution	_	pollution	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	pollute-01	(s())	4	APP_o	true
8	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
9	Athens	_name_	Athens	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
10	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
11	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
14	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	enclosed	_	enclose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_s	true
16	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
17	mountains	_	mountain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
19	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	basin	_	basin	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
21	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	does	_	do	VBZ	O	_	-	_	0	IGNORE	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	let	_	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
25	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
26	smog	_	smog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-11	(s())	24	APP_o	true
28	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[23@@explicitanon0@@-, 7@@s@@pollute-01, 4@@s@@attribute-01, 24@@s@@let-01, 27@@s@@leave-11, 13@@d@@city, 9@@c@@city, 11@@s@@cause-01, 20@@b@@basin, 2@@p@@main, 26@@d@@smog, 15@@s@@enclose-01, 3@@s@@reason, 17@@d@@mountain, 9@@n@@_NAME_]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	sensitive	_	sensitive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	MOD_s	true
3	Environment_Canada	_name_	Canada	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
5	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
6	found	_	find	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	wet	_	wet	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	an	_	an	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
10	Ottawa	_name_	Ottawa	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	street	_	street	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
14	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
15	gave	_	give	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	CBC	_name_	CBC	NNP	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	15	APP_o	true
20	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@c@@city, 6@@s@@find-01, 11@@b@@street, 10@@n@@_NAME_, 7@@p@@wet, 4@@d@@document, 13@@d@@someone, 19@@p@@publication, 19@@n@@_NAME_, 20@@n@@today, 15@@t@@give-01, 3@@n@@_NAME_, 2@@s@@sensitive-03]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	APP_s	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	gel	_	gel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	did	_	do	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_s	true
12	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	15	MOD_mod	true
15	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@i, 15@@d@@thing, 5@@s@@make-01, 7@@d@@gel, 1@@s@@cause-01, 10@@explicitanon0@@-, 14@@p@@that, 12@@p@@any, 3@@c@@want-01, 11@@s@@do-02]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	crowds	_	crowd	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	customarily	_	customarily	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	joke-01	(mod())	5	MOD_mod	true
5	line	_	line	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	the_National_Mall	_name_	Mall	NNP	O	(l2<root> / location  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	absent,	_	absent,	NNP	O	_	and	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	reminder	_	reminder	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	remind-01	(s(), o())	0	ROOT	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_poss	true
13	Nation	nation	nation	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	18	APP_poss	true
14	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	thing	_	0	IGNORE	true
18	throes	_	throe	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	a	_	a	DT	O	_	event	_	0	IGNORE	true
21	deadly	_	deadly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	pandemic	_	pandemic	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
23	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[22@@p@@pandemic, 10@@s@@remind-01, 4@@p@@joke-01, 2@@d@@crowd, 5@@s@@line-01, 15@@p@@still, 6@@n@@_NAME_, 13@@m@@nation, 18@@h@@throe, 6@@l2@@location, 21@@p@@deadly, 12@@d@@our]
sentence=1	Homeopathy	homeopathy	homeopathy	NN	O	(d<root> / --LEX--)	_NAME_	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	form	_	form	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	of	_	of	IN	O	_	thing	_	0	IGNORE	true
6	alternative	_	alternative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	medicine	_	medicine	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
9	treats	_	treat	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	7	MOD_s	true
10	patients	_	patient	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
12	massively	_	massively	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	factual	(s())	13	MOD_s	true
13	diluted	_	dilute	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	forms	_	form	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	substances	_	substance	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	that,	_	that,	NFP	O	_	thing	_	0	IGNORE	true
18	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
19	given	_	give	VBN	O	(m<root> / --LEX--  :ARG1 (i<s>)  :ARG2 (y<o>)  :condition-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	26	MOD_mod	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	healthy	_	healthy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	23	MOD_s	true
23	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
24	undiluted,	_	undiluted,	NNS	O	_	-	_	0	IGNORE	true
25	would	_	would	MD	O	_	thing	_	0	IGNORE	true
26	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
27	symptoms	_	symptom	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	similar	_	similar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	27	MOD_s	true
29	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
31	disease	_	disease	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@p@@medicine, 19@@m@@give-01, 22@@s@@healthy, 13@@s@@dilute-01, 4@@r@@form, 12@@s@@factual, 14@@d@@form, 28@@s@@resemble-01, 26@@s@@cause-01, 10@@d@@patient, 23@@d@@person, 1@@d@@_NAME_, 27@@d@@symptom, 9@@b@@treat-03, 16@@p@@substance, 31@@d@@disease, 6@@p@@alternative]
sentence=1	St_François	_name_	François	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	go	_	go	VBP	O	(p<root> / --LEX--  :ARG0 (i<s>)  :condition-of (r<mod>))	$LEMMA$-02	(mod(), s())	13	MOD_mod	true
5	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
7	eastern	_	eastern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	east	(mod())	8	MOD_mod	true
8	point	_	point	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	of	_	of	IN	O	_	thing	_	0	IGNORE	true
10	Guadeloupe,	_name_	guadeloupe,	NN	O	_	_NAME_	_	0	IGNORE	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
13	reach	_	reach	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	La_Pointe	_name_	Pointe	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	18	MOD_mod	true
15	des	_	des	NNP	O	_	_NAME_	_	0	IGNORE	true
16	Chateaux,	chateaux,	Chateaux,	NNP	O	_	mean-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	scenery	_	scenery	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
19	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
20	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
21	sand	_	sand	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
23	rocks	_	rock	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
25	have	_	have	VBP	O	_	person	_	0	IGNORE	true
26	vaguely	_	vaguely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	increase-01	(mod())	28	MOD_mod	true
27	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
28	shape	_	shape	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	19	MOD_s	true
29	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
30	a	_	a	DT	O	_	thing	_	0	IGNORE	true
31	castle	_	castle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@d@@castle, 23@@d@@rock, 13@@s@@reach-01, 4@@p@@go-02, 8@@b@@point, 22@@a@@and, 26@@t@@increase-01, 28@@s@@shape, 19@@s@@make-01, 14@@n@@_NAME_, 18@@d@@scenery, 7@@p@@east, 14@@c@@city, 21@@d@@sand, 3@@d@@you]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	26	MOD_s	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_poss	true
3	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_o	true
4	define	_	define	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	will	_	will	MD	O	_	thing	_	0	IGNORE	true
9	remind	_	remind	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
13	visit	_	visit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
14	to	_	to	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Chathams,	_name_	Chathams,	NNS	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
17	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
18	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
22	will	_	will	MD	O	_	thing	_	0	IGNORE	true
23	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
24	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	top	_	top	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	0	ROOT	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	list	_	list	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	26	APP_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[16@@d@@_NAME_, 4@@s@@define-01, 26@@s@@top, 20@@s@@special-02, 1@@s@@have-condition-91, 19@@s@@very, 13@@s@@visit-01, 21@@d@@place, 6@@d@@place, 9@@t@@remind-01, 3@@s@@possible-01, 18@@p@@this, 29@@m@@list-01, 2@@d@@you]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	other	_	other	JJ	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
4	hand,	_	hand,	NNS	O	_	and	_	0	IGNORE	true
5	extant	_	extant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
6	newspaper	_	newspaper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	clippings	_	clipping	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	APP_s	true
8	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	only_a_few_days	_name_	day	NNS	O	(r<root> / --LEX--  :ARG1 (p<s>)  :source-of (a2<mod>))	_NAME_	(mod(), s())	7	MOD_mod	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	duel	_	duel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
13	give	_	give	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	description	_	description	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	describe-01	(s())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	opponent	_	opponent	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	oppose-01	()	15	APP_s	true
19	(identified	_	(identified	ADD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
20	by	_	by	IN	O	_	thing	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	initials	_	initial	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	"L.	"l.	"l.	ADD	O	_	$LEMMA$	_	0	IGNORE	true
24	D.")	d.")	d.")	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	appear	_	appear	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	MOD_s	true
27	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
28	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	accurately	_	accurately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	accurate	(mod())	30	MOD_mod	true
30	apply	_	apply	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
31	to	_	to	IN	O	_	person	_	0	IGNORE	true
32	one	_	one	CD	O	(d<root> / --LEX--)	1	()	30	APP_o	true
33	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	32	MOD_s	true
34	Galois'_Republican	_name_	Republican	NNP	O	(d<root> / --LEX--)	_NAME_	()	35	APP_o	true
35	friends,	_	friends,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	name	(s(), o())	3	APP_o	true
36	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	3	MOD_mod	true
38	Ernest_Duchatelet,	_name_	Duchatelet,	NNP	O	_	name	_	0	IGNORE	true
39	who	_	who	WP	O	_	name	_	0	IGNORE	true
40	was	_	be	VBD	O	_	person	_	0	IGNORE	true
41	imprisoned	_	imprison	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	true
42	with	_	with	IN	O	_	-	_	0	IGNORE	true
43	Galois	_name_	Galois	NNP	O	_	$LEMMA$	_	0	IGNORE	true
44	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
45	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
46	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	MOD_s	true
47	charges.	_	charges.	NN	O	_	$LEMMA$	_	0	IGNORE	true
48	[21	_	[21	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	41	MOD_mod	true
49	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[41@@s@@imprison-01, 7@@s@@clipping, 10@@w@@after, 6@@d@@newspaper, 29@@t@@accurate, 46@@s@@same-01, 19@@s@@(identified-01, 30@@s@@apply-02, 26@@s@@appear-02, 28@@s@@more, 18@@e2@@oppose-01, 36@@s@@most, 9@@r@@_NAME_, 18@@p2@@person, 48@@d@@date-entity, 35@@s@@name, 37@@p@@probable, 5@@s@@extant-01, 3@@h@@contrast-01, 12@@d@@duel-01, 22@@d@@initial, 15@@t@@thing, 13@@s@@give-01, 34@@d@@_NAME_, 48@@explicitanon2@@_NUMBER_, 15@@c@@describe-01, 33@@s@@include-91, 32@@d@@1]
sentence=1	Within	within	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
3	industry	_	industry	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_op1	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	interest	_	interest	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
6	or	_	or	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
7	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	study,	_	study,	NNS	O	_	and	_	0	IGNORE	true
10	what	_	what	WP	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	13	MOD_mod	true
11	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
14	that	_	that	WDT	O	_	amr-unknown	_	0	IGNORE	true
15	create	_	create	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	frustration	_	frustration	NN	O	(d<root> / --LEX--)	frustrate-01	()	15	APP_o	true
17	?	_	?	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@m@@industry, 13@@d@@challenge-01, 15@@s@@create-01, 6@@a@@or, 16@@d@@frustrate-01, 5@@p@@interest-01, 7@@d@@area, 10@@p@@amr-unknown, 2@@d@@your]
sentence=1	However,	_name_	However,	LS	O	_	expressive	_	0	IGNORE	true
2	historically,	_	historically,	NFP	O	_	-	_	0	IGNORE	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
5	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	10	MOD_s	true
10	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	a	_	a	DT	O	_	-	_	0	IGNORE	true
12	societal	_	societal	JJ	O	(d<root> / --LEX--)	society	()	13	APP_s	true
13	response	_	response	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	respond-01	(s())	10	APP_o	true
14	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@event, 6@@explicitanon0@@several, 10@@s@@cause-01, 9@@s@@recommend-01, 12@@d@@society, 13@@s@@respond-01]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	transition	_	transition	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
7	dysfunction	_	dysfunction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_op2	true
8	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
9	global	_	global	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	globe	(mod())	10	MOD_mod	true
10	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	relations,	_	relations,	NNP	O	_	have-03	_	0	IGNORE	true
12	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	risk	_	risk	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
17	looming	_	loom	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	APP_s	true
18	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	horizon	_	horizon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	MOD_s	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
24	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	be	_	be	VB	O	_	$LEMMA$	_	0	IGNORE	true
26	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
27	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
28	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
30	real	_	real	JJ	O	(d<root> / --LEX--)	$LEMMA$-04	()	27	APP_o	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@loom-01, 16@@d@@risk-01, 2@@p@@this, 15@@s@@new-01, 3@@n@@time, 5@@d@@transition-01, 27@@s@@contrast-01, 30@@d@@real-04, 7@@s@@dysfunction, 6@@a@@and, 10@@d@@power, 23@@explicitanon0@@-, 9@@p@@globe, 20@@d@@horizon, 22@@s@@possible-01, 26@@p@@large, 24@@n@@yet]
sentence=1	Hume	_name_	Hume	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	argues	_	argue	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	“beauty	_	“beauty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	quality	_	quality	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	things	_	thing	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	themselves,”	_	themselves,”	RB	O	_	and	_	0	IGNORE	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
12	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
13	“sentiment”	_	“sentiment”	NNP	O	_	thing	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	“the	_	“the	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
17	that	_	that	WDT	O	_	hate-01	_	0	IGNORE	true
18	contemplates	_	contemplate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	them”	_	them”	NN	O	_	and	_	0	IGNORE	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	“to	_name_	“to	NFP	O	_	person	_	0	IGNORE	true
22	seek	_	seek	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	25	MOD_s	true
25	beauty	_	beauty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	…	_	…	EX	O	_	cause-01	_	0	IGNORE	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	…	_	…	CD	O	_	cause-01	_	0	IGNORE	true
29	fruitless.”	_	fruitless.”	XX	O	_	hyperlink-91	_	0	IGNORE	true
30	[40	_	[40	XX	O	_	_NUMBER_	_	0	IGNORE	true
31	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[22@@s@@seek-01, 24@@s@@real-04, 25@@d@@beauty, 4@@d@@“beauty, 16@@d@@mind, 18@@s@@contemplate-01, 1@@n@@_NAME_, 15@@p@@“the, 9@@a@@thing, 2@@s@@argue-01, 6@@explicitanon0@@-, 7@@r@@quality, 1@@p@@person, 11@@s@@contrast-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	married	_	marry	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	Althea_Lucille_Sprague,	_name_	sprague,	NN	O	_	_NAME_	_	0	IGNORE	true
4	who	_	who	WP	O	_	name	_	0	IGNORE	true
5	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
6	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
7	1993	_name_	1993	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	5	MOD_mod	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@date-entity, 5@@s@@die-01, 7@@explicitanon0@@_NUMBER_, 1@@d@@He, 2@@s@@marry-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Escola	_name_	Escola	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
3	do	_	do	VBP	O	_	$LEMMA$	_	0	IGNORE	true
4	Cérebro	_name_	Cérebro	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
5	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	platform	_	platform	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	integrates	_	integrate	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	7	MOD_s	true
10	seven	_	seven	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	7	(mod())	12	MOD_mod	true
11	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	into	_	into	IN	O	_	-	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	database	_	database	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@p@@digital, 15@@d@@database, 12@@d@@game, 2@@d@@Escola, 7@@r@@platform, 10@@explicitanon0@@7, 4@@p@@_NAME_, 9@@t@@integrate-01]
sentence=1	With	with	with	IN	O	_	-	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	onset	_	onset	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	automobile,	_	automobile,	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	true
7	public	_	public	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	9	APP_s	true
9	reduced	_	reduce	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	city's	_	city'	VBN	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
12	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
13	transportation	_	transportation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	transport-01	(mod())	14	MOD_mod	true
14	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	9	APP_o	true
15	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	foreseeing	_	foresee	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	traffic	_	traffic	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	gridlock	_	gridlock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
21	smog	_	smog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	would	_	would	MD	O	_	$LEMMA$	_	0	IGNORE	true
24	menace	_	menace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	MOD_s	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	city	_	city	NN	O	_	$LEMMA$	_	0	IGNORE	true
27	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the_1980s	_name_	1980s	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
29	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[21@@d@@smog, 8@@h@@have-org-role-91, 6@@d@@_NAME_, 14@@d@@serve-01, 18@@p@@traffic, 11@@n@@_NAME_, 8@@p@@person, 16@@l@@foresee-01, 12@@s@@public-02, 20@@a@@and, 19@@d@@gridlock, 24@@s@@menace-01, 3@@s@@onset-01, 11@@c@@country, 7@@d@@public, 15@@explicitanon0@@-, 28@@n@@_NAME_, 13@@p@@transport-01, 8@@o@@official, 9@@s@@reduce-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	palpitating	_	palpitate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	greyness	_	greyness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_op1	true
5	darker;	_	darker;	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
6	then—though	_	then—though	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	travelling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	APP_op2	true
11	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	prodigious	_	prodigious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	velocity—the	_	velocity—the	NNP	O	_	_NAME_	_	0	IGNORE	true
14	blinking	_	blink	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	succession	_	succession	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	10	APP_o	true
16	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
17	day	_	day	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
19	night,	_	night,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
20	which	_	which	WDT	O	_	i	_	0	IGNORE	true
21	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
22	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	23	MOD_mod	true
23	indicative	_	indicative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	indicate-01	(s(), o())	15	MOD_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	slower	_	slow	JJR	O	(c<root> / --LEX--  :degree (m / more))	low-04	()	23	APP_o	true
27	pace,	_	pace,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	returned,	_	returned,	NNS	O	_	and	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
30	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_op2	true
31	more	_	more	JJR	O	_	$LEMMA$	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_op2	true
33	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	marked	_	marked	JJ	O	(d<root> / --LEX--)	mark-01	()	30	APP_s	true
35	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@p@@person, 22@@p@@usual, 6@@n@@_NAME_, 5@@a@@and, 26@@m@@more, 23@@s@@indicate-01, 34@@d@@mark-01, 17@@d@@day, 18@@b@@and, 12@@p@@prodigious, 14@@s@@blink-01, 29@@a@@and, 9@@p@@still, 30@@s@@grow-01, 26@@c@@low-04, 10@@s@@travel-01, 32@@a@@and, 2@@s@@palpitate-01, 15@@s@@succession, 33@@s@@more, 7@@d@@i, 3@@d@@greyness, 4@@s@@grow-01]
sentence=1	With	with	with	IN	O	_	have-03	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	idealism	_	idealism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
5	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	play	_	play	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_op2	true
7	which	_	which	WDT	O	_	name	_	0	IGNORE	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	contrast-01	(s(), o())	18	MOD_o	true
10	core	_	core	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	14	APP_op1	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
15	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	strength,	_	strength,	NN	O	_	and	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
19	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	18	APP_s	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	prosperous	_	prosperous	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	prosper-01	(s())	26	MOD_s	true
24	America,	_name_	america,	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
26	peace	_	peace	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	APP_o	true
27	with	_	with	IN	O	_	-	_	0	IGNORE	true
28	itself	_	itself	PRP	O	_	i	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	26	APP_s	true
30	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
31	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op2	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@m@@core, 31@@d@@world, 18@@s@@possible-01, 29@@a@@and, 13@@d@@system, 6@@d@@play-01, 26@@s@@peace, 9@@s@@contrast-01, 5@@s@@fair-01, 21@@s@@strong-02, 4@@a@@and, 14@@a@@and, 23@@s@@prosper-01, 19@@s@@have-03, 17@@d@@we, 3@@d@@idealism]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	7	MOD_mod	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	means	_	means	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	travel	_	travel	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	0	ROOT	true
8	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	those	_	those	DT	O	_	that	_	0	IGNORE	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	7	APP_s	true
12	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
13	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
14	own	_	own	JJ	O	_	person	_	0	IGNORE	true
15	motor	_	motor	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	vehicle	_	vehicle	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	.	_	.	.	O	_	have-03	_	0	IGNORE	true

nodealignment=[1@@d@@It, 11@@d@@person, 3@@p@@usual, 16@@m@@vehicle, 7@@i@@travel-01, 5@@r@@means, 12@@explicitanon0@@-, 15@@p@@motor]
sentence=1	Um,	_name_	um,	CD	O	_	-	_	0	IGNORE	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
3	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	more	(s())	2	APP_op2	true
6	harder	_	hard	JJR	O	(m2<root> / more  :degree-of (l / --LEX--  :ARG1 (m<s>)))	hard-02	(s())	7	MOD_s	true
7	gels	_	gel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	really,	_	really,	NNP	O	_	event	_	0	IGNORE	true
10	like,	_	like,	NNS	O	_	thing	_	0	IGNORE	true
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_s	true
12	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	feel	_	feel	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_o	true
15	super	_	super	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	hard	_	hard	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_o	true
17	–	_	–	:	O	_	capable-01	_	0	IGNORE	true
18	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	21	APP_s	true
19	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
20	normally	_	normally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	normal-02	(s())	21	MOD_s	true
21	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_op1	true
22	those	_	those	DT	O	(d<root> / --LEX--)	that	()	21	APP_o	true
23	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
24	I	i	I	PRP	O	_	-	_	0	IGNORE	true
25	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	APP_s	true
27	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
28	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_s	true
30	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@more, 29@@s@@need-01, 18@@d@@i, 22@@d@@that, 11@@s@@make-02, 14@@c@@feel-01, 3@@explicitanon0@@more, 13@@d@@hair, 6@@l@@hard-02, 26@@s@@feel-02, 20@@s@@normal-02, 23@@s@@cause-01, 6@@m2@@more, 31@@d@@that, 25@@explicitanon0@@-, 15@@s@@super, 2@@a@@and, 19@@explicitanon0@@-, 16@@s@@hard-02, 21@@s@@use-01, 7@@d@@gel, 30@@p@@all, 28@@d@@you]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	1990s,	_	1990s,	CD	O	_	and	_	0	IGNORE	true
4	Fillmore	_name_	Fillmore	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	taught	_	teach	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	classes	_	class	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	in	_	in	IN	O	_	and	_	0	IGNORE	true
8	computational	_	computational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	lexicography	_	lexicography	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	at	_	at	IN	O	_	name	_	0	IGNORE	true
11	the_University_of_Pisa,	_name_	Pisa,	NNP	O	_	_NAME_	_	0	IGNORE	true
12	where	_	where	WRB	O	_	and	_	0	IGNORE	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	met	_	meet	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	5	MOD_mod	true
15	Sue_Atkins,	_name_	atkins,	NN	O	_	_NAME_	_	0	IGNORE	true
16	who	_	who	WP	O	_	name	_	0	IGNORE	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	conducting	_	conduct	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
19	frame-semantic	_	frame-semantic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	analyses	_	analysis	NNS	O	(d<root> / --LEX--)	analyze-01	()	18	APP_o	true
21	from	_	from	IN	O	_	oppose-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	lexicographic	_	lexicographic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	perspective	_	perspective	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@p@@_NAME_, 14@@v@@meet-02, 18@@s@@conduct-01, 4@@p@@person, 4@@n@@_NAME_, 9@@a@@lexicography, 23@@p@@lexicographic, 8@@p@@computational, 24@@t@@perspective, 20@@d@@analyze-01, 6@@d@@class, 5@@s@@teach-01]
sentence=1	Accustomed	accustomed	accustomed	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
2	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
3	representative	_	representative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	represent-01	(s())	5	MOD_s	true
4	democracy,	_	democracy,	JJ	O	_	$LEMMA$	_	0	IGNORE	true
5	jury	_	jury	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
6	trials,	_	trials,	NNP	O	_	and	_	0	IGNORE	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_o	true
8	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
9	defendant’s	_	defendant’s	NN	O	_	and	_	0	IGNORE	true
10	right	_	right	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-05	(s())	7	APP_op2	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	appear	_	appear	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_s	true
13	before	_	before	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	judge,	_	judge,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Anglo-American	anglo-american	anglo-american	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	settlers	_	settler	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	settle-03	()	22	APP_s	true
19	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
20	Texas	_name_	Texas	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	18	MOD_mod	true
21	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	disliked	_	dislike	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Mexican	_name_	mexican	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	25	MOD_mod	true
25	legal	_	legal	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	22	APP_o	true
26	system,	_	system,	CD	O	_	and	_	0	IGNORE	true
27	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	provided	_	provide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
29	for	_	for	IN	O	_	name	_	0	IGNORE	true
30	an	_	an	DT	O	_	1	_	0	IGNORE	true
31	initial	_	initial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	hearing	_	hearing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	APP_o	true
33	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
34	an	_	an	DT	O	_	1	_	0	IGNORE	true
35	alcalde,	_	alcalde,	NN	O	_	$LEMMA$	_	0	IGNORE	true
36	an	_	an	DT	O	_	1	_	0	IGNORE	true
37	administrator	_	administrator	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	administrate-01	()	32	APP_s	true
38	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
39	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	combined	_	combine	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	37	MOD_s	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	duties	_	duty	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	responsible-03	(s(), o())	40	APP_o	true
43	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
44	mayor,	_	mayor,	NNP	O	_	mean-01	_	0	IGNORE	true
45	judge,	_	judge,	NNS	O	_	mean-01	_	0	IGNORE	true
46	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
47	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
48	enforcement	_	enforcement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	enforce-01	(s())	49	APP_s	true
49	officer	_	officer	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	42	APP_o	true
50	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[24@@c@@country, 20@@c@@country, 12@@d@@appear-01, 18@@e2@@settle-03, 3@@s@@represent-01, 5@@d@@jury, 21@@p@@also, 47@@d@@law, 40@@s@@combine-01, 48@@s@@enforce-01, 17@@n@@_NAME_, 1@@s@@accustomed-01, 7@@a@@and, 10@@s@@right-05, 18@@p2@@person, 42@@s@@responsible-03, 20@@n@@_NAME_, 46@@d@@and, 37@@p2@@person, 49@@p2@@officer, 32@@s@@hearing-01, 28@@s@@provide-01, 22@@s@@dislike-01, 49@@h@@have-org-role-91, 17@@e@@ethnic-group, 25@@d@@legal-02, 31@@p@@initial, 39@@o@@often, 24@@n@@_NAME_, 37@@e2@@administrate-01]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	exhibit	_	exhibit	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	part	_	part	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-$LEMMA$-91	(s(), o())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	collaboration	_	collaboration	NN	O	(d<root> / --LEX--)	collaborate-01	()	4	APP_s	true
8	combining	_	combine	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	collections	_	collection	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	APP_o	true
11	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Duke_University,_located	_name_	locate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	10	MOD_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	Durham,	durham,	Durham,	NNP	O	_	_NAME_	_	0	IGNORE	true
15	North_Carolina,	_name_	carolina,	NN	O	_	_NAME_	_	0	IGNORE	true
16	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_s	true
17	University_of_North_Carolina	_name_	Carolina	NNP	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	16	APP_op1	true
18	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	Chapel	_name_	Chapel	NNP	O	_	_NAME_	_	0	IGNORE	true
20	Hill,	_name_	Hill,	NNP	O	_	include-91	_	0	IGNORE	true
21	which	_	which	WDT	O	_	name	_	0	IGNORE	true
22	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	were	_	be	VBD	O	_	person	_	0	IGNORE	true
24	recipients	_	recipient	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	receive-01	(s(), o())	10	MOD_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	donated	_	donate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	items	_	item	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	from	_	from	IN	O	_	and	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	Andy	andy	Andy	NNP	O	_	_NAME_	_	0	IGNORE	true
31	Warhol	warhol	Warhol	NNP	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	4	MOD_mod	true
32	Photographic	photographic	Photographic	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	Legacy	legacy	Legacy	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	Program	program	Program	NNP	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
35	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@n2@@_NAME_, 33@@p@@Legacy, 7@@d@@collaborate-01, 26@@s@@donate-01, 8@@s@@combine-01, 31@@n@@_NAME_, 4@@s@@have-part-91, 17@@f@@facility, 2@@d@@exhibit-01, 22@@p@@also, 32@@p@@Photographic, 24@@s@@receive-01, 12@@s@@_NAME_, 34@@s@@Program, 10@@s@@collection, 1@@p@@that, 27@@d@@item, 16@@o@@and, 31@@p@@person]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	0	ROOT	true
2	these	_	these	DT	O	(d<root> / --LEX--)	this	()	5	APP_s	true
3	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
4	been	_	be	VBN	O	_	and	_	0	IGNORE	true
5	awesome	_	awesome	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	awe-01	(s())	8	APP_op1	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	hiking	_	hiking	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	11	MOD_mod	true
11	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_op2	true
12	them,	_	them,	NNP	O	_	and	_	0	IGNORE	true
13	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
15	you're	_	you're	PRP	O	_	thing	_	0	IGNORE	true
16	looking	_	look	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
17	for	_	for	IN	O	_	or	_	0	IGNORE	true
18	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	16	MOD_s	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	lighter	_	light	JJR	O	(m2<root> / more  :degree-of (l / --LEX--  :ARG1 (m<s>)))	light-06	(s())	21	MOD_s	true
21	shoe	_	shoe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	that's	_	that's	PRP	O	_	mean-01	_	0	IGNORE	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	heavy	_	heavy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	24	MOD_s	true
26	hiking	_	hiking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	boots	_	boot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	24	MOD_mod	true
29	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op2	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@i, 8@@a@@and, 28@@a@@or, 5@@s@@awe-01, 23@@explicitanon0@@-, 11@@s@@recommend-01, 25@@s@@resemble-01, 24@@p@@heavy, 29@@d@@anything, 13@@p@@especially, 1@@s@@infer-01, 20@@m2@@more, 18@@s@@resemble-01, 10@@s@@high, 21@@d@@shoe, 16@@o@@look-01, 20@@l@@light-06, 2@@d@@this, 26@@p@@hiking, 7@@o@@hiking-01, 27@@d@@boot]
sentence=1	The	the	the	DT	O	_	1	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	3	MOD_mod	true
3	step	_	step	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	0	ROOT	true
4	in	_	in	IN	O	_	thing	_	0	IGNORE	true
5	applying	_	apply	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	APP_s	true
6	grit	_	grit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	adopt	_	adopt	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
10	an	_	an	DT	O	_	resemble-01	_	0	IGNORE	true
11	attitude	_	attitude	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	directly	_	directly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	direct-02	(s())	13	MOD_s	true
15	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	end	_	end	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	goal	_	goal	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
19	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	acceptable	_	acceptable	JJ	O	(p<root> / possible-01  :ARG1 (p2 / --LEX--  :ARG1 (b<s>)))	accept-01	(s())	23	MOD_s	true
23	outcome	_	outcome	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
24	.	_	.	.	O	_	instead-of-91	_	0	IGNORE	true

nodealignment=[9@@s@@adopt-01, 17@@p@@end, 2@@o@@ordinal-entity, 6@@d@@grit, 11@@d@@attitude, 21@@p@@only, 18@@d@@goal, 13@@s@@look-01, 23@@p@@outcome, 22@@p2@@accept-01, 22@@p@@possible-01, 2@@explicitanon0@@1, 5@@s@@apply-02, 3@@s@@step, 14@@s@@direct-02]
sentence=1	So	so	so	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	think	_	think	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	APP_s	true
4	we're	_	we're	NN	O	_	person	_	0	IGNORE	true
5	gonna	_	gonna	VBP	O	_	thing	_	0	IGNORE	true
6	start	_	start	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	at	_	at	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	loop	_	loop	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	trailhead	_	trailhead	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
16	highline	_	highline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	–	_	–	NNS	O	_	and	_	0	IGNORE	true
18	um,	_	um,	JJ	O	_	mean-01	_	0	IGNORE	true
19	trail	_	trail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
22	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
23	the_other_day	_name_	day	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
24	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[23@@n@@_NAME_, 23@@e@@event, 21@@d@@we, 2@@d@@i, 6@@s@@start-01, 15@@s@@same-01, 16@@p@@highline, 10@@p@@loop, 3@@c@@think-01, 19@@p@@trail, 7@@b@@here, 11@@b@@trailhead, 22@@s@@do-02, 1@@s@@cause-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	dedicated	_	dedicate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
6	for	_	for	IN	O	_	name	_	0	IGNORE	true
7	this,	_	this,	NNS	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	Civil_IoT	_name_	IoT	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	project	_	project	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	at	_	at	IN	O	_	thing	_	0	IGNORE	true
12	CI.taiwan.gov.tw,	_name_	ci.taiwan.gov.tw,	NN	O	_	_NAME_	_	0	IGNORE	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	basically,	_	basically,	NNP	O	_	mean-01	_	0	IGNORE	true
16	collective	_	collective	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
17	intelligence,	_	intelligence,	NNP	O	_	mean-01	_	0	IGNORE	true
18	meteorological,	_	meteorological,	NNS	O	_	and	_	0	IGNORE	true
19	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
20	quality,	_	quality,	.	O	_	and	_	0	IGNORE	true
21	earthquake,	_	earthquake,	NNP	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	5	APP_o	true
23	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op3	true
24	prevention,	_	prevention,	NNS	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
26	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
27	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	2	MOD_s	true
28	that	_	that	DT	O	(g<root> / --LEX--  :example-of (a<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@g@@that, 19@@d@@air, 1@@d@@We, 26@@d@@thing, 5@@s@@dedicate-01, 16@@d@@collective, 10@@p@@project, 9@@n@@_NAME_, 4@@d@@website, 25@@a@@and, 22@@a@@and, 23@@d@@disaster, 27@@s@@resemble-01, 2@@s@@have-03]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	get	_	get	VBP	O	_	cause-01	_	0	IGNORE	true
3	switched	_	switch	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	around	_	around	RB	O	_	$LEMMA$	_	0	IGNORE	true
5	--	_	--	:	O	_	and	_	0	IGNORE	true
6	moved	_	move	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	around	_	around	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	few	_	few	JJ	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	cover	_	cover	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
13	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	residents	_	resident	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	reside-01	()	12	APP_s	true
15	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	on	_	on	IN	O	_	and	_	0	IGNORE	true
18	vacation,	_	vacation,	NNS	O	_	and	_	0	IGNORE	true
19	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_s	true
20	I'll	i'll	I'll	NNP	O	_	cause-01	_	0	IGNORE	true
21	be	_	be	VBP	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	3	MOD_mod	true
22	at	_	at	IN	O	_	and	_	0	IGNORE	true
23	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	spots	_	spot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	later_this_week	_name_	week	NN	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	24	MOD_mod	true
26	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[3@@s@@switch-01, 12@@i@@cover-01, 25@@m2@@multiple, 19@@s@@cause-01, 24@@d@@spot, 23@@p@@other, 9@@o@@few, 25@@m@@week, 14@@e2@@reside-01, 7@@a@@around, 6@@d@@move-01, 25@@t2@@temporal-quantity, 21@@b@@be-located-at-91, 1@@d@@i, 14@@p2@@person, 13@@explicitanon0@@some]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	1562,	_	1562,	JJ	O	_	_NAME_	_	0	IGNORE	true
3	Bishop_Diego_de_Landa,	_name_	Landa,	NNP	O	_	_NAME_	_	0	IGNORE	true
4	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
5	feared	_	fear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	converted	_	convert	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	natives	_	native	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	had	_	have	VBD	O	_	person	_	0	IGNORE	true
10	reverted	_	revert	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
13	traditional	_	traditional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	religious	_	religious	JJ	O	(d<root> / --LEX--)	religion	()	10	APP_o	true
15	practices,	_	practices,	NNS	O	_	and	_	0	IGNORE	true
16	collected	_	collect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
18	burned	_	burn	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
19	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	codex	_	codex	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	23	MOD_s	true
23	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@fear-01, 13@@p@@traditional, 19@@p@@every, 20@@d@@codex, 16@@s@@collect-01, 14@@d@@religion, 23@@s@@find-01, 8@@d@@native, 17@@a@@and, 18@@s@@burn-01, 10@@s@@revert-01, 7@@s@@convert-01, 22@@s@@possible-01]
sentence=1	The_Grand_Lake_Theater	_name_	Theater	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	stands	_	stand	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	entrance	_	entrance	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	enter-01	(mod(), s())	2	MOD_mod	true
6	to	_	to	IN	O	_	name	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	neighborhood	_	neighborhood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	bears	_	bear	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	name,	_	name,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	matter	_	matter	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	24	APP_o	true
15	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
16	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	19	MOD_mod	true
17	few	_	few	JJ	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
18	hundred	_	hundred	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	100	(mod())	19	MOD_mod	true
19	feet	_	foot	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	17	APP_op1	true
20	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Lakeshore_Avenue	_name_	Avenue	NNP	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	14	APP_dom	true
22	–	_	–	:	O	_	multi-sentence	_	0	IGNORE	true
23	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	2	MOD_s	true
25	diverse	_	diverse	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	neighborhoods	_	neighborhood	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
27	no	_	no	RB	O	_	-	_	0	IGNORE	true
28	matter	_	matter	RB	O	_	thing	_	0	IGNORE	true
29	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
30	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o	true
31	budget,	_	budget,	NNP	O	_	and	_	0	IGNORE	true
32	be	_	be	VB	O	_	$LEMMA$	_	0	IGNORE	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	burgers	_	burger	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op1	true
35	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_op1	true
36	sandwiches	_	sandwich	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op2	true
37	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	55	MOD_mod	true
38	a	_	a	DT	O	_	1	_	0	IGNORE	true
39	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	romantic	_	romantic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
41	evening,	_	evening,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
42	either	_	either	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
43	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	APP_o	true
44	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	46	MOD_mod	true
45	twin-sister	_	twin-sister	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	46	MOD_mod	true
46	neighborhoods	_	neighborhood	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
47	will	_	will	MD	O	(p<root> / --LEX--  :mod-of (s<mod>))	after	(mod())	2	MOD_mod	true
48	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	43	APP_s	true
49	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
50	pleasant	_	pleasant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
51	time,	_	time,	NNP	O	_	thing	_	0	IGNORE	true
52	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
53	day	_name_	day	NN	O	(d<root> / --LEX--)	$LEMMA$	()	54	APP_op1	true
54	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	48	MOD_mod	true
55	night	_name_	night	NN	O	(d<root> / --LEX--)	$LEMMA$	()	54	APP_op2	true
56	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[42@@p@@either, 25@@p@@diverse, 1@@n@@_NAME_, 16@@explicitanon0@@1, 10@@s@@bear-01, 37@@a@@or, 8@@d@@neighborhood, 36@@d@@sandwich, 17@@s@@few, 40@@d@@romantic, 46@@p@@neighborhood, 19@@m@@foot, 21@@f@@facility, 50@@d@@pleasant, 1@@c@@company, 30@@d@@your, 26@@d@@neighborhood, 43@@s@@include-91, 54@@a@@or, 2@@s@@stand-01, 45@@p@@_NAME_, 44@@p@@this, 55@@d@@night, 18@@explicitanon0@@100, 21@@n2@@_NAME_, 14@@r@@matter, 24@@s@@person, 47@@p@@after, 34@@d@@burger, 19@@d@@distance-quantity, 53@@d@@day, 5@@s@@enter-01, 39@@p@@full, 48@@s@@make-02, 35@@a@@or, 49@@explicitanon0@@1]
sentence=1	Byron	_name_	Byron	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	3	MOD_mod	true
3	returned	_	return	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	in	_	in	IN	O	_	-1	_	0	IGNORE	true
5	January_1804,	_name_	1804,	CD	O	_	$LEMMA$	_	0	IGNORE	true
6	[6]	_name_	[6]	XX	O	_	mean-01	_	0	IGNORE	true
7	to	_	to	IN	O	_	and	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	settled	_	settled	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
12	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
13	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	formation	_	formation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	form-01	(s())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	emotional	_	emotional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	emotion	(mod())	21	MOD_mod	true
21	involvements	_	involvement	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
22	with	_	with	IN	O	_	-	_	0	IGNORE	true
23	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
24	Harrow	_name_	Harrow	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
25	boys,	_	boys,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	3	MOD_mod	true
26	which	_	which	WDT	O	_	i	_	0	IGNORE	true
27	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	recalled	_	recall	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
29	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
31	vividness:	_	vividness:	NN	O	_	$LEMMA$	_	0	IGNORE	true
32	"My	"my	"my	NN	O	_	mean-01	_	0	IGNORE	true
33	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	friendships	_	friendship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_dom	true
35	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_s	true
36	with	_	with	IN	O	_	i	_	0	IGNORE	true
37	me	_	I	PRP	O	_	and	_	0	IGNORE	true
38	passions	_	passion	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	35	APP_o	true
39	(for	_	(for	.	O	_	$LEMMA$	_	0	IGNORE	true
40	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
41	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
42	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
43	violent)."	_	violent)."	ADD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_s	true
44	[21	_	[21	XX	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o	true
45	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@s@@see-01, 35@@s@@person, 34@@d@@friendship, 3@@s@@return-01, 43@@s@@and, 21@@p@@involvement-01, 28@@s@@recall-02, 20@@p@@emotion, 42@@n@@always, 33@@p@@school, 23@@p@@other, 38@@r@@passion, 44@@d@@[21, 2@@n@@final, 30@@p@@great, 24@@n@@_NAME_, 11@@n@@period, 10@@s@@settled-02, 1@@p@@person, 1@@n@@_NAME_, 18@@d@@circle, 24@@c@@city, 25@@p@@name, 15@@s@@form-01, 9@@s@@more]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	center	_	center	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	trade,	_	trade,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	extended	_	extend	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	settlements	_	settlement	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	Mesoamerica’s_Gulf_Coast	_name_	Coast	NNP	O	(b<root> / broadcast-program  :name (n / --LEX--)  :medium-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@n@@_NAME_, 2@@d@@city, 10@@s@@extend-01, 14@@b@@broadcast-program, 12@@d@@settlement, 6@@r@@center, 4@@p@@also]
sentence=1	Despite	despite	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	have-concession-91	_	0	IGNORE	true
3	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	perception	_	perception	NN	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	perceive-01	(mod(), s())	23	MOD_mod	true
5	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
6	Cleveland	_name_	Cleveland	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	9	APP_dom	true
7	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	an	_	an	DT	O	_	resemble-01	_	0	IGNORE	true
9	industrial	_	industrial	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	industry	(dom())	4	APP_s	true
10	town,	_	town,	NNS	O	_	include-91	_	0	IGNORE	true
11	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	beyond	_	beyond	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
13	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	automotive	_	automotive	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_op1	true
16	steel	_	steel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	plants,	_	plants,	NNP	O	_	and	_	0	IGNORE	true
18	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	clean	_	clean	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	22	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	beautiful	_	beautiful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	downtown	_	downtown	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	rises	_	rise	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
24	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
26	mouth	_	mouth	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	23	MOD_mod	true
27	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the_Cuyahoga_River	_name_	River	NNP	O	(f<root> / facility  :name (n2 / --LEX--))	$LEMMA$	()	26	APP_poss	true
29	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	southern	_	southern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	south	(mod())	32	MOD_mod	true
32	shore	_	shore	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	26	MOD_mod	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	Lake_Erie	_name_	Erie	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	32	APP_poss	true
35	(often	_	(often	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	32	MOD_mod	true
36	marvelled	_	marvel	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	MOD_o	true
37	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
38	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
39	visitors	_	visitor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	visit-01	()	36	APP_s	true
40	who	_	who	WP	O	_	person	_	0	IGNORE	true
41	are	_	be	VBP	O	_	person	_	0	IGNORE	true
42	surprised	_	surprised	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
43	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
44	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	45	MOD_mod	true
45	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	APP_o	true
46	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
47	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
48	side,	_	side,	NNP	O	_	mean-01	_	0	IGNORE	true
49	i.e.,	_	i.e.,	NN	O	_	_NAME_	_	0	IGNORE	true
50	Canada)	_name_	Canada)	NNP	O	_	mean-01	_	0	IGNORE	true
51	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@b@@beyond, 44@@explicitanon0@@-, 15@@a@@and, 3@@p@@common, 42@@s@@surprised-01, 4@@s@@perceive-01, 36@@s@@marvel-01, 34@@n@@_NAME_, 11@@p@@just, 35@@p@@_NAME_, 34@@p@@person, 45@@s@@see-01, 16@@d@@steel, 21@@s@@beautiful-02, 23@@s@@rise-01, 43@@d@@you, 19@@s@@clean-04, 14@@d@@automotive, 28@@n2@@River, 39@@p2@@person, 47@@d@@other, 9@@r@@industry, 26@@h@@mouth, 28@@f@@facility, 22@@d@@downtown, 6@@c@@city, 31@@p@@south, 32@@h@@shore, 6@@n@@_NAME_, 39@@e2@@visit-01]
sentence=1	The_Union_of_Rationalist_Atheists	_name_	Atheists	NNPS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
3	Agnostics	_name_	Agnostics	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
4	(UAAR)	(uaar)	(UAAR)	NNP	O	_	person	_	0	IGNORE	true
5	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
6	launched	_	launch	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	petition	_	petition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_o	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	has	_	have	VBZ	O	(d<root> / --LEX--)	$LEMMA$-03	()	6	APP_s	true
12	more	_	more	JJR	O	_	cause-01	_	0	IGNORE	true
13	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	more-$LEMMA$	(op1(), mod())	16	MOD_mod	true
14	11,000	_	11,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	13	APP_op1	true
15	signatures,	_	signatures,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	asking	_	ask	VBG	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o(s_UNIFY_o2()))	8	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	16	APP_o2	true
19	to	_	to	TO	O	_	person	_	0	IGNORE	true
20	respect	_	respect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	16	APP_o	true
22	execute	_	execute	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	sentence	_	sentence	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the_Supreme_Court	_name_	Court	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@o2@@organization, 2@@a@@and, 1@@n@@_NAME_, 13@@s@@more-than, 10@@n@@now, 22@@s@@execute-01, 18@@g2@@govern-01, 16@@w@@ask-02, 18@@g@@government-organization, 26@@n@@_NAME_, 11@@d@@have-03, 6@@s@@launch-01, 8@@s@@petition-01, 26@@g@@government-organization, 24@@s@@sentence-01, 21@@a@@and, 14@@d@@_NUMBER_, 20@@s@@respect-01, 3@@d@@Agnostics]
sentence=1	From	from	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	an	_	an	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
3	entrepreneurial	_	entrepreneurial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	perspective,	_	perspective,	NNS	O	_	and	_	0	IGNORE	true
5	what	_	what	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	6	MOD_mod	true
6	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
7	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	invent	_	invent	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
10	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
11	support	_	support	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
12	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	organic	_	organic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	farming	_	farming	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
16	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
17	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	insects	_	insect	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	damage	_	damage	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	MOD_s	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	MOD_op1	true
23	destroy	_	destroy	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
24	crops	_	crop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
25	?	_	?	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@s@@invent-01, 7@@s@@possible-01, 11@@s@@support-01, 13@@p@@organic, 17@@d@@problem, 15@@a@@and, 19@@p@@insect, 14@@d@@farming, 23@@s@@destroy-01, 24@@d@@crop, 22@@a@@or, 5@@p@@amr-unknown, 6@@d@@product, 8@@d@@you, 3@@p@@entrepreneurial, 21@@s@@damage-01, 2@@s@@cause-01]
sentence=1	Everyone’s	everyone’s	Everyone’s	NNP	O	_	multi-sentence	_	0	IGNORE	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	watching	_	watch	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	weird	_	weird	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	retarded	_	retarded	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
8	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
9	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	12	MOD_mod	true
11	chubby	_	chubby	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	who’s	_	who’s	NNP	O	_	-	_	0	IGNORE	true
14	trying	_	try	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	23	MOD_s	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	14	APP_o	true
17	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
19	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-down-04	(s())	16	APP_o	true
20	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	lights	_	light	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	8	MOD_s	true
24	who’s	_	who’s	NNP	O	_	and	_	0	IGNORE	true
25	afraid	_	afraid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fear-01	(s())	23	APP_o	true
26	to	_	to	TO	O	_	-	_	0	IGNORE	true
27	touch	_	touch	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_s	true
28	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@retarded-01, 9@@p@@this, 8@@s@@except-01, 11@@p@@chubby, 23@@s@@contrast-01, 10@@explicitanon0@@1, 22@@d@@light, 16@@s@@get-04, 2@@p@@just, 12@@d@@guy, 25@@s@@fear-01, 5@@p@@weird, 27@@d@@touch-01, 7@@d@@girl, 3@@s@@watch-01, 14@@c@@try-01, 19@@s@@put-down-04]
sentence=1	How	how	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	5	MOD_mod	true
2	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	true
5	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	about	_	about	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	definition	_	definition	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	define-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	santorum	_	santorum	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	neologism	_	neologism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
13	that	_	that	WDT	O	_	hate-01	_	0	IGNORE	true
14	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	contest	_	contest	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_o	true
19	from	_	from	IN	O	_	mean-01	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Savage	savage	Savage	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	Love	love	Love	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
23	advice	_	advice	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	column	_	column	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
25	?	_	?	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@d@@contest-02, 5@@s@@hear-01, 3@@d@@you, 1@@t@@amr-unknown, 22@@p@@Love-01, 4@@o@@ordinal-entity, 11@@n@@_NAME_, 14@@s@@grow-01, 8@@t@@thing, 21@@p@@Savage, 24@@s@@column, 23@@p@@advice, 12@@d@@neologism, 8@@c@@define-01, 4@@explicitanon0@@1]
sentence=1	Raucous	raucous	raucous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	laughter	_	laughter	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	greeted	_	greet	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	suggestions	_	suggestion	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	suggest-01	(s())	3	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
10	parts	_	part	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	5	APP_s	true
11	that	_	that	WDT	O	_	event	_	0	IGNORE	true
12	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
13	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	treatment	_	treatment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	treat-03	(s())	10	MOD_s	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@same-01, 16@@s@@treat-03, 5@@s@@suggest-01, 12@@s@@possible-01, 1@@p@@raucous, 3@@s@@greet-01, 2@@d@@laughter-01, 9@@d@@body, 13@@s@@receive-01, 8@@p@@other, 10@@h@@part]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	Senate,_Madam_Speaker,	_name_	speaker,	NN	O	_	_NAME_	_	0	IGNORE	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	will	_	will	MD	O	_	thing	_	0	IGNORE	true
7	fail	_	fail	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
8	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
9	it	_	it	PRP	O	_	and	_	0	IGNORE	true
10	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	hold	_	hold	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	15	APP_s	true
15	accountable	_	accountable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_s	true
16	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
17	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	hold	_	hold	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	military	_	military	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	aid	_	aid	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	19	APP_s	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	compel	_	compel	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	17	APP_o	true
25	an	_	an	DT	O	_	cause-01	_	0	IGNORE	true
26	ally	_	ally	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
27	to	_	to	TO	O	_	company	_	0	IGNORE	true
28	interfere	_	interfere	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
31	election	_	election	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	elect-01	(s())	28	APP_o	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
34	own	_	own	JJ	O	_	have-org-role-91	_	0	IGNORE	true
35	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	36	MOD_s	true
36	gain	_	gain	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	28	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@h@@have-org-role-91, 22@@s@@aid-01, 14@@e@@president, 21@@d@@military, 7@@d@@fail-01, 15@@s@@accountable-02, 11@@explicitanon0@@-, 28@@s@@interfere-01, 14@@p@@person, 17@@s@@use-01, 19@@s@@hold-01, 36@@o@@gain-01, 26@@d@@ally-01, 13@@p@@this, 35@@s@@personal-02, 31@@s@@elect-01, 24@@o@@compel-01, 30@@d@@our, 12@@o@@hold-01]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
3	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	opponent	_	opponent	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	oppose-01	(s())	9	MOD_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	duel,	_	duel,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
8	Alexandre_Dumas	_name_	Dumas	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	names	_	name	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
10	Pescheux	_name_	Pescheux	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
11	d'Herbinville,	d'herbinville,	d'Herbinville,	NFP	O	_	_NAME_	_	0	IGNORE	true
12	[13]	_	[13]	XX	O	_	include-91	_	0	IGNORE	true
13	who	_	who	WP	O	_	name	_	0	IGNORE	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	25	MOD_s	true
16	one	_	one	CD	O	(d<root> / --LEX--)	1	()	9	APP_o2	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	16	MOD_s	true
18	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
19	nineteen	_	nineteen	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	12	(mod())	21	MOD_mod	true
20	artillery	_	artillery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	officers	_	officer	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	17	APP_o	true
22	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
23	acquittal	_	acquittal	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	was	_	be	VBD	O	_	person	_	0	IGNORE	true
25	celebrated	_	celebrate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	at	_	at	IN	O	_	i	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	banquet	_	banquet	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	occasioned	_	occasion	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
31	Galois'	galois'	galois'	NN	O	_	_NAME_	_	0	IGNORE	true
32	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	30	MOD_mod	true
33	arrest.	_	arrest.	NN	O	_	1	_	0	IGNORE	true
34	[20	_	[20	XX	O	_	_NUMBER_	_	0	IGNORE	true
35	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[32@@o@@ordinal-entity, 25@@s@@celebrate-01, 10@@n@@_NAME_, 20@@p@@artillery, 21@@h@@have-org-role-91, 9@@b@@name-01, 21@@e@@officer, 4@@s@@oppose-01, 21@@p@@person, 8@@p@@person, 8@@n@@_NAME_, 15@@s@@actual-02, 30@@s@@occasion-01, 16@@d@@1, 10@@p@@person, 28@@b@@banquet, 23@@s@@acquittal-01, 19@@explicitanon0@@12, 32@@explicitanon0@@1, 17@@s@@include-91]
sentence=1	In	in	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
2	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
3	scenario	_	scenario	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
4	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
5	insecure	_	insecure	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	property	_	property	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
7	rights,	_	rights,	NNP	O	_	and	_	0	IGNORE	true
8	asymmetric	_	asymmetric	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
9	information,	_	information,	NNS	O	_	include-91	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op3 (c2<op3>)  :op1 (m<op1>)  :topic-of (e<mod>))	$LEMMA$	(op2(), op1(), mod(), op3())	3	MOD_mod	true
11	a	_	a	DT	O	_	government-org$LEMMA$niz$LEMMA$tion	_	0	IGNORE	true
12	judicial	_	judicial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	judiciary	(mod())	13	MOD_mod	true
13	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op3	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	acts	_	act	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
18	lax	_	lax	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	enforcement	_	enforcement	NN	O	(d<root> / --LEX--)	enforce-01	()	15	APP_o	true
20	mechanism,	_	mechanism,	NNP	O	_	and	_	0	IGNORE	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
23	in	_	in	IN	O	_	thing	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
26	sections,	_	sections,	NNP	O	_	thing	_	0	IGNORE	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	FDI	_name_	FDI	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	32	APP_s	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
31	to	_	to	TO	O	_	thing	_	0	IGNORE	true
32	attract	_	attract	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_dom	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[32@@s@@attract-01, 18@@s@@lax-02, 30@@r@@difficult, 12@@p@@judiciary, 22@@s@@discuss-01, 10@@a@@and, 15@@s@@act-01, 19@@d@@enforce-01, 28@@n@@_NAME_, 6@@d@@property, 13@@d@@system, 5@@p@@insecure, 28@@o2@@organization, 8@@d@@asymmetric, 3@@b@@scenario, 25@@s@@follow-01]
sentence=1	5.	_	5.	LS	O	_	name	_	0	IGNORE	true
2	Atoms	_name_	atom	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
4	neither	_	neither	RB	O	_	-	_	0	IGNORE	true
5	created	_	create	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op1	true
6	nor	_	nor	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	12	APP_s	true
7	destroyed	_	destroy	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op2	true
8	during	_	during	IN	O	_	thing	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	chemical	_	chemical	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	change,	_	change,	NNS	O	_	and	_	0	IGNORE	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	15	MOD_s	true
15	rearranged	_	rearrange	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
16	to	_	to	TO	O	_	and	_	0	IGNORE	true
17	yield	_	yield	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
18	substances	_	substance	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	that	_	that	WDT	O	_	product-of	_	0	IGNORE	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	differ-02	(s(), o())	18	MOD_s	true
22	from	_	from	IN	O	_	thing	_	0	IGNORE	true
23	those	_	those	DT	O	_	thing	_	0	IGNORE	true
24	present	_	present	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
25	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	24	MOD_mod	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	change	_	change	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_op1	true
28	(Figure	(figure	(Figure	.	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
29	2.4)	_name_	2.4)	ADD	O	_	mean-01	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@a@@nor, 7@@s@@destroy-01, 14@@s@@instead-of-91, 27@@d@@change-01, 17@@i@@yield-01, 25@@w@@before, 21@@s@@differ-02, 18@@d@@substance, 15@@d@@rearrange-01, 12@@s@@contrast-01, 28@@d@@(Figure-01, 24@@s@@present-01, 5@@s@@create-01, 2@@d@@atom, 10@@p@@chemical]
sentence=1	Of	of	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	course,	_	course,	NNP	O	_	and	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	–	_	–	:	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	there's	_	there'	VBZ	O	_	include-91	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
10	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	side	_	side	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	8	MOD_mod	true
12	of	_	of	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	aisle	_	aisle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_poss	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
17	advocated	_	advocate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
18	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	policy	_	policy	NN	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-01	(o(s()))	17	APP_o	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	defund	_	defund	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
25	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
26	police,	_	police,	NNP	O	_	_NAME_	_	0	IGNORE	true
27	contrary	_	contrary	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
28	to	_	to	IN	O	_	oppose-01	_	0	IGNORE	true
29	misrepresentations	_	misrepresentation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	are	_	be	VBP	O	_	person	_	0	IGNORE	true
32	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-09	(s())	29	MOD_s	true
33	forth	_	forth	RB	O	_	$LEMMA$	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@d@@misrepresentation, 17@@s@@advocate-01, 4@@p@@all, 24@@s@@defund-01, 21@@p@@this, 11@@h@@side, 19@@h@@policy-01, 8@@d@@anyone, 32@@s@@come-out-09, 7@@explicitanon0@@-, 18@@p@@any, 5@@s@@–-01, 3@@d@@we, 27@@s@@contrary-01, 14@@d@@aisle, 22@@d@@body]
sentence=1	Second,	_name_	second,	CD	O	_	-	_	0	IGNORE	true
2	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	9	APP_s	true
3	who	_	who	WP	O	_	person	_	0	IGNORE	true
4	specialize	_	specialize	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	tasks	_	task	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	learn	_	learn	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
10	to	_	to	TO	O	_	person	_	0	IGNORE	true
11	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	11	MOD_s	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	MOD_op1	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	17	MOD_s	true
17	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
18	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[4@@s@@specialize-01, 11@@s@@produce-01, 17@@d@@quality, 6@@p@@certain, 2@@p2@@person, 14@@a@@and, 16@@m@@more, 16@@b@@high-02, 12@@s@@more, 13@@s@@quick-02, 8@@o@@often, 2@@e2@@work-01, 7@@d@@task, 9@@c@@learn-01]
sentence=1	Rachel	_name_	Rachel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	lived	_	live	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	her	_	she	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
6	parents'	_	parents'	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	home	(mod())	3	MOD_mod	true
7	farm,	_	farm,	NNP	O	_	and	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
10	it	_	it	PRP	O	_	i	_	0	IGNORE	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	the	_	the	DT	O	_	equal	_	0	IGNORE	true
13	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	remarkable	_	remarkable	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	9	APP_o	true
15	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
16	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
18	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	14	APP_s	true
19	Carroll	_name_	Carroll	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
21	her	_	she	PRP$	O	_	person	_	0	IGNORE	true
22	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	20	APP_op2	true
23	apart	_	apart	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
24	for	_	for	IN	O	_	and	_	0	IGNORE	true
25	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	MOD_s	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@f@@parent, 18@@s@@keep-04, 23@@d@@apart, 19@@n@@_NAME_, 6@@b@@home, 2@@p@@still, 20@@a@@and, 11@@p@@all, 1@@n@@_NAME_, 22@@h@@have-rel-role-91, 19@@p@@person, 1@@p@@person, 26@@s@@long-03, 13@@s@@more, 3@@s@@live-01, 14@@s@@remarkable, 9@@s@@make-02, 22@@p@@person, 25@@s@@so]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	upload	_	upload	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	to	_	to	IN	O	_	contrast-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	public	_	public	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	3	APP_o2	true
8	cloud,	_	cloud,	NNS	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
10	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	uploads	_	upload	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	to	_	to	IN	O	_	-	_	0	IGNORE	true
14	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	distributed	_	distribute	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	ledger	_	ledger	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
17	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
18	make	_	make	VB	O	_	cause-01	_	0	IGNORE	true
19	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	en$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
20	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	nobody	_	nobody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	APP_o	true
23	modify	_	modify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_s	true
24	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	25	MOD_mod	true
25	numbers	_	number	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	fact	_	fact	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[24@@p@@that, 10@@n@@then, 26@@w@@after, 23@@s@@modify-01, 28@@d@@fact, 1@@d@@They, 15@@s@@distribute-01, 2@@p@@also, 4@@d@@it, 25@@d@@number, 21@@d@@nobody, 16@@d@@ledger, 22@@s@@possible-01, 7@@d@@public-02, 19@@s@@ensure-01, 3@@b@@upload-01, 11@@t@@upload-01]
sentence=1	Agents	agents	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	rationally	_	rationally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	just-02	(mod())	4	MOD_mod	true
4	choose	_	choose	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
5	between	_	between	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	experts	_	expert	NNS	O	(p<root> / person  :ARG1-of (l / --LEX--))	$LEMMA$-01	()	4	APP_o	true
7	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	criteria	_	criterion	NNS	O	(d<root> / --LEX--)	$FORM$	()	20	APP_s	true
11	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
12	distinguish	_	distinguish	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	MOD_s	true
13	genuine	_	genuine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	experts	_	expert	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
15	from	_	from	IN	O	_	person	_	0	IGNORE	true
16	charlatans	_	charlatan	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o2	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_op1	true
20	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_o2	true
21	widely	_	widely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	wide	(s())	22	MOD_s	true
22	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_op2	true
23	:	_	:	:	O	_	mean-01	_	0	IGNORE	true

nodealignment=[22@@s@@know-02, 16@@d@@charlatan, 6@@l@@expert-01, 7@@p@@only, 10@@d@@criteria, 4@@b@@choose-01, 12@@b@@distinguish-01, 1@@d@@agent, 13@@s@@genuine-02, 21@@s@@wide, 19@@s@@sense-02, 6@@p@@person, 14@@d@@expert-01, 5@@explicitanon0@@between, 2@@s@@possible-01, 20@@a@@or, 3@@t@@just-02, 18@@p@@common]
sentence=1	I'm	i'm	i'm	PRP	O	_	multi-sentence	_	0	IGNORE	true
2	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
3	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	inspired	_	inspire	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_s	true
6	by	_	by	IN	O	_	multi-sentence	_	0	IGNORE	true
7	dreams	_	dream	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	when	_	when	WRB	O	_	person	_	0	IGNORE	true
10	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	12	MOD_mod	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	write	_	write	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
15	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	seriously	_	seriously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	serious-01	(s())	14	MOD_s	true
17	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(s(), o())	8	MOD_o	true
21	in	_	in	IN	O	_	thing	_	0	IGNORE	true
22	structure	_	structure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
24	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
25	..	_	..	NFP	O	_	event	_	0	IGNORE	true
26	a	_	a	DT	O	_	thing	_	0	IGNORE	true
27	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	38	MOD_s	true
29	mathematics	_	mathematic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
32	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
33	..	_	..	NFP	O	_	expressive	_	0	IGNORE	true
34	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
35	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	40	MOD_s	true
36	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
37	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	38	MOD_mod	true
38	book	_	book	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
39	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
40	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
41	Opus_1	_name_	1	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	40	MOD_mod	true
42	..	_	..	NFP	O	_	mean-01	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	collection	_	collection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	collect-01	(s())	40	APP_o	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	48	MOD_mod	true
47	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	48	MOD_s	true
48	stories	_	story	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
49	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
50	musical	_	musical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	music	(mod())	51	MOD_mod	true
51	structures	_	structure	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
52	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[41@@n@@_NAME_, 48@@d@@story, 46@@explicitanon0@@4, 16@@s@@serious-01, 50@@p@@music, 37@@o@@ordinal-entity, 28@@s@@resemble-01, 38@@d@@book, 14@@d@@write-01, 19@@s@@more, 12@@s@@start-01, 10@@n@@eventual, 37@@explicitanon0@@1, 27@@s@@bit, 51@@y@@structure, 29@@d@@mathematic, 24@@p@@also, 44@@s@@collect-01, 4@@s@@bit, 35@@s@@exemplify-01, 15@@s@@more, 40@@s@@call-01, 3@@p@@little, 5@@s@@inspire-01, 20@@s@@interest-01, 7@@d@@dream-01, 32@@t@@way, 22@@d@@structure, 47@@s@@long-03, 8@@s@@contrast-01]
sentence=1	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
2	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
3	cases,	_	cases,	NNS	O	_	and	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	focuses	_	focus	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	on	_	on	IN	O	_	include-91	_	0	IGNORE	true
9	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	or	_	or	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	few	_	few	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
13	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
14	(sometimes	_	(sometimes	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
16	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	“core	_	“core	ADD	O	(d<root> / --LEX--)	_NAME_	()	15	APP_o	true
18	competency”)	_	competency”)	NNP	O	_	and	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
20	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	successful	_	successful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	succeed-01	(s())	0	ROOT	true
22	than	_	than	IN	O	_	succeed-01	_	0	IGNORE	true
23	firms	_	firm	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
24	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
25	try	_	try	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	23	MOD_s	true
26	to	_	to	TO	O	_	company	_	0	IGNORE	true
27	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_o	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	wide	_	wide	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	MOD_s	true
30	range	_	range	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
33	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[27@@s@@make-01, 25@@c@@try-01, 13@@d@@product, 20@@s@@more, 17@@d@@_NAME_, 23@@p@@firm, 21@@s@@succeed-01, 14@@p@@(sometimes, 32@@d@@product, 10@@b2@@or, 9@@d@@one, 5@@d@@business, 7@@t@@focus-01, 2@@explicitanon0@@many, 30@@explicitanon0@@range, 15@@s@@call-01, 29@@s@@wide-02, 12@@d@@few]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Open	open	Open	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	3	MOD_s	true
3	Science	science	Science	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	4	MOD_mod	true
4	Framework	framework	Framework	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
5	(https://osf.io),	_	(https://osf.io),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
6	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
9	2011,	_	2011,	JJ	O	_	_NAME_	_	0	IGNORE	true
10	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	web	_	web	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	infrastructure	_	infrastructure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	facilitate	_	facilitate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
16	collaboration	_	collaboration	NN	O	(d<root> / --LEX--)	cooperate-01	()	15	APP_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
18	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
19	been	_	be	VBN	O	_	person	_	0	IGNORE	true
20	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
21	for	_	for	IN	O	_	thing	_	0	IGNORE	true
22	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	replication	_	replication	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	efforts	_	effort	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
25	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	psychology	_	psychology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	(e.g.,	_	(e.g.,	FW	O	_	mean-01	_	0	IGNORE	true
28	Open	open	Open	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
29	Science	science	Science	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	Collaboration,	collaboration,	Collaboration,	:	O	_	$LEMMA$	_	0	IGNORE	true
31	2015),	_	2015),	CD	O	_	$LEMMA$	_	0	IGNORE	true
32	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
33	continue	_	continue	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	MOD_o	true
34	to	_	to	TO	O	_	person	_	0	IGNORE	true
35	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
36	waves	_	wave	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	35	APP_o	true
37	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	academia	_	academia	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_op1	true
39	(Laws,	(laws,	(Laws,	NNP	O	_	mean-01	_	0	IGNORE	true
40	2016;	_	2016;	CD	O	_	mean-01	_	0	IGNORE	true
41	Lindsay,_2015;_Martin_&_Clarke,_2017)	_name_	2017)	NNP	O	_	mean-01	_	0	IGNORE	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_s	true
43	the	_	the	DT	O	_	person	_	0	IGNORE	true
44	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	45	MOD_s	true
45	media	_	medium	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_op2	true
46	(Baker,	(baker,	(baker,	FW	O	_	mean-01	_	0	IGNORE	true
47	2015;	_	2015;	CD	O	_	mean-01	_	0	IGNORE	true
48	Devlin,	devlin,	Devlin,	NNP	O	_	1	_	0	IGNORE	true
49	2016)	_	2016)	CD	O	_	mean-01	_	0	IGNORE	true
50	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[17@@a@@and, 13@@d@@infrastructure, 3@@p@@science, 38@@d@@academia, 15@@i@@facilitate-01, 36@@s@@wave, 4@@d@@Framework, 26@@d@@psychology, 2@@s@@_NAME_, 20@@s@@use-01, 16@@d@@cooperate-01, 6@@p@@also, 10@@s@@provide-01, 23@@p@@replication, 42@@a@@and, 33@@s@@continue-01, 12@@p@@web, 44@@s@@general-02, 35@@s@@make-01, 7@@s@@establish-01, 24@@s@@effort-01, 45@@d@@medium, 22@@p@@large]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	happy	_	happy	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	note	_	note	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	enthusiasm	_	enthusiasm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	demonstrated	_	demonstrate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
9	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
10	School_of_Open_Africa	_name_	Africa	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
11	in	_	in	IN	O	_	thing	_	0	IGNORE	true
12	transforming	_	transform	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op1	true
13	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	12	APP_s	true
14	along	_	along	IN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
15	Sustainable_Development_Goals	_name_	Goals	NNPS	O	(t<root> / --LEX--  :manner-of (h<mod>))	_NAME_	(mod())	16	MOD_mod	true
16	proposed	_	propose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
17	for	_	for	IN	O	_	thing	_	0	IGNORE	true
18	post-2015	_	post-2015	JJ	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	(Goal	(goal	(goal	ADD	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	No.	no.	no.	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	4:	_	4:	CD	O	_	thing	_	0	IGNORE	true
22	“Ensure	“ensure	“ensure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
23	inclusive	_	inclusive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$FORM$-01	(s())	27	MOD_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
25	equitable	_	equitable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	28	APP_op3	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	42	APP_s	true
29	promote	_	promote	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	APP_op2	true
30	life-long	_	life-long	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	long-03	(s())	32	MOD_s	true
31	learning	_	learning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	32	MOD_mod	true
32	opportunities	_	opportunity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
33	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	all”)	_	all”)	NNS	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
36	in	_	in	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	align-01	(s(), o())	3	MOD_o	true
37	line	_	line	NN	O	_	$LEMMA$	_	0	IGNORE	true
38	with	_	with	IN	O	_	-	_	0	IGNORE	true
39	the_Kenya_Vision_2030	_name_	2030	CD	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	36	APP_s	true
40	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
41	seeks	_	seek	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	39	MOD_s	true
42	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	3	MOD_o	true
43	transform	_	transform	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	41	APP_o	true
44	Kenya	_name_	Kenya	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	43	APP_o	true
45	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
46	a	_	a	DT	O	_	low-04	_	0	IGNORE	true
47	middle-income	_	middle-income	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	48	MOD_mod	true
48	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o2	true
49	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
50	offers	_	offer	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	48	MOD_s	true
51	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	52	MOD_s	true
52	quality	_	quality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	50	APP_o	true
53	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
54	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_poss	true
55	to	_	to	IN	O	_	and	_	0	IGNORE	true
56	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	57	MOD_mod	true
57	citizens	_	citizen	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_o2	true
58	by	_	by	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
59	the_year_2030	_name_	2030	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
60	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@s@@promote-02, 52@@m@@quality, 51@@s@@high-02, 8@@s@@demonstrate-01, 50@@t@@offer-01, 56@@p@@all, 16@@s@@propose-01, 36@@s@@align-01, 10@@n@@_NAME_, 15@@t@@_NAME_, 39@@l@@law, 7@@d@@enthusiasm, 28@@a@@and, 19@@d@@(goal, 1@@d@@i, 32@@d@@opportunity, 31@@p@@learning-01, 57@@d@@citizen, 44@@n@@_NAME_, 41@@c@@seek-01, 30@@s@@long-03, 47@@p@@_NAME_, 5@@s@@note-01, 12@@s@@transform-01, 18@@explicitanon2@@_NAME_, 3@@c@@happy-01, 42@@s@@to, 10@@o2@@organization, 44@@c@@country, 48@@d@@country, 18@@d@@date-entity, 25@@p@@equitable, 22@@d@@“ensure, 23@@s@@inclusive-01, 26@@p@@quality, 14@@t@@along, 39@@n@@_NAME_, 54@@d@@life, 43@@b@@transform-01, 59@@explicitanon0@@2030, 24@@a@@and, 13@@d@@educate-01, 58@@n@@by, 27@@d@@educate-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	sudden	_	sudden	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	rain	_	rain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
4	storm	_	storm	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
5	on	_	on	IN	O	_	10	_	0	IGNORE	true
6	Sunday_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	(March	(march	(March	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
8	4)	_	4)	CD	O	_	and	_	0	IGNORE	true
9	caused	_	cause	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	mass	_	mass	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	exodus	_	exodus	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	APP_o	true
13	of	_	of	IN	O	_	1	_	0	IGNORE	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_s	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	head	_	head	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
17	for	_	for	IN	O	_	and	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	station	_	station	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	prompting	_	prompt	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
21	lines	_	line	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	backed	_	back	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-04	(s(), o())	21	MOD_s	true
24	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
25	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	street	_	street	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@exodus, 6@@n@@_NAME_, 19@@d@@station, 3@@d@@rain-01, 20@@s@@prompt-01, 23@@s@@back-up-04, 21@@d@@line, 27@@d@@street, 16@@s@@head-01, 7@@explicitanon0@@_NAME_, 9@@s@@cause-01, 4@@s@@storm-01, 2@@p@@sudden, 7@@d@@date-entity, 14@@d@@person, 11@@p@@mass]
sentence=1	Nor	nor	nor	CC	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
2	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	realize	_	realize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	that	_	that	IN	O	_	request-confirmation-91	_	0	IGNORE	true
6	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
8	popular	_	popular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
11	aimed	_	aim	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	MOD_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	please	_	please	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	public	_	public	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
18	in	_	in	IN	O	_	event	_	0	IGNORE	true
19	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
20	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	wished	_	wish	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	17	APP_op2	true
22	to	_	to	TO	O	_	-	_	0	IGNORE	true
23	be	_	be	VB	O	_	person	_	0	IGNORE	true
24	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@popular-02, 20@@d@@way, 15@@s@@general-02, 21@@c@@wish-01, 16@@d@@public, 17@@a@@and, 7@@s@@write-01, 26@@s@@serious-02, 24@@s@@associate-01, 4@@s@@realize-01, 27@@d@@literature, 13@@s@@please-01, 3@@d@@she, 19@@explicitanon0@@-, 11@@c@@aim-01, 9@@d@@literature, 1@@explicitanon0@@-, 6@@d@@he]
sentence=1	Arrogant	arrogant	arrogant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	true
3	counteract	_	counteract	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
4	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
6	creating	_	create	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
7	an	_	an	DT	O	_	thing	_	0	IGNORE	true
8	atmosphere	_	atmosphere	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	revolves	_	revolve	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	around	_	around	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	them,	_	them,	NN	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	get	_	get	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
15	angry	_	angry	JJ	O	(d<root> / --LEX--)	anger-01	()	13	APP_op2	true
16	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
17	they're	_	they're	NNP	O	_	person	_	0	IGNORE	true
18	reminded	_	remind	VBD	O	(h<root> / --LEX--  :ARG2 (explicitanon0<s>)  :condition-of (a<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
19	of	_	of	IN	O	_	-	_	0	IGNORE	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	22	MOD_s	true
22	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@p@@arrogant, 8@@d@@atmosphere, 2@@d@@person, 22@@d@@world, 15@@d@@anger-01, 4@@d@@this, 21@@s@@real-04, 13@@a@@and, 6@@l@@create-01, 3@@s@@counteract-01, 10@@s@@revolve-01, 18@@h@@remind-01]
sentence=1	For	for	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	instance,	_	instance,	NNP	O	_	and	_	0	IGNORE	true
3	those	_	those	DT	O	_	that	_	0	IGNORE	true
4	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
5	an	_	an	DT	O	_	person	_	0	IGNORE	true
6	interest	_	interest	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	17	MOD_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	deceiving	_	deceive	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	public	_	public	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	may	_	may	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
13	set	_	set	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	12	APP_o	true
14	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
15	parallel	_	parallel	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	MOD_s	true
16	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
18	ostensibly	_	ostensibly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	suppose-01	(mod())	19	MOD_mod	true
19	guarantee	_	guarantee	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
20	expertise,	_	expertise,	XX	O	_	and	_	0	IGNORE	true
21	taking	_	take	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	MOD_s	true
22	advantage	_	advantage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	of	_	of	IN	O	_	thing	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	21	APP_o2	true
26	in	_	in	IN	O	_	thing	_	0	IGNORE	true
27	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
28	these	_	these	DT	O	_	person	_	0	IGNORE	true
29	parallel	_	parallel	JJ	O	_	$LEMMA$	_	0	IGNORE	true
30	institutions	_	institution	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	mimic	_	mimic	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_mod	true
32	legitimate	_	legitimate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	33	MOD_s	true
33	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
34	to	_	to	TO	O	_	thing	_	0	IGNORE	true
35	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	21	MOD_mod	true
36	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	39	APP_s	true
38	are	_	be	VBP	O	_	person	_	0	IGNORE	true
39	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-over-12	(s())	35	APP_o	true
40	in	_	in	RP	O	_	i	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@parallel, 6@@o@@interest-01, 19@@s@@guarantee-01, 13@@s@@set-up-03, 32@@s@@legitimate-02, 12@@f@@possible-01, 33@@d@@institution, 8@@s@@deceive-01, 35@@s@@ensure-01, 17@@d@@that, 22@@d@@advantage, 21@@b@@take-01, 25@@t@@way, 10@@s@@general-02, 18@@p@@suppose-01, 11@@d@@public, 31@@s@@mimic-01, 37@@d@@person, 16@@d@@institution, 39@@s@@take-over-12]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	mainland	_	mainland	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	fly	_	fly	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	camps,	_	camps,	NNS	O	_	and	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
13	choose	_	choose	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
14	to	_	to	TO	O	_	person	_	0	IGNORE	true
15	stay	_	stay	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_s	true
16	at	_	at	IN	O	_	person	_	0	IGNORE	true
17	Kopinga_Marae	_name_	Marae	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	[1]	_	[1]	XX	O	_	mean-01	_	0	IGNORE	true
19	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
20	value	_	value	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
21	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
22	money	_	money	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
24	chartering	_	charter	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	19	MOD_mod	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	flight	_	flight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	28	MOD_mod	true
28	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@choose-01, 15@@d@@stay-01, 1@@p@@even, 17@@n@@_NAME_, 28@@t@@way, 8@@b@@there, 27@@explicitanon0@@1, 5@@d@@group, 12@@a@@and, 20@@s@@value-01, 7@@s@@fly-01, 24@@l@@charter-01, 19@@s@@get-01, 10@@p@@school, 26@@d@@flight, 22@@d@@money, 3@@p@@mainland, 17@@c@@city, 4@@p@@school]
sentence=1	First,	_name_	first,	NN	O	_	-	_	0	IGNORE	true
2	surveys	_	survey	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	subject	_	subject	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
6	variable	_	variable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	vary-01	(s())	8	MOD_s	true
7	response	_	response	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	respond-01	(mod())	8	MOD_mod	true
8	rates	_	rate	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	misinterpretation	_	misinterpretation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	assess-01	(s())	9	APP_op2	true
12	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
13	questions	_	question	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
15	sample	_	sample	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op2	true
16	frames,	_	frames,	NNP	O	_	and	_	0	IGNORE	true
17	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
19	inject	_	inject	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
20	bias	_	bias	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_o	true
21	into	_	into	IN	O	_	ridiculous-02	_	0	IGNORE	true
22	fine-grained	_	fine-grained	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	analyses	_	analysis	NNS	O	(d<root> / --LEX--)	analyze-01	()	19	APP_o2	true
24	[21,	_name_	[21,	XX	O	_	-	_	0	IGNORE	true
25	22]	_	22]	ADD	O	_	mean-01	_	0	IGNORE	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@d@@sample-01, 19@@b@@inject-01, 2@@d@@survey-01, 14@@a@@or, 20@@d@@bias-01, 18@@s@@possible-01, 6@@s@@vary-01, 8@@d@@rate, 7@@p@@respond-01, 22@@p@@fine-grained, 4@@s@@subject-02, 23@@d@@analyze-01, 11@@s@@assess-01, 13@@d@@question-01, 9@@a@@and]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	respondents	_	respondent	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	respond-01	()	27	APP_o	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	indicated	_	indicate	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	person	()	27	APP_o2	true
6	were	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	27	MOD_s	true
7	discriminated	_	discriminate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_o	true
8	against	_	against	IN	O	_	-	_	0	IGNORE	true
9	—	_	—	:	O	_	and	_	0	IGNORE	true
10	specifically,	_	specifically,	NFP	O	_	and	_	0	IGNORE	true
11	those	_	those	DT	O	_	that	_	0	IGNORE	true
12	who	_	who	WP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	27	MOD_o	true
13	responded	_	respond	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	sometimes	_	sometimes	RB	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	MOD_op1	true
17	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	to	_	to	IN	O	_	person	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	perceived	_	perceive	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
21	discrimination	_	discrimination	NN	O	(d<root> / --LEX--)	discriminate-02	()	22	APP_s	true
22	measure	_	measure	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o	true
23	described	_	describe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
24	above	_	above	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	—	_	—	:	O	_	and	_	0	IGNORE	true
26	were	_	be	VBD	O	_	person	_	0	IGNORE	true
27	asked	_	ask	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	following	_	following	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	30	MOD_s	true
30	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_s	true
31	:	_	:	:	O	_	cause-01	_	0	IGNORE	true

nodealignment=[17@@o@@often, 21@@d@@discriminate-02, 2@@e2@@respond-01, 24@@b@@above, 12@@s@@person, 6@@s@@person, 2@@p2@@person, 13@@s@@respond-01, 16@@a@@or, 29@@s@@following-04, 1@@p@@all, 22@@s@@measure-02, 15@@d@@sometimes, 5@@d@@person, 30@@d@@question-01, 20@@s@@perceive-01, 4@@c@@indicate-01, 7@@s@@discriminate-02, 27@@b@@ask-01, 23@@s@@describe-01]
sentence=1	Despite	despite	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	setback,	_	setback,	NNP	O	_	and	_	0	IGNORE	true
4	France	_name_	France	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
5	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	7	MOD_mod	true
6	did	_	do	VBD	O	_	have-concession-91	_	0	IGNORE	true
7	conquer	_	conquer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	Mexico,	_name_	mexico,	CD	O	_	and	_	0	IGNORE	true
9	establishing	_	establish	VBG	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	regime	_	regime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	lasted	_	last	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
15	1867	_name_	1867	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	14	APP_op1	true
16	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[14@@w@@until, 11@@d@@regime, 7@@s@@conquer-01, 4@@c@@country, 15@@d@@date-entity, 9@@s@@establish-01, 13@@s@@last-01, 5@@n@@eventual, 15@@explicitanon0@@_NUMBER_, 2@@p@@this, 4@@n@@_NAME_]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
7	at	_	at	IN	O	_	and	_	0	IGNORE	true
8	him,	_	him,	NNS	O	_	and	_	0	IGNORE	true
9	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
10	eyes,	_	eyes,	NNP	O	_	and	_	0	IGNORE	true
11	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	went	_	go	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	1	APP_op1	true
14	out	_	out	RP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
15	there,	_	there,	NNS	O	(d<root> / --LEX--)	and	()	1	APP_op2	true
16	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	38	APP_op2	true
17	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	knees,	_	knees,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	front	_	front	NN	O	(d<root> / --LEX--)	in-$LEMMA$-of	()	16	APP_s	true
22	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	him,	_	him,	NNS	O	_	and	_	0	IGNORE	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	skirt	_	skirt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
27	that's	_	that's	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
28	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	short,	_	short,	NNP	O	_	mean-01	_	0	IGNORE	true
30	takes	_	take	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_op1	true
31	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	hands,	_	hands,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	1	APP_op3	true
34	goes	_	go	VBZ	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	33	APP_op2	true
35	along	_	along	IN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
36	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
37	toes,	_	toes,	NNS	O	_	et-cetera	_	0	IGNORE	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	1	MOD_op1	true
39	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
40	up,	_	up,	UH	O	_	he	_	0	IGNORE	true
41	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
42	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
43	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	doing	_	do	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	33	APP_op3	true
45	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	44	MOD_s	true
46	that	_	that	DT	O	_	$LEMMA$	_	1	IGNORE	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@s@@that's-01, 28@@p@@this, 11@@n@@then, 25@@p@@this, 38@@a@@and, 13@@s@@go-02, 5@@p@@just, 30@@d@@take-01, 44@@d@@do-02, 33@@a@@and, 35@@d@@along, 45@@s@@resemble-01, 3@@d@@woman, 15@@d@@and, 14@@d@@out, 6@@s@@look-01, 1@@a@@and, 16@@s@@get-05, 34@@p@@go-02, 43@@p@@just, 21@@d@@in-front-of, 39@@n@@then, 26@@d@@skirt]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
3	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	be-located-at-91	_	0	IGNORE	true
5	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	People	people	People	NNS	O	(d<root> / --LEX--)	person	()	5	APP_o	true
7	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	heartland	_	heartland	NN	O	(t2<root> / --LEX--  :part-of (i<poss>)  :source-of (g<mod>))	$LEMMA$	(mod(), poss())	6	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	nation	_	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	13	APP_o	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@i, 16@@s@@work-09, 11@@c@@country, 14@@p@@this, 6@@d@@person, 13@@s@@make-02, 15@@d@@nation, 5@@s@@bring-01, 3@@c@@like-02, 9@@t2@@heartland, 11@@n@@_NAME_]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	baptized	_	baptize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
6	about	_	about	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	5	APP_op1	true
7	360	_	360	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	6	APP_op1	true
8	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
9	366,	_	366,	CD	O	_	and	_	0	IGNORE	true
10	when	_	when	WRB	O	_	name	_	0	IGNORE	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	had	_	have	VBD	O	_	person	_	0	IGNORE	true
13	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (s<o>)  :ARG0 (y<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	4	MOD_mod	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	Rome	_name_	Rome	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	friend	_	friend	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	19	MOD_s	true
19	Bonosus	_name_	Bonosus	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
20	of	_	of	IN	O	_	name	_	0	IGNORE	true
21	Sardica	_name_	Sardica	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	(who	_	(who	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	30	MOD_s	true
24	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	45	MOD_s	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
27	have	_	have	VB	O	_	person	_	0	IGNORE	true
28	been	_	be	VBN	O	_	person	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
31	Bonosus	_name_	Bonosus	NNP	O	_	$LEMMA$	_	0	IGNORE	true
32	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
33	Jerome	_name_	Jerome	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	identifies	_	identify	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	19	MOD_o	true
35	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
36	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
37	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	34	APP_o2	true
38	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
39	went	_	go	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	37	MOD_s	true
40	to	_	to	TO	O	_	person	_	0	IGNORE	true
41	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	APP_o	true
42	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	hermit	_	hermit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
45	on	_	on	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	cause-01	(mod())	4	MOD_mod	true
46	an	_	an	DT	O	_	1	_	0	IGNORE	true
47	island	_	island	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
48	in	_	in	IN	O	_	i	_	0	IGNORE	true
49	the	_	the	DT	O	_	person	_	0	IGNORE	true
50	Adriatic)	_name_	Adriatic)	NNP	O	_	_NAME_	_	0	IGNORE	true
51	to	_	to	TO	O	_	and	_	0	IGNORE	true
52	pursue	_	pursue	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	41	MOD_mod	true
53	rhetorical	_	rhetorical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
54	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_s	true
55	philosophical	_	philosophical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
56	studies	_	study	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	APP_o	true
57	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@explicitanon0@@-, 45@@b@@cause-01, 25@@s@@possible-01, 44@@p@@hermit, 4@@s@@baptize-01, 6@@o@@about, 15@@n@@_NAME_, 18@@h@@have-rel-role-91, 33@@p@@person, 34@@b@@identify-01, 5@@w@@until, 33@@n@@_NAME_, 54@@d@@and, 53@@p@@rhetorical, 52@@s@@pursue-01, 7@@d@@date-entity, 23@@s@@possible-01, 13@@g@@go-02, 39@@c@@go-02, 19@@n@@_NAME_, 7@@explicitanon0@@_NUMBER_, 55@@p@@philosophical, 21@@n@@_NAME_, 30@@s@@same-01, 47@@b@@island, 15@@c@@city, 18@@b@@friend, 3@@explicitanon0@@-, 37@@p@@person, 37@@h@@have-rel-role-91, 41@@s@@live-01, 56@@s@@study-01, 37@@f@@friend, 1@@d@@He]
sentence=1	York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	fairly	_	fairly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	fair-04	(mod())	5	MOD_mod	true
5	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	city	_	city	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	16	APP_s	true
7	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
8	four_days	_name_	day	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	enough	_	enough	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	suffice-01	(mod())	16	MOD_mod	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	see	_	see	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
15	sights	_	sight	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	although	_	although	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	0	ROOT	true
17	York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	reveals	_	reveal	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	MOD_s	true
23	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	charms	_	charm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
26	explorers	_	explorer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	22	APP_o2	true
27	with	_	with	IN	O	_	-	_	0	IGNORE	true
28	curiosity	_	curiosity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	22	MOD_mod	true
30	patience	_	patience	NN	O	(d<root> / --LEX--)	patient-01	()	29	APP_op2	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[10@@explicitanon0@@suffice-01, 17@@n@@_NAME_, 6@@r@@city, 30@@d@@patient-01, 4@@s@@fair-04, 8@@t2@@temporal-quantity, 5@@p@@small, 24@@d@@charm, 1@@c@@city, 22@@b@@reveal-01, 17@@c@@city, 26@@p2@@person, 16@@s@@have-concession-91, 29@@a@@and, 1@@n@@_NAME_, 14@@s@@major-02, 26@@e2@@explorer, 15@@d@@sight, 12@@i@@see-01, 8@@explicitanon0@@day, 20@@d@@city, 28@@d@@curiosity]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	participants	_	participant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	participate-01	()	4	APP_s	true
3	were	_	be	VBD	O	_	person	_	0	IGNORE	true
4	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
5	"cases"	_	"cases"	''	O	_	$LEMMA$	_	0	IGNORE	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	paper,	_	paper,	NNS	O	_	and	_	0	IGNORE	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
11	later	_	later	RB	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	late	(mod())	12	MOD_mod	true
12	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	10	APP_o	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	known	_	know	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	12	APP_s	true
16	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
17	semantic	_	semantic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	roles	_	role	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
20	thematic	_	thematic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	relations,	_	relations,	NNS	O	_	include-91	_	0	IGNORE	true
22	which	_	which	WDT	O	_	name	_	0	IGNORE	true
23	are	_	be	VBP	O	_	resemble-01	_	0	IGNORE	true
24	similar	_	similar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	19	MOD_s	true
25	to	_	to	IN	O	_	resemble-01	_	0	IGNORE	true
26	theta	_	theta	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	roles	_	role	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
29	generative	_	generative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	grammar	_	grammar	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[19@@a@@or, 24@@s@@resemble-01, 4@@s@@call-01, 8@@p@@original, 11@@l@@late, 30@@p@@grammar, 20@@d@@thematic, 26@@p@@theta, 2@@p2@@person, 27@@d@@role, 1@@p@@this, 29@@p@@generative, 18@@d@@role, 17@@p@@semantic, 15@@s@@know-02, 2@@e2@@participate-01, 12@@s@@come-04, 11@@m@@more, 10@@s@@contrast-01]
sentence=1	“It’s	“it’s	“it’s	JJ	O	_	say-01	_	0	IGNORE	true
2	noggins	_	noggin	NNS	O	(d<root> / --LEX--)	_NAME_	()	0	ROOT	true
3	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
5	wants	_	want	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	get	_	get	VB	O	_	i	_	0	IGNORE	true
8	rid	_	rid	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	i	_	0	IGNORE	true
10	me	_	I	PRP	O	_	i	_	0	IGNORE	true
11	…	_	…	:	O	_	$LEMMA$	_	0	IGNORE	true
12	”	_	"	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	2	MOD_mod	true

nodealignment=[3@@b@@here, 12@@explicitanon0@@interrogative, 8@@s@@rid-01, 2@@d@@_NAME_, 5@@c@@want-01]
sentence=1	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	third,	_	third,	NNS	O	_	person	_	0	IGNORE	true
3	turning	_	turn	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
4	to	_	to	TO	O	_	person	_	0	IGNORE	true
5	face	_	face	VB	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	3	MOD_mod	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
8	threat,	_	threat,	NNS	O	_	cause-01	_	0	IGNORE	true
9	took	_	take	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
10	a	_	a	DT	O	(d<root> / --LEX--)	cause-01	()	11	APP_o	true
11	blow	_	blow	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-14	(s(), o())	0	ROOT	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	face	_	face	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	audibly	_	audibly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	doubt-01	(mod())	17	MOD_mod	true
17	crunched	_	crunch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	bones	_	bone	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	17	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	cheek	_	cheek	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@d@@face, 11@@s@@blow-14, 16@@t@@doubt-01, 10@@d@@cause-01, 7@@s@@new-01, 17@@s@@crunch-01, 19@@h@@bone, 3@@s@@turn-01, 22@@d@@cheek, 5@@d2@@face-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	unlikely	_	unlikely	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	likely-01	(s())	0	ROOT	true
4	to	_	to	TO	O	_	-	_	0	IGNORE	true
5	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_s	true
6	the	_	the	DT	O	_	-	_	0	IGNORE	true
7	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
9	ability	_	ability	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	APP_op2	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	aim	_	aim	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	for	_	for	IN	O	_	or	_	0	IGNORE	true
13	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	soft	_	soft	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
15	landing-spot,	_	landing-spot,	JJ	O	_	mean-01	_	0	IGNORE	true
16	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	water,	_name_	water,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
20	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	impact	_	impact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
22	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	improve	_	improve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
26	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	chances	_	chance	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	APP_o	true
28	of	_	of	IN	O	_	thing	_	0	IGNORE	true
29	survival	_	survival	NN	O	(d<root> / --LEX--)	survive-01	()	27	APP_s	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@s@@chance-02, 1@@d@@You, 21@@p@@impact-01, 22@@d@@site, 9@@s@@possible-01, 3@@explicitanon0@@-, 8@@a@@or, 19@@a@@or, 7@@d@@time, 14@@s@@soft-02, 16@@d@@body, 24@@s@@possible-01, 11@@s@@aim-01, 3@@p@@likely-01, 20@@p@@other, 25@@s@@improve-01, 5@@s@@have-03, 29@@d@@survive-01]
sentence=1	Perhaps	perhaps	perhaps	RB	O	_	possible-01	_	0	IGNORE	true
2	an	_	an	DT	O	_	person	_	0	IGNORE	true
3	Erasmus	_name_	erasmus	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
4	who	_	who	WP	O	_	name	_	0	IGNORE	true
5	writes	_	write	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
6	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	you,	_	you,	NNS	O	_	_NAME_	_	0	IGNORE	true
8	will	_	will	MD	O	_	thing	_	0	IGNORE	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
10	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Gospel,	_name_	gospel,	NN	O	_	person	_	0	IGNORE	true
14	than	_	than	IN	O	_	person	_	0	IGNORE	true
15	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	dunderheads	_	dunderhead	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
17	who	_	who	WP	O	_	person	_	0	IGNORE	true
18	support	_	support	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[15@@p@@certain, 10@@d@@more, 5@@s@@write-01, 3@@p@@person, 16@@p@@dunderhead, 3@@n@@_NAME_, 9@@s@@do-02, 18@@s@@support-01]
sentence=1	Your	your	Your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
2	appliances	_	appliance	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_dom	true
3	are	_	be	VBP	O	_	and	_	0	IGNORE	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	murder	_	murder	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	0	ROOT	true
6	on	_	on	IN	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	straps,	_	straps,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	are	_	be	VBP	O	_	seem-01	_	0	IGNORE	true
11	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
13	the	_	the	DT	O	_	i	_	0	IGNORE	true
14	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	15	MOD_mod	true
15	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	5	MOD_o	true
18	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
19	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	overalls	_	overall	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@wear-out-03, 21@@b@@overall, 5@@r@@murder-01, 14@@explicitanon0@@1, 2@@m@@appliance, 1@@d@@Your, 15@@d@@thing, 4@@p@@also, 11@@p@@almost, 14@@o@@ordinal-entity, 12@@n@@always]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	mention	_	mention	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	historic	_	historic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	nature	_	nature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	Vice	vice	Vice	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	8	MOD_mod	true
8	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	10	MOD_s	true
9	HARRIS’	harris’	HARRIS’	NNP	O	_	_NAME_	_	0	IGNORE	true
10	ascendance,	_	ascendance,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	11	MOD_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	let’s	_	let’s	NNP	O	(d<root> / --LEX--)	we	()	14	APP_s	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	forget	_	forget	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	that	_	that	IN	O	_	name	_	0	IGNORE	true
16	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	successor,	_	successor,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
18	ALEX	_name_	ALEX	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
19	PADILLA,	padilla,	PADILLA,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-org-role-91	(s(), o())	11	MOD_s	true
20	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	11	MOD_mod	true
21	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
22	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	20	MOD_mod	true
23	Latino	_name_	latino	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	Senator	senator	Senator	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	19	APP_o	true
25	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
26	represent	_	represent	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	California;	_name_	california;	CD	O	_	$LEMMA$	_	0	IGNORE	true
28	that	_	that	DT	O	_	have-org-role-91	_	0	IGNORE	true
29	RAFAEL	_name_	RAFAEL	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	31	MOD_mod	true
30	WARNOCK,	warnock,	WARNOCK,	NNP	O	_	person	_	0	IGNORE	true
31	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
32	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
33	Georgia	_name_	Georgia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	35	APP_o	true
34	was	_	be	VBD	O	_	person	_	0	IGNORE	true
35	represented	_	represent	VBN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	31	MOD_mod	true
36	in	_	in	IN	O	_	i	_	0	IGNORE	true
37	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	Chamber	chamber	Chamber	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
40	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	41	MOD_mod	true
41	staunch	_	staunch	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
42	segregationists,	_	segregationists,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
43	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
44	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
45	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
46	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	48	MOD_mod	true
47	African-American	_name_	african-american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
48	Senator	senator	Senator	NNP	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	78	MOD_mod	true
49	Georgia	_name_	Georgia	NNP	O	_	_NAME_	_	0	IGNORE	true
50	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
51	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
52	elected;	_	elected;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_o	true
54	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
55	JOHN_OSSOFF	_name_	OSSOFF	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	53	APP_op2	true
56	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
57	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
58	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	60	MOD_mod	true
59	Jewish	_name_	jewish	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	60	MOD_mod	true
60	Senator	senator	Senator	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	84	MOD_s	true
61	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
62	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
63	State,	_name_	state,	CD	O	_	$LEMMA$	_	0	IGNORE	true
64	sworn	_	swear	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-in-06	(s(), o())	60	MOD_s	true
65	in	_	in	RP	O	_	cause-01	_	0	IGNORE	true
66	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	64	MOD_mod	true
67	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
68	a	_	a	DT	O	_	1	_	0	IGNORE	true
69	book	_	book	NN	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_o	true
70	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
71	Hebrew_Scripture	_name_	Scripture	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	69	MOD_mod	true
72	once	_	once	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
73	owned	_	own	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	69	MOD_o	true
74	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
75	the	_	the	DT	O	_	1	_	0	IGNORE	true
76	rabbi,	_	rabbi,	NNP	O	_	1	_	0	IGNORE	true
77	who,	_	who,	NN	O	_	1	_	0	IGNORE	true
78	decades	_name_	decade	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	73	APP_s	true
79	ago,	_	ago,	DT	O	_	expressive	_	0	IGNORE	true
80	formed	_	form	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	69	MOD_s	true
81	a	_	a	DT	O	_	1	_	0	IGNORE	true
82	bond	_	bond	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	80	APP_o	true
83	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
84	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	11	MOD_mod	true
85	Jewish	_name_	jewish	JJ	O	_	_NAME_	_	0	IGNORE	true
86	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
87	African-American	_name_	african-american	JJ	O	_	_NAME_	_	0	IGNORE	true
88	communities	_	community	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	82	APP_s	true
89	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
90	Georgia	_name_	Georgia	NNP	O	_	_NAME_	_	0	IGNORE	true
91	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[44@@n@@now, 26@@s@@represent-01, 8@@p2@@president, 58@@explicitanon0@@1, 69@@d@@book, 46@@o@@ordinal-entity, 14@@s@@forget-01, 12@@d@@we, 24@@h2@@have-org-role-91, 60@@h2@@have-org-role-91, 60@@m@@Senator, 18@@d@@ALEX, 58@@o@@ordinal-entity, 84@@p@@person, 13@@explicitanon0@@-, 11@@s@@contrast-01, 22@@explicitanon0@@1, 82@@s@@bond, 33@@c@@country, 72@@p@@once, 29@@n@@_NAME_, 80@@s@@form-01, 59@@n@@_NAME_, 51@@n@@ever, 35@@t@@represent-01, 31@@s@@bear-02, 40@@explicitanon0@@2, 33@@n@@_NAME_, 23@@n@@latino, 4@@p@@historic, 1@@d@@i, 47@@n@@_NAME_, 64@@s@@swear-in-06, 19@@s@@have-org-role-91, 2@@s@@mention-01, 41@@p@@staunch, 88@@d@@community, 7@@p@@vice, 22@@o@@ordinal-entity, 59@@r@@religious-group, 55@@p@@person, 78@@t@@temporal-quantity, 66@@n@@today, 20@@p@@person, 23@@r@@religious-group, 8@@h@@have-org-role-91, 24@@m@@Senator, 55@@n@@_NAME_, 53@@a@@and, 38@@b@@Chamber, 47@@c@@country, 37@@p@@this, 5@@d@@nature, 10@@s@@and, 73@@s@@own-01, 71@@p@@Scripture, 48@@r@@Senator, 78@@m@@decade, 46@@explicitanon0@@1]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	APP_s	true
4	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
5	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	the	_	the	DT	O	_	multi-sentence	_	0	IGNORE	true
7	opposite:	_	opposite:	NN	O	_	multi-sentence	_	0	IGNORE	true
8	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_dom	true
9	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
10	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-of	(mod())	12	MOD_mod	true
11	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
12	arts	_	art	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
14	mathematics	_	mathematics	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_dom	true
15	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
16	science	_	science	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op2	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_o	true
18	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
19	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	see	_	see	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_op2	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
24	common	_	common	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
26	there	_	there	EX	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
27	where	_	where	WRB	O	_	contrast-01	_	0	IGNORE	true
28	mathematician	_	mathematician	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
29	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
30	were	_	be	VBD	O	_	person	_	0	IGNORE	true
31	writers	_	writer	NNS	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	write-01	(s(), o())	28	MOD_s	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@almost, 8@@d@@literature, 28@@p@@mathematician, 18@@d@@they, 24@@d@@common, 19@@p@@also, 16@@r@@science, 31@@t@@write-01, 13@@a@@and, 12@@r@@art, 26@@b@@there, 2@@s@@possible-01, 1@@d@@It, 14@@d@@mathematics, 17@@s@@contrast-01, 20@@s@@see-01, 10@@p@@kind-of, 3@@s@@look-02, 22@@d@@lot, 25@@a@@and]
sentence=1	Furthermore,	furthermore,	Furthermore,	NFP	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	satellite	_	satellite	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	measurements	_	measurement	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	measure-01	(s(), o())	8	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	SSS	_name_	SSS	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	hampered	_	hamper	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	effect	_	effect	NN	O	_	$LEMMA$-03	_	0	IGNORE	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	radio	_	radio	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	frequency	_	frequency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	interference	_	interference	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	interfere-01	(s())	8	APP_s	true
16	(RFI)	(rfi)	(rfi)	NN	O	_	mean-01	_	0	IGNORE	true
17	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	offshore	_	offshore	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	areas	_	area	NNS	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	15	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	(i.e.,	_	(i.e.,	NN	O	_	mean-01	_	0	IGNORE	true
23	Bohai	_name_	Bohai	NNP	O	(p2<root> / province  :name (n / --LEX--))	_NAME_	()	27	APP_op1	true
24	sea,	_	sea,	NN	O	_	mean-01	_	0	IGNORE	true
25	Yellow	yellow	yellow	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
26	sea	_	sea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	19	APP_poss	true
28	East_China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	27	APP_op3	true
29	sea),	_	sea),	NNP	O	_	and	_	0	IGNORE	true
30	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
31	causes	_	cause	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
32	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
33	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	39	APP_s	true
37	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
38	be	_	be	VB	O	_	person	_	0	IGNORE	true
39	discarded	_	discard	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_o	true
40	[33]	_name_	[33]	ADD	O	_	-	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@p@@offshore, 33@@p@@large, 27@@a@@and, 34@@explicitanon0@@amount, 19@@w@@area, 8@@s@@hamper-01, 21@@n@@_NAME_, 31@@s@@cause-01, 3@@d@@satellite, 39@@s@@discard-01, 36@@d@@data, 26@@d@@sea, 6@@p@@product, 4@@s@@measure-01, 15@@s@@interfere-01, 6@@n@@_NAME_, 28@@n@@_NAME_, 13@@p@@radio, 25@@n@@_NAME_, 21@@c@@country, 23@@p2@@province, 28@@c@@country, 14@@d@@frequency, 23@@n@@_NAME_]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	now,	_	now,	UH	O	_	expressive	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
4	was	_	be	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	6	MOD_s	true
5	the	_	the	DT	O	_	location	_	0	IGNORE	true
6	one	_	one	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	6	MOD_s	true
9	up	_	up	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
12	left,	_	left,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	up	_	up	RB	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
14	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@p@@well, 6@@r@@one, 14@@b@@there, 4@@s@@be-located-at-91, 13@@d@@up, 9@@p@@up, 8@@s@@be-located-at-91, 3@@d@@he]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op1	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
5	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
6	horrible	_	horrible	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
7	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	broadcast	_	broadcast	VBN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
11	on	_	on	IN	O	_	and	_	0	IGNORE	true
12	television,	_	television,	NNS	O	_	and	_	0	IGNORE	true
13	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
14	boy,	_	boy,	NN	O	_	expressive	_	0	IGNORE	true
15	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
16	that	_	that	WDT	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	send	_	send	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	APP_s	true
18	signals	_	signal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	Putin	_name_	Putin	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o2	true
22	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	21	APP_op2	true
27	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	26	MOD_s	true
29	at	_	at	IN	O	_	and	_	0	IGNORE	true
30	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_op2	true
32	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	say	_	say	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_op2	true
34	,	_	,	,	O	_	and	_	0	IGNORE	true

nodealignment=[17@@b@@send-01, 20@@p@@person, 33@@d@@say-01, 16@@d@@that, 10@@n@@broadcast-01, 3@@s@@think-01, 1@@a@@and, 25@@p@@other, 31@@a@@and, 4@@d@@it, 22@@p@@all, 28@@s@@look-01, 13@@s@@cause-01, 26@@d@@person, 6@@r@@horrible, 2@@d@@i, 21@@a@@and, 20@@n@@_NAME_, 18@@d@@signal]
sentence=1	Consequently,	_name_	Consequently,	LS	O	_	and	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	remainder	_	remainder	NN	O	(t<root> / --LEX--  :part-of (y<poss>)  :time-of (n<mod>))	$LEMMA$	(mod(), poss())	12	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
10	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	favour	_	favour	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	Tsar,	_name_	Tsar,	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
17	confided	_	confide	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
19	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	command	_	command	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	17	APP_o	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	capital	_	capital	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	during	_	during	IN	O	_	i	_	0	IGNORE	true
26	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	absence	_	absence	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
28	from	_	from	IN	O	_	-	_	0	IGNORE	true
29	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@t@@confide-01, 11@@s@@high-02, 9@@d@@life, 12@@s@@favour-01, 29@@c@@country, 6@@t@@remainder, 21@@s@@command-02, 15@@d@@Tsar,, 24@@d@@capital, 27@@n@@absence, 2@@d@@he, 29@@n@@_NAME_]
sentence=1	Several	several	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	rental	_	rental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	gives	_	give	VBZ	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	option	_	option	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	opt-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	trained	_	train	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	guide,	_	guide,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	include-91	(mod())	5	MOD_mod	true
12	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
14	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
16	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	about	_	about	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	sights	_	sight	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	visit,	_	visit,	NNPS	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	make	_	make	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
24	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	en$LEMMA$-01	(s(), o())	10	MOD_s	true
25	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	are	_	be	VBP	O	_	person	_	0	IGNORE	true
27	safe	_	safe	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_o	true
28	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@s@@opt-01, 19@@a@@sight, 15@@s@@provide-01, 6@@d@@you, 24@@s@@ensure-01, 2@@p@@rental, 27@@d@@safe-01, 3@@d@@place, 16@@d@@information, 4@@p@@also, 5@@w@@give-01, 1@@explicitanon0@@several, 13@@s@@possible-01, 10@@s@@train-01, 11@@p@@include-91]
sentence=1	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	8	MOD_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	7	MOD_mod	true
7	imperialism	_	imperialism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
9	include	_	include	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	aid	_	aid	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	agencies	_	agency	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
16	who	_	who	WP	O	_	person	_	0	IGNORE	true
17	introduce	_	introduce	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	agricultural	_	agricultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	agriculture	(mod())	19	MOD_mod	true
19	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
21	plant	_	plant	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
23	from	_	from	IN	O	_	and	_	0	IGNORE	true
24	developed	_	develop	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	25	MOD_s	true
25	countries	_	country	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
26	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
27	overlooking	_	overlook	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
28	indigenous	_	indigenous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	varieties	_	variety	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_s	true
31	agricultural	_	agricultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	agriculture	(mod())	32	MOD_mod	true
32	approaches	_	approach	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	30	APP_op2	true
33	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
34	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
35	better	_	better	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	36	MOD_s	true
36	suited	_	suited	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	32	MOD_s	true
37	to	_	to	IN	O	_	thing	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	region	_	region	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_o	true
41	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@work-01, 2@@s@@more, 3@@s@@modern-02, 22@@d@@specie, 18@@p@@agriculture, 21@@p@@plant, 7@@d@@imperialism, 17@@s@@introduce-01, 28@@p@@indigenous, 14@@s@@aid-01, 29@@d@@variety, 9@@s@@include-01, 8@@s@@possible-01, 13@@p@@international, 39@@p@@particular, 40@@d@@region, 35@@b@@good-02, 15@@d@@agency, 27@@s@@overlook-01, 35@@m@@more, 32@@d@@approach-02, 31@@p@@agriculture, 25@@s@@country, 20@@a@@and, 19@@d@@method, 24@@s@@develop-02, 30@@a@@and, 6@@p@@culture, 36@@s@@suited-01, 4@@s@@example]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	APP_o	true
5	some	_	some	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	16	MOD_s	true
6	Republicans	_name_	Republicans	NNPS	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	4	APP_o	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	like	_	like	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
10	it,	_	it,	XX	O	_	and	_	0	IGNORE	true
11	but,	_	but,	NN	O	_	have-org-role-91	_	0	IGNORE	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	person	_	0	IGNORE	true
14	Democrat,	democrat,	democrat,	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
16	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
17	who	_	who	WP	O	_	person	_	0	IGNORE	true
18	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
19	in	_	in	IN	O	_	person	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	Democratic	_name_	democratic	JJ	O	_	person	_	0	IGNORE	true
22	Party,	party,	party,	NN	O	_	and	_	0	IGNORE	true
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
24	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
25	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
26	believes	_	believe	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
27	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the_Democratic_Party	_name_	Party	NNP	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	30	APP_s	true
29	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
30	meant	_	mean	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	APP_o	true
31	progress	_	progress	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_o	true
32	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
33	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
34	city,	_	city,	NNP	O	_	mean-01	_	0	IGNORE	true
35	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
36	State,	_name_	state,	NN	O	_	mean-01	_	0	IGNORE	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	31	MOD_op1	true
38	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
39	country,	_	country,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	2	MOD_mod	true
40	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
41	am	_	be	VBP	O	_	person	_	0	IGNORE	true
42	proud	_	proud	JJ	O	(d<root> / --LEX--)	pride-01	()	4	APP_s	true
43	to	_	to	TO	O	_	include-91	_	0	IGNORE	true
44	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	2	MOD_s	true
45	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_o	true
46	in	_	in	IN	O	_	i	_	0	IGNORE	true
47	Philadelphia	_name_	Philadelphia	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	45	MOD_mod	true
48	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[39@@p@@and, 28@@n@@_NAME_, 47@@c@@city, 42@@d@@pride-01, 6@@n@@_NAME_, 7@@s@@possible-01, 31@@d@@progress-01, 2@@s@@possible-01, 8@@explicitanon0@@-, 37@@a@@and, 16@@p@@one, 18@@s@@believe-01, 33@@d@@this, 45@@d@@here, 26@@s@@believe-01, 28@@p@@political-party, 30@@s@@mean-01, 1@@d@@i, 6@@p@@political-party, 4@@s@@cause-01, 47@@n@@_NAME_, 44@@s@@be-located-at-91, 5@@s@@some, 9@@d@@like-01, 3@@s@@understand-01]
sentence=1	Space	space	Space	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	Shuttle	shuttle	Shuttle	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
3	Endeavour,	endeavour,	Endeavour,	NNP	O	_	and	_	0	IGNORE	true
4	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
6	launch	_	launch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
7	on	_	on	IN	O	_	9	_	0	IGNORE	true
8	STS-134	_name_	sts-134	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	at	_	at	IN	O	_	date-entity	_	0	IGNORE	true
10	the_end_of_the_month	_name_	month	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
11	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	April_29,	_name_	29,	NNP	O	_	_NAME_	_	0	IGNORE	true
13	will	_	will	MD	O	_	and	_	0	IGNORE	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	sent	_	send	VBN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	the_California_Science_Center	_name_	Center	NNP	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	15	APP_o	true
18	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
19	Los_Angeles,	_name_	Angeles,	NNP	O	_	-	_	0	IGNORE	true
20	California	_name_	California	NNP	O	(s<root> / state  :name (n2 / --LEX--)  :location-of (c<mod>))	_NAME_	(mod())	17	MOD_mod	true
21	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
22	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
23	retirement	_	retirement	NN	O	(d<root> / --LEX--)	retire-01	()	21	APP_o	true
24	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@d@@Shuttle, 17@@f@@facility, 15@@g@@send-01, 8@@n@@_NAME_, 6@@s@@launch-01, 20@@s@@state, 10@@c@@city, 21@@s@@follow-01, 17@@n2@@_NAME_, 23@@d@@retire-01, 10@@n@@_NAME_, 20@@n2@@_NAME_, 1@@p@@space]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	island	_	island	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	lies	_	lie	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-07	(s(), o())	7	APP_op1	true
4	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
5	deep	_	deep	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	APP_op2	true
9	sheltered	_	shelter	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	waters	_	water	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
12	bays	_	bay	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
13	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
14	provide	_	provide	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
16	resting	_	rest	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
17	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	APP_o	true
18	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	humpbacks	_	humpback	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_mod	true
20	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
21	calves	_	calf	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[19@@d@@humpback, 11@@a@@and, 6@@d@@water, 12@@d@@bay, 9@@s@@shelter-01, 3@@s@@lie-07, 17@@b@@place, 21@@y@@calf, 16@@p@@rest-01, 14@@s@@provide-01, 7@@a@@and, 5@@s@@deep-02, 10@@d@@water, 2@@d@@island, 8@@s@@have-03]
sentence=1	Besides,_Steven	_name_	Steven	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	real-04	(mod())	5	MOD_mod	true
5	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
6	stuff:	_	stuff:	NNP	O	_	mean-01	_	0	IGNORE	true
7	sweets	_	sweet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	stained	_	stain	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	teeth	_	tooth	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	bright	_	bright	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
13	red	_	red	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
14	—	_	—	NN	O	_	and	_	0	IGNORE	true
15	well,	_	well,	NNS	O	_	and	_	0	IGNORE	true
16	technically,	_	technically,	NNP	O	_	mean-01	_	0	IGNORE	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	teeth,	_	teeth,	CD	O	_	mean-01	_	0	IGNORE	true
20	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
21	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
22	plaque,	_	plaque,	NNS	O	(d<root> / --LEX--)	contrast-01	()	25	APP_s	true
23	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
24	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
25	result	_	result	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	29	APP_s	true
26	was	_	be	VBD	O	_	mean-01	_	0	IGNORE	true
27	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@sweet, 12@@s@@bright, 1@@n@@_NAME_, 13@@s@@red, 27@@o@@often, 5@@s@@good-02, 2@@s@@have-03, 4@@s@@real-04, 3@@explicitanon0@@some, 22@@d@@contrast-01, 9@@s@@stain-01, 23@@s@@contrast-01, 1@@p@@person, 25@@s@@result-01, 11@@d@@tooth, 17@@explicitanon0@@-, 20@@p@@just, 29@@s@@same-01]
sentence=1	To	to	to	TO	O	_	have-condition-91	_	0	IGNORE	true
2	do	_	do	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	4	MOD_mod	true
3	this,	_	this,	NNP	O	_	you	_	0	IGNORE	true
4	think	_	think	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
5	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
6	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
9	begin	_	begin	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	/	_	/	SYM	O	_	slash	_	0	IGNORE	true
12	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_s	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	vowel	_	vowel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@explicitanon0@@lot, 2@@i@@do-02, 17@@p@@certain, 12@@s@@have-03, 6@@p@@various, 7@@d@@word, 18@@d@@vowel, 4@@explicitanon0@@imperative, 4@@y@@you, 4@@b@@think-01, 9@@s@@begin-01]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	Maya	_name_	Maya	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	6	APP_dom	true
3	were	_	be	VBD	O	_	person	_	0	IGNORE	true
4	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	6	MOD_mod	true
5	Mesoamerican	_name_	mesoamerican	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	culture	_	culture	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	name	_	0	IGNORE	true
8	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
9	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	ties	_	tie	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	to	_	to	IN	O	_	name	_	0	IGNORE	true
12	Teotihuacan	_name_	Teotihuacan	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@e@@ethnic-group, 9@@s@@strong-02, 12@@n@@_NAME_, 4@@explicitanon0@@1, 6@@r@@culture, 12@@c@@city, 10@@s@@tie-01, 5@@e@@ethnic-group, 2@@n@@_NAME_, 5@@n@@_NAME_]
sentence=1	Read	read	read	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-05	(s())	8	APP_op1	true
2	up	_	up	RP	O	_	thing	_	0	IGNORE	true
3	on	_	on	IN	O	_	thing	_	0	IGNORE	true
4	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	5	MOD_s	true
5	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	basil	_	basil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
9	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-03	(s())	8	APP_op2	true
10	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
12	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
14	several	_	several	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
16	that	_	that	DT	O	_	thing	_	0	IGNORE	true
17	appeal	_	appeal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	13	MOD_s	true
18	to	_	to	IN	O	_	and	_	0	IGNORE	true
19	you,	_	you,	NNS	O	_	and	_	0	IGNORE	true
20	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	order	_	order	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
22	the	_	the	DT	O	_	you	_	0	IGNORE	true
23	seeds	_	seed	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_op3	true
25	buy	_	buy	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_op2	true
26	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	at	_	at	IN	O	_	thing	_	0	IGNORE	true
28	a	_	a	DT	O	_	thing	_	0	IGNORE	true
29	garden	_	garden	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	store	_	store	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@s@@differ-02, 20@@n@@then, 11@@d@@one, 29@@p@@garden, 25@@d@@buy-01, 24@@a@@or, 8@@a@@and, 30@@b@@store, 13@@a@@or, 7@@d@@basil, 17@@s@@appeal-03, 5@@p@@type, 14@@d@@several, 21@@s@@order-01, 1@@s@@read-up-05, 9@@s@@pick-out-03, 23@@d@@seed]
sentence=1	Ultimately,	ultimately,	Ultimately,	NFP	O	_	name	_	0	IGNORE	true
2	Great	great	great	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	Britain,	britain,	Britain,	NNS	O	_	resemble-01	_	0	IGNORE	true
4	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	6	MOD_s	true
5	France,	_name_	France,	NNP	O	_	and	_	0	IGNORE	true
6	disappointed	_	disappoint	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Confederacy’s	_name_	Confederacy’s	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	hope	_	hope	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$ful-03	(s(), o())	6	APP_o	true
10	of	_	of	IN	O	_	have-03	_	0	IGNORE	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	alliance,	_	alliance,	NNP	O	_	cause-01	_	0	IGNORE	true
13	leaving	_	leave	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	9	APP_o	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	outnumbered	_	outnumbered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
16	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
17	out	_	out	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	MOD_s	true
18	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
19	resourced	_	resource	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
20	states	_	state	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
23	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(s(), o())	20	MOD_s	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Union	_name_	Union	NNP	O	(d<root> / --LEX--)	_NAME_	()	23	APP_o	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	fend	_	fend	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o	true
28	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@out, 25@@d@@_NAME_, 2@@d@@great, 13@@s@@leave-13, 19@@s@@resource-01, 20@@d@@state, 4@@s@@resemble-01, 8@@n@@_NAME_, 15@@s@@outnumbered-01, 23@@s@@leave-15, 9@@s@@hopeful-03, 8@@c@@country, 27@@d@@fend-01, 6@@s@@disappoint-01]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	hardest	_	hard	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	hard-02	(s())	3	MOD_s	true
3	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	running	_	run	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
6	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	business,	_	business,	NNS	O	_	cause-01	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
10	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	MOD_s	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	13	APP_s	true
12	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	APP_o	true
14	it,	_	it,	NNP	O	_	thing	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	relationship	_	relationship	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	relation-03	(s(), o())	0	ROOT	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
20	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	21	APP_s	true
21	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	17	APP_s	true
22	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
23	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
24	gals	_	gal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
29	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[25@@a@@and, 21@@s@@have-03, 12@@explicitanon0@@-, 17@@t@@relation-03, 28@@d@@customer, 6@@d@@this, 13@@s@@do-02, 10@@s@@cause-01, 20@@p@@person, 2@@b2@@hard-02, 5@@r@@run-01, 20@@f@@wife, 24@@d@@gal, 3@@d@@thing, 11@@d@@person, 20@@h@@have-rel-role-91, 2@@m@@most]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	been	_	be	VBN	O	_	monetary-quantity	_	0	IGNORE	true
5	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	change	_	change	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	concept	_	concept	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	goals	_	goal	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	17	MOD_s	true
17	strive	_	strive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
18	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	meet	_	meet	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
24	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
25	responsibilities	_	responsibility	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	responsible-03	(s())	23	APP_s	true
26	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
28	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
30	those	_	those	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
32	depend	_	depend	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op2	true
33	upon	_	upon	IN	O	_	-	_	0	IGNORE	true
34	it	_	it	PRP	O	_	i	_	0	IGNORE	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@concept, 32@@d@@depend-01, 14@@p@@this, 17@@s@@strive-01, 5@@explicitanon0@@-, 28@@d@@person, 6@@s@@change-01, 15@@d@@country, 1@@s@@contrast-01, 25@@s@@responsible-03, 16@@s@@obligate-01, 23@@o@@meet-01, 29@@a@@and, 12@@p@@goal]
sentence=1	Rathbun	_name_	Rathbun	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	16	MOD_mod	true
2	wrote,	_	wrote,	NNP	O	_	and	_	0	IGNORE	true
3	"Moxon	"moxon	"Moxon	''	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
4	proceeded	_	proceed	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	16	APP_op1	true
5	to	_	to	TO	O	(n<root> / --LEX--  :time-of (p<mod>))	person	(mod())	16	MOD_mod	true
6	lie	_	lie	VB	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-08	(s(), o())	4	APP_o	true
7	to	_	to	IN	O	_	person	_	0	IGNORE	true
8	Daniel	_name_	Daniel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
9	that	_	that	IN	O	_	-	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	MOD_s	true
12	drives	_	drive	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
13	were	_	be	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
14	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	12	MOD_mod	true
15	returned,	_	returned,	NNS	O	_	-	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op2	true
18	a	_	a	DT	O	_	-	_	0	IGNORE	true
19	convincing	_	convincing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	convince-01	(s())	20	MOD_s	true
20	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	APP_o	true
21	(not	_	(not	RB	O	_	-	_	0	IGNORE	true
22	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
24	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	19_year_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	5	MOD_mod	true
28	who	_	who	WP	O	_	person	_	0	IGNORE	true
29	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
30	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
31	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	35	MOD_mod	true
35	branches	_	branch	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	of	_	of	IN	O	_	and	_	0	IGNORE	true
37	government)	_	government)	NN	O	_	and	_	0	IGNORE	true
38	that	_	that	IN	O	_	name	_	0	IGNORE	true
39	Daniel	_name_	Daniel	NNP	O	_	_NAME_	_	0	IGNORE	true
40	would	_	would	MD	O	_	name	_	0	IGNORE	true
41	be	_	be	VB	O	_	person	_	0	IGNORE	true
42	put	_	put	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_s	true
43	behind	_	behind	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	42	APP_o	true
44	iron	_	iron	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	bars	_	bar	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op1	true
46	for	_	for	IN	O	_	or	_	0	IGNORE	true
47	a	_	a	DT	O	_	1	_	0	IGNORE	true
48	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	49	MOD_s	true
49	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	42	MOD_s	true
50	time,	_	time,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
51	UNLESS	unless	unless	IN	O	_	-	_	0	IGNORE	true
52	of	_	of	IN	O	_	have-concession-91	_	0	IGNORE	true
53	course,	_	course,	NNP	O	_	-	_	0	IGNORE	true
54	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
55	returned	_	return	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	56	APP_op1	true
56	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	60	APP_op1	true
57	cooperated	_	cooperate	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	56	APP_op2	true
58	with	_	with	IN	O	_	-	_	0	IGNORE	true
59	Moxon	_name_	Moxon	NNP	O	_	_NAME_	_	0	IGNORE	true
60	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	42	APP_s	true
61	routed	_	route	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	60	APP_op2	true
62	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
63	properly.	_	properly.	NNS	O	_	$LEMMA$	_	0	IGNORE	true
64	"	_	"	''	O	_	-	_	0	IGNORE	true

nodealignment=[20@@s@@case-03, 4@@c@@proceed-01, 56@@a@@and, 34@@explicitanon0@@3, 32@@s@@know-01, 12@@s@@drive, 22@@p@@difficult, 27@@y@@year, 31@@p@@even, 11@@s@@hard, 30@@explicitanon0@@-, 55@@d@@return-01, 35@@d@@branch, 60@@a@@and, 17@@s@@make-01, 57@@d@@cooperate-01, 5@@n@@person, 6@@g@@lie-08, 14@@n@@ever, 8@@p@@person, 42@@s@@put-01, 48@@s@@good-02, 27@@t@@temporal-quantity, 8@@n@@_NAME_, 1@@n@@_NAME_, 45@@d@@bar, 44@@g@@iron, 3@@n@@_NAME_, 19@@s@@convince-01, 43@@o@@behind, 49@@s@@long-03, 16@@a@@and, 3@@c@@company, 13@@explicitanon0@@-, 61@@d@@route-01]
sentence=1	Finally,	finally,	Finally,	NNP	O	_	and	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	43	APP_s	true
4	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	discussion	_	discussion	NN	O	(d<root> / --LEX--)	discuss-01	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
7	16	_	16	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
8	recommendations	_	recommendation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	6	APP_op2	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	draw	_	draw	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	12	MOD_s	true
15	on	_	on	IN	O	_	thing	_	0	IGNORE	true
16	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	narrative	_	narrative	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
19	systematic	_	systematic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op2	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	MOD_op1	true
22	on	_	on	IN	O	_	thing	_	0	IGNORE	true
23	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
25	of	_	of	IN	O	_	person	_	0	IGNORE	true
26	carrying	_	carry	VBG	O	(d<root> / --LEX--)	$LEMMA$-out-03	()	24	APP_s	true
27	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
28	multisite	_	multisite	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
29	(Morgan-Short	(morgan-short	(Morgan-Short	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	33	APP_op1	true
30	et	_	et	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	al.,	_	al.,	NNP	O	_	publication-91	_	0	IGNORE	true
32	2018)_1	_name_	1	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	33	MOD_mod	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	14	APP_o2	true
34	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	35	MOD_s	true
35	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
36	(Faretta-Stutenberg	(faretta-stutenberg	(Faretta-Stutenberg	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	33	APP_op3	true
37	&_Morgan-Short,	_name_	Morgan-Short,	NNP	O	_	and	_	0	IGNORE	true
38	2011;	_	2011;	CD	O	_	hyperlink-91	_	0	IGNORE	true
39	Marsden,_Williams,_&_Liu,_2013;_McManus_&_Marsden,	_name_	Marsden,	NNP	O	_	publication-91	_	0	IGNORE	true
40	2017;	_	2017;	NN	O	_	quote-01	_	0	IGNORE	true
41	Morgan-Short,_Heil,_Botero-Moriaty,_&_Ebert,	_name_	ebert,	JJ	O	_	_NAME_	_	0	IGNORE	true
42	2012)	_	2012)	CD	O	_	and	_	0	IGNORE	true
43	replications	_	replication	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	0	ROOT	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@p@@_NAME_, 26@@d@@carry-out-03, 19@@p@@systematic, 3@@s@@offer-01, 17@@d@@narrative, 2@@d@@we, 28@@p@@multisite, 43@@s@@_NAME_, 21@@a@@and, 6@@a@@and, 5@@d@@discuss-01, 20@@d@@review-01, 18@@a@@and, 24@@s@@experience-01, 36@@n@@_NAME_, 10@@n@@future, 36@@p@@person, 4@@p@@further, 34@@s@@single-02, 12@@s@@work-01, 35@@d@@site, 8@@s@@recommend-01, 29@@p@@person, 14@@b@@draw-02, 29@@n@@_NAME_, 11@@d@@replication, 33@@a@@and, 7@@explicitanon0@@_NUMBER_]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	so,	_	so,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	expressive	(s())	1	APP_op2	true
3	uh	_	uh	UH	O	_	$LEMMA$	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	crews,	_	crews,	NNS	O	(d<root> / --LEX--)	resemble-01	()	1	APP_op1	true
9	uh,	_	uh,	UH	O	_	mean-01	_	0	IGNORE	true
10	like	_	like	UH	O	_	resemble-01	_	0	IGNORE	true
11	Mitchell,	_name_	Mitchell,	NNP	O	_	_NAME_	_	0	IGNORE	true
12	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
13	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	14	MOD_s	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	30	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	him,	_	him,	NNS	O	_	be-located-at-91	_	0	IGNORE	true
19	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	town,	_	town,	NNP	O	_	and	_	0	IGNORE	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	regular	_	regular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
23	situations,	_	situations,	NNS	O	_	cause-01	_	0	IGNORE	true
24	come	_	come	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	30	APP_op1	true
25	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
26	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
27	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	24	APP_o	true
28	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	27	MOD_s	true
29	me,	_	me,	NN	O	_	_NAME_	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_s	true
31	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	30	APP_op2	true
32	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	to	_	to	TO	O	_	thing	_	0	IGNORE	true
34	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	31	APP_o	true
35	payroll	_	payroll	VB	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
36	for	_	for	IN	O	_	thing	_	0	IGNORE	true
37	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@d@@payroll, 24@@g@@come-01, 13@@s@@have-03, 30@@a@@and, 34@@s@@do-02, 19@@b@@around, 14@@d@@person, 1@@a@@and, 22@@s@@regular-02, 8@@d@@resemble-01, 16@@s@@work-01, 2@@s@@expressive, 31@@s@@ask-02, 28@@s@@resemble-01, 5@@explicitanon0@@lot, 27@@d@@person]
sentence=1	It's	it's	it's	PRP	O	_	thing	_	0	IGNORE	true
2	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	fun	_	fun	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	when	_	when	WRB	O	_	i	_	0	IGNORE	true
6	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
7	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
10	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
12	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
13	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
14	language	_	language	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	12	APP_o	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@s@@much, 4@@s@@fun-01, 14@@m@@language, 13@@d@@your, 12@@s@@understand-01, 3@@s@@more, 9@@d@@person, 8@@p@@other, 11@@s@@possible-01]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	study	_	study	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
4	United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
5	history,	_	history,	NNS	O	_	and	_	0	IGNORE	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	example,	_	example,	NNS	O	_	and	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	learn	_	learn	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	about	_	about	IN	O	_	thing	_	0	IGNORE	true
11	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	than	_	than	IN	O	_	more-$LEMMA$	_	0	IGNORE	true
13	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	individual	_	individual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	events	_	event	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
16	that	_	that	WDT	O	_	event	_	0	IGNORE	true
17	have	_	have	VBP	O	_	thing	_	0	IGNORE	true
18	happened	_	happen	VBN	O	_	event	_	0	IGNORE	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	America’s	_name_	America’s	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	past	_	past	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
22	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@s@@learn-01, 4@@c@@country, 15@@d@@event, 3@@t@@study-01, 4@@n@@_NAME_, 13@@p@@just, 20@@n@@_NAME_, 14@@p@@individual, 11@@p@@more, 21@@n@@past, 2@@d@@you]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	talked	_	talk	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	2	MOD_s	true
4	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	that	_	that	WDT	O	_	name	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	for	_	for	IN	O	_	member	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
14	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
16	for	_	for	IN	O	_	member	_	0	IGNORE	true
17	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_poss	true
18	family	_	family	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	15	APP_op2	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_o	true
20	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	those	_	those	DT	O	_	that	_	0	IGNORE	true
22	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	citizens	_	citizen	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	19	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	30	MOD_mod	true
30	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
31	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
32	changing	_	change	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
33	years,	_	years,	NNS	O	_	mean-01	_	0	IGNORE	true
34	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
35	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	America	_name_	America	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
38	in	_	in	IN	O	_	i	_	0	IGNORE	true
39	which	_	which	WDT	O	_	name	_	0	IGNORE	true
40	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
41	believed,	_	believed,	VBZ	O	_	person	_	0	IGNORE	true
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	52	MOD_mod	true
43	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
44	a	_	a	DT	O	_	person	_	0	IGNORE	true
45	Democrat	_name_	Democrat	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op1	true
46	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	50	APP_o	true
47	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
48	a	_	a	DT	O	_	thing	_	0	IGNORE	true
49	candidate,	_	candidate,	NNP	O	_	and	_	0	IGNORE	true
50	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
51	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
52	a	_	a	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_o	true
53	citizen	_	citizen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op2	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[50@@s@@contrast-01, 52@@s@@contrast-01, 2@@s@@talk-01, 1@@d@@i, 3@@s@@instead-of-91, 46@@a@@or, 17@@d@@your, 27@@d@@country, 14@@d@@family, 45@@d@@Democrat, 29@@p@@this, 53@@d@@citizen, 18@@m@@family, 26@@p@@this, 30@@p@@difficult, 32@@s@@change-01, 20@@p@@all, 11@@s@@want-01, 24@@m@@citizen, 8@@n@@_NAME_, 15@@o@@and, 35@@p@@kind, 42@@explicitanon0@@-, 37@@b@@America, 8@@c@@country, 6@@d@@kind, 19@@a@@and]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	the_National_Organization_of_Black_Law_Enforcement_Executives	_name_	Executives	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
3	writes,	_	writes,	NNP	O	_	and	_	0	IGNORE	true
4	‘The	‘the	‘The	NNP	O	_	_NAME_	_	0	IGNORE	true
5	passage	_	passage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	pass-01	(s())	10	APP_dom	true
6	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	act	_	act	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	paramount	_	paramount	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
11	in	_	in	IN	O	_	thing	_	0	IGNORE	true
12	achieving	_	achieve	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	fundamental	_	fundamental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	principle	_	principle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	police	_	police	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	force	_	force	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	protects	_	protect	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	MOD_op1	true
23	serves	_	serve	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	MOD_s	true
24	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	citizen	_	citizen	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	22	APP_op2	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
28	community	_	community	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_poss	true
29	with	_	with	IN	O	_	-	_	0	IGNORE	true
30	fairness,	_	fairness,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	accountability	_	accountability	NN	O	(d<root> / --LEX--)	accountable-02	()	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	22	MOD_mod	true
33	transparency	_	transparency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op2	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
36	actions.	_	actions.	NN	O	_	$LEMMA$	_	0	IGNORE	true
37	’	_	'	.	O	_	expressive	_	0	IGNORE	true

nodealignment=[21@@s@@protect-01, 19@@a@@force, 14@@p@@fundamental, 8@@d@@act, 31@@d@@accountable-02, 25@@m@@citizen, 24@@p@@every, 12@@r@@achieve-01, 22@@a@@and, 23@@s@@serve-01, 15@@d@@principle, 2@@n@@_NAME_, 32@@a@@and, 7@@p@@this, 33@@d@@transparency, 10@@r@@paramount, 18@@p@@police, 5@@s@@pass-01, 28@@d@@community]
sentence=1	Einstein	_name_	Einstein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	preferred	_	prefer	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	and	_	0	IGNORE	true
4	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
6	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
10	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	that	_	that	WDT	O	_	say-01	_	0	IGNORE	true
12	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
13	affected	_	affect	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
14	by	_	by	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	presence	_	presence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	present-02	(s())	23	APP_op1	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	mass;	_	mass;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	beams,	_	beams,	NNP	O	_	mean-01	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
24	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
25	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	travels	_	travel	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
28	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
31	time,	_	time,	NNP	O	_	and	_	0	IGNORE	true
32	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
34	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
35	paths	_	path	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	affected	_	affect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_o	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@s@@think-01, 24@@d@@everything, 32@@n@@then, 23@@a@@and, 29@@d@@space, 19@@p@@large, 25@@p@@else, 1@@p@@person, 13@@s@@affect-01, 36@@s@@affect-01, 10@@d@@time, 8@@d@@space, 16@@s@@present-02, 33@@s@@find-01, 2@@c@@prefer-01, 27@@s@@travel-01, 35@@d@@path, 21@@d@@light, 1@@n@@_NAME_, 9@@a@@and]
sentence=1	During	during	during	IN	O	_	i	_	0	IGNORE	true
2	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	5	MOD_mod	true
5	illnesses	_	illness	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	ill-01	(mod())	14	MOD_mod	true
6	(about	_	(about	NFP	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	winter	_name_	winter	NN	O	(s<root> / --LEX--  :season-of (d<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	of	_	of	IN	O	_	date-interval	_	0	IGNORE	true
10	373	_	373	CD	O	(l<root> / law  :name (n / --LEX--)  :mod-of (f<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
11	-	_	-	SYM	O	_	date-entity	_	0	IGNORE	true
12	374),	_	374),	CD	O	_	and	_	0	IGNORE	true
13	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o2	true
14	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	16	MOD_s	true
15	a	_	a	DT	O	_	he	_	0	IGNORE	true
16	vision	_	vision	NN	O	(d<root> / --LEX--)	en$LEMMA$-01	()	0	ROOT	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	led	_	lead	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	MOD_s	true
19	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
21	lay	_	lay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op1	true
22	aside	_	aside	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	secular	_	secular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	studies	_	study	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
27	devote	_	devote	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	26	APP_op2	true
28	himself	_	himself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_s	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[13@@d@@he, 27@@s@@devote-01, 25@@d@@study-01, 16@@d@@envision-01, 30@@n@@_NAME_, 10@@l@@law, 4@@p@@this, 5@@n@@ill-01, 10@@n@@_NUMBER_, 30@@p@@person, 8@@s@@winter, 14@@s@@have-03, 22@@p@@aside, 26@@a@@and, 24@@p@@secular, 18@@b@@lead-01, 21@@s@@lay-01]
sentence=1	Everyone	everyone	Everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	expects	_	expect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
3	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	Presidents,	_name_	presidents,	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	am	_	be	VBP	O	_	know-01	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	APP_o	true
11	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
12	they	_	they	PRP	O	_	person	_	0	IGNORE	true
13	realize	_	realize	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_o	true
14	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
15	much	_	much	JJ	O	_	$LEMMA$	_	0	IGNORE	true
16	depends	_	depend	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
19	Members	members	Members	NNPS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	23	APP_op1	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
22	House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
24	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
25	Members	members	Members	NNPS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	23	APP_op2	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
28	Senate	_name_	Senate	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
29	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
30	must	_	must	MD	O	_	obligate-01	_	0	IGNORE	true
31	make	_	make	VB	O	_	obligate-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	judgment	_	judgment	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	judge-01	(s(), o())	13	APP_o	true
35	on	_	on	IN	O	_	thing	_	0	IGNORE	true
36	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
37	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
38	of	_	of	IN	O	_	thing	_	0	IGNORE	true
39	laws	_	law	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
40	a	_	a	DT	O	_	1	_	0	IGNORE	true
41	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	43	APP_s	true
42	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	43	MOD_s	true
43	execute	_	execute	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	MOD_o	true
44	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@s@@sure-02, 23@@a@@and, 9@@explicitanon0@@-, 6@@s@@contrast-01, 19@@o@@Members, 5@@p@@_NAME_, 42@@s@@obligate-01, 43@@s@@execute-01, 19@@p@@person, 41@@h@@have-org-role-91, 22@@g@@government-organization, 34@@s@@judge-01, 3@@d@@thing, 37@@p@@kind, 1@@d@@Everyone, 19@@h@@have-org-role-91, 7@@d@@i, 22@@n@@_NAME_, 33@@p@@final, 16@@s@@depend-01, 41@@p@@person, 2@@s@@expect-01, 25@@h@@have-org-role-91, 28@@n@@_NAME_, 25@@o@@Members, 25@@p@@person, 13@@c@@realize-01, 39@@d@@law, 41@@e@@President, 28@@g@@government-organization]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	now,	_	now,	NN	O	_	cause-01	_	0	IGNORE	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	appreciated	_	appreciate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	its	_	its	PRP$	O	(d<root> / --LEX--)	it	()	6	APP_s	true
6	fight	_	fight	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_o	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	the	_	the	DT	O	_	atom	_	0	IGNORE	true
10	ham-stink	_	ham-stink	NN	O	(d<root> / --LEX--)	_NAME_	()	8	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	coated	_	coat	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@room, 3@@d@@she, 12@@s@@coat-01, 6@@c@@fight-01, 4@@s@@appreciate-02, 5@@d@@it, 8@@s@@cover-01, 10@@d@@_NAME_]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	11	MOD_mod	true
4	a	_	a	DT	O	_	-	_	0	IGNORE	true
5	spare	_	spare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	bedroom	_	bedroom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	aren’t	_	aren’t	IN	O	_	-	_	0	IGNORE	true
10	using,	_	using,	NNP	O	_	-	_	0	IGNORE	true
11	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	amr-unknown	(s(), o())	0	ROOT	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	space	_	space	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[2@@d@@you, 13@@s@@sell-01, 15@@d@@space, 3@@m@@have-03, 21@@s@@need-01, 19@@s@@want-01, 17@@d@@someone, 11@@s@@amr-unknown, 6@@d@@bedroom, 12@@explicitanon0@@-, 5@@s@@spare-02]
sentence=1	Earlier	earlier	earlier	RBR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	early	(mod())	6	MOD_mod	true
2	in	_	in	IN	O	_	thing	_	0	IGNORE	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	chapter,	_	chapter,	NNP	O	_	and	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	discussed	_	discuss	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	Evernote,	evernote,	evernote,	CD	O	_	mean-01	_	0	IGNORE	true
8	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
9	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	focuses	_	focus	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	expanding	_	expand	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
14	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
15	memories	_	memory	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	by	_	by	IN	O	_	thing	_	0	IGNORE	true
17	storing	_	store	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (m<op1>)  :topic-of (p<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	13	MOD_mod	true
19	organizing	_	organize	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@t@@focus-01, 20@@d@@information, 18@@a@@and, 15@@d@@memory, 6@@b@@discuss-01, 9@@d@@company, 3@@p@@this, 13@@s@@expand-01, 19@@s@@organize-01, 5@@d@@we, 14@@d@@our, 17@@s@@store-01, 1@@e@@early, 1@@m@@more]
sentence=1	What	what	what	WP	O	_	and	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
3	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	five_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
8	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	death,	_	death,	NN	O	_	and	_	0	IGNORE	true
10	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	letter	_	letter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	Chevalier	_name_	Chevalier	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	18	MOD_s	true
18	alludes	_	allude	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
19	to	_	to	IN	O	_	name	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	broken	_	broken	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	break-01	(s())	22	MOD_s	true
22	love	_	love	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
23	affair.	_	affair.	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	[7	_	[7	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
25	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@s@@allude-01, 11@@s@@write-01, 10@@d@@he, 6@@n@@day, 17@@s@@clear-06, 24@@p@@_NUMBER_, 3@@s@@know-01, 21@@s@@break-01, 13@@d@@letter, 7@@n@@before, 22@@d@@love-01, 15@@n@@_NAME_]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
3	Larry_Lessig's_Free	_name_	Free	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	Culture,	culture,	Culture,	NNP	O	_	_NAME_	_	0	IGNORE	true
5	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
6	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
10	out	_	out	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	13	MOD_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	print	_	print	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	titles	_	title	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	8	APP_s	true
14	by	_	by	IN	O	_	have-03	_	0	IGNORE	true
15	publishers	_	publisher	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	publish-01	()	13	APP_s	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	open	_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	15	MOD_s	true
19	to	_	to	IN	O	_	name	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	concept,	_	concept,	NNS	O	_	and	_	0	IGNORE	true
22	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
24	O'Reilly	_name_	O'Reilly	NNP	O	(p3<root> / person  :name (n2 / --LEX--)  :example-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@e2@@publish-01, 18@@s@@open-05, 7@@p@@also, 15@@p2@@person, 12@@s@@print-01, 24@@p3@@person, 13@@s@@title, 24@@n2@@_NAME_, 2@@s@@mention-01, 3@@d@@Free, 8@@s@@include-01, 5@@s@@contrast-01, 1@@d@@You, 9@@explicitanon0@@some, 10@@s@@out-06]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	have	_	have	VBP	O	_	person	_	0	IGNORE	true
3	been	_	be	VBN	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	achievement	_	achievement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	which	_	which	WDT	O	_	and	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	proud,	_	proud,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	7	MOD_s	true
15	achievements	_	achievement	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	achieve-01	(s())	14	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	represent	_	represent	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	shared	_	share	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	share-01	(s())	20	MOD_s	true
20	efforts	_	effort	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Administration,	administration,	administration,	CD	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Congress,	_name_	congress,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	26	APP_op2	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@d@@They, 7@@s@@achievement, 20@@s@@effort-01, 28@@d@@person, 14@@s@@mean-01, 26@@a@@and, 12@@p@@all, 17@@s@@represent-01, 15@@s@@achieve-01, 11@@s@@possible-01, 10@@d@@we, 25@@d@@congress,, 19@@s@@share-01]
sentence=1	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	nation	_	nation	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
7	endure	_	endure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@r@@nation, 1@@c@@country, 7@@s@@endure-01, 1@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	six	_	six	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	6	(mod())	4	MOD_mod	true
3	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
4	member	_	member	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
5	Afghan	_name_	Afghan	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
6	team,	_	team,	NNP	O	_	include-91	_	0	IGNORE	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	consists	_	consist	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	entirely	_	entirely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	entire	(mod())	8	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	girls,	_	girls,	NNS	O	_	include-91	_	0	IGNORE	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	14	MOD_s	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	denied	_	deny	VBN	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
15	visas	_	visa	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_s	true
16	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
17	enter	_	enter	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
18	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	17	APP_o	true
19	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
20	last	_	last	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
21	week,	_	week,	NNS	O	_	cause-01	_	0	IGNORE	true
22	drawing	_	draw	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
23	notice	_	notice	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
24	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	critics	_	critic	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$ize-01	()	23	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	U.S.	_name_	U.S.	NNP	O	(d<root> / --LEX--)	_NAME_	()	28	APP_o	true
28	President	president	President	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	35	MOD_s	true
29	Donald_Trump's	_name_	Trump's	NNP	O	(d<root> / --LEX--)	person	()	30	APP_s	true
30	policies	_	policy	NNS	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	23	APP_s	true
31	regarding	_	regard	VBG	O	_	person	_	0	IGNORE	true
32	Muslims	_name_	Muslims	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	30	MOD_mod	true
33	traveling	_	travel	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	30	APP_o	true
34	to	_	to	IN	O	_	person	_	0	IGNORE	true
35	the	_	the	DT	O	(d<root> / --LEX--)	person	()	14	APP_o	true
36	U.S	_name_	U.S	NNP	O	_	_NAME_	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@n@@_NAME_, 32@@r@@religious-group, 15@@s@@visa, 25@@e2@@criticize-01, 18@@n@@_NAME_, 29@@d@@person, 32@@n@@_NAME_, 35@@d@@person, 28@@g@@president, 28@@h@@have-org-role-91, 9@@p@@entire, 4@@d@@member, 2@@explicitanon0@@6, 18@@c@@country, 22@@s@@draw-02, 19@@w@@until, 12@@s@@person, 30@@c@@policy-01, 17@@s@@enter-01, 27@@d@@_NAME_, 23@@s@@notice-01, 5@@c@@country, 14@@s@@deny-01, 8@@s@@consist-01, 20@@d@@last, 25@@p2@@person, 33@@s@@travel-01]
sentence=1	Anyone	anyone	Anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
2	who's	_	who'	NNS	O	_	capable-01	_	0	IGNORE	true
3	spent	_	spend	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	1	MOD_s	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
9	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
10	farm	_	farm	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
11	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
12	chickens	_	chicken	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	probably	_	probably	RB	O	(r<root> / --LEX--  :domain (q<dom>))	probable	(dom())	0	ROOT	true
15	familiar	_	familiar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$ize-01	(s(), o())	14	APP_dom	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	trick	_	trick	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@time, 3@@b@@spend-02, 14@@r@@probable, 15@@s@@familiarize-01, 18@@d@@trick, 17@@p@@this, 10@@d@@farm, 5@@explicitanon0@@lot, 12@@y@@chicken, 1@@d@@Anyone]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	yesterday,	_	yesterday,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
3	Cabinet	cabinet	Cabinet	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	government-organization	_	0	IGNORE	true
6	extend	_	extend	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	for	_	for	IN	O	_	2	_	0	IGNORE	true
8	another_week	_name_	week	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
11	restrictions	_	restriction	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	restrict-01	(s())	6	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	4	MOD_o	true
15	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
16	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	for	_	for	IN	O	_	and	_	0	IGNORE	true
18	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
19	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
20	3_February	_name_	February	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	19	APP_op1	true
21	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
22	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	Iran	_name_	Iran	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op2	true
24	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
25	last_Friday	_name_	Friday	NNP	O	(f<root> / festival  :name (n / --LEX--))	_NAME_	()	24	APP_op1	true
26	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[21@@d@@and, 25@@f@@festival, 25@@n@@_NAME_, 20@@n@@_NAME_, 23@@n@@_NAME_, 1@@p@@just, 23@@c@@country, 4@@c@@decide-01, 6@@s@@extend-01, 20@@o2@@organization, 19@@w@@since, 3@@d@@Cabinet, 24@@w@@since, 11@@s@@restrict-01, 14@@s@@be-located-at-91, 8@@t@@temporal-quantity, 10@@d@@travel-01, 18@@c@@country, 8@@y@@_NAME_, 18@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	countries	_	country	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	region	_	region	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	8	MOD_mod	true
8	engaged	_	engage	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	in	_	in	IN	O	_	after	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	will	_	will	MD	O	_	thing	_	0	IGNORE	true
14	lead	_	lead	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-03	(o2(), s(), o())	11	MOD_s	true
15	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
16	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	14	MOD_s	true
17	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Euro-Atlantic	euro-atlantic	euro-atlantic	JJ	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
19	integration	_	integration	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	integrate-01	(s())	14	APP_o2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
21	at	_	at	IN	O	_	thing	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	continually	_	continually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	continue-01	(s())	26	MOD_s	true
26	remove	_	remove	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	20	APP_op2	true
27	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
30	extremist	_	extremist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	extremism	(mod())	31	MOD_mod	true
31	tendencies	_	tendency	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
32	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
33	caused	_	cause	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
34	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
35	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	conflicts	_	conflict	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_o	true
38	in	_	in	IN	O	_	terrorism	_	0	IGNORE	true
39	the_last_decade	_name_	decade	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	37	MOD_mod	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@s@@integrate-01, 15@@d@@us, 35@@explicitanon0@@number, 8@@s@@engage-01, 20@@a@@and, 39@@n@@_NAME_, 37@@d@@conflict-01, 30@@p@@extremism, 23@@s@@same-01, 33@@s@@cause-01, 25@@s@@continue-01, 5@@d@@region, 16@@s@@clear-06, 14@@b@@lead-03, 24@@n@@time, 39@@c@@city, 7@@s@@full, 11@@d@@process-02, 31@@d@@tendency, 2@@m@@country, 18@@d@@_NAME_, 26@@s@@remove-01]
sentence=1	No	no	no	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
2	doubt	_	doubt	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	was,	_	was,	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	7	MOD_mod	true
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
8	that	_	that	WDT	O	_	event	_	0	IGNORE	true
9	happened	_	happen	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
10	to	_	to	TO	O	_	event	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
13	noises	_	noise	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	2	APP_s	true
14	at	_	at	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@thing, 2@@s@@doubt-01, 6@@explicitanon0@@2, 16@@s@@same-01, 5@@explicitanon0@@some, 13@@s@@noise, 1@@explicitanon0@@-, 17@@n@@time]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Congressmen	congressmen	congressman	NNS	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	29	MOD_s	true
3	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	city	_	city	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
7	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
8	as	_	as	IN	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
10	Senator	senator	Senator	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	20	MOD_s	true
11	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	State	state	State	NNP	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
15	Bill_Barrett	_name_	Barrett	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	2	APP_o	true
17	Bob_Nix	_name_	Nix	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_op2	true
18	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	Herman_Toll	_name_	Toll	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_op3	true
20	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o2	true
21	Jim_Byrne	_name_	Byrne	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_s	true
23	Chairman	chairman	Chairman	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	24	MOD_s	true
24	Green	_name_	Green	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_op2	true
25	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
26	have,	_	have,	NNP	O	_	and	_	0	IGNORE	true
27	with	_	with	IN	O	_	-	_	0	IGNORE	true
28	Joe_Clark	_name_	Clark	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	29	MOD_mod	true
29	supported	_	support	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
30	legislation	_	legislation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
31	month	_name_	month	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
32	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
34	month	_name_	month	NN	O	_	$LEMMA$	_	0	IGNORE	true
35	out	_	out	RP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
36	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
37	benefited	_	benefit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
38	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
39	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_op1	true
40	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	37	MOD_mod	true
41	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	State	_name_	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_op2	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	37	APP_o	true
44	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
45	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_op2	true
46	and,	_	and,	XX	O	_	thing	_	0	IGNORE	true
47	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
48	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
49	more,	_	more,	NNP	O	_	thing	_	0	IGNORE	true
50	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
51	helped	_	help	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	53	MOD_s	true
52	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	51	APP_o	true
53	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	29	MOD_s	true
54	United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	55	APP_s	true
55	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	52	APP_o	true
56	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
57	responsibilities	_	responsibility	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	responsible-03	()	55	APP_o	true
58	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	57	MOD_mod	true
59	the	_	the	DT	O	_	person	_	0	IGNORE	true
60	globe	_	globe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	58	APP_op1	true
61	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[20@@d@@and, 24@@n@@_NAME_, 39@@d@@city, 13@@s@@State, 21@@n@@_NAME_, 10@@m@@Senator, 17@@p@@person, 31@@n@@month, 45@@d@@country, 5@@s@@city, 60@@d@@globe, 17@@n@@_NAME_, 52@@s@@make-02, 54@@c@@country, 23@@p2@@chairman, 30@@d@@legislation, 10@@h2@@have-org-role-91, 2@@g@@congressman, 21@@p@@person, 23@@h@@have-org-role-91, 35@@p@@out, 58@@b@@around, 43@@a@@and, 29@@b@@support-01, 55@@s@@meet-01, 16@@a@@and, 2@@h@@have-org-role-91, 42@@d@@state, 28@@n@@_NAME_, 37@@s@@benefit-01, 57@@t@@thing, 51@@c@@help-01, 57@@d@@responsible-03, 15@@n@@_NAME_, 19@@p@@person, 40@@o@@and, 24@@p@@person, 22@@a@@and, 53@@s@@person, 54@@n@@_NAME_, 15@@p@@person, 19@@n@@_NAME_, 4@@p@@this, 12@@p@@this]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	3	MOD_mod	true
3	inhabitants	_	inhabitant	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	inhabit-01	(s(), o())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	Coron	_name_	Coron	NNP	O	(d<root> / --LEX--)	_NAME_	()	3	APP_s	true
6	were	_	be	VBD	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	(d<root> / --LEX--)	include-91	()	3	APP_o	true
8	Tagbanuas	_name_	Tagbanuas	NNP	O	(p2<root> / political-movement  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
9	who	_	who	WP	O	_	name	_	0	IGNORE	true
10	belong	_	belong	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	to	_	to	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	3	MOD_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	14	MOD_mod	true
14	wave	_	wave	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Indonesians	_name_	Indonesians	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	11	MOD_mod	true
17	who	_	who	WP	O	_	person	_	0	IGNORE	true
18	migrated	_	migrate	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
19	to	_	to	IN	O	_	person	_	0	IGNORE	true
20	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	some_5,000_years_ago	_name_	ago	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
23	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[8@@p2@@political-movement, 18@@t@@migrate-01, 16@@c@@country, 16@@n@@_NAME_, 2@@o@@ordinal-entity, 22@@p@@_NAME_, 13@@explicitanon0@@2, 10@@s@@belong-01, 21@@d@@area, 3@@s@@inhabit-01, 20@@p@@this, 5@@d@@_NAME_, 8@@n@@_NAME_, 14@@d@@wave, 13@@o@@ordinal-entity, 11@@s@@include-91, 7@@d@@include-91, 2@@explicitanon0@@1]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	other	_	other	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
4	hand,	_	hand,	NNS	O	_	and	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_o	true
7	passages	_	passage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	Scripture,	scripture,	scripture,	NN	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	indicate,	_	indicate,	NNP	O	_	mean-01	_	0	IGNORE	true
14	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	will	_	will	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_op1	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	free,	_	free,	NNS	O	(d<root> / --LEX--)	and	()	3	APP_s	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
21	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
23	–,	_	–,	NN	O	_	thing	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_o	true
25	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
26	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
27	i-	_	i-	XX	O	_	mean-01	_	0	IGNORE	true
28	th-	_	th-	XX	O	_	$LEMMA$	_	0	IGNORE	true
29	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
30	–	_	–	:	O	_	$LEMMA$	_	0	IGNORE	true
31	man	_	man	NN	O	_	$LEMMA$	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
33	predestined	_	predestine	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
34	by	_	by	IN	O	_	thing	_	0	IGNORE	true
35	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
36	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
37	omnipotent	_	omnipotent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
38	sovereign	_	sovereign	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	will	_	will	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	33	APP_s	true
40	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
41	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	39	APP_s	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@a@@and, 38@@p@@sovereign, 19@@d@@and, 39@@s@@will-02, 41@@n@@_NAME_, 11@@s@@seem-01, 3@@s@@contrast-01, 7@@d@@passage, 18@@explicitanon0@@-, 16@@d@@will-02, 41@@p@@person, 6@@s@@have-03, 37@@p@@omnipotent, 5@@d@@we, 33@@s@@predestine-01, 20@@a@@and, 26@@d@@man]
sentence=1	So,	so,	So,	VBZ	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	expressive	(mod())	12	MOD_mod	true
2	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
3	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	1	MOD_mod	true
4	symptom,	_	symptom,	NNS	O	_	and	_	0	IGNORE	true
5	which	_	which	WDT	O	_	i	_	0	IGNORE	true
6	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
7	on	_	on	IN	O	_	i	_	0	IGNORE	true
8	Monday,	_name_	monday,	ADD	O	_	and	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	sore	_	sore	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	MOD_s	true
12	throat	_	throat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
13	.	_	.	.	O	_	have-03	_	0	IGNORE	true

nodealignment=[11@@s@@sore, 12@@d@@throat, 3@@explicitanon0@@1, 3@@o@@ordinal-entity, 1@@explicitanon0@@expressive]
sentence=1	That's	that's	that's	IN	O	_	have-purpose-91	_	0	IGNORE	true
2	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
3	sign	_	sign	NN	O	(d<root> / --LEX--)	$LEMMA$al-07	()	0	ROOT	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	arrogance,	_	arrogance,	NNP	O	_	cause-01	_	0	IGNORE	true
6	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_s	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	15	MOD_s	true
15	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	10	APP_s	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	who's	_	who'	NNS	O	_	person	_	0	IGNORE	true
20	stuck	_	stick	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	18	MOD_s	true
21	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@person, 20@@s@@stick-01, 3@@d@@signal-07, 14@@s@@true-01, 18@@d@@someone, 15@@s@@good-02, 16@@s@@friend, 9@@s@@very, 16@@h@@have-rel-role-91, 10@@s@@hard-02, 6@@s@@cause-01]
sentence=1	However,	_name_	However,	LS	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	news	_	news	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	reports	_	report	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
5	(BBC	(bbc	(BBC	.	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
6	etc.)	_	etc.)	NNP	O	_	et-cetera	_	0	IGNORE	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	encouraging	_	encouraging	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
10	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
11	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	authorities	_	authority	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
14	were	_	be	VBD	O	_	person	_	0	IGNORE	true
15	reportedly	_	reportedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	report-01	(s())	18	MOD_s	true
16	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
17	strenuous	_	strenuous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	efforts	_	effort	NNS	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	9	MOD_mod	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	evacuate	_	evacuate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	APP_o	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	near	_	near	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	20	APP_o2	true
25	the	_	the	DT	O	_	relative-position	_	0	IGNORE	true
26	coast	_	coast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	24	APP_o	true
28	areas	_	area	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	are	_	be	VBP	O	_	person	_	0	IGNORE	true
31	prone	_	prone	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
32	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
33	flooding	_	flooding	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_o	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@s@@prone-01, 3@@p@@news, 13@@d@@authority, 27@@o@@and, 22@@d@@population, 5@@d@@_NAME_, 33@@d@@flooding-01, 28@@d@@area, 9@@s@@encouraging-01, 8@@s@@very, 24@@s@@near-02, 18@@d2@@effort-01, 26@@d@@coast, 17@@p@@strenuous, 15@@s@@report-01, 20@@b@@evacuate-01, 4@@s@@report-01]
sentence=1	Fully	fully	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	2	MOD_mod	true
2	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	15	MOD_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	role	_	role	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	5	APP_poss	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	country’s	_	country’s	JJ	O	_	_NAME_	_	0	IGNORE	true
11	development	_	development	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	develop-02	(mod())	5	MOD_mod	true
12	agenda,	_	agenda,	.	O	_	multi-sentence	_	0	IGNORE	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	true
14	am	_	be	VBP	O	_	cause-01	_	0	IGNORE	true
15	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
16	that	_	that	IN	O	_	and	_	0	IGNORE	true
17	the	_	the	DT	O	_	and	_	0	IGNORE	true
18	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	initiatives	_	initiative	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
20	being	_	be	VBG	O	_	person	_	0	IGNORE	true
21	undertaken	_	undertake	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
22	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	School_of_Open_Africa,_the_Creative_Commons	_name_	Commons	NNPS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
25	UNESCO	_name_	UNESCO	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	24	APP_op2	true
26	are	_	be	VBP	O	_	person	_	0	IGNORE	true
27	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
28	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
29	contribution	_	contribution	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	contribute-01	(o2(), s(), o())	15	APP_o	true
30	towards	_	towards	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	social,	_	social,	NNS	O	_	name	_	0	IGNORE	true
33	economic,	_	economic,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
34	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
35	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	36	MOD_mod	true
36	pillars	_	pillar	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o2	true
37	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
38	are	_	be	VBP	O	_	person	_	0	IGNORE	true
39	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
40	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	42	MOD_mod	true
41	fundamental	_	fundamental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	cornerstones	_	cornerstone	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
45	country,	_	country,	NNS	O	_	mean-01	_	0	IGNORE	true
46	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
47	indeed	_	indeed	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
48	for	_	for	IN	O	_	thing	_	0	IGNORE	true
49	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
50	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
51	continent	_	continent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op2	true
52	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@b@@contribute-01, 25@@o2@@organization, 36@@d@@pillar, 47@@p@@indeed, 46@@a@@and, 51@@d@@continent, 40@@explicitanon0@@3, 24@@a@@and, 42@@p@@cornerstone, 23@@n@@_NAME_, 15@@s@@sure-02, 13@@d@@i, 11@@p@@develop-02, 2@@s@@realize-01, 1@@s@@full, 21@@s@@undertake-01, 23@@o2@@organization, 41@@p@@fundamental, 7@@d@@educate-01, 19@@d@@initiative, 34@@d@@and, 50@@p@@great, 18@@s@@new-01, 5@@m@@role, 25@@n@@_NAME_, 35@@p@@politics]
sentence=1	From	from	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
2	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	5	MOD_mod	true
3	data,	_	data,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	generate	_	generate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	mutation	_	mutation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	operator,	_	operator,	NNP	O	_	thing	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	form	_	form	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	of	_	of	IN	O	_	name	_	0	IGNORE	true
13	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	aspect,	_	aspect,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
17	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
20	to	_	to	TO	O	_	multiple	_	0	IGNORE	true
21	interweave	_	interweave	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
22	with	_	with	IN	O	_	-	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	SUT	sut	SUT	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_o	true
25	which	_	which	WDT	O	_	i	_	0	IGNORE	true
26	generates	_	generate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
27	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
28	mutant	_	mutant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	SUT	sut	SUT	NNP	O	_	i	_	0	IGNORE	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@p@@this, 21@@s@@interweave-01, 26@@s@@generate-01, 28@@d@@mutant, 17@@n@@then, 24@@d@@_NAME_, 5@@s@@generate-01, 4@@d@@we, 19@@s@@possible-01, 7@@d@@mutation]
sentence=1	What	what	what	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	3	MOD_mod	true
2	culinary	_	culinary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	dishes	_	dish	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
4	would	_	would	MD	O	_	expressive	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	recommend	_	recommend	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	go	_	go	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-06	(s(), o())	6	MOD_s	true
9	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	8	MOD_s	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	Santorum	_name_	Santorum	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	cocktail	_	cocktail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
14	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[2@@p@@culinary, 9@@s@@well-09, 8@@s@@go-06, 12@@n@@_NAME_, 13@@d@@cocktail, 3@@d@@dish, 1@@p@@amr-unknown, 6@@s@@recommend-01, 5@@d@@you]
sentence=1	Joshua_Abraham_Norton	_name_	Norton	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
2	(c.	_	(c.	VBD	O	_	name	_	0	IGNORE	true
3	1818_–_January	_name_	January	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	_NAME_	(mod())	9	MOD_mod	true
4	8,	_	8,	CD	O	_	date-interval	_	0	IGNORE	true
5	1880),	_	1880),	CD	O	_	and	_	0	IGNORE	true
6	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	11	MOD_s	true
7	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
8	Emperor_Norton,	_name_	Norton,	NNP	O	_	_NAME_	_	0	IGNORE	true
9	was	_	be	VBD	O	(d<root> / --LEX--)	person	()	11	APP_o	true
10	a	_	a	DT	O	_	loc$LEMMA$tion	_	0	IGNORE	true
11	citizen	_	citizen	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	0	ROOT	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	San_Francisco,_California,	_name_	california,	CD	O	(d<root> / --LEX--)	_NAME_	()	6	APP_o	true
14	who	_	who	WP	O	_	name	_	0	IGNORE	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	1859	_name_	1859	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	17	MOD_mod	true
17	proclaimed	_	proclaim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
18	himself	_	himself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	"Norton	"norton	"Norton	.	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
20	I,	i,	I,	NFP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	date-interval	(s(), o())	11	MOD_s	true
21	Emperor	emperor	Emperor	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$REPL$	(s())	20	APP_o	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	United	united	United	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
25	States"	states"	States"	NNP	O	_	person	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@p@@person, 13@@d@@_NAME_, 1@@n@@_NAME_, 11@@j@@citizen, 19@@n@@_NAME_, 21@@m@@emperor, 9@@d@@person, 6@@s@@know-02, 11@@h@@have-org-role-91, 17@@s@@proclaim-01, 16@@explicitanon0@@_NUMBER_, 16@@d@@date-entity, 24@@c@@country, 20@@s@@date-interval, 21@@h2@@have-org-role-91, 3@@explicitanon1@@_NAME_, 24@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	median	_	median	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	number	_	number	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
7	measures	_	measure	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
9	center	_	center	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
10	of	_	of	IN	O	_	-	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	9	APP_poss	true
13	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@r@@number, 12@@d@@data, 2@@d@@median, 9@@h@@center, 7@@s@@measure-01]
sentence=1	While	while	while	IN	O	_	contrast-01	_	0	IGNORE	true
2	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
5	sporting	_	sporting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	venues	_	venue	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	located	_	locate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	locate-01	(s(), o())	26	APP_s	true
9	outside	_	outside	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
12	proper	_	proper	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
14	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
15	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	locations	_	location	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
17	throughout	_	throughout	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	Attica	_name_	Attica	NNP	O	(c<root> / country-region  :name (n / --LEX--)  :location-of (r<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
21	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	urban	_	urban	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	area	_	area	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	26	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	Athens	_name_	Athens	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	23	APP_poss	true
26	underwent	_	undergo	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
27	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	29	MOD_s	true
28	lasting	_	lasting	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
30	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
31	have	_	have	VBP	O	_	person	_	0	IGNORE	true
32	improved	_	improve	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	29	MOD_s	true
33	the	_	the	DT	O	_	monet$LEMMA$ry-qu$LEMMA$ntity	_	0	IGNORE	true
34	quality	_	quality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	32	APP_o	true
35	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_poss	true
37	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	visitors	_	visitor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	visit-01	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	APP_o2	true
40	residents	_	resident	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	reside-01	()	39	APP_op2	true
41	alike	_	alike	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
42	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[18@@n@@_NAME_, 9@@o@@outside, 40@@e2@@reside-01, 34@@m@@quality, 18@@c@@country-region, 11@@d@@city, 39@@a@@and, 16@@b@@location, 29@@s@@change-01, 2@@explicitanon0@@most, 27@@s@@major-02, 38@@e2@@visit-01, 25@@n@@_NAME_, 15@@p@@various, 41@@p@@alike, 17@@b@@throughout, 5@@p@@sporting, 23@@w@@area, 6@@d@@venue, 28@@p@@lasting, 22@@p@@urban, 25@@c@@city, 38@@p2@@person, 21@@p@@entire, 32@@b@@improve-01, 40@@p2@@person, 26@@c@@undergo-01, 36@@d@@life, 8@@s@@locate-01, 12@@p@@proper]
sentence=1	Watch	watch	watch	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	on	_	on	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	creation	_	creation	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	create-01	(mod(), s())	3	MOD_mod	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	crop	_	crop	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	vacuum	_	vacuum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	sucks	_	suck	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	10	MOD_s	true
13	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	insects	_	insect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
16	bugs	_	bug	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	to	_	to	TO	O	_	and	_	0	IGNORE	true
18	learn	_	learn	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
19	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@imperative, 16@@d@@bug, 14@@d@@insect, 9@@p@@crop, 15@@a@@and, 10@@d@@vacuum, 19@@d@@more, 1@@y@@you, 12@@s@@suck-up-02, 18@@s@@learn-01, 2@@p@@this, 6@@r@@create-01, 1@@b@@watch-01, 3@@d@@video]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
3	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
5	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
6	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
7	—	_	—	NN	O	_	have-rel-role-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
11	who's	_	who'	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
12	—	_	—	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@s@@who'-01, 9@@s@@same-01, 3@@d@@guy, 2@@s@@same-01, 10@@d@@guy, 5@@s@@get-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	1960,	_name_	1960,	JJ	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
4	Democrats	_name_	Democrats	NNPS	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	16	APP_o	true
5	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
8	produced	_	produce	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	margin	_	margin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	presidential	_	presidential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	president	(mod())	14	MOD_mod	true
14	race	_	race	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-02	(mod())	10	MOD_mod	true
15	that	_	that	WDT	O	_	and	_	0	IGNORE	true
16	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	8	APP_s	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
20	three	_	three	CD	O	(o<root> / --LEX--  :frequency-of (m<mod>))	3	(mod())	23	MOD_mod	true
21	times	_	time	NNS	O	_	product-of	_	0	IGNORE	true
22	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	product-of	(mod())	23	MOD_mod	true
23	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
24	as	_	as	IN	O	_	equal	_	0	IGNORE	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
27	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
29	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
31	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[30@@n@@_NAME_, 20@@o@@3, 6@@p@@this, 4@@n@@_NAME_, 8@@s@@produce-01, 13@@p@@president, 10@@d@@margin, 30@@c@@country, 22@@s@@product-of, 7@@d@@city, 19@@b@@city, 29@@p@@whole, 14@@b@@race-02, 16@@s@@be-located-at-91, 4@@p@@political-party, 23@@p@@large]
sentence=1	Such	such	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	formal	_	formal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	orientation	_	orientation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	typifies	_	typify	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	structural	_	structural	JJ	O	(d<root> / --LEX--)	structure	()	11	APP_s	true
11	equivalence	_	equivalence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	6	APP_o	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	"gloss	_	"gloss	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	APP_o	true
16	translation"	_	translation"	NFP	O	_	mean-01	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	company	_	0	IGNORE	true
20	translator	_	translator	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	translate-01	()	21	APP_s	true
21	aims	_	aim	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	APP_mod	true
22	at	_	at	IN	O	_	thing	_	0	IGNORE	true
23	reproducing	_	reproduce	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
24	as	_	as	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	25	MOD_mod	true
25	literally	_	literally	RB	O	(d<root> / --LEX--)	literal	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
27	meaningfully	_	meaningfully	RB	O	(d<root> / --LEX--)	deceive-01	()	26	APP_op2	true
28	as	_	as	IN	O	_	equal	_	0	IGNORE	true
29	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
30	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
31	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
33	content	_	content	NN	O	(d<root> / --LEX--)	contain-01	()	32	APP_op2	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@c@@aim-01, 11@@s@@equal-01, 33@@d@@contain-01, 32@@a@@and, 25@@d@@literal, 13@@s@@call-01, 20@@p2@@person, 15@@p@@"gloss, 7@@p@@this, 26@@a@@and, 27@@d@@deceive-01, 3@@p@@formal, 24@@s@@equal, 1@@p@@such, 23@@s@@reproduce-01, 6@@s@@typify-01, 36@@p@@original, 10@@d@@structure, 8@@p@@type, 31@@d@@form, 29@@s@@possible-01, 20@@e2@@translate-01, 4@@d@@orientation]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	let	_	let	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
3	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	message	_	message	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
7	to	_	to	IN	O	_	thing	_	0	IGNORE	true
8	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	9	MOD_mod	true
9	terrorists	_	terrorist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	who	_	who	WP	O	_	person	_	0	IGNORE	true
11	desecrated	_	desecrate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	temple	_	temple	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	of	_	of	IN	O	_	-	_	0	IGNORE	true
15	democracy	_	democracy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	that	_	that	WDT	O	_	have-polarity-91	_	0	IGNORE	true
17	they	_	they	PRP	O	(d<root> / --LEX--)	person	()	1	APP_op1	true
18	will	_	will	MD	O	_	-	_	0	IGNORE	true
19	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	20	MOD_mod	true
20	prevail	_	prevail	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
21	.	_	.	.	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	1	MOD_mod	true

nodealignment=[17@@d@@person, 21@@explicitanon0@@-, 11@@s@@desecrate-01, 8@@p@@that, 13@@d@@temple, 1@@a@@and, 19@@n@@ever, 12@@p@@this, 6@@s@@message-01, 9@@d@@terrorist, 15@@p@@democracy, 20@@d@@prevail-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	innovator’s	_	innovator’s	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	dilemma	_	dilemma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	presented	_	present	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	by	_	by	IN	O	_	$LEMMA$line-91	_	0	IGNORE	true
7	Clayton_Christensen	_name_	Christensen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
8	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
9	explain	_	explain	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
10	disruptive	_	disruptive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	9	APP_o	true
11	technology,	_	technology,	NNS	O	_	thing	_	0	IGNORE	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	technologies	_	technology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	that,	_	that,	NNS	O	_	thing	_	0	IGNORE	true
16	once	_	once	RB	O	_	$LEMMA$	_	0	IGNORE	true
17	introduced,	_	introduced,	NNP	O	_	-	_	0	IGNORE	true
18	displace	_	displace	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
19	established	_	establish	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
20	patterns,	_	patterns,	.	O	_	mean-01	_	0	IGNORE	true
21	processes,	_	processes,	NNS	O	_	mean-01	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
23	systems	_	system	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	previously	_	previously	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	previous	(mod())	25	MOD_mod	true
25	accepted	_	accept	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	as	_	as	IN	O	_	-	_	0	IGNORE	true
27	normal	_	normal	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	28	APP_op2	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
29	accepted	_	accept	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@present-01, 27@@d@@normal-02, 22@@a@@and, 7@@p@@person, 19@@d@@establish-01, 28@@a@@or, 14@@d@@technology, 23@@d@@system, 24@@n@@previous, 29@@s@@accept-01, 2@@n@@_NAME_, 9@@s@@explain-01, 7@@n@@_NAME_, 18@@s@@displace-01, 25@@s@@accept-01, 3@@d@@dilemma, 10@@s@@disruptive]
sentence=1	For	for	for	IN	O	_	or	_	0	IGNORE	true
2	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	transportation	_	transportation	NN	O	(d<root> / --LEX--)	transport-01	()	4	APP_op1	true
4	or	_	or	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
5	air-port	_	air-port	NN	O	(d<root> / --LEX--)	_NAME_	()	6	APP_op1	true
6	/	_	/	SYM	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	or	(op1(), mod())	15	MOD_mod	true
7	train	_	train	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	station	_	station	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op2	true
9	services,	_	services,	NNS	O	_	and	_	0	IGNORE	true
10	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
11	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
14	taxi	_	taxi	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	companies	_	company	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
16	that	_	that	WDT	O	_	and	_	0	IGNORE	true
17	are	_	be	VBP	O	_	and	_	0	IGNORE	true
18	reliable	_	reliable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	MOD_s	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@company, 12@@explicitanon0@@several, 2@@s@@local-02, 4@@s@@or, 3@@d@@transport-01, 8@@d@@station, 7@@p@@train, 6@@n@@or, 5@@d@@_NAME_, 13@@s@@local-02, 14@@p@@taxi, 18@@s@@reliable]
sentence=1	Prepare	prepare	prepare	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
2	a	_	a	DT	O	_	thing	_	0	IGNORE	true
3	potting	_	potting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
4	mix	_	mix	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_s	true
5	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
7	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	parts	_	part	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	soil	_	soil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	rough	_	rough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	MOD_s	true
12	pumice	_	pumice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	15	APP_op2	true
14	sand	_	sand	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op3	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
16	fill	_	fill	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op3	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	pots	_	pot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	with	_	with	IN	O	_	-	_	0	IGNORE	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[21@@d@@pot, 19@@explicitanon0@@number, 11@@s@@rough, 13@@a@@or, 15@@a@@and, 7@@s@@equal-01, 4@@d@@mix-01, 12@@d@@pumice, 14@@d@@sand, 9@@d@@soil, 18@@s@@appropriate-02, 16@@s@@fill-01, 3@@p@@potting-01, 8@@p@@part, 1@@s@@prepare-01]
sentence=1	Some	some	some	DT	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
2	85	_	85	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	1	APP_op1	true
3	percent	_	percent	NN	O	(d<root> / --LEX--)	person	()	7	APP_dom	true
4	were	_	be	VBD	O	_	person	_	0	IGNORE	true
5	formerly	_	formerly	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	former	(mod())	6	MOD_mod	true
6	enslaved	_	enslave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	people	_	people	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	person	(dom())	0	ROOT	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	fighting	_	fight	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	liberation	_	liberation	NN	O	(d<root> / --LEX--)	liberate-01	()	19	APP_op1	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	enslaved	_	enslave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
20	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	7	MOD_s	true
21	end	_	end	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op2	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	slavery	_	slavery	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@explicitanon1@@_NUMBER_, 21@@s@@end-01, 20@@s@@person, 23@@d@@slavery, 10@@t@@fight-01, 7@@r@@person, 1@@s@@some, 5@@n@@former, 15@@p@@all, 2@@p@@percentage-entity, 19@@a@@and, 6@@s@@enslave-01, 3@@d@@person, 13@@d@@liberate-01, 18@@s@@enslave-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-07	(s(), o())	0	ROOT	true
4	up	_	up	RP	O	_	include-91	_	0	IGNORE	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_s	true
8	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	raise	_	raise	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	7	MOD_s	true
11	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	food,	_	food,	NNS	O	_	and	_	0	IGNORE	true
13	patrol	_	patrol	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
14	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	streets,	_	streets,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	man	_	man	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
17	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	mines	_	mine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	MOD_op1	true
20	factories,	_	factories,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	teach	_	teach	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	children,	_	children,	NNS	O	_	and	_	0	IGNORE	true
24	keep	_	keep	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	27	APP_op2	true
25	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
26	homes,	_	homes,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	3	MOD_op1	true
28	heal	_	heal	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op3	true
29	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
31	we're	_	we're	NN	O	_	cause-01	_	0	IGNORE	true
32	sick	_	sick	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-05	(mod())	28	MOD_mod	true
33	—	_	—	:	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	3	MOD_s	true
34	professionals,	_	professionals,	NNP	O	_	mean-01	_	0	IGNORE	true
35	industrialists,	_	industrialists,	NNP	O	_	mean-01	_	0	IGNORE	true
36	shopkeepers,	_	shopkeepers,	NNP	O	_	and	_	0	IGNORE	true
37	clerks,	_	clerks,	NNP	O	_	and	_	0	IGNORE	true
38	cabbies,	_	cabbies,	NNP	O	_	and	_	0	IGNORE	true
39	and	_	and	CC	O	_	$LEMMA$	_	33	IGNORE	true
40	truck	_	truck	NN	O	_	$LEMMA$	_	41	IGNORE	true
41	drivers	_	driver	NNS	O	_	drive-01	_	39	IGNORE	true
42	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[3@@s@@make-up-07, 8@@d@@woman, 16@@s@@man-01, 32@@n@@sick-05, 21@@s@@teach-01, 18@@d@@mine, 7@@a@@and, 6@@d@@man, 24@@d@@keep-02, 27@@a@@and, 10@@s@@raise-03, 28@@d@@heal-01, 1@@d@@It, 19@@a@@and, 33@@s@@mean-01, 13@@s@@patrol-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	aim	_	aim	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	investigate	_	investigate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	contributions	_	contribution	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	contribute-01	(s(), o())	4	APP_o	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	integrates	_	integrate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	cognitive	_	cognitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	games	_	game	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	to	_	to	IN	O	_	thing	_	0	IGNORE	true
19	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	database,	_	database,	NN	O	_	product	_	0	IGNORE	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Escola	_name_	Escola	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	12	MOD_mod	true
24	do	_	do	VB	O	_	person	_	0	IGNORE	true
25	Cérebro,	_name_	cérebro,	CD	O	_	_NAME_	_	0	IGNORE	true
26	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
27	monitoring	_	monitoring	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_op1	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	APP_o	true
29	improvement	_	improvement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	improve-01	(s())	28	APP_op2	true
30	of	_	of	IN	O	_	and	_	0	IGNORE	true
31	cognitive	_	cognitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
32	skills,	_	skills,	NNS	O	_	and	_	0	IGNORE	true
33	highlighting	_	highlight	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	attention	_	attention	NN	O	(d<root> / --LEX--)	attend-02	()	33	APP_s	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@system, 4@@s@@investigate-01, 29@@s@@improve-01, 1@@d@@We, 31@@p@@cognitive, 14@@s@@integrate-01, 35@@d@@attend-02, 23@@b@@_NAME_, 16@@p@@digital, 2@@c@@aim-01, 17@@d@@game, 33@@s@@highlight-01, 28@@a@@and, 27@@s@@monitoring-01, 6@@s@@contribute-01, 9@@s@@use-01, 15@@p@@cognitive]
sentence=1	Voters	voters	voter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	vote-01	()	9	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	meet	_	meet	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	1	MOD_s	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
6	hear	_	hear	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
7	me	_	I	PRP	O	_	i	_	0	IGNORE	true
8	speak	_	speak	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_o	true
9	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_op1	true
10	that	_	that	IN	O	_	and	_	0	IGNORE	true
11	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
12	am	_	be	VBP	O	_	person	_	0	IGNORE	true
13	sincere,	_	sincere,	NNS	O	_	and	_	0	IGNORE	true
14	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
15	that	_	that	IN	O	_	and	_	0	IGNORE	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op1	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_s	true
20	deeply	_	deeply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	deep-02	(s())	17	MOD_s	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
22	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	APP_op2	true
23	workable	_	workable	JJ	O	(d<root> / --LEX--)	understand-01	()	22	APP_s	true
24	solutions,	_	solutions,	NNS	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
26	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_op2	true
27	that	_	that	IN	O	_	and	_	0	IGNORE	true
28	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
29	stand	_	stand	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
30	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
31	principle	_	principle	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
32	against	_	against	IN	O	_	oppose-01	_	0	IGNORE	true
33	cronyism	_	cronyism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op1	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_s	true
35	corporatism	_	corporatism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op2	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	MOD_op1	true
37	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
38	favor	_	favor	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_op2	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	the	_	the	DT	O	_	person	_	0	IGNORE	true
41	rule	_	rule	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	44	APP_op1	true
42	of	_	of	IN	O	_	person	_	0	IGNORE	true
43	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
44	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	38	APP_s	true
45	the	_	the	DT	O	_	person	_	0	IGNORE	true
46	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	47	MOD_s	true
47	interest	_	interest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_op2	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@t@@principle, 29@@s@@stand-01, 23@@d@@understand-01, 1@@e2@@vote-01, 21@@a@@and, 34@@a@@and, 35@@d@@corporatism, 6@@s@@hear-01, 22@@s@@have-03, 17@@s@@understand-01, 14@@s@@know-01, 20@@s@@deep-02, 3@@s@@meet-03, 19@@d@@issue-02, 33@@d@@cronyism, 43@@d@@law, 9@@s@@know-01, 38@@s@@favor-01, 41@@s@@rule-01, 36@@a@@and, 8@@d@@speak-01, 46@@s@@public, 44@@a@@and, 1@@p2@@person, 47@@d@@interest-01, 26@@s@@know-01, 25@@a@@and]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	thats	_	thats	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	battled	_	battle	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
5	hard	_	hard	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
6	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	many	_	many	PDT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	broken	_	break	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	break-01	(s())	10	MOD_s	true
10	dream	_	dream	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
11	Let	let	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	me	_	I	PRP	O	_	i	_	0	IGNORE	true
13	say,	_	say,	NN	O	_	and	_	0	IGNORE	true
14	"in	_	"in	CD	O	_	$LEMMA$	_	0	IGNORE	true
15	order	_	order	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	rise	_	rise	VB	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	24	MOD_mod	true
18	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	occasion	_	occasion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
22	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	11	APP_o	true
23	be	_	be	VB	O	_	person	_	0	IGNORE	true
24	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	22	APP_s	true
25	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
26	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	24	APP_o	true
27	down	_	down	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
28	with	_	with	IN	O	_	-	_	0	IGNORE	true
29	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
30	ship"	_	ship"	CD	O	_	$LEMMA$	_	0	IGNORE	true
31	,	_	,	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@many, 5@@s@@hard-02, 24@@c@@will-02, 17@@r2@@rise-01, 4@@s@@battle-01, 27@@a@@down, 2@@d@@one, 26@@s@@go-02, 22@@s@@obligate-01, 9@@s@@break-01, 20@@d@@occasion, 10@@d@@dream-01, 11@@s@@let-01, 21@@d@@you]
sentence=1	ICT	_name_	ICT	NNP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	platform	_	platform	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	have-manner-91	_	0	IGNORE	true
6	enables	_	enable	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	realization	_	realization	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	realize-02	(s())	6	APP_o	true
9	of	_	of	IN	O	_	person	_	0	IGNORE	true
10	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	11	MOD_mod	true
11	goals	_	goal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@p@@this, 1@@d@@_name_, 6@@s@@enable-01, 11@@d@@goal, 2@@s@@provide-01, 8@@s@@realize-02, 4@@d@@platform]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	–	_	–	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	clinics	_	clinic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	were	_	be	VBD	O	_	person	_	0	IGNORE	true
7	closed	_	close	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
8	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	that	_	that	WDT	O	_	1	_	0	IGNORE	true
12	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
13	had	_	have	VBD	O	_	person	_	0	IGNORE	true
14	gotten	_	get	VBN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	results	_	result	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
17	which	_	which	WDT	O	_	and	_	0	IGNORE	true
18	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
19	around_like_6:00_pm	_name_	pm	NN	O	_	date-entity	_	0	IGNORE	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@all, 1@@d@@i, 12@@d@@she, 14@@t@@get-01, 2@@s@@–-01, 16@@d@@result-01, 7@@s@@close-01, 5@@d@@clinic]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	must	_	must	MD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	obligate-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
3	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the_one_quarter	_name_	quarter	NN	O	(o3<root> / organization  :name (n4 / --LEX--)  :part-of (p<poss>))	_NAME_	(poss())	17	APP_op1	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	world's	_	world'	NNS	O	_	_NAME_	_	0	IGNORE	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_poss	true
11	who	_	who	WP	O	_	name	_	0	IGNORE	true
12	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the_People's_Republic_of_China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o	true
18	remain	_	remain	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
19	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
20	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	enemies,	_	enemies,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_o	true
22	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	APP_o2	true
23	our	_	our	PRP$	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	2	MOD_o	true
24	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	22	APP_o	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[17@@o@@and, 14@@n@@_NAME_, 21@@s@@and, 22@@s@@contrast-01, 24@@f@@friend, 2@@t@@obligate-01, 24@@h@@have-rel-role-91, 18@@s@@remain-01, 6@@o3@@organization, 12@@s@@live-01, 6@@n4@@_NAME_, 4@@s@@ensure-01, 14@@c@@country, 3@@n@@now, 10@@d@@person, 23@@s@@our, 1@@d@@We, 19@@explicitanon0@@-, 24@@p@@person]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	light	_	light	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	had	_	have	VBD	O	_	person	_	0	IGNORE	true
7	indicated	_	indicate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
8	the	_	the	DT	O	_	name-01	_	0	IGNORE	true
9	sun	_	sun	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	had	_	have	VBD	O	_	person	_	0	IGNORE	true
11	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	MOD_s	true
12	since	_	since	IN	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	13	MOD_mod	true
13	disappeared;	_	disappeared;	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	28	APP_s	true
14	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
16	sun	_	sun	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
17	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
18	ceased	_	cease	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_op1	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	set—it	_	set—it	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
21	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	22	MOD_s	true
22	rose	_	rise	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	18	APP_o	true
24	fell	_	fall	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
25	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	west,	_name_	west,	NNS	O	_	and	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
29	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	28	APP_op2	true
30	ever	_	ever	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	broader	_	broad	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	broad-02	(s())	23	APP_op3	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	MOD_op1	true
33	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	red	_	red	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	32	APP_op2	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@d@@red-02, 13@@s@@and, 31@@b@@broad-02, 11@@s@@long-03, 24@@s@@fall-01, 29@@s@@grow-02, 30@@p@@ever, 2@@d@@band, 16@@d@@sun, 31@@m@@more, 21@@s@@simple-02, 20@@explicitanon0@@-, 32@@a@@and, 12@@b@@before, 22@@s@@rise-01, 33@@s@@more, 23@@a@@and, 18@@s@@cease-01, 28@@a@@and, 7@@s@@indicate-01, 4@@p@@light, 9@@d@@sun, 12@@n@@now]
sentence=1	For	for	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	example,	_	example,	NNP	O	_	and	_	0	IGNORE	true
3	let’s	_	let’s	NNP	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
4	say	_	say	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	decided	_	decide	VBD	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
8	that	_	that	IN	O	_	name	_	0	IGNORE	true
9	atheists,	_	atheists,	CD	O	_	mean-01	_	0	IGNORE	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	20	APP_s	true
11	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
12	do	_	do	VBP	O	_	person	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	believe	_	believe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	God	god	God	NNP	O	(d<root> / --LEX--)	_NAME_	()	14	APP_o	true
17	exists,	_	exists,	NNP	O	_	and	_	0	IGNORE	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	evil	_	evil	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_o	true
21	should	_	should	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	recommend-01	(o(s()))	20	APP_op2	true
22	be	_	be	VB	O	_	person	_	0	IGNORE	true
23	imprisoned	_	imprison	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	21	APP_o	true
25	expelled	_	expel	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_op2	true
26	from	_	from	IN	O	_	-	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@a@@or, 6@@d@@society, 5@@c@@country, 3@@d@@_NAME_, 13@@explicitanon0@@-, 28@@d@@country, 4@@s@@say-01, 5@@n@@_NAME_, 23@@s@@imprison-01, 7@@m@@decide-01, 21@@f@@recommend-01, 25@@s@@expel-01, 16@@d@@_NAME_, 20@@a@@and, 19@@s@@evil, 10@@d@@person, 14@@s@@believe-01]
sentence=1	Padalecki	_name_	Padalecki	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	uncredited	_	uncredited	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
5	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	high	_	high	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	9	MOD_mod	true
9	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	bully	_	bully	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	2003's	_	2003'	NNS	O	_	_NAME_	_	0	IGNORE	true
13	comedy	_	comedy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
14	Cheaper	_name_	cheap	JJR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	cheap-02	(mod())	13	MOD_mod	true
15	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Dozen,	dozen,	dozen,	NN	O	_	_NAME_	_	0	IGNORE	true
18	which	_	which	WDT	O	_	and	_	0	IGNORE	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	played	_	play	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
21	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
22	being	_	be	VBG	O	_	person	_	0	IGNORE	true
23	asked	_	ask	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
24	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	fellow	_	fellow	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	actor	_	actor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
27	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	friend	_	friend	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	1	MOD_s	true
29	Tom_Welling,	_name_	Welling,	NNP	O	_	mean-01	_	0	IGNORE	true
30	who	_	who	WP	O	_	person	_	0	IGNORE	true
31	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	Charlie_Baker,	_name_	baker,	NN	O	_	person	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	23	APP_s	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	director	_	director	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	1	MOD_s	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	movie,	_	movie,	NNS	O	_	_NAME_	_	0	IGNORE	true
39	who	_	who	WP	O	_	person	_	0	IGNORE	true
40	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
41	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
42	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	41	MOD_mod	true
43	than	_	than	IN	O	_	more	_	0	IGNORE	true
44	Charlie	_name_	Charlie	NNP	O	_	_NAME_	_	0	IGNORE	true
45	to	_	to	TO	O	_	person	_	0	IGNORE	true
46	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	APP_s	true
47	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
48	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[41@@d@@someone, 35@@o@@director, 10@@p@@bully, 2@@s@@have-03, 1@@p@@person, 14@@m@@more, 1@@n@@_NAME_, 14@@e@@cheap-02, 28@@h@@have-rel-role-91, 5@@d@@role, 33@@a@@and, 28@@b@@friend, 35@@p@@person, 21@@w@@after, 31@@s@@play-01, 35@@h@@have-org-role-91, 23@@s@@ask-01, 8@@p@@high-02, 26@@d@@actor, 9@@p@@school, 25@@p@@fellow, 40@@s@@want-01, 46@@s@@pick-01, 4@@s@@uncredited, 42@@f2@@large, 42@@m@@more, 13@@p@@comedy, 20@@s@@play-01]
sentence=1	Look	look	look	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	at	_	at	IN	O	_	expressive	_	0	IGNORE	true
3	Turkey,	turkey,	turkey,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	knocking	_	knock	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	doors	_	door	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	united	_	united	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$FORM$	(s())	13	MOD_s	true
13	Europe	_name_	Europe	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@m@@door, 13@@n@@_NAME_, 3@@d@@turkey,, 1@@y@@you, 13@@c@@continent, 12@@s@@united, 1@@explicitanon0@@imperative, 1@@b@@look-01, 6@@s@@knock-01]
sentence=1	Overall,	overall,	overall,	CD	O	_	and	_	0	IGNORE	true
2	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	finds	_	find	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	comparison	_	comparison	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	compare-01	(s(), o())	37	APP_s	true
8	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	beautiful	_	beautiful	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	7	APP_s	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	sublime	_	sublime	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
14	—	_	—	NN	O	_	include-91	_	0	IGNORE	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	defined	_	define	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	influential	_	influential	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	influence-01	(s())	19	MOD_s	true
19	aesthetics	_	aesthetic	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	Edmund_Burke	_name_	Burke	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_poss	true
22	(1729–1797)	_	(1729–1797)	-LRB-	O	_	mean-01	_	0	IGNORE	true
23	and	_	and	CC	O	_	$LEMMA$	_	16	IGNORE	true
24	Immanuel_Kant,	_name_	Kant,	NNP	O	_	_NAME_	_	0	IGNORE	true
25	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
26	consequently	_	consequently	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_s	true
27	became	_	become	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	26	APP_o	true
28	an	_	an	DT	O	_	thing	_	0	IGNORE	true
29	iconic	_	iconic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	discourse	_	discourse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	in	_	in	IN	O	_	thing	_	0	IGNORE	true
32	Western	western	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	33	MOD_mod	true
33	aesthetics	_	aesthetic	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	—	_	—	,	O	_	and	_	0	IGNORE	true
35	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
36	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	missing	_	miss	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
38	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
39	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
40	Chinese	_name_	chinese	JJ	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	41	MOD_mod	true
41	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
42	of	_	of	IN	O	_	thing	_	0	IGNORE	true
43	aesthetics	_	aesthetic	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
44	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[40@@c@@country, 41@@d@@history, 32@@n@@_NAME_, 27@@s@@become-01, 18@@s@@influence-01, 16@@s@@define-01, 32@@w@@world-region, 30@@d@@discourse, 33@@p@@aesthetic, 36@@p@@also, 10@@d@@beautiful-02, 7@@s@@compare-01, 13@@d@@sublime, 21@@p@@person, 37@@s@@miss-01, 21@@n@@_NAME_, 43@@p@@aesthetic, 4@@s@@find-02, 40@@n@@_NAME_, 3@@p@@also, 19@@m@@aesthetic, 26@@s@@cause-01, 2@@d@@one, 29@@p@@iconic]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	rest	_	rest	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	1	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
8	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	MOD_s	true
9	clear,	_	clear,	NNS	O	_	mean-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
12	ottle-	_	ottle-	NN	O	_	mean-01	_	0	IGNORE	true
13	—	_	—	:	O	_	$LEMMA$	_	0	IGNORE	true
14	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
15	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	16	MOD_s	true
16	it	_	it	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	1	MOD_s	true
17	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
18	chipped	_	chip	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
19	off,	_	off,	PRP	O	_	and	_	0	IGNORE	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	know,	_	know,	.	O	_	expressive	_	0	IGNORE	true
22	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
24	old	_	old	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
25	but,	_	but,	NN	O	_	thing	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
27	d-	_	d-	XX	O	_	et-cetera	_	0	IGNORE	true
28	—	_	—	:	O	_	et-cetera	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
30	down	_	down	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
31	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
33	bottom,	_	bottom,	NNS	O	_	thing	_	0	IGNORE	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	this,	_	this,	NNS	O	_	mean-01	_	0	IGNORE	true
36	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
37	rubble,	_	rubble,	NNP	O	_	i	_	0	IGNORE	true
38	was	_	be	VBD	O	_	person	_	0	IGNORE	true
39	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
40	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op2	true
42	who	_	who	WP	O	_	name	_	0	IGNORE	true
43	was	_	be	VBD	O	_	person	_	0	IGNORE	true
44	a	_	a	DT	O	_	1	_	0	IGNORE	true
45	scientist	_	scientist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@you, 14@@explicitanon0@@some, 40@@p@@little, 30@@p@@down, 1@@s@@contrast-01, 16@@s@@it, 5@@d@@it, 41@@d@@man, 39@@p@@this, 24@@d@@old, 45@@p@@scientist, 29@@a@@and, 8@@s@@real-04, 18@@s@@chip-01, 22@@d@@it, 36@@p@@this, 3@@h@@rest, 15@@s@@include-91, 7@@p@@all, 26@@a@@and, 11@@explicitanon0@@few]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	dismounted	_	dismount	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	front	_	front	NN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	in-$LEMMA$-of	(op1(), mod())	3	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	heard	_	hear	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
11	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
12	mother	_	mother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	10	APP_o2	true
13	whispering:	_	whispering:	NNP	O	_	and	_	0	IGNORE	true
14	“Protect	“protect	“Protect	NNP	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
15	us,	_	us,	NNP	O	_	_NAME_	_	0	IGNORE	true
16	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
17	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
18	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	10	MOD_mod	true
19	Black-and-White	black-and-white	Black-and-White	NNP	O	(d<root> / --LEX--)	white-02	()	14	APP_o	true
20	Tail,	_name_	Tail,	NNP	O	_	cause-01	_	0	IGNORE	true
21	from	_	from	IN	O	_	mean-01	_	0	IGNORE	true
22	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	which	_	which	WDT	O	_	i	_	0	IGNORE	true
24	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	10	MOD_mod	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
26	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	MOD_o	true
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
28	earth.	_	earth.	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	”	_	"	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@i, 12@@p@@person, 12@@h@@have-rel-role-91, 16@@n@@_NAME_, 24@@p@@person, 16@@p@@person, 8@@d@@house, 12@@f@@mother, 5@@b@@in-front-of, 14@@h@@“Protect-01, 3@@v@@dismount-01, 10@@b@@hear-01, 27@@p@@this, 19@@d@@white-02, 2@@d@@he, 25@@explicitanon0@@-, 14@@explicitanon0@@imperative, 26@@s@@include-91, 18@@p@@person]
sentence=1	Those	those	those	DT	O	_	that	_	0	IGNORE	true
2	who've	_	who've	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	9	MOD_o	true
3	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	4	MOD_mod	true
4	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
5	of	_	of	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
6	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	will	_	will	MD	O	_	person	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	amazed	_	amazed	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	chicken	_	chicken	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	lie	_	lie	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-08	(s())	11	APP_s	true
15	perfectly	_	perfectly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	perfect-02	(s())	16	MOD_s	true
16	still	_	still	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
18	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	19	MOD_mod	true
19	instructions	_	instruction	NNS	O	(d<root> / --LEX--)	instruct-01	()	21	APP_s	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	followed	_	follow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	APP_op1	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@d@@chicken, 5@@explicitanon0@@-, 21@@s@@follow-02, 9@@c@@amazed-01, 14@@s@@lie-08, 15@@s@@perfect-02, 18@@p@@this, 3@@n@@ever, 11@@s@@see-01, 4@@s@@hear-01, 19@@d@@instruct-01, 6@@d@@this, 17@@w@@after, 2@@s@@-, 16@@t@@still]
sentence=1	Um,	_name_	Um,	NNP	O	_	expressive	_	0	IGNORE	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
5	she's	_	she'	NNS	O	_	thing	_	0	IGNORE	true
6	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	spiral	_	spiral	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
9	fracture,	_	fracture,	NNS	O	_	cause-01	_	0	IGNORE	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	um,	_	um,	NN	O	_	mean-01	_	0	IGNORE	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	tibia,	_	tibia,	CD	O	_	$LEMMA$	_	0	IGNORE	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_s	true
17	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
18	bone	_	bone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
20	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
21	knee	_	knee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	hock,	_	hock,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
25	and,	_	and,	NNS	O	_	mean-01	_	0	IGNORE	true
26	um,	_	um,	VBP	O	_	mean-01	_	0	IGNORE	true
27	it's	_	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
28	f-	_	f-	XX	O	_	_NAME_	_	0	IGNORE	true
29	it's	_	it's	PRP	O	_	cause-01	_	0	IGNORE	true
30	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	33	MOD_s	true
31	looks,	_	looks,	NNP	O	_	so	_	0	IGNORE	true
32	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	stable	_	stable	JJ	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$-03	(mod())	3	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@r@@stable-03, 3@@s@@look-02, 32@@s@@pretty, 19@@b@@between, 21@@d@@knee, 6@@s@@get-01, 16@@s@@person, 30@@s@@real-04, 18@@d@@bone, 8@@d@@spiral, 2@@d@@it]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	South_Africa	_name_	Africa	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
3	I'm	i'm	i'm	ADD	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
4	drinking	_	drink	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	instant	_	instant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	coffee	_	coffee	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	from	_	from	IN	O	_	and	_	0	IGNORE	true
10	Bremen	_name_	Bremen	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@p@@instant, 2@@n@@_NAME_, 10@@n@@_NAME_, 3@@d@@_NAME_, 6@@d@@coffee, 2@@c@@country, 10@@c@@city, 4@@s@@drink-01]
sentence=1	In	in	in	IN	O	_	thing	_	0	IGNORE	true
2	learning,	_	learning,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	thought	_	think	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	trait	_	trait	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	drives	_	drive	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-02	(o2(s_UNIFY_o()), s())	10	MOD_s	true
13	a	_	a	DT	O	_	person	_	0	IGNORE	true
14	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	keep	_	keep	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	12	APP_o2	true
17	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
18	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
19	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	succeed	_	succeed	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@person, 18@@w@@until, 20@@d@@succeed-01, 12@@t@@drive-02, 6@@s@@think-01, 10@@d@@trait, 16@@c@@keep-02, 4@@s@@possible-01, 17@@s@@try-01, 3@@d@@it]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	readers	_	reader	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	read-01	(s(), o())	13	MOD_o	true
4	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	unaware	_	unaware	JJ	O	(r<root> / --LEX--  :polarity (explicitanon0 / -)  :ARG0 (h<s>)  :ARG1 (p<o>))	realize-01	(s(), o())	3	MOD_s	true
7	of	_	of	IN	O	_	-	_	0	IGNORE	true
8	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	site,	_	site,	NNP	O	_	say-01	_	0	IGNORE	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	briefly	_	briefly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	temporary	(mod())	13	MOD_mod	true
13	explain	_	explain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
14	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
15	wikiHow	wikihow	wikiHow	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
16	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
17	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	10	MOD_mod	true

nodealignment=[11@@d@@you, 12@@t@@temporary, 6@@r@@realize-01, 13@@s@@explain-01, 6@@explicitanon0@@-, 3@@s@@read-01, 17@@explicitanon0@@interrogative, 15@@p@@person, 2@@d@@our, 10@@s@@possible-01, 15@@n@@_NAME_]
sentence=1	Her	her	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	father	_	father	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	5	MOD_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
5	chemist	_	chemist	NN	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	10	APP_op1	true
6	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
7	holds	_	hold	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	patents	_	patent	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
12	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	APP_op2	true
13	one	_	one	CD	O	(d<root> / --LEX--)	1	()	12	APP_o	true
14	older	_	old	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	old	(mod())	12	MOD_mod	true
15	brother.	_	brother.	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	[6	_	[6	XX	O	_	$LEMMA$	_	0	IGNORE	true
17	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@a@@and, 7@@s@@hold-01, 2@@s@@father, 8@@explicitanon0@@several, 2@@h@@have-rel-role-91, 12@@s@@have-03, 2@@p@@person, 9@@d@@patent-01, 13@@d@@1, 5@@m@@chemist, 14@@p@@old, 11@@d@@she, 5@@h2@@have-org-role-91]
sentence=1	What	what	what	WDT	O	_	amr-unknown	_	0	IGNORE	true
2	results	_	result	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	7	MOD_mod	true
5	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	6	MOD_s	true
6	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	reviews	_	review	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	“The_Rains_of_Castamere”	_name_	Castamere”	NNP	O	_	_NAME_	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
12	turn	_	turn	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	13	MOD_mod	true
13	document	_	document	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	fans’	_	fans’	NNP	O	(d<root> / --LEX--)	thing	()	16	APP_s	true
16	reactions	_	reaction	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	react-01	(s(), o())	13	APP_o	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	episode	_	episode	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	form	_	form	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
23	of	_	of	IN	O	_	thing	_	0	IGNORE	true
24	user	_	user	NN	O	(d<root> / --LEX--)	use-01	()	25	APP_s	true
25	comment	_	comment	NN	O	(b<root> / --LEX--  :ARG0 (d<s>)  :purpose-of (s<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
26	threads	_	thread	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	:	_	:	:	O	_	and	_	0	IGNORE	true

nodealignment=[15@@d@@thing, 4@@explicitanon0@@2, 13@@s@@document-01, 5@@s@@complete-02, 16@@s@@react-01, 25@@b@@comment-01, 2@@s@@result-01, 24@@d@@use-01, 7@@d@@review-01, 22@@t@@form, 19@@d@@episode, 12@@p@@in-turn, 26@@b@@thread, 6@@s@@separate-02]
sentence=1	Regular	regular	regular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
2	tourists	_	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	9	APP_s	true
3	who	_	who	WP	O	_	person	_	0	IGNORE	true
4	renew	_	renew	VBP	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	2	MOD_s	true
5	their	_	they	PRP$	O	_	year	_	0	IGNORE	true
6	30_day	_name_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	year	(mod())	7	MOD_mod	true
7	visa	_	visa	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	eligible	_	eligible	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	qualify-02	(o(s()))	0	ROOT	true
10	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	9	MOD_o	true
11	depart	_	depart	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	(to	_	(to	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
16	destination)	_	destination)	NN	O	_	and	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_o	true
18	return	_	return	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
19	immediately	_	immediately	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	18	MOD_mod	true
20	enjoying	_	enjoy	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	60_days	_name_	day	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	(30	_	(30	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	25	MOD_mod	true
25	days	_name_	day	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	plus	_	plus	CC	O	_	add-02	_	0	IGNORE	true
27	a	_	a	DT	O	(m<root> / --LEX--  :unit-of (a<mod>))	1	(mod())	9	MOD_mod	true
28	30_day	_name_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	day	(mod())	29	MOD_mod	true
29	extension)	_	extension)	NN	O	(m<root> / --LEX--  :unit-of (a<mod>))	mean-01	(mod())	9	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@m@@mean-01, 13@@d@@country, 17@@a@@and, 23@@d@@day, 28@@t@@temporal-quantity, 24@@explicitanon0@@_NUMBER_, 27@@m@@1, 15@@p@@any, 25@@t@@temporal-quantity, 28@@y@@day, 6@@t@@temporal-quantity, 6@@y@@year, 18@@s@@return-01, 2@@p2@@person, 1@@s@@regular-02, 25@@y@@day, 22@@p@@further, 9@@o@@qualify-02, 11@@s@@depart-01, 19@@n@@immediate, 2@@e2@@tour-01, 7@@m@@visa, 4@@l@@renew-01, 20@@s@@enjoy-01, 10@@s@@and]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	couldn't	_	couldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	count	_	count	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	-	_	0	IGNORE	true
5	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	APP_o	true
6	of	_	of	IN	O	_	1	_	0	IGNORE	true
7	capital	_	capital	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	ships	_	ship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_mod	true
9	that	_	that	WDT	O	_	product	_	0	IGNORE	true
10	dominated	_	dominate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	Enemy's	_name_	Enemy's	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_poss	true
13	frontline	_	frontline	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
14	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@p@@capital, 13@@m@@frontline, 12@@n@@_NAME_, 8@@d@@ship, 2@@explicitanon0@@-, 1@@d@@He, 12@@c@@country, 10@@s@@dominate-01, 5@@explicitanon0@@number, 3@@s@@count-01]
sentence=1	Besides	besides	besides	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	23	MOD_o	true
2	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
3	atmospheric	_	atmospheric	JJ	O	(d<root> / --LEX--)	atmosphere	()	1	APP_s	true
4	effects,	_	effects,	NNP	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	increasing	_	increasing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	surface	_	surface	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	emissivity	_	emissivity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	due	_	due	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_o	true
12	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	roughness	_	roughness	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
18	foam	_	foam	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	effects	_	effect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
22	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	source	_	source	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	0	ROOT	true
24	of	_	of	IN	O	_	thing	_	0	IGNORE	true
25	error,	_	error,	NNS	O	_	and	_	0	IGNORE	true
26	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
27	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	29	MOD_s	true
28	significantly	_	significantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	significant-02	(s())	29	MOD_s	true
29	hamper	_	hamper	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	accuracy	_	accuracy	NN	O	(m<root> / --LEX--  :poss (i<poss>))	accurate	(poss())	29	APP_o	true
32	of	_	of	IN	O	_	cyber	_	0	IGNORE	true
33	SSS	_name_	SSS	NNP	O	(d<root> / --LEX--)	_NAME_	()	34	APP_s	true
34	retrieval	_	retrieval	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	seize-01	(s())	31	APP_poss	true
35	[11]	_name_	[11]	XX	O	_	thing	_	0	IGNORE	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@atmosphere, 27@@s@@possible-01, 18@@p@@foam, 29@@s@@hamper-01, 19@@d@@effect, 28@@s@@significant-02, 6@@s@@increasing-01, 14@@p@@sea, 11@@s@@cause-01, 34@@s@@seize-01, 23@@s@@source-02, 8@@p@@sea, 16@@s@@roughness, 1@@s@@besides, 22@@p@@main, 33@@d@@_NAME_, 9@@p@@surface, 31@@m@@accurate, 15@@d@@surface, 17@@a@@and, 10@@d@@emissivity]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
2	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	expulsion	_	expulsion	NN	O	(d<root> / --LEX--)	isolate-01	()	4	APP_s	true
4	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	APP_op1	true
5	official	_	official	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	in	_	in	IN	O	_	2	_	0	IGNORE	true
7	January_1831,	_name_	1831,	NN	O	_	_NAME_	_	0	IGNORE	true
8	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	attempted	_	attempt	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	22	APP_s	true
10	to	_	to	TO	O	_	person	_	0	IGNORE	true
11	start	_	start	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	private	_	private	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	class	_	class	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	advanced	_	advanced	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	algebra	_	algebra	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	which	_	which	WDT	O	_	and	_	0	IGNORE	true
19	attracted	_	attract	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
20	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
21	interest,	_	interest,	NNS	O	(d<root> / --LEX--)	and	()	19	APP_o	true
22	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
23	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
24	waned,	_	waned,	NNP	O	_	and	_	0	IGNORE	true
25	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	33	MOD_o	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	seemed	_	seem	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
28	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
29	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	31	MOD_mod	true
31	activism	_	activism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
32	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	27	APP_s	true
33	priority.	_	priority.	RB	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
34	[4]	_	[4]	XX	O	_	$LEMMA$	_	0	IGNORE	true
35	[7	_	[7	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	32	MOD_mod	true
36	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[21@@d@@and, 13@@s@@private-02, 31@@d@@activism, 19@@s@@attract-01, 30@@p@@politics, 8@@d@@he, 4@@s@@become-01, 33@@d@@priority., 14@@d@@class, 11@@s@@start-01, 35@@p@@_NUMBER_, 17@@a@@algebra, 27@@s@@seem-01, 9@@c@@attempt-01, 25@@s@@cause-01, 16@@s@@advanced-02, 20@@p@@some, 22@@s@@contrast-01, 1@@w@@after, 5@@d@@official, 3@@d@@isolate-01, 32@@s@@have-03]
sentence=1	Closing	closing	Closing	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_op1	true
2	Loopholes	loopholes	Loopholes	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
4	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	APP_op2	true
5	in	_	in	RP	O	_	instead-of-91	_	0	IGNORE	true
6	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	a	_	a	DT	O	_	b$LEMMA$se-02	_	0	IGNORE	true
8	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
11	transparent	_	transparent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	works	_	work	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	8	MOD_s	true
14	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[1@@s@@Closing-01, 2@@d@@Loopholes, 11@@s@@transparent, 8@@d@@system, 3@@a@@and, 13@@s@@work-09, 4@@s@@put-01, 6@@d@@place]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	encompasses	_	encompass	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	Phoenix	_name_	Phoenix	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	center	_	center	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	0	ROOT	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	Hohokam	_name_	Hohokam	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
13	culture,	_	culture,	NNP	O	_	name	_	0	IGNORE	true
14	which	_	which	WDT	O	_	organization	_	0	IGNORE	true
15	built	_	build	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	canal	_	canal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	systems	_	system	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	network	_	network	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	towns	_	town	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	and	_	and	CC	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	villages,	_	villages,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
27	remains	_	remain	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
28	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	30	MOD_s	true
29	be	_	be	VB	O	_	person	_	0	IGNORE	true
30	viewed	_	view	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	this_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
36	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 19@@a@@and, 12@@n@@_NAME_, 17@@p@@canal, 2@@d@@area, 27@@s@@remain-01, 28@@s@@possible-01, 15@@s@@build-01, 30@@s@@view-01, 35@@n@@day, 12@@e@@ethnic-group, 23@@g@@town, 24@@g@@and, 18@@d@@system, 6@@c@@city, 9@@c@@center, 21@@d@@network, 5@@s@@encompass-01, 4@@n@@now, 33@@b@@city, 16@@p@@large]
sentence=1	From	from	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
2	the_later_1800s_to_the_1920s	_name_	1920s	CD	O	(c<root> / city  :name (n2 / --LEX--)  :source-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
3	Mérida	_name_	Mérida	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	enjoyed	_	enjoy	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	prosperous	_	prosperous	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	prosper-01	(s())	7	MOD_s	true
6	boom	_	boom	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	7	MOD_mod	true
7	times	_	time	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	fueled	_	fuel	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
9	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
11	henequen	_	henequen	NN	O	(d<root> / --LEX--)	_NAME_	()	12	APP_op1	true
12	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
13	sisal	_	sisal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	plant	_	plant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
15	harvest,	_	harvest,	.	O	_	cause-01	_	0	IGNORE	true
16	which	_	which	WDT	O	_	own-01	_	0	IGNORE	true
17	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
18	Yucatán	_name_	Yucatán	NNP	O	_	_NUMBER_	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	rope	_	rope	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	maker	_	maker	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	make-01	(s(), o())	17	APP_o	true
22	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@sisal, 5@@s@@prosper-01, 14@@d@@plant, 4@@s@@enjoy-01, 2@@n2@@_NAME_, 17@@s@@make-02, 6@@p@@boom-02, 3@@d@@Mérida, 2@@c@@city, 11@@d@@_NAME_, 7@@d@@time, 20@@d@@rope, 8@@s@@fuel-01, 12@@a@@or, 24@@d@@world, 21@@s@@make-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you’re	_	you’re	NNP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	an	_	an	DT	O	_	i	_	0	IGNORE	true
5	elevator	_	elevator	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	playing	_	play	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	MOD_s	true
9	music,	_	music,	NNP	O	_	and	_	0	IGNORE	true
10	start	_	start	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
11	to	_	to	IN	O	_	person	_	0	IGNORE	true
12	dance	_	dance	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@c@@start-01, 8@@s@@play-01, 5@@d@@elevator, 12@@s@@dance-01]
sentence=1	Salinity	salinity	salinity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	marine	_	marine	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	parameters,	_	parameters,	NNS	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
11	controls	_	control	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	processes	_	process	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	APP_o	true
14	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
15	as	_	as	IN	O	_	and	_	0	IGNORE	true
16	physical	_	physical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	circulations,	_	circulations,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	biogeochemistry	_	biogeochemistry	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	dynamics	_	dynamic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
20	from	_	from	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	4	MOD_s	true
21	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	24	MOD_mod	true
22	to	_	to	IN	O	_	person	_	0	IGNORE	true
23	global	_	global	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	globe	(mod())	24	MOD_mod	true
24	ocean	_	ocean	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	[1,2]	_	[1,2]	XX	O	_	mean-01	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@process-02, 7@@p@@important, 6@@s@@most, 20@@s@@from, 4@@s@@include-91, 12@@explicitanon0@@many, 18@@p@@biogeochemistry, 8@@d@@marine, 21@@p@@region, 17@@p@@circulations,, 1@@d@@salinity, 11@@s@@control-01, 16@@p@@physical, 19@@d@@dynamic, 23@@p@@globe, 24@@d@@ocean]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	it's	_	it's	PRP	O	_	-	_	0	IGNORE	true
3	inherently	_	inherently	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	inherent	(mod())	4	MOD_mod	true
4	negative,	_	negative,	NNS	O	(d<root> / --LEX--)	and	()	6	APP_s	true
5	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
6	they're	_	they're	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	over-zealous,	_	over-zealous,	JJ	O	_	contrast-01	_	0	IGNORE	true
9	ignorant	_	ignorant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_op1	true
10	of	_	of	IN	O	_	-	_	0	IGNORE	true
11	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_s	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
14	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	avoid	_	avoid	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op2	true
17	those	_	those	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	contradict	_	contradict	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
20	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	fantasy	_	fantasy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	land	_	land	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	caters	_	cater	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	MOD_s	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@s@@contradict-01, 11@@p@@other, 9@@s@@ignorant-02, 12@@d@@person, 3@@p@@inherent, 6@@s@@they're-01, 4@@d@@and, 21@@p@@fantasy, 24@@s@@cater-01, 13@@a@@or, 22@@d@@land, 16@@d@@avoid-01, 29@@p@@only]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	described	_	describe	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
5	The_Guardian_of_London	_name_	London	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	'Queen	'queen	'Queen	NNS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o2	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	curve',	_	curve',	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	who	_	who	WP	O	_	$LEMMA$	_	0	IGNORE	true
13	"liberated	_	"liberate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
14	architectural	_	architectural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	geometry,	_	geometry,	NNP	O	_	and	_	0	IGNORE	true
16	giving	_	give	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
21	expressive	_	expressive	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	identity.	_	identity.	NN	O	_	$LEMMA$	_	0	IGNORE	true
23	"	_	"	''	O	_	person	_	0	IGNORE	true

nodealignment=[8@@p@@person, 3@@b@@describe-01, 8@@n@@_NAME_, 16@@s@@give-01, 14@@p@@architectural, 13@@s@@"liberate-01, 19@@p@@whole, 5@@p@@person, 1@@d@@She, 5@@n@@_NAME_, 20@@s@@new-01, 21@@d@@expressive]
sentence=1	Montalvo	_name_	Montalvo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	had	_	have	VBD	O	_	$LEMMA$-org-role-91	_	0	IGNORE	true
3	read	_	read	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	article	_	article	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Scientology	_name_	Scientology	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
9	propaganda	_	propaganda	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	publication	_	publication	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	Freedom	_name_	Freedom	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
12	Magazine,	magazine,	magazine,	CD	O	_	_NAME_	_	0	IGNORE	true
13	which	_	which	WDT	O	_	name	_	0	IGNORE	true
14	attacked	_	attack	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
15	high-ranking	_	high-ranking	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	high-02	(s())	16	MOD_s	true
16	defectors	_	defector	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	14	APP_o	true
17	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	organization	_	organization	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
21	Tom_Devocht	_name_	Devocht	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
23	Mark_Rathbun	_name_	Rathbun	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_op2	true
24	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[9@@p@@propaganda, 8@@n@@_NAME_, 3@@s@@read-01, 1@@p@@person, 1@@n@@_NAME_, 10@@l@@publication, 21@@n@@_NAME_, 16@@e2@@defector, 11@@n@@_NAME_, 16@@p2@@person, 14@@s@@attack-01, 5@@d@@article, 21@@p@@person, 20@@s@@include-01, 22@@a@@and, 15@@s@@high-02, 23@@p@@person, 23@@n@@_NAME_]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	1	MOD_s	true
4	number,	_	number,	NNS	O	_	mean-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	1	MOD_s	true
7	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	anywhere	_	anywhere	RB	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
10	from	_	from	IN	O	_	between	_	0	IGNORE	true
11	18_to_19	_name_	19	CD	O	(d<root> / --LEX--)	_NAME_	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_o	true
13	maybe	_	maybe	RB	O	_	possible-01	_	0	IGNORE	true
14	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	21	_	21	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	12	APP_op2	true
16	percent,	_	percent,	NNS	O	_	-	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_s	true
18	nobody	_	nobody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	talks	_	talk	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	APP_op2	true
20	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	it,	_	it,	NNS	O	_	-	_	0	IGNORE	true
22	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	19	MOD_o	true
23	it's	_	it's	PRP	O	_	-	_	0	IGNORE	true
24	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
25	statistic	_	statistic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	that's	_	that's	PRP	O	_	thing	_	0	IGNORE	true
27	full	_	full	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	25	MOD_s	true
28	of	_	of	IN	O	_	fill-01	_	0	IGNORE	true
29	nonsense	_	nonsense	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@t@@temporal-quantity, 7@@explicitanon0@@number, 19@@s@@talk-01, 11@@d@@_NAME_, 9@@b2@@anywhere, 29@@d@@nonsense, 1@@s@@contrast-01, 22@@s@@cause-01, 18@@d@@nobody, 27@@s@@full-09, 14@@p@@even, 25@@d@@statistic, 17@@a@@and, 3@@s@@real-04, 15@@explicitanon0@@_NUMBER_, 6@@s@@real-04, 12@@a@@and]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	exemplify-01	(s(), o())	0	ROOT	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	disruptive	_	disruptive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	technology	_	technology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
8	Airbnb,	_name_	airbnb,	CD	O	_	and	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	company	_	company	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	threatens	_	threaten	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
15	hotel	_	hotel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	industry	_	industry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
18	connecting	_	connect	VBG	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
19	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	resources	_	resource	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	to	_	to	IN	O	_	-	_	0	IGNORE	true
22	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_o	true
23	who	_	who	WP	O	_	person	_	0	IGNORE	true
24	desire	_	desire	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
25	those	_	those	DT	O	_	person	_	0	IGNORE	true
26	resources	_	resource	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@1, 16@@d@@industry, 18@@b@@connect-01, 2@@s@@exemplify-01, 22@@d@@person, 26@@d@@resource, 5@@p@@disruptive, 19@@s@@personal-02, 6@@d@@technology, 15@@p@@hotel, 20@@d@@resource, 14@@s@@establish-01, 24@@s@@desire-01, 10@@d@@company, 12@@s@@threaten-01]
sentence=1	Ladies	ladies	lady	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
3	gentlemen,	_	gentlemen,	NNP	O	_	say-01	_	0	IGNORE	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
6	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	MOD_s	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	aware,	_	aware,	NNP	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	Country’s	_name_	Country’s	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
11	development	_	development	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	develop-02	(mod())	13	MOD_mod	true
12	blue	_	blue	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
13	print	_	print	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_s	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	being	_	be	VBG	O	_	person	_	0	IGNORE	true
16	implemented	_	implement	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	successive	_	successive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-03	(s())	23	MOD_s	true
19	five-	_	five-	JJ	O	_	3	_	0	IGNORE	true
20	year	_	year	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	Medium	medium	Medium	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	MOD_s	true
22	Term	term	Term	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	Plans	plans	Plans	NNPS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
24	(MTPs)	(mtps)	(mtps)	NN	O	_	and	_	0	IGNORE	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	will	_	will	MD	O	_	$LEMMA$	_	0	IGNORE	true
27	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	28	MOD_mod	true
28	enable	_	enable	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	country	_	country	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
32	achieve	_	achieve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_o	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	long-term	_	long-term	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	long-03	(s())	35	MOD_s	true
35	goals	_	goal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
36	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@s@@Medium, 28@@s@@enable-01, 12@@s@@blue, 20@@t@@temporal-quantity, 32@@s@@achieve-01, 13@@s@@print, 20@@y@@year, 23@@t@@Plans-01, 18@@s@@succeed-03, 10@@n@@_NAME_, 16@@s@@implement-01, 27@@p@@final, 11@@p@@develop-02, 5@@d@@you, 35@@d@@goal, 10@@m@@military, 1@@d@@lady, 2@@a@@and, 6@@s@@possible-01, 34@@s@@long-03]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	businesses	_	business	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	Chatham_Island	_name_	Island	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
9	rent	_	rent	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	4	MOD_s	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	vehicle	_	vehicle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[6@@n@@_NAME_, 4@@d@@business, 10@@d@@you, 6@@c@@country, 9@@b@@rent-01, 3@@explicitanon0@@several, 12@@d@@vehicle]
sentence=1	Like	like	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	8	MOD_s	true
2	Wikipedia,	wikipedia,	Wikipedia,	NNP	O	_	-	_	0	IGNORE	true
3	wikiHow	wikihow	wikiHow	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	1	APP_o	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	wiki	_	wiki	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	runs	_	run	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	on	_	on	IN	O	_	name	_	0	IGNORE	true
10	Mediawiki	mediawiki	Mediawiki	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	software	_	software	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[11@@d@@software, 10@@p@@_NAME_, 3@@n@@_NAME_, 1@@s@@resemble-01, 6@@d@@wiki, 3@@o2@@organization, 8@@s@@run-01]
sentence=1	To	to	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
2	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	APP_op2	true
3	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
5	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op2	true
6	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
9	man,	_	man,	NN	O	_	and	_	0	IGNORE	true
10	to	_	to	IN	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	peasants	_	peasant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
14	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	13	APP_op2	true
15	of	_	of	IN	O	_	person	_	0	IGNORE	true
16	India;	_name_	india;	CD	O	_	and	_	0	IGNORE	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	fight	_	fight	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	26	APP_s	true
20	end	_	end	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op3	true
21	poverty	_	poverty	NN	O	(d<root> / --LEX--)	poor	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
23	ignorance	_	ignorance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
25	disease;	_	disease;	NNP	O	_	and	_	0	IGNORE	true
26	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	24	APP_op1	true
27	build	_	build	VB	O	(d<root> / --LEX--)	$LEMMA$-up-05	()	35	APP_op3	true
28	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	prosperous,	_	prosperous,	NNP	O	_	and	_	0	IGNORE	true
31	democratic	_	democratic	JJ	O	(d<root> / --LEX--)	democrat	()	40	APP_op1	true
32	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
33	progressive	_	progressive	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	40	APP_op2	true
34	nation,	_	nation,	NNS	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	24	MOD_op1	true
36	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
37	create	_	create	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op4	true
38	social,	_	social,	CD	O	_	and	_	0	IGNORE	true
39	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	42	MOD_mod	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_op2	true
41	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	42	MOD_mod	true
42	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
43	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
44	will	_	will	MD	O	_	thing	_	0	IGNORE	true
45	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	MOD_s	true
46	justice	_	justice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_op1	true
47	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	45	APP_o	true
48	fullness	_	fullness	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	47	APP_op2	true
49	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
50	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
51	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
52	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
53	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	54	APP_op1	true
54	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	45	MOD_mod	true
55	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	54	APP_op2	true
56	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@d@@progressive-02, 40@@a@@and, 24@@a@@and, 27@@d@@build-up-05, 13@@a@@and, 47@@a@@and, 2@@s@@bring-01, 53@@d@@man, 18@@d@@fight-01, 42@@d@@institution, 23@@d@@ignorance, 52@@p@@every, 22@@a@@and, 55@@d@@woman, 3@@d@@free-04, 45@@s@@ensure-01, 20@@s@@end-01, 8@@p@@common, 4@@a@@and, 50@@d@@life, 41@@p@@politics, 19@@a@@and, 31@@d@@democrat, 37@@s@@create-01, 26@@s@@and, 12@@d@@peasant, 21@@d@@poor, 14@@p2@@person, 48@@s@@fullness, 35@@a@@and, 5@@d@@opportunity, 46@@d@@justice, 39@@p@@economy, 54@@o@@and, 14@@e2@@work-01]
sentence=1	"He	"he	"he	EX	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	expressive	_	0	IGNORE	true
3	a	_	a	DT	O	_	resemble-01	_	0	IGNORE	true
4	person	_	person	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	who	_	who	WP	O	_	have-manner-91	_	0	IGNORE	true
6	studies	_	study	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_s	true
10	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_mod	true
11	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@d@@person, 8@@t@@way, 1@@d@@"he, 10@@s@@live-01, 4@@r@@person, 6@@s@@study-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	0	ROOT	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the_spectral_summer	_name_	summer	NN	O	(b<root> / book  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
5	when	_	when	WRB	O	_	he	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	moon	_	moon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	shone	_	shine	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
9	down	_	down	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	garden	_	garden	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
15	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	17	MOD_mod	true
16	wandered;	_	wandered;	NNP	O	(d<root> / --LEX--)	mean-01	()	2	APP_s	true
17	the_spectral_summer	_name_	summer	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	narcotic	_	narcotic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	flowers	_	flower	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
22	humid	_	humid	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	seas	_	sea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	foliage	_	foliage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	bring	_	bring	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
28	wild	_	wild	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	many-coloured	_	many-coloured	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	31	MOD_s	true
31	dreams	_	dream	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_o	true
32	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[4@@n@@_NAME_, 12@@p@@old, 19@@p@@narcotic, 25@@p@@foliage, 20@@d@@flower, 28@@p@@wild, 30@@s@@many-coloured, 16@@d@@mean-01, 22@@p@@humid, 4@@b@@book, 23@@d@@sea, 21@@a@@and, 8@@s@@shine-01, 17@@explicitanon0@@summer, 7@@d@@moon, 15@@p@@i, 13@@b@@garden, 9@@a@@down, 27@@s@@bring-01, 2@@s@@be-temporally-at-91, 31@@d@@dream-01]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	0	ROOT	true
4	who	_	who	WP	O	_	say-01	_	0	IGNORE	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	doing	_	do	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
7	research	_	research	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
8	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@p@@that, 3@@d@@person, 7@@s@@research-01, 1@@p@@well]
sentence=1	Environment	environment	Environment	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	Canada	_name_	Canada	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
3	spokesperson	_	spokesperson	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	4	MOD_s	true
4	Julie_Hahn	_name_	Hahn	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	person	()	7	APP_s	true
7	apply	_	apply	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	APP_o	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
10	of	_	of	IN	O	_	and	_	0	IGNORE	true
11	complaint,	_	complaint,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	criticism	_	criticism	NN	O	(d<root> / --LEX--)	criticize-01	()	13	APP_op2	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	MOD_op1	true
14	injury,	_	injury,	NNP	O	_	-	_	0	IGNORE	true
15	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_op1	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
17	scientific	_	scientific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	science	(mod())	18	MOD_mod	true
18	notes	_	note	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_op2	true
20	findings	_	finding	NNS	O	(d<root> / --LEX--)	find-01	()	19	APP_op2	true
21	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	don`t	_	don`t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	19	MOD_s	true
24	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	conclusion,	_	conclusion,	NNS	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	7	APP_o	true
27	Treasury_Board	_name_	Board	NNP	O	(d<root> / --LEX--)	_NAME_	()	30	APP_op1	true
28	letters,	_	letters,	NNS	O	_	-	_	0	IGNORE	true
29	agendas	_	agenda	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	23	APP_o	true
31	minutes	_	minute	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op3	true
32	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
33	don`t	_name_	don`t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	34	MOD_mod	true
34	deal	_	deal	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
35	with	_	with	IN	O	_	-	_	0	IGNORE	true
36	subjects	_	subject	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	39	MOD_mod	true
39	interest	_	interest	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	36	MOD_mod	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@criticize-01, 19@@a@@and, 20@@d@@find-01, 29@@d@@agenda, 7@@s@@apply-02, 24@@p@@any, 6@@d@@person, 22@@explicitanon0@@-, 4@@p@@person, 30@@a@@and, 1@@a@@environment, 31@@d@@minute, 2@@n@@_NAME_, 34@@t@@deal-01, 38@@p@@nation, 39@@p@@interest-01, 23@@s@@have-03, 18@@d@@note, 16@@a@@or, 5@@s@@say-01, 36@@d@@subject, 17@@p@@science, 27@@d@@_NAME_, 26@@o@@and, 4@@n@@_NAME_, 3@@j@@spokesperson, 3@@h@@have-org-role-91, 9@@d@@letter, 2@@c@@country, 33@@explicitanon0@@-, 13@@a@@or, 15@@d@@research-01]
sentence=1	McDonnell	_name_	McDonnell	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	0	ROOT	true
3	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	2	MOD_s	true
4	early	_	early	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
5	in	_	in	IN	O	_	and	_	0	IGNORE	true
6	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
7	term	_	term	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
8	pushing	_	push	VBG	O	(d<root> / --LEX--  :ARG0 (h<s>)  :manner-of (a<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
9	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	against	_	against	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	Senate	_name_	Senate	NNP	O	(n2<root> / --LEX--  :name-of (g / government-organization  :location-of (h2<mod>)))	_NAME_	(mod())	12	MOD_mod	true
12	Democrats	_name_	Democrats	NNPS	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
13	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
14	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
17	increases	_	increase	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
18	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
19	response	_	response	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	respond-01	(s(), o())	14	MOD_o	true
20	to	_	to	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
21	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
22	revenue	_	revenue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	shortfalls	_	shortfall	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	APP_s	true
24	during	_	during	IN	O	_	i	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	recession	_	recession	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-02	(mod())	23	MOD_mod	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@d@@term, 19@@s@@respond-01, 1@@p@@person, 9@@a@@back, 26@@n@@recession-02, 16@@d@@tax-01, 12@@p@@political-party, 3@@s@@well-09, 23@@s@@shortfall, 8@@d@@push-01, 1@@n@@_NAME_, 2@@s@@do-02, 14@@s@@want-01, 17@@s@@increase-01, 22@@d@@revenue, 15@@p@@huge, 11@@g@@government-organization, 20@@s@@cause-01, 11@@n2@@_NAME_, 21@@s@@major-02, 12@@n@@_NAME_, 4@@w@@early]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
6	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	who	_	who	WP	O	_	capable-01	_	0	IGNORE	true
8	owns	_	own	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	pet	_	pet	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	snake	_	snake	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@d@@someone, 8@@s@@own-01, 10@@p@@pet, 4@@o@@sometimes, 11@@d@@snake, 3@@p@@also, 5@@s@@find-01, 1@@d@@You, 2@@s@@possible-01]
sentence=1	While	while	while	IN	O	_	contrast-01	_	0	IGNORE	true
2	in	_	in	IN	O	_	i	_	0	IGNORE	true
3	the_United_States,_Dvořák	_name_	Dvořák	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
5	his	_	he	PRP$	O	_	and	_	0	IGNORE	true
6	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	9	MOD_mod	true
7	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	successful	_	successful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	9	MOD_s	true
9	orchestral	_	orchestral	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
10	works:	_name_	works:	NNP	O	_	mean-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
12	Symphony	symphony	Symphony	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
13	From	from	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	New	new	New	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	12	MOD_s	true
16	World,	world,	world,	CD	O	_	_NAME_	_	0	IGNORE	true
17	which	_	which	WDT	O	_	i	_	0	IGNORE	true
18	spread	_	spread	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	MOD_s	true
19	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	reputation	_	reputation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	worldwide,	_	worldwide,	NNP	O	_	and	_	0	IGNORE	true
22	[4]	_	[4]	XX	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
24	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	Cello	cello	Cello	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
26	Concerto,	concerto,	concerto,	CD	O	_	-	_	0	IGNORE	true
27	one	_	one	CD	O	(d<root> / --LEX--)	1	()	23	APP_op3	true
28	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	27	MOD_s	true
29	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
30	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	32	MOD_mod	true
32	regarded	_	regard	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	cello	_	cello	NN	O	_	$LEMMA$	_	0	IGNORE	true
36	concerti	_	concerto	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@explicitanon0@@2, 12@@d@@Symphony, 18@@s@@spread-02, 15@@s@@_NAME_, 30@@s@@most, 32@@s@@regard-02, 31@@s@@high, 20@@d@@reputation, 36@@p@@concerto, 34@@p@@all, 28@@s@@include-91, 3@@n@@_NAME_, 25@@d@@Cello, 27@@d@@1, 8@@s@@succeed-01, 3@@c@@country, 7@@s@@most, 23@@a@@and, 9@@d@@orchestral, 4@@s@@write-01]
sentence=1	Rather	rather	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	11	MOD_s	true
2	than	_	than	IN	O	_	-	_	0	IGNORE	true
3	passively	_	passively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	passive	(mod())	4	MOD_mod	true
4	attempting	_	attempt	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	absorb	_	absorb	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	new	_	new	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
8	information,	_	information,	NNS	O	_	and	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	learn	_	learn	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
12	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	make	_	make	VB	O	_	cause-01	_	0	IGNORE	true
15	conscious	_	conscious	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	decisions	_	decision	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	decide-01	(s(), o())	11	APP_o	true
17	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	learning	_	learn	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	19	MOD_mod	true
22	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
25	(based	_	(based	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
26	on	_	on	IN	O	_	thing	_	0	IGNORE	true
27	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
28	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	intend	_	intend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	29	APP_s	true
32	with	_	with	IN	O	_	thing	_	0	IGNORE	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	information),	_	information),	NNP	O	_	thing	_	0	IGNORE	true
35	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
36	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	will	_	will	MD	O	_	thing	_	0	IGNORE	true
38	select	_	select	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	29	APP_o	true
40	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op2	true
41	learning	_	learning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	42	MOD_mod	true
42	materials	_	material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
43	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
44	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
45	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
46	for	_	for	IN	O	_	thing	_	0	IGNORE	true
47	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
48	needs,	_	needs,	NNS	O	_	and	_	0	IGNORE	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
50	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
51	persistent	_	persistent	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_op2	true
52	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
53	will	_	will	MD	O	_	thing	_	0	IGNORE	true
54	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
55	in	_	in	IN	O	_	i	_	0	IGNORE	true
56	the	_	the	DT	O	_	thing	_	0	IGNORE	true
57	learning	_	learning	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	58	APP_s	true
58	activity	_	activity	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-06	(mod(), s())	51	MOD_mod	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@c@@learn-01, 58@@b@@activity-06, 39@@a@@and, 57@@d@@learning-01, 42@@d@@material, 16@@s@@decide-01, 25@@s@@(based-01, 49@@a@@and, 7@@d@@new-01, 6@@s@@absorb-01, 4@@s@@attempt-01, 51@@d@@persistent, 1@@s@@instead-of-91, 3@@t@@passive, 19@@d@@method, 38@@s@@select-01, 40@@s@@use-01, 29@@s@@intend-01, 31@@d@@do-02, 24@@s@@use-01, 41@@p@@learning-01, 15@@t@@conscious, 45@@s@@appropriate-02, 21@@p@@learn-01, 9@@d@@you]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	start	_	start	VBP	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	widely	_	widely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	wide	(s())	6	MOD_s	true
6	agreed	_	agree	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	premise	_	premise	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
8	that	_	that	IN	O	_	mean-01	_	0	IGNORE	true
9	testing	_	test	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_dom	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	reproducibility	_	reproducibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accurate	(s())	9	APP_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	findings	_	finding	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	find-01	()	11	APP_s	true
14	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	7	APP_o	true
15	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
16	an	_	an	DT	O	_	thing	_	0	IGNORE	true
17	essential	_	essential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	role	_	role	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_s	true
19	in	_	in	IN	O	_	thing	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	testing	_	testing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	test-01	(s())	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	18	MOD_s	true
23	refinement	_	refinement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	22	APP_op2	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	theory,	_	theory,	NNS	O	_	and	_	0	IGNORE	true
26	at	_	at	IN	O	_	instead-of-91	_	0	IGNORE	true
27	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	30	MOD_mod	true
28	for	_	for	IN	O	_	have-purpose-91	_	0	IGNORE	true
29	hypothesis-testing	_	hypothesis-teste	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	epistemologies	_	epistemology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op1	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	seek	_	seek	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	30	MOD_s	true
33	to	_	to	TO	O	_	person	_	0	IGNORE	true
34	ascertain	_	ascertain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_o	true
35	generalizability	_	generalizability	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
37	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	epistemologies	_	epistemology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
42	constructs	_	construct	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
43	are	_	be	VBP	O	_	person	_	0	IGNORE	true
44	deemed	_	deem	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
45	to	_	to	TO	O	_	thing	_	0	IGNORE	true
46	be	_	be	VB	O	_	person	_	0	IGNORE	true
47	definable	_	definable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	tax-01	(s())	48	APP_op1	true
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	44	APP_o	true
49	observable	_	observable	JJ	O	(p<root> / possible-01  :ARG1 (p2 / --LEX--  :ARG1 (b<s>)))	observe-01	(s())	48	APP_op2	true
50	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[30@@d@@epistemology, 6@@s@@agree-01, 7@@s@@premise-01, 5@@s@@wide, 22@@a@@and, 13@@t@@thing, 49@@p2@@observe-01, 9@@s@@test-01, 47@@s@@tax-01, 21@@s@@test-01, 18@@r@@role, 23@@s@@develop-02, 14@@s@@recommend-01, 38@@p@@other, 34@@s@@ascertain-01, 35@@d@@generalizability, 39@@d@@epistemology, 32@@c@@seek-01, 48@@a@@and, 44@@s@@deem-01, 49@@p@@possible-01, 42@@d@@construct, 27@@p@@at-least, 13@@d@@find-01, 36@@a@@and, 17@@p@@essential, 29@@s@@hypothesis-teste-01, 11@@s@@accurate, 1@@d@@We, 2@@t@@start-01]
sentence=1	Those	those	those	DT	O	_	that	_	0	IGNORE	true
2	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
3	do	_	do	VBP	O	(d<root> / --LEX--)	person	()	6	APP_o	true
4	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	MOD_s	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	denied	_	deny	VBN	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-01	(s(s_UNIFY_o()))	0	ROOT	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	return	_	return	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	APP_s	true
10	for	_	for	IN	O	_	monetary-quantity	_	0	IGNORE	true
11	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
12	labor	_	labor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	tax	_	tax	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
16	system	_	system	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
17	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
18	penalizes	_	penalize	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	successful	_	successful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	20	MOD_s	true
20	achievement	_	achievement	NN	O	(d<root> / --LEX--)	achieve-01	()	18	APP_o	true
21	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
22	keeps	_	keep	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-04	(o2(s_UNIFY_o()), s())	16	MOD_s	true
23	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
24	from	_	from	IN	O	_	-	_	0	IGNORE	true
25	maintaining	_	maintain	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o2	true
26	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	productivity	_	productivity	NN	O	(d<root> / --LEX--)	productive-03	()	25	APP_o	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@achieve-01, 6@@s@@deny-01, 12@@d@@labor, 8@@s@@fair-01, 9@@s@@return-02, 18@@s@@penalize-01, 27@@d@@productive-03, 22@@t@@keep-04, 26@@p@@full, 23@@d@@us, 25@@s@@maintain-01, 15@@p@@tax-01, 4@@s@@work-01, 19@@s@@succeed-01, 16@@m@@system, 3@@d@@person]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	lead	_	lead	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	in	_	in	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	2009	_name_	2009	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	10	MOD_mod	true
10	version	_	version	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Friday_the_13th	_name_	13th	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
13	as	_	as	IN	O	_	and	_	0	IGNORE	true
14	Clay_Miller,	_name_	Miller,	NNP	O	_	and	_	0	IGNORE	true
15	a	_	a	DT	O	_	name	_	0	IGNORE	true
16	character	_	character	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
17	who	_	who	WP	O	_	name	_	0	IGNORE	true
18	heads	_	head	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	out	_	out	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	Camp_Crystal_Lake	_name_	Lake	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
22	in	_	in	IN	O	_	and	_	0	IGNORE	true
23	search	_	search	NN	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
26	sister	_	sister	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	23	APP_o	true
27	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
28	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
29	gone	_	go	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
30	missing.	_	missing.	RB	O	_	_NAME_	_	0	IGNORE	true
31	[12	_	[12	XX	O	_	_NUMBER_	_	0	IGNORE	true
32	]	_	]	-RRB-	O	_	-	_	0	IGNORE	true

nodealignment=[19@@a@@out, 2@@p@@also, 3@@s@@have-03, 26@@h@@have-rel-role-91, 1@@d@@He, 26@@f@@sister, 5@@s@@lead-02, 6@@d@@role, 23@@s@@search-01, 21@@c@@city, 26@@p@@person, 10@@b@@version, 16@@p@@character, 9@@explicitanon0@@_NUMBER_, 18@@s@@head-01, 12@@n@@_NAME_, 9@@d@@date-entity, 21@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
3	suffered	_	suffer	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
4	minor	_	minor	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	damage	_	damage	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
6	during	_	during	IN	O	_	cause-01	_	0	IGNORE	true
7	WWII,	wwii,	WWII,	NNP	O	_	and	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	suffered	_	suffer	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
10	extensive	_	extensive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	MOD_s	true
11	urban	_	urban	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	planning	_	planning	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	plan-01	(s())	9	APP_o	true
13	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	the_decades	_name_	decade	NNS	O	(w<root> / world-region  :name (n / --LEX--)  :location-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	followed,	_	followed,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	the	_	the	DT	O	_	-	_	0	IGNORE	true
19	nation	_	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	rapidly	_	rapidly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	rapid	(mod())	22	MOD_mod	true
21	industrialized	_	industrialize	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
22	and	_	and	CC	O	(a2<root> / --LEX--  :op2 (p2<op2>)  :op1 (s2<op1>)  :time-of (a<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	9	MOD_mod	true
23	urbanized	_	urbanized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@a@@and, 23@@s@@urbanized-01, 9@@s@@suffer-01, 12@@s@@plan-01, 19@@d@@nation, 4@@s@@minor-01, 22@@a2@@and, 5@@d@@damage-01, 3@@s@@suffer-01, 11@@d@@urban, 14@@w@@world-region, 14@@n@@_NAME_, 10@@s@@extensive-03, 2@@d@@city, 21@@s@@industrialize-01, 20@@t@@rapid]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	hardest	_	hard	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	hard-02	(s())	3	MOD_s	true
3	part	_	part	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_dom	true
4	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
5	probably	_	probably	RB	O	(r<root> / --LEX--  :domain (q<dom>))	probable	(dom())	0	ROOT	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	overcome	_	overcome	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_dom	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	gagging	_	gagging	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	reflex	_	reflex	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	set	_	set	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-in-03	(s(), o())	10	MOD_s	true
13	in	_	in	RP	O	_	event	_	0	IGNORE	true
14	when	_	when	WRB	O	_	i	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	bit	_	bite	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op1	true
17	down	_	down	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
18	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	acrid	_	acrid	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	resin	_	resin	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	jelly	_	jelly	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	flowed	_	flow	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op2	true
26	out	_	out	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
27	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	up	_	up	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	around,	_	around,	NNS	O	_	include-91	_	0	IGNORE	true
31	over	_	over	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
32	teeth,	_	teeth,	CD	O	_	$LEMMA$	_	0	IGNORE	true
33	gums	_	gum	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op2	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	25	MOD_op1	true
35	tongue	_	tongue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op3	true
36	.	_	.	.	O	_	include-91	_	0	IGNORE	true

nodealignment=[26@@a@@out, 5@@r@@probable, 35@@d@@tongue, 3@@r@@part, 23@@a@@and, 33@@d@@gum, 22@@d@@jelly, 28@@a@@up, 12@@s@@set-in-03, 2@@b2@@hard-02, 25@@d@@flow-01, 34@@a@@and, 20@@p@@acrid, 9@@p@@gagging-01, 7@@s@@overcome-01, 2@@m@@most, 21@@p@@resin, 10@@d@@reflex, 17@@a@@down, 31@@b@@over, 15@@d@@you, 16@@s@@bite-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	am	_	be	VBP	O	_	cause-01	_	0	IGNORE	true
3	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	reasons	_	reason	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	29	MOD_o	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	war	_	war	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	over,	_	over,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	3	APP_o	true
11	even	_	even	RB	O	_	contrast-01	_	0	IGNORE	true
12	though	_	though	IN	O	_	have-concession-91	_	0	IGNORE	true
13	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
14	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
15	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
16	wars	_	war	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_s	true
17	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
18	are	_	be	VBP	O	_	mean-01	_	0	IGNORE	true
19	an	_	an	DT	O	_	-	_	0	IGNORE	true
20	inertia	_	inertia	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
21	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
23	past,	_	past,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	a	_	a	DT	O	_	-	_	0	IGNORE	true
25	continuation	_	continuation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
26	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	doesn’t	_	doesn’t	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	29	MOD_mod	true
28	make	_	make	VBP	O	_	-	_	0	IGNORE	true
29	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	25	MOD_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@s@@and, 27@@explicitanon0@@-, 6@@s@@cause-01, 29@@s@@sense-02, 13@@p@@still, 25@@p@@continuation, 20@@p@@inertia, 8@@d@@war-01, 3@@s@@sure-02, 1@@d@@i, 16@@d@@war-01]
sentence=1	Nearly	nearly	nearly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	near	(mod())	2	MOD_mod	true
2	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
4	in	_	in	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
6	eastern	_	eastern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	east	(mod())	7	MOD_mod	true
7	portion	_	portion	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	name	_	0	IGNORE	true
10	state,	_	state,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
11	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	12	MOD_mod	true
12	factor	_	factor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
13	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
14	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	12	MOD_s	true
15	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
16	war	_	war	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	Mexico	_name_	Mexico	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
19	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
20	1846	_name_	1846	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	16	MOD_mod	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@explicitanon0@@_NUMBER_, 12@@d@@factor, 18@@c@@country, 7@@b@@portion, 14@@t@@lead-03, 11@@explicitanon0@@1, 20@@d@@date-entity, 3@@s@@be-located-at-91, 16@@s@@war-01, 1@@s@@near, 2@@d@@all, 6@@p@@east, 18@@n@@_NAME_]
sentence=1	Tropical	tropical	tropical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	cyclones	_	cyclone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
3	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	4	MOD_s	true
4	sustained	_	sustain	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	by	_	by	IN	O	_	and	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
10	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
11	latent	_	latent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	heat,	_	heat,	NNS	O	_	include-91	_	0	IGNORE	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
15	released	_	release	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
16	by	_	by	IN	O	_	and	_	0	IGNORE	true
17	moisture	_	moisture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	evaporated	_	evaporate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
19	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	ocean	_	ocean	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	condenses	_	condense	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
24	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
25	form	_	form	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	23	MOD_mod	true
26	rain	_	rain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_o	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@d@@energy, 18@@s@@evaporate-01, 4@@s@@sustain-01, 17@@d@@moisture, 11@@p@@latent, 3@@s@@person, 7@@p@@form, 1@@p@@tropical, 2@@d@@cyclone, 21@@s@@ocean, 23@@s@@condense-01, 25@@s@@form-01, 26@@d@@rain-01, 15@@s@@release-01]
sentence=1	Achieving	achieving	achieve	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
2	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	3	MOD_mod	true
3	objectives	_	objective	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	requires	_	require	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
6	creation	_	creation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	create-01	(s())	4	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	inclusive	_	inclusive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_s	true
9	institutions,	_	institutions,	NNS	O	_	and	_	0	IGNORE	true
10	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	guarantee	_	guarantee	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	right	_	right	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-05	(s())	11	APP_o	true
14	to	_	to	IN	O	_	person	_	0	IGNORE	true
15	private	_	private	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	13	APP_s	true
16	property,	_	property,	NNP	O	_	and	_	0	IGNORE	true
17	incorporate	_	incorporate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
18	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	impartial	_	impartial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	legal	_	legal	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	17	APP_s	true
21	system,	_	system,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
23	promote	_	promote	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	APP_op2	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	25	MOD_s	true
27	on	_	on	IN	O	_	-	_	0	IGNORE	true
28	equality	_	equality	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	26	APP_o	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	conditions	_	condition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	[16]	_name_	[16]	XX	O	_	mean-01	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@right-05, 25@@d@@society, 11@@s@@guarantee-01, 22@@a@@and, 1@@s@@achieve-01, 26@@s@@base-02, 3@@d@@objective, 30@@d@@condition, 28@@s@@equal-01, 23@@s@@promote-02, 8@@s@@inclusive, 17@@s@@incorporate-01, 15@@d@@private-03, 20@@d@@legal-02, 6@@s@@create-01, 19@@p@@impartial, 4@@s@@require-01, 2@@p@@this]
sentence=1	There’s	there’s	There’s	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	1	(s())	0	ROOT	true
2	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	1	MOD_mod	true
3	24_hour	_name_	hour	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	hour	(mod())	6	MOD_mod	true
4	comedy	_	comedy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	news	_	news	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	cycle	_	cycle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	exists	_	exist	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	on	_	on	IN	O	_	thing	_	0	IGNORE	true
10	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	late	_	late	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	night	_	night	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	talk	_	talk	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
15	shows	_	show	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-04	(mod())	8	MOD_mod	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[3@@t@@temporal-quantity, 10@@p@@all, 8@@s@@exist-01, 5@@p@@news, 1@@s@@1, 4@@p@@comedy, 6@@d@@cycle, 15@@b@@show-04, 3@@y@@hour, 2@@explicitanon0@@1, 12@@p@@late, 13@@p@@night, 14@@p@@talk-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	perennial	_	perennial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	basils	_	basil	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	39	MOD_s	true
5	which	_	which	WDT	O	_	date-interval	_	0	IGNORE	true
6	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	year	_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	after	_	after	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	year,	_	year,	NNP	O	_	and	_	0	IGNORE	true
11	like	_	like	IN	O	_	1	_	0	IGNORE	true
12	African	_name_	african	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	14	MOD_mod	true
13	Blue	blue	Blue	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	Basil	basil	Basil	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
15	(which	_	(which	-LRB-	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	26	APP_s	true
17	pretty	_	pretty	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	blue	_	blue	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	veins	_	vein	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	leaves)	_	leaves)	NNS	O	_	mean-01	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
24	Thai	_name_	Thai	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_op2	true
25	Basil,	basil,	basil,	NN	O	_	include-91	_	0	IGNORE	true
26	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
27	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	varieties	_	variety	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
30	are	_	be	VBP	O	_	person	_	0	IGNORE	true
31	annuals,	_	annuals,	NNS	O	(d<root> / --LEX--)	include-91	()	26	APP_o	true
32	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
33	you'll	_	you'll	PRP	O	_	inside	_	0	IGNORE	true
34	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	31	MOD_s	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	plant	_	plant	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	34	APP_o	true
37	year	_	year	NN	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
38	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	36	MOD_mod	true
39	year	_	year	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@d@@year, 34@@s@@obligate-01, 29@@d@@variety, 24@@n@@_NAME_, 26@@s@@contrast-01, 36@@s@@plant-01, 23@@a@@and, 13@@p@@Blue, 12@@n2@@_NAME_, 16@@s@@have-03, 28@@p@@other, 37@@o@@year, 18@@p@@blue, 8@@n@@year, 15@@p@@(which, 12@@c@@continent, 17@@p@@pretty, 19@@d@@vein, 9@@p@@after, 31@@d@@include-91, 24@@c@@country, 7@@a@@back, 27@@explicitanon0@@most, 3@@p@@perennial, 6@@s@@come-01, 4@@s@@basil, 38@@w@@after, 14@@d@@Basil]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	remember	_	remember	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
4	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
5	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	1	APP_op1	true
8	checked	_	check	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
9	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	temperature's	_	temperature'	NNS	O	(d<root> / --LEX--)	mean-01	()	12	APP_o	true
11	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	8	MOD_s	true
13	98.7,	_	98.7,	NNPS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	14	MOD_s	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	1	APP_op2	true
15	at	_	at	IN	O	_	contrast-01	_	0	IGNORE	true
16	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	14	MOD_s	true
21	101	_	101	CD	O	(d<root> / --LEX--)	_NUMBER_	()	22	APP_op1	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
23	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	real-04	(mod())	25	MOD_mod	true
25	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
26	that	_	that	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	APP_op3	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	obviously	_	obviously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	obvious-01	(s())	30	MOD_s	true
29	a	_	a	DT	O	_	contrast-01	_	0	IGNORE	true
30	fever	_	fever	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@s@@high-02, 17@@n@@point, 12@@s@@resemble-01, 7@@d@@i, 5@@p@@one, 13@@s@@contrast-01, 8@@d@@check-01, 11@@p@@only, 10@@d@@mean-01, 20@@s@@resemble-01, 26@@s@@that, 23@@d@@something, 3@@s@@remember-01, 14@@s@@contrast-01, 16@@p@@another, 6@@n@@point, 28@@s@@obvious-01, 30@@d@@fever, 2@@d@@i, 22@@a@@or, 24@@s@@real-04, 1@@a@@and, 21@@d@@_NUMBER_]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
4	turned	_	turn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	9	APP_op1	true
5	to	_	to	IN	O	_	person	_	0	IGNORE	true
6	those	_	those	DT	O	_	that	_	0	IGNORE	true
7	who	_	who	WP	O	_	person	_	0	IGNORE	true
8	remained,	_	remained,	NNP	O	_	person	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_op2	true
10	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	said,	_	said,	NNP	O	_	person	_	0	IGNORE	true
12	will	_	will	MD	O	_	person	_	0	IGNORE	true
13	ye	_	ye	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
14	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	9	APP_op2	true
16	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	9	MOD_mod	true

nodealignment=[4@@s@@turn-01, 17@@explicitanon0@@interrogative, 16@@a@@away, 14@@p@@also, 2@@n@@then, 9@@a@@and, 13@@d@@ye, 1@@a@@and, 15@@g@@go-02, 3@@d@@he]
sentence=1	Thin	thin	thin	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
2	translucent	_	translucent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	shadows	_	shadow	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	move	_	move	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	across	_	across	IN	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
7	—	_	—	VB	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	shadows	_	shadow	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	4	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	neosilk-and-nanotube	_	neosilk-and-nanotube	FW	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	filaments	_	filament	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	hang	_	hang	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	hundreds	_	hundred	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	100	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	multiple	_	0	IGNORE	true
22	five-kilometer-high	_	five-kilometer-high	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	towers	_	tower	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	encircle	_	encircle	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@m@@shadow, 23@@g@@tower, 5@@a@@across, 13@@d@@filament, 3@@d@@shadow, 4@@b@@move-01, 2@@p@@translucent, 20@@explicitanon0@@100, 22@@p@@five-kilometer-high, 1@@s@@thin-03, 6@@d@@she, 12@@n@@_NAME_, 20@@m@@multiple, 25@@s@@encircle-01, 17@@d@@city, 15@@s@@hang-01]
sentence=1	More	more	More	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	recently,	_	recently,	NNS	O	_	and	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	erred	_	err	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	accepting	_	accept	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	transportation	_	transportation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	transport-01	(mod())	9	MOD_mod	true
9	bill	_	bill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	9	MOD_s	true
12	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	flaws	_	flaw	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
15	huge	_	huge	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op2	true
17	increases,	_	increases,	NNS	O	_	and	_	0	IGNORE	true
18	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	4	MOD_s	true
19	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
20	prioritizing	_	prioritize	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
21	spending	_	spend	VBG	O	(d<root> / --LEX--)	spend-01	()	20	APP_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
23	seeking	_	seek	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
24	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
25	rational,	_	rational,	NNS	O	_	war	_	0	IGNORE	true
26	efficient,	_	efficient,	NNP	O	_	war	_	0	IGNORE	true
27	decentralized	_	decentralized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
28	transportation	_	transportation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	decision-making	_	decision-making	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@he, 4@@c@@err-01, 15@@p@@huge, 14@@a@@and, 1@@s@@More, 16@@d@@tax-01, 8@@p@@transport-01, 21@@d@@spend-01, 6@@s@@accept-01, 18@@s@@instead-of-91, 9@@d@@bill, 29@@s@@decision-making-01, 24@@s@@more, 11@@s@@have-03, 27@@s@@decentralized-01, 12@@p@@huge, 23@@s@@seek-01, 22@@a@@and, 20@@s@@prioritize-01, 13@@d@@flaw-01, 28@@d@@transportation]
sentence=1	Quartiles	quartiles	quartile	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_dom	true
2	are	_	be	VBP	O	_	mean-01	_	0	IGNORE	true
3	numbers	_	number	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	separate	_	separate	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_s	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	5	APP_o	true
8	into	_	into	IN	O	_	-	_	0	IGNORE	true
9	quarters	_name_	quarter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
10	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@d@@data, 9@@d@@quarter, 1@@d@@quartile, 5@@b@@separate-01, 3@@r@@number]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	Desert	desert	Desert	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	Rose	rose	Rose	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	(adenium	_	(adenium	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
8	obesium)	_	obesium)	NNP	O	_	mean-01	_	0	IGNORE	true
9	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
10	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
11	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	blooming	_	bloom	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	elephant	_	elephant	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	leg	_	leg	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
16	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 6@@d@@Rose, 10@@s@@look-02, 13@@s@@bloom-01, 5@@p@@Desert, 14@@p@@elephant, 15@@d@@leg, 3@@p@@also]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	create	_	create	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
4	a	_	a	DT	O	_	multi-sentence	_	0	IGNORE	true
5	dilemma:	_	dilemma:	NNP	O	_	multi-sentence	_	0	IGNORE	true
6	Do	do	Do	VBP	O	_	cause-01	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	try	_	try	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
9	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
11	and	_	and	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
12	unproven	_	unproven	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	prove-01	(s())	9	MOD_s	true
13	that	_	that	WDT	O	_	multi-sentence	_	0	IGNORE	true
14	lacks	_	lack	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	documented	_	document	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
17	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	8	MOD_mod	true

nodealignment=[12@@p@@prove-01, 9@@d@@something, 17@@explicitanon0@@interrogative, 12@@explicitanon0@@-, 8@@s@@try-01, 7@@d@@we, 3@@s@@create-01, 2@@s@@possible-01, 1@@d@@this, 10@@s@@new-01, 14@@s@@lack-01, 11@@s@@and, 15@@s@@document-01, 16@@d@@research-01]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	6	APP_s	true
3	were	_	be	VBD	O	_	person	_	0	IGNORE	true
4	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	busy	_	busy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_op2	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	MOD_op1	true
8	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
12	serious,	_	serious,	JJ	O	_	and	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	grandmother	_	grandmother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	18	APP_s	true
16	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
19	of	_	of	IN	O	_	thing	_	0	IGNORE	true
20	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	her,	_	her,	NN	O	(d<root> / --LEX--)	and	()	13	APP_s	true
23	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
24	lightness	_	lightness	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	lifted	_	lift	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
27	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
28	spirit	_	spirit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@p@@person, 8@@o@@often, 18@@s@@sense-01, 4@@n@@always, 26@@s@@lift-01, 15@@h@@have-rel-role-91, 24@@p@@lightness, 15@@f@@grandmother, 28@@d@@spirit, 22@@d@@and, 10@@s@@little, 7@@a@@and, 6@@s@@busy-01, 2@@p@@person, 13@@s@@contrast-01, 2@@f@@parent, 2@@h@@have-rel-role-91, 11@@s@@too, 20@@d@@peace, 5@@s@@too]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	1892,	_name_	1892,	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
4	seeing	_	see	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_op1	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	success	_	success	NN	O	(d<root> / --LEX--)	succeed-01	()	4	APP_s	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	classmate,	_	classmate,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
10	Kaho_Tanabe,	_name_	Tanabe,	NNP	O	_	_NAME_	_	0	IGNORE	true
11	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
12	wrote	_	write	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
13	a	_	a	DT	O	_	include-91	_	0	IGNORE	true
14	novel,	_	novel,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	Higuchi	_name_	Higuchi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
16	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	become	_	become	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
19	a	_	a	DT	O	_	person	_	0	IGNORE	true
20	novelist	_	novelist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
22	support	_	support	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
23	her	_	she	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
24	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[15@@p@@person, 15@@n@@_NAME_, 22@@s@@support-01, 24@@d@@family, 4@@s@@see-01, 6@@d@@succeed-01, 3@@w@@after, 18@@s@@become-01, 20@@d@@novelist, 16@@c@@decide-01, 12@@s@@write-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	electronic	_	electronic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	units	_	unit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	sold	_	sell	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
7	emit	_	emit	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	an	_	an	DT	O	_	thing	_	0	IGNORE	true
9	ultrasonic	_	ultrasonic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	beeping	_	beeping	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	sound	_	sound	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	rodents	_	rodent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	hate	_	hate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@sell-01, 4@@d@@unit, 10@@s@@beeping-01, 14@@s@@hate-01, 13@@d@@rodent, 3@@p@@electronic, 7@@s@@emit-01, 9@@p@@ultrasonic, 11@@d@@sound]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
4	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	rich	_	rich	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	MOD_s	true
6	green	_	green	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	1	_	0	IGNORE	true
8	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	sees	_	see	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
11	forest	_	forest	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	moss	_	moss	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	or	_	or	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
16	lichen	_	lichen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
17	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
18	caves:	_	caves:	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	plants	_	plant	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
21	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	19	MOD_s	true
22	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	19	MOD_mod	true
23	grow	_	grow	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
24	in	_	in	IN	O	_	after	_	0	IGNORE	true
25	a	_	a	DT	O	_	-	_	0	IGNORE	true
26	perpetual	_	perpetual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	twilight	_	twilight	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@d@@one, 27@@b@@twilight, 23@@s@@grow-03, 4@@s@@same-01, 6@@r@@green, 18@@p@@caves:, 1@@d@@It, 16@@d@@lichen, 11@@p@@forest, 5@@s@@rich, 13@@b@@or, 26@@p@@perpetual, 19@@b@@plant, 9@@s@@see-01, 12@@d@@moss, 22@@p@@this, 21@@s@@resemble-01]
sentence=1	Most	most	Most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	12	MOD_s	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	rooms	_	room	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
5	at	_	at	IN	O	_	relative-position	_	0	IGNORE	true
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	7	MOD_mod	true
7	hotels	_	hotel	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	APP_s	true
9	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
10	own	_	own	JJ	O	_	$LEMMA$-01	_	0	IGNORE	true
11	bathroom,	_	bathroom,	NNS	O	_	and	_	0	IGNORE	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
14	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	rooms	_	room	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
18	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the_Hafijj_Hotel	_name_	Hotel	NNP	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	20	APP_op1	true
20	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
21	Socotra_Hotel	_name_	Hotel	NNP	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	20	APP_op2	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	24	MOD_s	true
24	share	_	share	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
25	bathrooms	_	bathroom	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[21@@n2@@_NAME_, 17@@d@@room, 8@@s@@have-03, 20@@b@@and, 4@@d@@room, 16@@explicitanon0@@few, 19@@n2@@_NAME_, 19@@f@@facility, 23@@s@@obligate-01, 24@@s@@share-01, 25@@d@@bathroom, 2@@s@@include-91, 6@@p@@this, 12@@s@@contrast-01, 21@@f@@facility, 1@@explicitanon0@@Most, 7@@b@@hotel]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
2	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-through-20	(s(), o())	8	APP_op1	true
3	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	drafts	_	draft	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	2	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
10	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	8	APP_op2	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	editors	_	editor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	16	APP_s	true
13	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-up-04	(s())	16	APP_op1	true
14	it	_	it	PRP	O	_	$LEMMA$	_	8	IGNORE	true
15	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	10	APP_o	true
17	assign	_	assign	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	APP_op2	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	photojournalism	_	photojournalism	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	aspect	_	aspect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	of	_	of	IN	O	_	person	_	0	IGNORE	true
22	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	to	_	to	IN	O	_	thing	_	0	IGNORE	true
24	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	graphic	_	graphic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
26	design	_	design	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o2	true
27	team,	_	team,	NNP	O	_	mean-01	_	0	IGNORE	true
28	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
29	adds	_	add	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-02	(s(), o())	26	MOD_s	true
30	the	_	the	DT	O	_	he	_	0	IGNORE	true
31	visual	_	visual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	aspect	_	aspect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
33	to	_	to	IN	O	_	thing	_	0	IGNORE	true
34	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[9@@n@@then, 12@@e2@@editor, 31@@p@@visual, 1@@d@@We, 32@@d@@aspect, 17@@b@@assign-01, 20@@d@@aspect, 12@@p2@@person, 16@@a@@and, 8@@a@@and, 13@@s@@pick-up-04, 5@@explicitanon0@@number, 10@@s@@have-04, 2@@s@@go-through-20, 29@@t@@add-02, 26@@s@@design-01, 7@@t@@thing, 19@@p@@photojournalism, 7@@d@@draft-01, 25@@d@@graphic]
sentence=1	Black	black	Black	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	Up	up	Up	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
3	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	4	MOD_s	true
4	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	twenty_four_months	_name_	month	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	between	_	0	IGNORE	true
7	shelf	_	shelf	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
10	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	lip	_	lip	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	pencils	_	pencil	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	which	_	which	WDT	O	_	i	_	0	IGNORE	true
14	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	i	(s(), o())	4	MOD_s	true
15	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	real-04	(mod())	17	MOD_mod	true
16	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	real-04	(mod())	17	MOD_mod	true
17	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
18	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@month, 15@@s@@real-04, 16@@s@@real-04, 17@@s@@good-02, 3@@s@@actual-02, 14@@s@@i, 1@@p@@person, 4@@s@@have-03, 7@@p@@shelf, 12@@o@@pencil, 1@@n@@_NAME_, 8@@d@@life, 11@@p@@lip]
sentence=1	Jeff_Rathke,	_name_	Rathke,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
2	the_State_Department	_name_	Department	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
3	Spokesperson,	spokesperson,	Spokesperson,	NNP	O	_	and	_	0	IGNORE	true
4	said,	_	said,	NNP	O	_	and	_	0	IGNORE	true
5	"We	"we	"we	CD	O	_	$LEMMA$	_	0	IGNORE	true
6	urge	_	urge	VBP	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
7	the	_	the	DT	O	_	government-organization	_	0	IGNORE	true
8	governments	_	government	NNS	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	6	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	region	_	region	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	to	_	to	TO	O	_	name	_	0	IGNORE	true
13	work	_	work	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	APP_o2	true
14	together	_	together	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	quickly,	_	quickly,	NNP	O	_	and	_	0	IGNORE	true
16	first	_name_	first	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	13	MOD_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	foremost,	_	foremost,	VBZ	O	_	-	_	0	IGNORE	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	save	_	save	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	APP_o	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	lives	_	life	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	20	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	migrants	_	migrant	NNS	O	(d<root> / --LEX--)	migrate-01	()	22	APP_poss	true
25	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	sea	_	sea	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
29	are	_	be	VBP	O	_	person	_	0	IGNORE	true
30	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
31	need	_	need	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	an	_	an	DT	O	_	1	_	0	IGNORE	true
34	immediate	_	immediate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	rescue	_	rescue	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_o	true
36	effort"	_	effort"	NFP	O	_	and	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@t@@together, 31@@s@@need-01, 34@@p@@immediate, 25@@n@@now, 22@@m@@life, 35@@d@@rescue-01, 8@@g2@@govern-01, 20@@s@@save-02, 8@@g@@government-organization, 16@@p@@1, 11@@d@@region, 6@@t@@urge-01, 13@@c@@work-01, 2@@n@@_NAME_, 27@@b@@sea, 24@@d@@migrate-01, 2@@g@@government-organization]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	5	APP_op1	true
3	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	at	_	at	IN	O	_	then	_	0	IGNORE	true
8	Renata,	_name_	renata,	NN	O	_	_NAME_	_	0	IGNORE	true
9	who	_	who	WP	O	_	name	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	smiling,	_	smiling,	NNP	O	_	mean-01	_	0	IGNORE	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	14	MOD_mod	true
14	submits	_	submit	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_op2	true
15	uncomprehendingly	_	uncomprehendingly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	sheepish	(s())	14	MOD_s	true
16	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[13@@n@@final, 14@@d@@submit-01, 15@@s@@sheepish, 2@@s@@look-01, 1@@d@@She, 5@@a@@and, 6@@n@@then]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	welcomed	_	welcome	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_op1	true
3	Albania's	_name_	Albania's	NNP	O	_	_NAME_	_	0	IGNORE	true
4	contribution	_	contribution	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	contribute-01	(s(), o())	2	APP_o	true
5	to	_	to	IN	O	_	thing	_	0	IGNORE	true
6	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	7	MOD_mod	true
7	stability	_	stability	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
9	cooperation	_	cooperation	NN	O	(d<root> / --LEX--)	cooperate-01	()	8	APP_op2	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	committed	_	commit	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	10	APP_op2	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	assess	_	assess	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	progress	_	progress	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
17	at	_	at	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	NATO	_name_	NATO	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
21	summit,	_	summit,	NNP	O	_	and	_	0	IGNORE	true
22	which	_	which	WDT	O	_	i	_	0	IGNORE	true
23	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
24	hopefully	_	hopefully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	hope-01	(s())	25	MOD_s	true
25	mark	_	mark	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
26	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
27	start	_	start	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_o	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	negotiations	_	negotiation	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	negotiate-01	(s())	27	APP_s	true
30	for	_	for	IN	O	_	and	_	0	IGNORE	true
31	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	membership	_	membership	NN	O	(h<root> / have-org-role-91  :ARG1 (o<s>)  :ARG2 (c3 / --LEX--))	$LEMMA$	(s())	29	APP_s	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	alliance	_	alliance	NN	O	(d<root> / --LEX--)	ally-01	()	33	APP_s	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@s@@hope-01, 33@@c3@@membership, 29@@s@@negotiate-01, 19@@p@@next, 13@@s@@assess-01, 11@@o@@commit-01, 10@@a@@and, 20@@n@@_NAME_, 6@@p@@region, 20@@m@@military, 4@@s@@contribute-01, 33@@h@@have-org-role-91, 9@@d@@cooperate-01, 1@@d@@It, 7@@d@@stability, 2@@c@@welcome-01, 16@@s@@progress-01, 8@@a@@and, 27@@s@@start-01, 25@@s@@mark-01, 36@@d@@ally-01, 15@@p@@further, 32@@p@@full]
sentence=1	For	for	for	IN	O	_	name	_	0	IGNORE	true
2	example,	_	example,	NNS	O	_	and	_	0	IGNORE	true
3	the	_	the	DT	O	_	name	_	0	IGNORE	true
4	name	_	name	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	APP_o	true
5	Kusiilay_1	_name_	1	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
6	‘the	_	‘the	NN	O	_	_NAME_	_	0	IGNORE	true
7	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	of	_	of	IN	O	_	name	_	0	IGNORE	true
9	Essil’,	_name_	Essil’,	NNP	O	_	_NAME_	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	name	_	name	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	given	_	give	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o	true
14	by	_	by	IN	O	_	name	_	0	IGNORE	true
15	speakers	_	speaker	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	read-01	(s())	13	APP_s	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	Kujireray	_name_	Kujireray	NNP	O	(d<root> / --LEX--)	_NAME_	()	15	APP_s	true
18	to	_	to	IN	O	_	name	_	0	IGNORE	true
19	the	_	the	DT	O	_	name	_	0	IGNORE	true
20	Eegimaa	_name_	Eegimaa	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_o2	true
21	language,	_	language,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
22	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_o	true
23	Essil,	_name_	essil,	CD	O	_	thing	_	0	IGNORE	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
26	Bajjat	_name_	Bajjat	NNP	O	(i<root> / island  :name (n / --LEX--))	_NAME_	()	29	APP_s	true
27	was	_	be	VBD	O	_	person	_	0	IGNORE	true
28	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
29	district,	_	district,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	12	MOD_o	true
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
31	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
32	village	_	village	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
33	which	_	which	WDT	O	_	i	_	0	IGNORE	true
34	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
35	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
36	border	_	border	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	32	MOD_s	true
37	with	_	with	IN	O	_	-	_	0	IGNORE	true
38	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
39	village	_	village	NN	O	_	$LEMMA$	_	0	IGNORE	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[29@@s@@and, 12@@s@@name-01, 36@@s@@border-01, 5@@p@@1, 26@@n@@_NAME_, 7@@d@@language, 26@@i@@island, 4@@s@@name, 32@@d@@village, 17@@d@@_NAME_, 13@@b@@give-01, 15@@p@@person, 20@@d@@_NAME_, 15@@w@@read-01, 22@@s@@cause-01]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	earlier_this_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	5	MOD_mod	true
3	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	4	MOD_mod	true
4	shirts	_	shirt	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	to	_	to	TO	O	_	and	_	0	IGNORE	true
7	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-09	(s(), o())	5	APP_s	true
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	said,	_	said,	NNP	O	_	and	_	0	IGNORE	true
11	"Poet	"poet	"Poet	''	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
12	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
13	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	Know"	know"	know"	VBP	O	_	and	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@start-01, 1@@n@@then, 11@@n@@_NAME_, 3@@p@@this, 7@@s@@come-out-09, 13@@d@@We, 12@@s@@say-01, 4@@d@@shirt, 2@@n@@_NAME_, 11@@p@@person]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	product	_	product	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
5	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Angelic	angelic	Angelic	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	Clear	clear	Clear	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	10	MOD_s	true
9	Coarse	coarse	Coarse	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	Jelly	jelly	Jelly	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	19	APP_op1	true
11	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
12	aloe	_	aloe	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	plus	_	plus	CC	O	_	add-02	_	0	IGNORE	true
14	rosemary,	_	rosemary,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	it's	_	it's	PRP$	O	_	and	_	0	IGNORE	true
17	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
18	curl-defining	_	curl-defining	NN	O	(d<root> / --LEX--)	philander-01	()	19	APP_op2	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	1	APP_s	true
20	light-to-medium	_	light-to-medium	NNP	O	(c<root> / company  :name (n / --LEX--))	$LEMMA$	()	19	APP_op3	true
21	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	jelly,	_	jelly,	NNP	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
24	it's	_	it's	PRP$	O	_	thing	_	0	IGNORE	true
25	enriched	_	enrich	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	19	APP_op4	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	aloe	_	aloe	NN	O	_	$LEMMA$	_	0	IGNORE	true
28	vera	_	vera	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
29	juice,	_	juice,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
32	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	25	MOD_s	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@s@@amaze-01, 21@@p@@whole, 4@@d@@product, 20@@n@@light-to-medium, 18@@d@@philander-01, 28@@d@@vera, 8@@s@@Clear-06, 20@@c@@company, 1@@s@@cause-01, 19@@a@@and, 9@@p@@Coarse, 25@@s@@enrich-01, 12@@p@@aloe, 10@@r@@Jelly, 7@@p@@Angelic, 3@@p@@next]
sentence=1	Most	most	Most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	versions	_	version	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	in	_	in	IN	O	_	name	_	0	IGNORE	true
4	English	_name_	English	NNP	O	(l<root> / language  :name (n / --LEX--)  :medium-of (t<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	The_Chemical_Wedding_of_Christian_Rosencreutz,	_name_	rosencreutz,	CD	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	suggests	_	suggest	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	(and	_	(and	NNP	O	_	cause-01	_	0	IGNORE	true
11	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	14	APP_s	true
13	who’ve	_	who’ve	NNP	O	_	cause-01	_	0	IGNORE	true
14	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	suppose)	_	suppose)	VBD	O	_	thing	_	0	IGNORE	true
18	that	_	that	IN	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	wedding	_	wedding	NN	O	(d<root> / --LEX--)	marry-01	()	22	APP_dom	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	Christian’s	christian’s	Christian’s	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	_NAME_	(dom())	9	APP_o	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@marry-01, 2@@d@@version, 6@@s@@call-01, 22@@r@@_NAME_, 11@@explicitanon0@@most, 1@@p@@Most, 4@@n@@_NAME_, 4@@l@@language, 14@@s@@hear-01, 12@@d@@person, 9@@s@@suggest-01]
sentence=1	By	by	by	IN	O	_	cause-01	_	0	IGNORE	true
2	"sample	_	"sample	XX	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
3	return"	_	return"	NFP	O	_	and	_	0	IGNORE	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	course	_	course	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	of-$LEMMA$	(mod())	7	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	mean	_	mean	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
9	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	brings	_	bring	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
13	extraterrestrial	_	extraterrestrial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@d@@material, 12@@a@@back, 2@@d@@"sample, 9@@d@@mission, 5@@p@@of-course, 11@@s@@bring-01, 6@@d@@i, 7@@b@@mean-01, 13@@p@@extraterrestrial]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
3	earlier,	_	earlier,	NNP	O	_	-	_	0	IGNORE	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	nondemocratic	_	nondemocratic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	form	_	form	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	government	_	government	NN	O	(g<root> / government-organization  :mod-of (p<mod>)  :ARG0-of (g2 / --LEX--))	govern-01	(mod())	6	MOD_mod	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	oligarchy,	_	oligarchy,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	6	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	which	_	which	WDT	O	_	contrast-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	handful	_	handful	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	elite	_	elite	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	members	_	member	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	society,	_	society,	NNS	O	_	include-91	_	0	IGNORE	true
20	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	those	_	those	DT	O	_	person	_	0	IGNORE	true
22	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
23	belong	_	belong	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
24	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	a	_	a	DT	O	_	person	_	0	IGNORE	true
26	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	political	_	political	JJ	O	(d<root> / --LEX--)	politics	()	23	APP_o	true
28	party,	_	party,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
29	hold	_	hold	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_dom	true
30	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	32	MOD_mod	true
32	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
33	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[14@@explicitanon0@@handful, 10@@p@@and, 4@@p@@another, 2@@s@@discuss-01, 23@@s@@belong-01, 6@@r@@form, 26@@p@@particular, 30@@p@@all, 27@@d@@politics, 20@@o@@often, 31@@p@@politics, 8@@g2@@govern-01, 29@@s@@hold-01, 8@@g@@government-organization, 16@@p@@elite, 32@@d@@power, 17@@d@@member, 5@@p@@nondemocratic]
sentence=1	The	the	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
2	Ethnologue	_name_	Ethnologue	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
3	language	_	language	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	codes	_	code	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
6	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	language	_	language	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	varieties	_	variety	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	9	MOD_s	true
12	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@p@@language, 2@@n@@_NAME_, 9@@i@@variety, 8@@p@@language, 11@@s@@have-03, 4@@d@@code, 6@@s@@provide-01]
sentence=1	'Vogel'	'vogel'	'Vogel'	NNP	O	_	i	_	0	IGNORE	true
2	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
3	from	_	from	IN	O	_	thing	_	0	IGNORE	true
4	German,	german,	german,	CD	O	(d<root> / --LEX--)	_NAME_	()	2	APP_s	true
5	which	_	which	WDT	O	_	i	_	0	IGNORE	true
6	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	bir	_	bir	NN	O	(d<root> / --LEX--)	$FORM$	()	6	APP_o	true
8	d	_	d	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@d@@bir, 2@@s@@come-03, 4@@d@@_NAME_, 6@@s@@mean-01]
sentence=1	For	for	for	IN	O	_	infer-01	_	0	IGNORE	true
2	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	13	MOD_mod	true
3	of	_	of	IN	O	(p<root> / person  :ARG1-of (p2 / --LEX--  :ARG2 (g<s>)))	include-91	(s())	2	MOD_s	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
5	who	_	who	WP	O	_	i	_	0	IGNORE	true
6	hadn't	_	hadn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
7	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	watched	_	watch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
9	that	_	that	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
10	video,	_	video,	NNS	O	_	i	_	0	IGNORE	true
11	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
12	gonna	_	gonna	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	i	(s(), o())	13	MOD_s	true
13	link	_	link	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
19	that	_	that	IN	O	_	person	_	0	IGNORE	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
21	can	_	can	MD	O	(g<root> / --LEX--  :ARG1 (a<o>)  :purpose-of (f<mod>))	possible-01	(mod(), o(s()))	13	MOD_mod	true
22	watch	_	watch	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	APP_o	true
23	it	_	it	PRP	O	_	i	_	0	IGNORE	true
24	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[22@@s@@watch-01, 7@@n@@already, 4@@d@@you, 15@@d@@video, 2@@p@@that, 21@@g@@possible-01, 3@@p@@person, 20@@d@@you, 12@@s@@i, 17@@b@@here, 13@@s@@link-01, 3@@p2@@include-91, 8@@s@@watch-01, 6@@explicitanon0@@-, 14@@p@@that, 16@@p@@right, 9@@p@@that]
sentence=1	Next	next	next	RB	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
2	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
5	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	tall	_	tall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	wrought-iron	_	wrought-iron	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	candle	_	candle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	holder	_	holder	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
11	—	_	—	,	O	_	resemble-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	either	_	either	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	end	_	end	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$-01	(poss())	15	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	altar	_	altar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_poss	true
22	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[9@@d@@candle, 10@@s@@holder, 1@@b@@next, 17@@p@@either, 15@@s@@stand-01, 7@@p@@tall, 18@@h@@end-01, 8@@p@@wrought-iron, 13@@p@@kind, 21@@d@@altar, 4@@d@@door]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	love	_	love	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_op1	true
3	them	_	they	PRP	O	_	$LEMMA$	_	11	IGNORE	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_s	true
5	they	_	they	PRP	O	_	$LEMMA$	_	11	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	10	MOD_mod	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	10	MOD_s	true
10	size	_	size	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op2	true
11	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
12	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
13	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	APP_s	true
14	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	16	MOD_mod	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	pairs	_	pair	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	Vans	_name_	van	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	that	_	that	WDT	O	_	name	_	0	IGNORE	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	size,	_	size,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
23	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	11	APP_o	true
24	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
25	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	24	MOD_s	true
26	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	11	MOD_mod	true
27	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	like	_	like	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	resemble-01	(mod())	30	MOD_mod	true
30	messed	_	mess	VBN	O	(d<root> / --LEX--)	$LEMMA$-up-02	()	32	APP_op1	true
31	up	_	up	RP	O	_	multi-sentence	_	0	IGNORE	true
32	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
33	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op2	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@love-01, 1@@d@@i, 7@@p@@definite, 29@@p@@resemble-01, 4@@a@@and, 18@@g@@van, 10@@d@@size, 33@@d@@something, 25@@s@@include-91, 14@@explicitanon0@@2, 26@@p@@this, 32@@a@@or, 21@@p@@this, 24@@explicitanon0@@one, 15@@p@@other, 22@@p@@size,, 13@@s@@have-03, 9@@s@@right-06, 30@@d@@mess-up-02, 11@@s@@cause-01, 16@@d@@pair, 23@@s@@contrast-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	start	_	start	VBP	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	6	APP_op1	true
3	with	_	with	IN	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	headline	_	headline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
7	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	flesh	_	flesh	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-02	(s())	6	APP_op2	true
9	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	story,	_	story,	NNS	O	_	resemble-01	_	0	IGNORE	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	opposed	_	oppose	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
14	to	_	to	IN	O	_	instead-of-91	_	0	IGNORE	true
15	The	the	the	DT	O	_	instead-of-91	_	0	IGNORE	true
16	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	22	APP_op2	true
17	Times,	_name_	times,	CD	O	_	_NAME_	_	0	IGNORE	true
18	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
19	writes	_	write	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	issue	_	issue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
23	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	16	MOD_s	true
25	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
26	headline	_	headline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	editor	_	editor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
29	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	24	MOD_mod	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	snappy	_	snappy	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@p@@headline, 19@@s@@write-01, 29@@s@@make-02, 5@@d@@headline, 31@@d@@snappy, 24@@s@@have-03, 27@@d@@editor, 23@@n@@then, 22@@a@@and, 2@@t@@start-01, 16@@c@@city, 8@@s@@flesh-out-02, 21@@d@@issue, 7@@n@@then, 16@@n@@_NAME_, 1@@d@@We, 6@@a@@and]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	before	_	before	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	tall	_	tall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	desk	_	desk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	red-headed	_	red-headed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-00	(s())	0	ROOT	true
11	.	_	.	.	O	_	will-02	_	0	IGNORE	true

nodealignment=[10@@s@@red-headed-00, 2@@d@@girl, 4@@s@@stand-01, 5@@b@@before, 7@@p@@tall, 8@@d@@desk]
sentence=1	Around	around	around	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
4	time,	_	time,	NNP	O	_	name	_	0	IGNORE	true
5	Fillmore's	fillmore's	Fillmore's	NNP	O	_	_NAME_	_	0	IGNORE	true
6	Santa_Cruz_Lectures	_name_	Lectures	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_s	true
7	on	_	on	IN	O	_	and	_	0	IGNORE	true
8	Deixis,	deixis,	deixis,	NN	O	_	_NAME_	_	0	IGNORE	true
9	delivered	_	deliver	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	in	_	in	IN	O	_	and	_	0	IGNORE	true
11	1971	_name_	1971	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	9	MOD_mod	true
12	and	_	and	CC	O	_	$LEMMA$	_	16	IGNORE	true
13	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	1975,	_	1975,	NNS	O	_	and	_	0	IGNORE	true
16	contributed	_	contribute	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	establishing	_	establish	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	field	_	field	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	linguistic	_	linguistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	pragmatics,	_	pragmatics,	NNP	O	_	thing	_	0	IGNORE	true
24	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
25	studies	_	study	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	relationship	_	relationship	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	relation-03	(s(), o())	25	APP_o	true
28	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	linguistic	_	linguistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	context	_	context	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	utterance.	_	utterance.	NN	O	_	_NAME_	_	0	IGNORE	true
36	[7]	_	[7]	XX	O	_	$LEMMA$	_	0	IGNORE	true
37	[8	_	[8	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
38	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[29@@p@@linguistic, 33@@d@@context, 3@@s@@same-01, 20@@d@@field, 6@@d@@_NAME_, 11@@explicitanon0@@_NUMBER_, 27@@t@@relation-03, 16@@t@@contribute-01, 9@@s@@deliver-01, 25@@s@@study-01, 11@@d@@date-entity, 13@@s@@publish-01, 30@@d@@form, 18@@s@@establish-01, 22@@p@@linguistic, 37@@p@@_NUMBER_, 1@@p@@around]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	stood,	_	stood,	NNS	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
4	unable	_	unable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_op2	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	keep	_	keep	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	4	APP_s	true
7	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
8	staring	_	stare	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_o	true
9	at	_	at	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	stranger,	_	stranger,	NNS	O	(d<root> / --LEX--)	person	()	3	APP_op1	true
12	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
13	faced	_	face	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	awkwardly,	_	awkwardly,	NNP	O	_	and	_	0	IGNORE	true
16	half-smiling,	_	half-smiling,	XX	O	_	and	_	0	IGNORE	true
17	taller	_	tall	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	tall	(mod())	3	MOD_mod	true
18	than	_	than	IN	O	_	more	_	0	IGNORE	true
19	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	man	_	man	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@p@@man, 4@@s@@possible-01, 19@@p@@any, 21@@b@@there, 17@@s@@tall, 11@@d@@person, 6@@c@@keep-02, 8@@s@@stare-01, 13@@s@@face-01, 2@@d@@we, 3@@a@@and, 1@@n@@then]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	true
3	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
4	approached	_	approach	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	by	_	by	IN	O	_	and	_	0	IGNORE	true
6	–	_	–	:	O	_	and	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	say	_	say	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
11	–	_	–	:	O	_	include-91	_	0	IGNORE	true
12	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
13	least	_	least	RBS	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	at-$LEMMA$	(op1(), mod())	16	MOD_mod	true
14	three	_	three	CD	O	(d<root> / --LEX--)	3	()	13	APP_op1	true
15	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	16	MOD_s	true
16	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
19	me	_	I	PRP	O	_	say-01	_	0	IGNORE	true
20	if	_	if	IN	O	_	i	_	0	IGNORE	true
21	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	did	_	do	VBD	O	_	person	_	0	IGNORE	true
23	bird	_	bird	VB	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	watching	_	watch	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_o	true
25	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	24	MOD_s	true
26	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	seriously	_	seriously	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	serious-01	(s())	24	MOD_s	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@s@@at-least, 14@@d@@3, 15@@s@@differ-02, 23@@d@@bird, 24@@s@@watch-01, 4@@s@@approach-01, 10@@s@@say-01, 2@@d@@i, 16@@d@@person, 8@@s@@want-01, 1@@s@@contrast-01, 26@@s@@very, 25@@s@@resemble-01, 27@@s@@serious-01, 18@@s@@ask-01]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
2	that’s	_	that’s	FW	O	_	expressive	_	0	IGNORE	true
3	kind	_	kind	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	6	MOD_mod	true
4	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	unending	_	unending	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	end-01	(s())	7	MOD_s	true
7	war,	_	war,	NN	O	(d<root> / --LEX--)	multi-sentence	()	0	ROOT	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_s	true
9	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	want	_	want	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
12	NATO	_name_	NATO	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
13	to	_	to	IN	O	_	multi-sentence	_	0	IGNORE	true
14	exist,	_	exist,	NNP	O	_	interrogative	_	0	IGNORE	true
15	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	want	_	want	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
18	there	_	there	RB	O	_	interrogative	_	0	IGNORE	true
19	to	_	to	TO	O	_	interrogative	_	0	IGNORE	true
20	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
22	Western	western	western	JJ	O	(w<root> / world-region  :name (n / --LEX--)  :mod-of (c2<mod>))	_NAME_	(mod())	24	MOD_mod	true
23	military	_	military	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	alliance	_	alliance	NN	O	(d<root> / --LEX--)	ally-01	()	17	APP_o	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	carries	_	carry	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	24	MOD_s	true
27	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
28	these	_	these	DT	O	(d<root> / --LEX--)	this	()	26	APP_o	true
29	activities,	_	activities,	NNS	O	_	and	_	0	IGNORE	true
30	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
31	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
32	pretense	_	pretense	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
33	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
34	defense	_	defense	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	defend-01	(mod())	32	MOD_mod	true
35	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	17	MOD_mod	true

nodealignment=[12@@n@@_NAME_, 11@@s@@want-01, 26@@s@@carry-out-03, 22@@n@@_NAME_, 3@@s@@kind-of, 10@@d@@we, 1@@p@@well, 12@@m@@military, 32@@t@@pretense-01, 8@@s@@cause-01, 34@@p@@defend-01, 24@@d@@ally-01, 6@@s@@end-01, 7@@d@@multi-sentence, 28@@d@@this, 31@@explicitanon0@@-, 35@@explicitanon0@@interrogative, 17@@s@@want-01, 23@@p@@military, 22@@w@@world-region]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
3	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
4	be	_	be	VB	O	_	person	_	0	IGNORE	true
5	aware,	_	aware,	NNP	O	_	and	_	0	IGNORE	true
6	the_ICT_Authority	_name_	Authority	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	rolled	_	roll	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-out-02	(o2(), s(), o())	0	ROOT	true
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	National	_name_	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	13	MOD_mod	true
11	ICT	ict	ICT	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	Master	master	Master	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	plan	_	plan	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	will	_	will	MD	O	_	thing	_	0	IGNORE	true
16	set	_	set	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	pace	_	pace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	progression	_	progression	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	progress-01	(mod(), s())	18	MOD_mod	true
21	of	_	of	IN	O	_	thing	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	ICT	_name_	ICT	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the_next_five_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	20	MOD_mod	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@d@@pace, 7@@b@@roll-out-02, 10@@p@@nation, 3@@s@@possible-01, 6@@n@@_NAME_, 2@@d@@you, 20@@i@@progress-01, 23@@d@@country, 6@@g@@government-organization, 11@@p@@ICT, 13@@d@@plan-01, 16@@s@@set-02, 27@@b@@_NAME_, 12@@p@@Master, 25@@p@@ICT]
sentence=1	For	for	for	IN	O	_	have-purpose-91	_	0	IGNORE	true
2	something	_	something	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	lasts	_	last	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	hours,	_	hours,	NNS	O	_	you	_	0	IGNORE	true
6	go	_	go	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	to	_	to	IN	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	method	_	method	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	(which	_	(which	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	lot	_	lot	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	easier	_	easy	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	easy-05	(s())	25	APP_s	true
16	to	_	to	TO	O	_	more	_	0	IGNORE	true
17	facilitate	_	facilitate	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
18	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
19	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
20	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
21	access	_	access	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
22	to	_	to	IN	O	_	-	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	laboratory,	_	laboratory,	NNS	O	_	_NAME_	_	0	IGNORE	true
25	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	APP_o	true
26	it's	_	it's	PRP	O	_	have-concession-91	_	0	IGNORE	true
27	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	worth	_	worth	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	25	APP_o	true
29	mentioning)	_	mentioning)	NNS	O	_	mean-01	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@p@@method, 27@@p@@still, 21@@o@@access-01, 15@@m@@more, 6@@g@@go-01, 4@@s@@last-01, 28@@d@@worth-02, 19@@d@@you, 15@@b@@easy-05, 2@@o@@something, 9@@p@@next, 25@@s@@contrast-01, 14@@s@@lot, 17@@d@@facilitate-01]
sentence=1	That	that	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
3	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	recommend-01	(s(), o())	0	ROOT	true
4	be	_	be	VB	O	(d<root> / --LEX--)	person	()	3	APP_s	true
5	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
6	leader	_	leader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	lead-02	(s(), o())	3	APP_o	true
7	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	Senate	_name_	Senate	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	11	APP_poss	true
11	majority	_	majority	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_o	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
14	awesome	_	awesome	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	responsibility—awesome	_	responsibility—awesome	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	Biblical	biblical	biblical	JJ	O	(b<root> / book  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	15	MOD_mod	true
19	sense,	_	sense,	NNP	O	_	contrast-01	_	0	IGNORE	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
22	angels	_	angel	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
23	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	true
24	tremble	_	tremble	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
25	in	_	in	IN	O	_	multi-sentence	_	0	IGNORE	true
26	awe	_	awe	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
27	before	_	before	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_o	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@lead-02, 14@@p@@awesome, 15@@p@@responsibility—awesome, 18@@n@@_NAME_, 22@@p@@angel, 3@@s@@recommend-01, 18@@b@@book, 4@@d@@person, 28@@n@@_NAME_, 26@@p@@awe-01, 28@@p@@person, 9@@s@@new-01, 24@@s@@tremble-01, 8@@p@@this, 10@@n@@_NAME_, 11@@m@@majority, 10@@g@@government-organization, 2@@d@@i]
sentence=1	Nida	_name_	Nida	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	componential	_	componential	JJ	O	(d<root> / --LEX--)	military	()	6	APP_s	true
6	analysis	_	analysis	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	analyze-01	(s())	3	APP_o	true
7	technique,	_	technique,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
9	split	_	split	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_s	true
10	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	into	_	into	IN	O	_	-	_	0	IGNORE	true
12	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	components	_	component	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	help	_	help	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
16	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
17	equivalence	_	equivalence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	16	APP_s	true
18	in	_	in	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	possible-01	(s(), o())	3	MOD_s	true
19	translation	_	translation	NN	O	(d<root> / --LEX--)	translate-01	()	17	APP_s	true
20	(e.g.	_	(e.g.	.	O	_	mean-01	_	0	IGNORE	true
21	"bachelor"	_	"bachelor"	XX	O	_	hyperlink-91	_	0	IGNORE	true
22	=	_	=	SYM	O	_	mean-01	_	0	IGNORE	true
23	male	_	male	JJ	O	(d<root> / --LEX--)	$FORM$	()	18	APP_o	true
24	+	_	+	CC	O	_	and	_	0	IGNORE	true
25	unmarried)	_	unmarried)	NN	O	_	and	_	0	IGNORE	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@military, 9@@b@@split-01, 17@@s@@equal-01, 13@@d@@component, 18@@s@@possible-01, 1@@p@@person, 2@@p@@also, 1@@n@@_NAME_, 3@@s@@develop-02, 23@@d@@male, 16@@s@@determine-01, 19@@d@@translate-01, 15@@i@@help-01, 10@@d@@word, 6@@s@@analyze-01]
sentence=1	History	history	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	will	_	will	MD	O	_	person	_	0	IGNORE	true
3	judge	_	judge	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	poorly	_	poorly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	poor	(mod())	3	MOD_mod	true
5	those	_	those	DT	O	_	that	_	0	IGNORE	true
6	who	_	who	WP	O	_	person	_	0	IGNORE	true
7	choose	_	choose	VBP	O	(s<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (l<o>)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), o(s()))	13	MOD_s	true
8	fear	_	fear	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
11	party	_	party	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	(d<root> / --LEX--)	person	()	3	APP_o	true
14	courage	_	courage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	do	_	do	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	14	MOD_mod	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	right	_	right	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@t@@poor, 13@@d@@person, 18@@s@@right-02, 19@@d@@thing, 7@@s@@choose-01, 8@@s@@fear-01, 11@@d@@party, 14@@d@@courage, 3@@s@@judge-01, 16@@i@@do-02, 1@@d@@history]
sentence=1	On	on	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	this_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	true
5	thoughts	_	thought	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	think-01	(s())	6	APP_s	true
6	go	_	go	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	to	_	to	IN	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	architect	_	architect	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	31	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	freedom,	_	freedom,	NNP	O	_	mean-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Father	father	Father	NNP	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	24	MOD_s	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	Nation,	nation,	nation,	CD	O	_	and	_	0	IGNORE	true
18	who,	_	who,	IN	O	_	person	_	0	IGNORE	true
19	embodying	_	embody	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	spirit	_	spirit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	of	_	of	IN	O	_	person	_	0	IGNORE	true
24	India,	_name_	india,	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	include-91	(mod())	6	MOD_mod	true
25	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	APP_op1	true
26	aloft	_	aloft	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	torch	_	torch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	freedom	_	freedom	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	free-04	(mod())	28	MOD_mod	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	APP_o	true
32	lighted	_	light	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	31	APP_op2	true
33	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
34	the	_	the	DT	O	_	he	_	0	IGNORE	true
35	darkness	_	darkness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
37	surrounded	_	surround	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	MOD_s	true
38	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p2@@person, 4@@explicitanon0@@1, 31@@a@@and, 22@@d@@spirit, 6@@s@@go-01, 21@@p@@old, 19@@s@@embody-01, 3@@d@@our, 14@@p@@person, 24@@p@@include-91, 14@@s@@Father, 5@@s@@think-01, 37@@s@@surround-01, 26@@p@@aloft, 32@@s@@light-up-02, 25@@s@@hold-01, 11@@p@@this, 4@@o@@ordinal-entity, 28@@d@@torch, 2@@n@@day, 9@@e2@@architect, 14@@h@@have-rel-role-91, 35@@d@@darkness, 30@@p@@free-04]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	effervescent	_	effervescent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	tablets	_	tablet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	turned	_	turn	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	4	MOD_s	true
7	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	he	(s(), o())	2	MOD_s	true
8	canteen	_	canteen	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	drinking	_	drinking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	into	_	into	IN	O	_	-	_	0	IGNORE	true
12	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
15	pink	_	pink	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	16	MOD_s	true
16	mixture	_	mixture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
17	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	dentist	_	dentist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	rinse	_	rinse	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
24	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	mouth	_	mouth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
27	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
28	scraping	_	scrape	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op1	true
29	around	_	around	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	inside,	_	inside,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
32	guaranteed	_	guarantee	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
33	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
34	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	32	APP_s	true
35	the	_	the	DT	O	_	he	_	0	IGNORE	true
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	kids	_	kid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
38	splutter	_	splutter	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	34	APP_o	true
40	spit	_	spit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	APP_op2	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
43	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	taste	_	taste	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	47	APP_s	true
46	slowly	_	slowly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	slow-05	(s())	47	MOD_s	true
47	percolated	_	percolate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_op1	true
48	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	34	APP_s	true
50	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_op2	true
51	the	_	the	DT	O	_	he	_	0	IGNORE	true
52	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_s	true
53	of	_	of	IN	O	_	-1	_	0	IGNORE	true
54	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
55	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	checkup	_	checkup	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
57	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[40@@s@@spit-01, 37@@d@@kid, 32@@s@@guarantee-01, 3@@p@@effervescent, 7@@s@@he, 38@@s@@splutter-01, 49@@a@@and, 46@@s@@slow-05, 50@@s@@meet-01, 55@@p@@last, 52@@d@@memory, 47@@s@@percolate-01, 1@@d@@He, 45@@d@@taste-01, 56@@p@@checkup, 34@@s@@make-02, 36@@p@@other, 4@@d@@tablet, 6@@b@@turn-02, 9@@p@@drinking-01, 13@@p@@exact, 28@@d@@scrape-01, 21@@d@@you, 15@@s@@pink-03, 20@@s@@give-01, 19@@d@@dentist, 27@@w@@after, 23@@s@@rinse-01, 2@@s@@have-03, 39@@a@@and, 14@@s@@same-01, 25@@d@@mouth, 10@@d@@water, 16@@d@@mixture, 8@@p@@canteen]
sentence=1	Two	two	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	5	MOD_mod	true
2	bright	_	bright	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	red	_	red	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
4	oval	_	oval	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	spheres	_	sphere	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	were	_	be	VBD	O	_	person	_	0	IGNORE	true
7	set	_	set	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	an	_	an	DT	O	_	high-02	_	0	IGNORE	true
10	eye-level	_	eye-level	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	level	(mod())	11	MOD_mod	true
11	groove	_	groove	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	ran	_	run	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	around,	_	around,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	7	MOD_s	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	“eyes”	_name_	“eyes”	NNP	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
18	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
19	slanted	_	slant	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
20	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
22	menacing	_	menacing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	25	MOD_s	true
23	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
24	intimidating	_	intimidating	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	MOD_s	true
25	scowl	_	scowl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[13@@s@@run-01, 2@@s@@bright-02, 5@@d@@sphere, 4@@p@@oval, 14@@p@@all, 10@@p@@level, 19@@s@@slant-01, 3@@s@@red, 17@@d@@_NAME_, 24@@s@@intimidating-01, 15@@s@@and, 11@@d@@groove, 22@@s@@menacing, 1@@explicitanon0@@2, 25@@d@@scowl, 7@@s@@set-01]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	do	_	do	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	9	MOD_mod	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	payroll	_	payroll	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
6	for	_	for	IN	O	_	and	_	0	IGNORE	true
7	them,	_	them,	NNS	O	_	and	_	0	IGNORE	true
8	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	state	_	state	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	26	APP_op1	true
10	to	_	to	IN	O	_	and	_	0	IGNORE	true
11	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	front,	_	front,	NNPS	O	_	and	_	0	IGNORE	true
14	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	uh,	_	uh,	UH	O	_	and	_	0	IGNORE	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	will	_	will	MD	O	_	i	_	0	IGNORE	true
18	pay	_	pay	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
19	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
20	payroll,	_	payroll,	NNS	O	_	and	_	0	IGNORE	true
21	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
23	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
24	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
25	deductions,	_	deductions,	NNS	O	(d<root> / --LEX--)	mean-01	()	26	APP_op2	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
27	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	employer	_	employer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	employ-01	(s())	30	MOD_s	true
30	contribution,	_	contribution,	NFP	O	(d<root> / --LEX--)	include-91	()	26	APP_op4	true
31	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
32	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	monetary-quantity	(s(), o())	26	MOD_s	true
33	approximately	_	approximately	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
34	twenty-six	_	twenty-six	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op1	true
35	percent,	_	percent,	NNS	O	_	include-91	_	0	IGNORE	true
36	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
38	above	_	above	IN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op3	true
39	the	_	the	DT	O	_	1	_	0	IGNORE	true
40	hourly	_name_	hourly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
41	wage,	_	wage,	NNP	O	_	and	_	0	IGNORE	true
42	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	monetary-quantity	(mod())	26	MOD_mod	true
43	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
44	deducted,	_	deducted,	NNP	O	_	and	_	0	IGNORE	true
45	from	_	from	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	company	(mod())	26	MOD_mod	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	um	_	um	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	49	MOD_mod	true
48	subcontractor's	_	subcontractor's	NFP	O	_	person	_	0	IGNORE	true
49	check	_	check	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_o	true
50	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@s@@approximately, 5@@d@@payroll, 29@@s@@employ-01, 43@@p@@also, 30@@d@@include-91, 32@@s@@monetary-quantity, 34@@d@@twenty-six, 42@@p@@monetary-quantity, 40@@p@@hourly, 45@@p@@company, 47@@p@@_NAME_, 49@@d@@check-01, 27@@n@@then, 18@@d@@pay-01, 38@@d@@above, 25@@d@@mean-01, 9@@b@@state-01, 3@@t@@do-02, 26@@a@@and, 2@@d@@we]
sentence=1	They're	_name_	They're	NNP	O	_	cause-01	_	0	IGNORE	true
2	sending	_	send	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	2	APP_o	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
6	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	problems,	_	problems,	NNS	O	(d<root> / --LEX--)	shit	()	9	APP_s	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
10	they're	_	they're	NNP	O	_	cause-01	_	0	IGNORE	true
11	bringing	_	bring	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	APP_op2	true
12	those	_	those	DT	O	_	that	_	0	IGNORE	true
13	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@send-01, 8@@d@@shit, 5@@s@@have-03, 13@@d@@problem, 9@@a@@and, 11@@b@@bring-01, 3@@d@@person, 6@@explicitanon0@@lot, 15@@d@@us]
sentence=1	By	by	by	IN	O	_	cause-01	_	0	IGNORE	true
2	adopting	_	adopt	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op1	true
3	contemporary	_	contemporary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	legislation	_	legislation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	21	MOD_mod	true
6	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
7	becoming	_	become	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	5	APP_op2	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	party	_	party	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_s	true
10	to	_	to	IN	O	_	thing	_	0	IGNORE	true
11	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
12	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	13	MOD_mod	true
13	adopted	_	adopt	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	instruments	_	instrument	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
16	on	_	on	IN	O	_	and	_	0	IGNORE	true
17	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	rights,	_	rights,	NNP	O	_	and	_	0	IGNORE	true
19	Albania	_name_	Albania	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
20	has	_	have	VBZ	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
21	associated	_	associate	VBN	O	(c<root> / --LEX--  :ARG0 (i<s>  :ARG1-of c)  :ARG2 (m<o2>))	$LEMMA$-01	(o2(), s())	0	ROOT	true
22	itself	_	itself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	are	_	be	VBP	O	_	person	_	0	IGNORE	true
27	enforcing	_	enforce	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
28	a	_	a	DT	O	_	1	_	0	IGNORE	true
29	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	33	MOD_mod	true
32	strategies	_	strategy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op1	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_o	true
34	programmes	_	programme	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
35	focusing	_	focus	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
36	on	_	on	IN	O	_	thing	_	0	IGNORE	true
37	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	38	MOD_s	true
38	population	_	population	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	groups,	_	groups,	NNP	O	_	and	_	0	IGNORE	true
40	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
41	women,	_	women,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
42	children,	_	children,	NNP	O	_	and	_	0	IGNORE	true
43	persons	_	person	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op2	true
44	in	_	in	IN	O	_	i	_	0	IGNORE	true
45	need	_	need	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	43	MOD_s	true
46	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	35	APP_o	true
47	minorities,	_	minorities,	NNP	O	_	and	_	0	IGNORE	true
48	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
49	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op1	true
50	.	_	.	.	O	_	include-91	_	0	IGNORE	true

nodealignment=[29@@explicitanon0@@number, 33@@a@@and, 21@@c@@associate-01, 12@@n@@recent, 5@@a@@and, 15@@d@@instrument, 11@@p@@other, 4@@d@@legislation, 13@@s@@adopt-01, 37@@s@@specific-02, 17@@p@@human, 35@@t@@focus-01, 14@@p@@international, 43@@d@@person, 45@@s@@need-01, 38@@p@@population, 9@@s@@party, 7@@s@@become-01, 3@@p@@contemporary, 40@@p@@especially, 2@@s@@adopt-01, 46@@a@@and, 31@@p@@nation, 49@@d@@other, 19@@n@@_NAME_, 32@@d@@strategy, 27@@s@@enforce-01, 34@@d@@programme, 24@@d@@country, 19@@c@@country]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
3	saying	_	say	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
4	"Taiwan	"taiwan	"Taiwan	NFP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
6	help",	_	help",	VB	O	_	and	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	mean	_	mean	VBP	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	specifically,	_	specifically,	NNP	O	_	mean-01	_	0	IGNORE	true
10	17,	_	17,	NNP	O	(m<root> / --LEX--  :unit-of (a<mod>))	mean-01	(mod())	8	MOD_mod	true
11	18,	_	18,	CD	O	_	mean-01	_	0	IGNORE	true
12	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	availability	_	availability	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	available-02	(s())	8	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	reliable	_	reliable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	rely-01	(mod())	18	MOD_mod	true
18	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	15	APP_s	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	27	APP_s	true
21	from	_	from	IN	O	_	have-03	_	0	IGNORE	true
22	across	_	across	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	sectors,	_	sectors,	NNS	O	_	mean-01	_	0	IGNORE	true
24	across	_	across	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
25	jurisdictions,	_name_	jurisdictions,	NNP	O	_	and	_	0	IGNORE	true
26	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	15	MOD_mod	true
27	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	26	APP_s	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	data	_	datum	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@m@@mean-01, 26@@i@@possible-01, 29@@d@@datum, 18@@d@@data, 1@@p@@just, 4@@c@@company, 7@@d@@we, 3@@b@@say-01, 8@@t@@mean-01, 5@@s@@possible-01, 15@@s@@available-02, 24@@p@@across, 20@@d@@person, 17@@p@@rely-01, 4@@n@@_NAME_, 27@@s@@trust-02, 22@@p@@across]
sentence=1	Every	every	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	joke	_	joke	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	“target,”	_	“target,”	XX	O	_	$LEMMA$	_	0	IGNORE	true
6	which	_	which	WDT	O	_	i	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
8	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	joke	_	joke	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
11	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
12	about	_	about	IN	O	_	thing	_	0	IGNORE	true
13	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@d@@joke-01, 10@@d@@joke-01, 3@@s@@have-03, 1@@p@@every]
sentence=1	2.	_	2.	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	D	(mod())	18	MOD_mod	true
2	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
3	purpose	_	purpose	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-$LEMMA$-91	(s(), o())	18	APP_op1	true
4	of	_	of	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	(d<root> / --LEX--)	person	()	18	APP_op3	true
6	author	_	author	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	7	APP_op2	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	3	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	translator:	_	translator:	CD	O	_	$LEMMA$	_	0	IGNORE	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
13	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	MOD_op1	true
18	content;	_	content;	NNP	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	and	(op2(), op1(), op3())	0	ROOT	true
19	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
20	aim	_	aim	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
21	at	_	at	IN	O	_	say-01	_	0	IGNORE	true
22	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	intelligibility	_	intelligibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	afford-01	(s())	20	APP_s	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	reader	_	reader	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	read-01	()	23	APP_s	true
27	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
28	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	/	_	/	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	may	_	may	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	20	MOD_mod	true
32	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	implications	_	implication	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	imply-01	()	32	APP_s	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	message;	_	message;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
39	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
40	imperative	_	imperative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	purposes	_	purpose	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
42	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
43	aim	_	aim	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	41	MOD_s	true
44	at	_	at	IN	O	_	contrast-01	_	0	IGNORE	true
45	not	_	not	RB	O	_	-	_	0	IGNORE	true
46	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
47	understanding	_	understand	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	MOD_s	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	translation	_	translation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	translate-01	(s())	18	MOD_s	true
50	but	_	but	CC	O	_	contrast-01	_	0	IGNORE	true
51	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
52	at	_	at	IN	O	_	except-01	_	0	IGNORE	true
53	ensuring	_	ensure	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_o	true
54	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	55	MOD_mod	true
55	misunderstanding	_	misunderstanding	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	53	APP_s	true
56	of	_	of	IN	O	_	thing	_	0	IGNORE	true
57	the	_	the	DT	O	_	person	_	0	IGNORE	true
58	translation	_	translation	NN	O	_	i	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@a@@and, 23@@s@@afford-01, 40@@p@@imperative, 41@@o@@purpose, 26@@e2@@read-01, 31@@i@@possible-01, 35@@d@@imply-01, 17@@a@@and, 54@@explicitanon0@@-, 53@@s@@ensure-01, 3@@s@@have-purpose-91, 20@@s@@aim-01, 49@@s@@translate-01, 46@@p@@just, 51@@p@@also, 47@@s@@understand-01, 18@@a@@and, 43@@s@@aim-01, 1@@explicitanon0@@D, 55@@d@@misunderstanding-01, 13@@d@@information, 22@@p@@full, 12@@s@@give-01, 34@@p@@full, 6@@p2@@person, 32@@s@@understand-01, 5@@d@@person, 26@@p2@@person, 16@@d@@form, 6@@e2@@author-01, 35@@t@@thing]
sentence=1	“It’s	“it’s	“it’s	FW	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	an	_	an	DT	O	_	thing	_	0	IGNORE	true
3	implant	_	implant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	will	_	will	MD	O	_	i	_	0	IGNORE	true
6	let	_	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	them	_	they	PRP	O	(d<root> / --LEX--)	person	()	8	APP_s	true
8	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	you	_	you	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
11	are,	_	are,	VBP	O	_	thing	_	0	IGNORE	true
12	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	thing	()	1	APP_s	true
15	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
16	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@s@@“it’s-01, 3@@d@@implant, 14@@d@@thing, 8@@s@@know-01, 10@@b@@you, 7@@d@@person, 6@@s@@let-01, 12@@d@@and]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	end	_	end	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Tsar,	_name_	Tsar,	NNP	O	(d<root> / --LEX--)	person	()	23	APP_op1	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	had	_	have	VBD	O	_	person	_	0	IGNORE	true
11	visited	_	visit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	Gordon	_name_	Gordon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
13	frequently	_	frequently	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	frequent-02	(s())	11	MOD_s	true
14	during	_	during	IN	O	_	i	_	0	IGNORE	true
15	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	illness,	_	illness,	NNS	O	_	and	_	0	IGNORE	true
17	was	_	be	VBD	O	_	person	_	0	IGNORE	true
18	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	when	_	when	WRB	O	_	i	_	0	IGNORE	true
21	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	died,	_	died,	NNP	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
24	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
25	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
26	own	_	own	JJ	O	_	person	_	0	IGNORE	true
27	hands	_	hand	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	closed	_	close	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	23	APP_op2	true
29	his	_	he	PRP$	O	_	i	_	0	IGNORE	true
30	eyes	_	eye	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	28	APP_o	true
31	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[30@@h@@eye, 27@@d@@hand, 11@@s@@visit-01, 23@@a@@and, 12@@p@@person, 13@@s@@frequent-02, 12@@n@@_NAME_, 3@@s@@end-01, 6@@d@@life, 28@@l@@close-01, 8@@d@@person]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	generous	_	generous	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	6	MOD_s	true
4	girl,	_	girl,	NNP	O	_	mean-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	person	_	0	IGNORE	true
6	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
7	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-11	(s(), o())	6	MOD_s	true
9	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	clothes	_	clothe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	abandon,	_	abandon,	NNPS	O	_	and	_	0	IGNORE	true
14	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	was	_	be	VBD	O	_	person	_	0	IGNORE	true
16	remarkably	_	remarkably	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	incredible	(mod())	17	MOD_mod	true
17	close-mouthed	_	close-mouthed	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
18	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[17@@s@@close-mouthed-01, 6@@d@@girl, 20@@d@@thing, 3@@s@@generous-02, 19@@explicitanon0@@some, 8@@s@@take-out-11, 11@@d@@clothe, 16@@s@@incredible]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
3	am	_	be	VBP	O	_	person	_	0	IGNORE	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	proud	_	proud	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	pride-01	(o(s()))	1	APP_op2	true
6	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
7	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	5	APP_o	true
8	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
11	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	Governor	governor	Governor	NNP	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	28	MOD_s	true
13	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	working	_	work	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
17	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
18	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	Washington	_name_	Washington	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	adviser	_	adviser	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	advise-01	(s())	28	MOD_s	true
24	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
26	housing,	_	housing,	.	O	_	have-org-role-91	_	0	IGNORE	true
27	Governor	governor	Governor	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	28	MOD_s	true
28	Dave_Lawrence,	_name_	Lawrence,	NNP	O	(p<root> / person  :name (n / --LEX--))	have-org-role-91	()	1	APP_op1	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	the_State_of_Pennsylvania	_name_	Pennsylvania	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	27	APP_o	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@d@@your, 20@@c@@city, 18@@d@@us, 1@@a@@and, 16@@t@@work-01, 25@@s@@fair-01, 23@@s@@advise-01, 27@@h@@have-org-role-91, 11@@n@@former, 30@@n@@_NAME_, 30@@p@@person, 4@@p@@also, 28@@p@@person, 8@@d@@here, 28@@n@@have-org-role-91, 7@@s@@be-located-at-91, 12@@j@@Governor, 5@@c@@pride-01, 12@@h@@have-org-role-91, 20@@n@@_NAME_, 27@@g@@governor, 2@@d@@i, 15@@n@@now]
sentence=1	Last_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
2	in	_	in	IN	O	_	i	_	0	IGNORE	true
3	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
4	section	_	section	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	at	_	at	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	stadium	_	stadium	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
9	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	banner	_	banner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	Know'	_name_	Know'	NNS	O	_	and	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@We, 9@@s@@have-03, 8@@d@@i, 11@@d@@banner, 13@@s@@read-01, 4@@b@@section, 7@@b@@stadium, 1@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	1	_	0	IGNORE	true
2	interquartile	_	interquartile	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	range	_	range	NN	O	(t<root> / thing  :ARG5-of (r / --LEX--))	$LEMMA$-01	()	6	APP_dom	true
4	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	number	_	number	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
8	indicates	_	indicate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	spread	_	spread	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	middle	_	middle	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
14	half,	_	half,	NNS	O	_	include-91	_	0	IGNORE	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	middle	_	middle	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	50	_	50	CD	O	(p<root> / percentage-entity  :value (explicitanon1 / --LEX--))	_NUMBER_	()	15	APP_op2	true
19	percent	_	percent	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	data	_	datum	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$FORM$	(mod())	15	MOD_mod	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@r@@range-01, 15@@a@@or, 18@@explicitanon1@@_NUMBER_, 2@@p@@interquartile, 17@@p@@middle, 10@@s@@spread-01, 8@@s@@indicate-01, 18@@p@@percentage-entity, 6@@r@@number, 13@@d@@middle, 3@@t@@thing, 22@@s@@data]
sentence=1	Scientists	scientists	scientist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	study	_	study	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
4	cognition	_	cognition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	searching	_	search	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
8	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_mod	true
11	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
13	integrate,	_	integrate,	NNP	O	_	thing	_	0	IGNORE	true
14	organize,	_	organize,	NNP	O	_	thing	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	APP_s	true
16	utilize	_	utilize	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op3	true
17	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	conscious	_	conscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	cognitive	_	cognitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	experiences	_	experience	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op2	true
21	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
22	being	_	be	VBG	O	_	have-manner-91	_	0	IGNORE	true
23	aware	_	aware	JJ	O	(d<root> / --LEX--  :ARG0 (h<s>)  :manner-of (a<mod>))	realize-01	(mod(), s())	6	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	unconscious	_	unconscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_s	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	brains	_	brain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
33	are	_	be	VBP	O	_	person	_	0	IGNORE	true
34	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
35	(for	_	(for	JJ	O	_	$LEMMA$	_	0	IGNORE	true
36	example,	_	example,	NNP	O	_	say-01	_	0	IGNORE	true
37	Kahneman,	kahneman,	Kahneman,	NNP	O	_	_NAME_	_	0	IGNORE	true
38	2011)	_	2011)	NNP	O	_	mean-01	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@a@@and, 16@@d@@utilize-01, 28@@p@@unconscious, 23@@d@@realize-01, 29@@s@@work-01, 6@@s@@search-01, 32@@d@@brain, 25@@p@@all, 3@@s@@study-01, 4@@d@@cognition, 8@@t@@way, 10@@s@@understand-01, 18@@p@@conscious, 20@@d@@experience-01, 1@@d@@scientist, 19@@p@@cognitive, 21@@explicitanon0@@-, 12@@d@@we]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	16	APP_s	true
4	watched	_	watch	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	ripples	_	ripple	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	of	_	of	IN	O	_	name	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	writhing	_	writhing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_o	true
12	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
13	worms	_	worm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	beneath,	_	beneath,	NNP	O	_	and	_	0	IGNORE	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	felt	_	feel	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	chill	_	chill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	afar	_	afar	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	out	_	out	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
23	whither	_	whither	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	condor	_	condor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
26	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	1	APP_op1	true
27	flown,	_	flown,	NNP	O	_	and	_	0	IGNORE	true
28	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	1	MOD_s	true
29	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
30	my	_	my	PRP$	O	_	resemble-01	_	0	IGNORE	true
31	flesh	_	flesh	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
33	caught	_	catch	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
34	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	horror	_	horror	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
36	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	33	MOD_mod	true
37	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
38	eyes	_	eye	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
39	had	_	have	VBD	O	_	person	_	0	IGNORE	true
40	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	36	APP_op1	true
41	it	_	it	PRP	O	_	i	_	0	IGNORE	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@s@@cause-01, 1@@a@@and, 6@@d@@ripple, 8@@s@@tell-01, 18@@s@@new-01, 21@@p@@afar, 36@@w@@before, 25@@d@@condor, 16@@s@@feel-01, 22@@a@@out, 3@@d@@i, 40@@s@@see-01, 38@@d@@eye, 33@@s@@catch-01, 4@@t@@watch-01, 35@@d@@horror, 31@@d@@flesh, 13@@d@@worm, 26@@s@@cause-01, 11@@s@@writhing-01, 19@@d@@chill]
sentence=1	How	how	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	9	MOD_mod	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	light,	_	light,	NFP	O	_	thing	_	0	IGNORE	true
4	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
5	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
7	mass,	_	mass,	NNS	O	_	cause-01	_	0	IGNORE	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	affected	_	affect	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	APP_s	true
10	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
11	gravity	_	gravity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	?	_	?	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[1@@t@@amr-unknown, 11@@d@@gravity, 9@@s@@affect-01, 6@@explicitanon0@@-, 2@@s@@possible-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	an	_	an	DT	O	_	1	_	0	IGNORE	true
4	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	event	_	0	IGNORE	true
7	underway	_	underway	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	4	MOD_s	true
8	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[7@@s@@underway, 1@@d@@this, 4@@s@@effort-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	must	_	must	MD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
3	emphasize	_	emphasize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	Creative_Commons	_name_	Commons	NNPS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
6	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the_School_of_Open_Africa	_name_	Africa	NNP	O	(w<root> / world-region  :name (n / --LEX--)  :location-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
9	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	example	_	example	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	exemplify-01	(s())	9	APP_o	true
13	of	_	of	IN	O	_	thing	_	0	IGNORE	true
14	innovative	_	innovative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	innovate-01	(mod())	15	MOD_mod	true
15	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
16	of	_	of	IN	O	_	thing	_	0	IGNORE	true
17	ICT	ict	ICT	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	in	_	in	IN	O	_	person	_	0	IGNORE	true
19	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	15	APP_o	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	resonates	_	resonate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
22	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	21	MOD_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	the_Kenya_National	_name_	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	multinational	(mod())	27	MOD_mod	true
25	ICT	ict	ICT	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	Master	master	Master	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	Plan	plan	Plan	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_o	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[25@@p@@ICT, 1@@d@@i, 7@@w@@world-region, 26@@p@@Master, 19@@d@@educate-01, 21@@s@@resonate-01, 22@@s@@well-09, 27@@d@@Plan-01, 24@@p@@multinational, 17@@d@@ICT, 15@@s@@use-01, 11@@s@@good-02, 14@@p@@innovate-01, 12@@s@@exemplify-01, 2@@o@@obligate-01, 7@@n@@_NAME_, 5@@n@@_NAME_, 9@@s@@provide-01, 5@@g@@government-organization, 3@@s@@emphasize-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	rocks	_	rock	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	about	_	about	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	were	_	be	VBD	O	_	person	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	harsh	_	harsh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	reddish	_	reddish	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
10	colour,	_	colour,	NNS	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
12	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	trace	_	trace	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_dom	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_op3	true
19	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
20	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
21	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
22	first	_name_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	at-$LEMMA$	(mod())	20	MOD_mod	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	intensely	_	intensely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-04	(s())	26	MOD_s	true
26	green	_	green	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	vegetation	_	vegetation	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op2	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	covered	_	cover	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
30	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	projecting	_	project	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	MOD_s	true
32	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
35	south-eastern	_	south-eastern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	36	MOD_mod	true
36	face	_	face	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[16@@d@@life, 36@@b@@face, 2@@d@@rock, 12@@p@@all, 3@@b@@about, 11@@a@@and, 19@@s@@possible-01, 20@@s@@see-01, 9@@r@@reddish, 25@@s@@open-04, 8@@s@@harsh-02, 18@@d@@i, 14@@s@@trace-01, 35@@p@@_NAME_, 27@@r@@vegetation, 29@@s@@cover-01, 30@@p@@every, 31@@s@@project-01, 22@@n@@at-first, 26@@s@@green-02, 32@@d@@point]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	bunch	_	bunch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
3	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
4	no	_	no	DT	O	_	-	_	0	IGNORE	true
5	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	6	APP_s	true
6	picked	_	pick	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	MOD_o	true
7	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
9	side	_	side	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
10	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	football	_	football	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	or	_	or	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
13	hockey,	_	hockey,	NNP	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
15	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	glue	_	glue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	held	_	hold	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_s	true
21	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	together	_	together	RB	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o2	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@no-one, 18@@d@@glue, 9@@d@@side, 21@@d@@us, 20@@b@@hold-01, 14@@a@@and, 22@@d@@together, 12@@p@@or, 6@@b@@pick-01, 2@@d@@bunch, 11@@p@@football]
sentence=1	What	what	what	WDT	O	(d<root> / --LEX--)	amr-unknown	()	2	APP_s	true
2	qualifications	_	qualification	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	qualify-02	(s())	5	APP_o	true
3	do	_	do	VBP	O	_	person	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	will	_	will	MD	O	_	i	_	0	IGNORE	true
8	assist	_	assist	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	executing	_	execute	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	duties	_	duty	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	responsible-03	(poss())	11	APP_s	true
14	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	president	_	president	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$FORM$	()	13	APP_poss	true
16	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[4@@d@@you, 2@@s@@qualify-02, 13@@m@@responsible-03, 8@@s@@assist-01, 15@@h@@have-org-role-91, 15@@p@@person, 11@@s@@execute-01, 5@@s@@have-03, 15@@e@@president, 1@@d@@amr-unknown]
sentence=1	People	people	People	NNS	O	(d<root> / --LEX--)	person	()	2	APP_s	true
2	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	stand	_	stand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_o	true
8	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	Virginia	_name_	Virginia	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	that	_	that	WDT	O	_	name	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	Open-minded	_name_	open-minded	JJ	O	(d<root> / --LEX--)	open-05	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
16	Open_for_Business	_name_	Business	NNP	O	(d<root> / --LEX--)	business	()	15	APP_op2	true
17	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[2@@s@@like-01, 1@@d@@person, 14@@d@@open-05, 6@@d@@i, 16@@d@@business, 7@@s@@stand-03, 15@@a@@and, 10@@p@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	APP_s	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
4	help	_	help	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	2	APP_s	true
5	arching	_	arch	VBG	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	4	APP_o	true
6	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
7	back	_	back	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	5	APP_o	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	little,	_	little,	NNS	O	_	and	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	push	_	push	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_s	true
14	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	hand	_	hand	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
17	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	11	MOD_s	true
18	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	cat	_	cat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
22	instinct	_	instinct	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	22	MOD_s	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	being	_	be	VBG	O	_	person	_	0	IGNORE	true
27	thirteen,	_	thirteen,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
29	half-understood	_	half-understood	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	caution	_	caution	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	30	MOD_s	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	girl	_	girl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op1	true
35	timid,	_	timid,	NNS	O	_	mean-01	_	0	IGNORE	true
36	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	32	APP_o	true
37	wild,	_	wild,	NNPS	O	_	and	_	0	IGNORE	true
38	the	_	the	DT	O	_	he	_	0	IGNORE	true
39	shyness	_	shyness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
40	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_o	true
41	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
42	to	_	to	TO	O	_	thing	_	0	IGNORE	true
43	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	walk	_	walk	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	40	APP_o	true
45	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[44@@d@@walk-01, 17@@s@@resemble-01, 40@@s@@tell-01, 11@@s@@want-01, 22@@d@@instinct, 20@@s@@contrast-01, 19@@d@@cat, 16@@d@@hand, 2@@s@@possible-01, 1@@d@@i, 4@@c@@help-02, 13@@s@@push-01, 3@@explicitanon0@@-, 34@@d@@girl, 36@@a@@or, 32@@s@@make-02, 39@@d@@shyness, 24@@s@@come-03, 30@@d@@caution, 29@@s@@half-understood-01, 43@@p@@just, 5@@l@@arch-01, 7@@h@@back]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	which	_	which	WDT	O	_	event	_	0	IGNORE	true
5	express	_	express	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
6	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
7	symmetry	_	symmetry	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	APP_o	true
8	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	structures	_	structure	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@s@@express-01, 10@@d@@structure, 3@@d@@group, 7@@s@@symmetry, 9@@explicitanon0@@some]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	fact,	_	fact,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
3	Street	street	Street	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	claims,	_	claims,	NNPS	O	_	mean-01	_	0	IGNORE	true
5	gives	_	give	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
6	rise	_	rise	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	dilemma	_	dilemma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
11	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	realists	_	realist	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	concerning	_	concern	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	relation	_	relation	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	relate-01	(mod(), s())	9	MOD_mod	true
16	of	_	of	IN	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	evolutionary	_	evolutionary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	forces	_	force	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	that	_	that	WDT	O	_	amr-unknown	_	0	IGNORE	true
21	influenced	_	influence	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	judgments	_	judgment	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	judge-01	(s())	21	APP_o	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
28	facts	_	fact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
29	claimed	_	claim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_o	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	exist	_	exist	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	by	_	by	IN	O	_	thing	_	0	IGNORE	true
33	moral	_	moral	JJ	O	_	$LEMMA$-02	_	0	IGNORE	true
34	realists	_	realist	NNS	O	_	$LEMMA$	_	0	IGNORE	true
35	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@p@@this, 3@@p@@person, 22@@d@@our, 5@@s@@give-01, 24@@s@@judge-01, 23@@s@@moral-02, 19@@d@@force, 18@@p@@evolutionary, 29@@s@@claim-01, 21@@s@@influence-01, 31@@s@@exist-01, 3@@n@@_NAME_, 25@@a@@and, 12@@i@@realist, 27@@s@@moral-02, 9@@d@@dilemma, 11@@s@@moral-02, 6@@s@@rise-01, 15@@r@@relate-01, 28@@d@@fact]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
2	visa,	_	visa,	NNP	O	_	and	_	0	IGNORE	true
3	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
5	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	7	MOD_s	true
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	a	_	a	DT	O	_	except-01	_	0	IGNORE	true
10	piece	_	piece	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
11	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
12	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	on	_	on	IN	O	_	thing	_	0	IGNORE	true
14	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	list	_	list	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
17	your	_	your	PRP$	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	20	MOD_o	true
18	vital	_	vital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	statistics,	_	statistics,	NNP	O	_	-	_	0	IGNORE	true
20	costs	_	cost	NNS	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
21	between	_	between	IN	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
22	15	_	15	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	21	APP_op1	true
23	-	_	-	SYM	O	_	year	_	0	IGNORE	true
24	25	_	25	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	21	MOD_mod	true
25	CUC	cuc	CUC	NNP	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	21	APP_op2	true
26	(or	_	(or	-LRB-	O	_	pound	_	0	IGNORE	true
27	€	_	€	$	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	dollar	()	20	APP_s	true
28	15	_	15	CD	O	_	_NUMBER_	_	0	IGNORE	true
29	-	_	-	HYPH	O	_	year	_	0	IGNORE	true
30	25),	_	25),	CD	O	_	and	_	0	IGNORE	true
31	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
32	on	_	on	IN	O	_	monetary-quantity	_	0	IGNORE	true
33	where	_	where	WRB	O	(b<root> / --LEX--  :location-of (h<mod>))	amr-unknown	(mod())	20	APP_o2	true
34	purchased	_	purchase	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_mod	true
35	.	_	.	.	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[27@@m2@@monetary-quantity, 34@@d@@purchase-01, 12@@p@@paper, 20@@c@@cost-01, 18@@p@@vital, 33@@b@@amr-unknown, 16@@s@@list-01, 21@@a@@between, 24@@explicitanon0@@_NUMBER_, 22@@explicitanon0@@_NUMBER_, 31@@s@@depend-01, 22@@t@@temporal-quantity, 25@@m2@@monetary-quantity, 17@@s@@your, 5@@s@@real-04, 1@@p@@this, 25@@d2@@CUC, 10@@p@@piece, 6@@p@@little, 27@@d2@@dollar, 15@@d@@you, 7@@p@@more]
sentence=1	York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	known	_	know	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	Eboracum	_name_	Eboracum	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
6	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	Romans,	_name_	romans,	NN	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
9	who	_	who	WP	O	_	name	_	0	IGNORE	true
10	founded	_	found	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	fortress	_	fortress	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the_River_Ouse	_name_	Ouse	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	in	_	in	IN	O	_	3	_	0	IGNORE	true
17	the_year_71	_name_	71	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@n@@_NAME_, 15@@c@@city, 15@@n@@_NAME_, 13@@d@@city, 1@@c@@city, 5@@d@@Eboracum, 10@@s@@found-01, 8@@c@@country, 3@@b@@know-02, 17@@explicitanon0@@_NUMBER_, 1@@n@@_NAME_, 12@@p@@fortress]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
4	using	_	use	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
5	emails	_	email	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	APP_s	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
9	hand	_	hand	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
12	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	voice	_	voice	NN	O	(c<root> / --LEX--  :domain (t<dom>)  :part-of (d<poss>))	$LEMMA$-01	(dom(), poss())	19	APP_op1	true
15	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
18	Eva	_name_	Eva	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_dom	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
20	narrative	_	narrative	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
25	perspective	_	perspective	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	man	_	man	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	Adam,	adam,	Adam,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
31	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	of	_	of	RB	O	_	$LEMMA$	_	0	IGNORE	true
33	confront	_	confront	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	38	APP_op1	true
34	them,	_	them,	NNP	O	_	mean-01	_	0	IGNORE	true
35	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	37	MOD_s	true
37	perspective	_	perspective	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
39	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
40	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
41	somehow	_	somehow	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
42	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
43	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	38	APP_op2	true
44	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	43	APP_s	true
45	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
46	distortions	_	distortion	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	44	APP_o	true
47	in	_	in	IN	O	_	i	_	0	IGNORE	true
48	the	_	the	DT	O	_	thing	_	0	IGNORE	true
49	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
50	the	_	the	DT	O	_	thing	_	0	IGNORE	true
51	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	true
52	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
53	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	46	APP_s	true
54	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[51@@d@@story, 14@@c@@voice-01, 4@@b@@use-01, 38@@a@@and, 20@@d@@narrative, 1@@d@@i, 18@@n@@_NAME_, 2@@s@@think-01, 49@@t@@way, 33@@s@@confront-01, 23@@s@@more, 46@@s@@distortion-01, 44@@s@@see-01, 41@@t@@somehow, 28@@p@@man, 18@@p@@person, 17@@d@@woman, 42@@d@@you, 5@@s@@email, 40@@p@@kind, 31@@p@@kind, 53@@s@@tell-01, 43@@s@@possible-01, 36@@s@@differ-02, 25@@p@@perspective, 37@@d@@perspective, 19@@a@@and, 12@@s@@more, 39@@n@@then]
sentence=1	Through	through	through	IN	O	_	cause-01	_	0	IGNORE	true
2	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
3	and	_	and	CC	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
4	ill	_	ill	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	fortune	_	fortune	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
6	alike,	_	alike,	.	O	_	-	_	0	IGNORE	true
7	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
9	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	10	MOD_mod	true
10	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
11	sight	_	sight	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
12	of	_	of	IN	O	_	-	_	0	IGNORE	true
13	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	quest,	_	quest,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	forgotten	_	forget	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	ideals	_	ideal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
19	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	strength	_	strength	NN	O	(d<root> / --LEX--)	strong-02	()	19	APP_o	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@t@@and, 19@@s@@give-01, 10@@s@@lose-02, 14@@p@@quest,, 13@@p@@that, 17@@d@@ideal, 9@@n@@ever, 7@@d@@she, 11@@d@@sight-01, 5@@p@@fortune, 2@@s@@good-02, 4@@s@@ill-01, 21@@d@@strong-02, 15@@s@@forget-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	achievement	_	achievement	NN	O	(d<root> / --LEX--)	achieve-01	()	11	APP_s	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	celebrate	_	celebrate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	but	_	but	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	contrast-01	(mod())	11	MOD_mod	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	step,	_	step,	NNP	O	_	mean-01	_	0	IGNORE	true
10	an	_	an	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
11	opening	_	opening	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
13	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	to	_	to	IN	O	_	-	_	0	IGNORE	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	greater	_	great	JJR	O	(m<root> / more  :degree-of (o / --LEX--  :mod-of (g2<mod>)))	great	(mod())	18	MOD_mod	true
17	triumphs	_	triumph	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
19	achievements	_	achievement	NNS	O	(d<root> / --LEX--)	achieve-01	()	18	APP_op2	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	await	_	await	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
22	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@p@@contrast-01, 18@@o@@and, 5@@n@@today, 16@@m@@more, 21@@s@@await-01, 13@@d@@opportunity, 19@@d@@achieve-01, 11@@s@@opening-01, 2@@d@@achieve-01, 3@@d@@we, 16@@o@@great, 17@@d@@triumph, 4@@s@@celebrate-01]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	other	_	other	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
4	hand,	_	hand,	NNS	O	_	and	_	0	IGNORE	true
5	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
6	are	_	be	VBP	O	_	exist-01	_	0	IGNORE	true
7	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	machines	_	machine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
9	that	_	that	WDT	O	_	-	_	0	IGNORE	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	replace	_	replace	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_poss	true
13	memory	_	memory	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_o	true
14	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[12@@d@@our, 3@@s@@contrast-01, 8@@d@@machine, 11@@s@@replace-01, 7@@n@@already, 13@@m@@memory, 10@@s@@possible-01]
sentence=1	Back	back	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
4	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
5	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	APP_op1	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	observe,	_	observe,	NNS	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	17	APP_op2	true
10	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	deduce	_	deduce	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op1	true
12	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	remember	_	remember	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_op2	true
16	—	_	—	,	O	_	-	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
18	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	remembered	_	remember	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op3	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	thousand	_	thousand	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000	(mod())	25	MOD_mod	true
24	inspirational	_	inspirational	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	stories	_	story	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
26	lauding	_	laud	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
27	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
28	who	_	who	WP	O	_	teabagger	_	0	IGNORE	true
29	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	stuck	_	stick	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	27	MOD_s	true
31	up	_	up	RP	O	_	expressive	_	0	IGNORE	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	underdog	_	underdog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
35	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@so, 25@@d@@story, 30@@s@@stick-up-02, 9@@a@@and, 12@@s@@so, 23@@explicitanon0@@1000, 20@@s@@remember-01, 3@@d@@i, 6@@p@@much, 11@@d@@deduce-01, 24@@p@@inspirational, 10@@explicitanon0@@-, 4@@explicitanon0@@-, 15@@d@@remember-01, 17@@a@@and, 34@@d@@underdog, 29@@n@@ever, 2@@n@@then, 1@@p@@back, 26@@s@@laud-01, 7@@s@@think-01, 13@@p@@much, 27@@d@@anyone]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	lasts	_	last	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	longest	_	long	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	long-03	(s())	4	MOD_s	true
7	gets	_	get	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	obligate-01	(o(s()))	0	ROOT	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	draw	_	draw	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	APP_o	true
10	an	_	an	DT	O	_	1	_	0	IGNORE	true
11	extra	_	extra	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	card	_	card	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[6@@m@@most, 12@@d@@card, 2@@d@@one, 7@@c@@obligate-01, 4@@s@@last-01, 9@@s@@draw-02, 11@@p@@extra, 6@@b2@@long-03]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	town	_	town	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	comprised	_	comprise	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	residential	_	residential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	residence	(mod())	9	MOD_mod	true
9	community	_	community	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
12	Fort_Lee	_name_	Lee	NNP	O	(c2<root> / criminal-organization  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
13	natives,	_	natives,	NNP	O	_	person	_	0	IGNORE	true
14	transplants	_	transplant	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op2	true
15	from	_	from	IN	O	_	person	_	0	IGNORE	true
16	New_York,	_name_	York,	NNP	O	_	_NAME_	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
18	immigrants,	_	immigrants,	NNP	O	_	name	_	0	IGNORE	true
19	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	from	_	from	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-org-role-91	(s(), o())	4	MOD_s	true
21	Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
22	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[17@@a@@and, 1@@p@@this, 4@@s@@comprise-01, 2@@d@@town, 21@@n@@_NAME_, 11@@s@@include-01, 7@@p@@large, 12@@c2@@criminal-organization, 12@@n@@_NAME_, 8@@p@@residence, 9@@d@@community, 14@@d@@transplant-01, 21@@c@@country, 20@@s@@have-org-role-91, 19@@p@@especially]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	is	_	be	VBZ	O	_	have-purpose-91	_	0	IGNORE	true
3	necessary	_	necessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	0	ROOT	true
4	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
5	remove	_	remove	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	excess	_	excess	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	true
8	saponins	_	saponin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	outside	_	outside	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	8	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	grains	_	grain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_poss	true
15	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
16	impart	_	impart	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	MOD_s	true
17	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
18	bitter	_	bitter	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	flavor	_	flavor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	quinoa	_	quinoa	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o2	true
22	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	removed	_	remove	VBN	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
25	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[7@@s@@excess, 8@@d@@saponin, 19@@d@@flavor, 14@@d@@grain, 21@@d@@quinoa, 18@@p@@bitter, 3@@s@@need-01, 24@@r@@remove-01, 5@@i@@remove-01, 11@@h@@outside, 1@@d@@this, 16@@b@@impart-01, 23@@explicitanon0@@-]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	Pirates	_name_	Pirates	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	player	_	player	NN	O	(d<root> / --LEX--)	play-01	()	0	ROOT	true
6	to	_	to	TO	O	_	name	_	0	IGNORE	true
7	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
8	a	_	a	DT	O	_	ye$LEMMA$r	_	0	IGNORE	true
9	four-hit	_	four-hit	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	horse	(mod())	10	MOD_mod	true
10	game	_	game	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	5	MOD_s	true
11	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	early	_	early	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
13	in	_	in	IN	O	_	after	_	0	IGNORE	true
14	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	career	_	career	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	Jack_Merson,	_name_	Merson,	NNP	O	(m<root> / --LEX--  :unit-of (a<mod>))	_NAME_	(mod())	5	MOD_mod	true
18	who	_	who	WP	O	_	foot	_	0	IGNORE	true
19	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	4-for-5	_	4-for-5	CD	O	(d<root> / --LEX--)	_NUMBER_	()	19	APP_o	true
21	in	_	in	IN	O	_	foot	_	0	IGNORE	true
22	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
23	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	26	MOD_mod	true
24	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	25	MOD_s	true
25	league	_	league	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	game	_	game	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
27	on	_	on	IN	O	_	9	_	0	IGNORE	true
28	September	_name_	September	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	9	(mod())	26	MOD_mod	true
29	15,	_	15,	NNP	O	_	and	_	0	IGNORE	true
30	1951.	_	1951.	CD	O	_	_NUMBER_	_	0	IGNORE	true
31	[11	_	[11	XX	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	28	MOD_mod	true
32	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@p@@other, 5@@d@@play-01, 19@@s@@go-01, 23@@explicitanon0@@2, 20@@d@@_NUMBER_, 28@@explicitanon1@@9, 2@@p@@only, 23@@o@@ordinal-entity, 11@@s@@so, 24@@s@@major, 12@@w@@early, 26@@n@@game, 4@@p@@_NAME_, 25@@p@@league, 9@@p@@horse, 17@@m@@_NAME_, 10@@s@@game, 31@@explicitanon0@@_NUMBER_, 7@@s@@have-03, 15@@d@@career]
sentence=1	What	what	what	WP	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	10	MOD_mod	true
2	about	_	about	IN	O	_	expressive	_	0	IGNORE	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	adage,	_	adage,	NNS	O	_	thing	_	0	IGNORE	true
5	“Those	“those	“Those	NFP	O	(d<root> / --LEX--)	_NAME_	()	10	APP_s	true
6	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
7	forget	_	forget	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	doomed	_	doom	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	repeat	_	repeat	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	it”	_	it”	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[10@@o@@doom-01, 12@@s@@repeat-01, 5@@d@@_NAME_, 7@@s@@forget-01, 8@@d@@history, 1@@p@@amr-unknown]
sentence=1	To	to	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
2	complete	_	complete	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
3	the	_	the	DT	O	_	have-purpose-91	_	0	IGNORE	true
4	analogy,	_	analogy,	NNS	O	_	and	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	that	_	that	WDT	O	_	-	_	0	IGNORE	true
9	normally	_	normally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	normal-02	(s())	10	MOD_s	true
10	travels	_	travel	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	straight	_	straight	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	14	MOD_s	true
14	line	_	line	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	(as	_	(as	,	O	_	$LEMMA$-01	_	0	IGNORE	true
16	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
17	does)	_	does)	NNP	O	_	mean-01	_	0	IGNORE	true
18	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[5@@d@@we, 2@@i@@complete-01, 14@@t@@line, 7@@d@@something, 9@@s@@normal-02, 10@@s@@travel-01, 13@@s@@straight-04, 16@@d@@light, 6@@s@@need-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	show	_	show	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	request-confirmation-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
5	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	locally	_	locally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	local-02	(s())	8	MOD_s	true
8	calibrated	_	calibrate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
9	in	_	in	IN	O	_	thing	_	0	IGNORE	true
10	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
11	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
12	show	_	show	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	fitting	_	fitting	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	18	MOD_s	true
17	language	_	language	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	systems	_	system	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@d@@form, 8@@s@@calibrate-01, 17@@p@@language, 7@@s@@local-02, 14@@s@@fitting-01, 12@@s@@show-01, 16@@s@@differ-02, 18@@d@@system, 2@@s@@show-01, 1@@d@@We, 10@@t@@way]
sentence=1	Although	although	although	IN	O	_	have-concession-91	_	0	IGNORE	true
2	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
3	seems	_	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
4	Theodorus	_name_	Theodorus	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	practiced	_	practice	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	complete	_	complete	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	submission	_	submission	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	submit-02	(s(), o())	5	APP_o	true
8	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	leader	_	leader	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	7	APP_o	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Koinonia,	_name_	koinonia,	CD	O	_	_NAME_	_	0	IGNORE	true
15	problems	_	problem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
16	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	arose	_	arise	VBD	O	(d<root> / --LEX--)	$LEMMA$-02	()	0	ROOT	true
18	in	_	in	IN	O	_	name	_	0	IGNORE	true
19	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	Pachomian	_name_	pachomian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	monasteries	_	monastery	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	that	_	that	WDT	O	_	name	_	0	IGNORE	true
23	viewed	_	view	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	MOD_s	true
24	Horsiesios	_name_	Horsiesios	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	23	APP_o	true
25	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
26	a	_	a	DT	O	_	1	_	0	IGNORE	true
27	weak	_	weak	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
28	leader	_	leader	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lead-02	()	23	APP_o2	true
29	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[24@@p@@person, 23@@b@@view-01, 15@@d@@problem, 16@@n@@soon, 20@@p@@_NAME_, 28@@p2@@person, 27@@s@@weak-02, 28@@e2@@lead-02, 6@@s@@complete-02, 24@@n@@_NAME_, 7@@s@@submit-02, 3@@s@@seem-01, 10@@s@@new-01, 5@@s@@practice-01, 4@@p@@person, 4@@n@@_NAME_, 11@@e2@@lead-02, 17@@d@@arise-02, 21@@b@@monastery, 11@@p2@@person, 19@@explicitanon0@@several]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	31	MOD_s	true
2	decisions	_	decision	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	decide-01	(s())	12	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
5	through	_	through	IN	O	_	cause-01	_	0	IGNORE	true
6	majority	_	majority	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	rule,	_	rule,	NNS	O	_	and	_	0	IGNORE	true
8	making	_	make	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
9	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
10	opinions	_	opinion	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	opine-01	()	11	APP_o	true
11	known	_	know	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	31	APP_dom	true
13	voting	_	vote	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
14	for	_	for	IN	O	_	and	_	0	IGNORE	true
15	those	_	those	DT	O	_	that	_	0	IGNORE	true
16	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
18	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
20	make	_	make	VBP	O	_	$LEMMA$-01	_	0	IGNORE	true
21	decisions	_	decision	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	decide-01	(s())	17	MOD_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	affect	_	affect	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
24	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
27	are	_	be	VBP	O	_	person	_	0	IGNORE	true
28	critical	_	critical	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	31	MOD_s	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	influential	_	influential	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	influence-01	(s())	31	MOD_s	true
31	forms	_	form	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
32	of	_	of	IN	O	_	thing	_	0	IGNORE	true
33	civic	_	civic	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	engagement	_	engagement	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	engage-01	(mod(), s())	31	MOD_mod	true
35	in	_	in	IN	O	_	i	_	0	IGNORE	true
36	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
37	representative	_	representative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	represent-01	(s())	38	MOD_s	true
38	democracy	_	democracy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
39	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
40	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
41	the_United_States	_name_	States	NNP	O	(c4<root> / country  :name (n2 / --LEX--)  :example-of (c3<mod>))	_NAME_	(mod())	38	MOD_mod	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@a@@and, 18@@d@@woman, 21@@s@@decide-01, 4@@s@@make-01, 28@@s@@critical-02, 30@@s@@influence-01, 37@@s@@represent-01, 10@@t@@thing, 38@@d@@democracy, 6@@p@@majority, 1@@s@@cause-01, 2@@s@@decide-01, 33@@t@@civic, 31@@r@@form, 23@@s@@affect-01, 41@@c4@@country, 41@@n2@@_NAME_, 26@@d@@us, 16@@d@@man, 24@@p@@all, 13@@s@@vote-01, 8@@s@@make-01, 12@@a@@and, 11@@s@@know-02, 10@@d@@opine-01, 34@@i@@engage-01, 9@@d@@your]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
4	an	_	an	DT	O	_	affect-01	_	0	IGNORE	true
5	epistemic	_	epistemic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	environment	_	environment	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	heavily	_	heavily	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	heavy	(mod())	12	MOD_mod	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	deliberately	_	deliberately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	deliberate	(mod())	12	MOD_mod	true
12	polluted	_	pollute	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	agents	_	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
16	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
17	mimicry	_	mimicry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
19	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	means	_	means	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	of	_	of	IN	O	_	thing	_	0	IGNORE	true
25	inflating	_	inflate	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
26	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
27	pretense	_	pretense	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	25	APP_o	true
28	to	_	to	TO	O	_	and	_	0	IGNORE	true
29	expertise	_	expertise	VB	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@s@@pollute-01, 27@@s@@pretense, 11@@t@@deliberate, 5@@p@@epistemic, 29@@d@@expertise, 20@@d@@method, 25@@s@@inflate-01, 17@@d@@mimicry, 14@@d@@agent, 2@@s@@live-01, 16@@s@@use-01, 9@@t@@heavy, 1@@d@@We, 19@@p@@other, 6@@b@@environment, 18@@a@@and]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	allocated	_	allocate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
4	land	_	land	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	rebuilt	_	rebuild	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	prosperous	_	prosperous	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	prosper-01	(s())	9	MOD_s	true
9	community	_	community	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	part	_	part	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-$LEMMA$-91	(s(), o())	5	MOD_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	an	_	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	Armenian	_name_	armenian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	19	MOD_mod	true
18	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	19	MOD_mod	true
19	network	_	network	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
20	extending	_	extend	VBG	O	(g<root> / --LEX--  :ARG1 (i<s>)  :ARG4 (j3<o2>)  :ARG3 (j2<o>))	$LEMMA$-01	(o2(), s(), o())	19	MOD_s	true
21	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	Singapore	_name_	Singapore	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
24	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_op2	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	Venice	_name_	Venice	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o2	true
28	Amsterdam	_name_	Amsterdam	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	27	APP_op2	true
29	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[22@@c@@city, 6@@s@@rebuild-01, 13@@s@@key-02, 28@@n@@_NAME_, 5@@a@@and, 28@@c@@city, 1@@d@@They, 24@@n@@_NAME_, 20@@g@@extend-01, 3@@s@@allocate-01, 9@@d@@community, 17@@n@@_NAME_, 18@@p@@trade-01, 24@@c@@country, 8@@s@@prosper-01, 4@@d@@land, 23@@a@@and, 14@@s@@have-part-91, 26@@n@@_NAME_, 19@@d@@network, 26@@c@@city, 17@@c@@country, 22@@n@@_NAME_, 27@@a@@and]
sentence=1	Kúlaakiay,	kúlaakiay,	Kúlaakiay,	NNP	O	_	multi-sentence	_	0	IGNORE	true
2	‘the	_	‘the	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	every	(mod())	10	MOD_mod	true
3	language	_	language	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_dom	true
4	of	_	of	IN	O	_	hyperlink-91	_	0	IGNORE	true
5	village	_	village	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
6	of	_	of	IN	O	_	hyperlink-91	_	0	IGNORE	true
7	Seleki/Sállagi’,	_name_	Seleki/Sállagi’,	NNP	O	_	_NAME_	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	name	_	name	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	0	ROOT	true
11	given	_	give	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
12	by	_	by	IN	O	_	say-01	_	0	IGNORE	true
13	Jóola_Kaasa	_name_	Kaasa	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	speakers	_	speaker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	use-01	()	11	APP_s	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	familiar	_	familiar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$ize-01	(s(), o())	14	MOD_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	village	_	village	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	of	_	of	IN	O	_	person	_	0	IGNORE	true
23	Seleki/Sállagi’	_name_	seleki/sállagi’	SYM	O	_	_NAME_	_	0	IGNORE	true
24	than	_	than	IN	O	_	cause-01	_	0	IGNORE	true
25	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	villages	_	village	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
28	of	_	of	IN	O	_	thing	_	0	IGNORE	true
29	Mof-Ávvi	_name_	mof-ávvi	ADD	O	_	_NAME_	_	0	IGNORE	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@r@@name-01, 26@@p@@other, 18@@s@@familiarize-01, 14@@p2@@person, 17@@s@@more, 5@@d@@village, 11@@s@@give-01, 27@@p@@village, 21@@d@@village, 3@@m@@language, 14@@e2@@use-01, 2@@p@@every, 25@@p@@all]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	1893,	_	1893,	CD	O	_	name	_	0	IGNORE	true
3	Higuchi,	higuchi,	higuchi,	CD	O	_	have-rel-role-91	_	0	IGNORE	true
4	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	mother	_	mother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
7	her	_	she	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
8	sister	_	sister	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	6	APP_op2	true
9	abandoned	_	abandon	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	0	ROOT	true
10	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
11	middle	_	middle	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	class	_	class	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	house	_	house	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
14	and,	_	and,	VBN	O	_	and	_	0	IGNORE	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
17	grim	_	grim	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	determination	_	determination	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	determine-01	(mod(), s())	21	MOD_mod	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	survive,	_	survive,	NNP	O	_	cause-01	_	0	IGNORE	true
21	moved	_	move	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	a	_	a	DT	O	_	person	_	0	IGNORE	true
24	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	neighborhood	_	neighborhood	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	APP_o	true
26	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
27	they	_	they	PRP	O	_	person	_	0	IGNORE	true
28	opened	_	open	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_mod	true
29	a	_	a	DT	O	_	thing	_	0	IGNORE	true
30	stationery	_	stationery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	store	_	store	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	35	MOD_s	true
35	failed	_	fail	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@n@@before, 8@@h@@have-rel-role-91, 12@@p@@class, 28@@s@@open-01, 5@@f@@mother, 24@@p@@poor, 18@@o@@determine-01, 17@@p@@grim, 8@@p@@person, 25@@b@@neighborhood, 5@@h@@have-rel-role-91, 9@@l@@abandon-01, 11@@p@@middle, 21@@t@@move-01, 34@@s@@long, 13@@m@@house, 35@@s@@fail-01, 6@@a@@and, 30@@p@@stationery, 31@@d@@store, 5@@p@@person, 8@@f@@sister]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	plans	_	plan	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	for	_	for	IN	O	_	thing	_	0	IGNORE	true
6	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	harbor	_	harbor	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	facilities	_	facility	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
11	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	fisherman	_	fisherman	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	farm-01	()	15	APP_s	true
13	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
14	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	APP_o	true
16	catch	_	catch	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_op2	true
17	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	14	MOD_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	MOD_op1	true
20	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_op2	true
21	importing	_	import	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_s	true
22	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
24	fuel	_	fuel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
25	simpler	_	simple	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	easy-05	(s())	20	APP_s	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@d@@fuel, 14@@s@@sell-01, 17@@s@@more, 4@@s@@plan-01, 7@@p@@harbor, 22@@d@@food, 6@@s@@new-01, 20@@s@@make-02, 15@@a@@and, 19@@a@@and, 12@@p2@@person, 23@@a@@and, 25@@b@@easy-05, 21@@s@@import-01, 8@@d@@facility, 12@@e2@@farm-01, 16@@s@@catch-01, 11@@s@@allow-01, 18@@s@@easy-05, 25@@m@@more, 3@@p@@also]
sentence=1	Gordon	_name_	Gordon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	disliked	_	dislike	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	Russian	_name_	russian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	service,	_	service,	NNP	O	(d<root> / --LEX--)	and	()	2	APP_o	true
6	complaining	_	complain	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
7	of	_	of	IN	O	_	name	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	corruption	_	corruption	NN	O	(d<root> / --LEX--)	corrupt-01	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
11	venality	_	venality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	of	_	of	IN	O	_	name	_	0	IGNORE	true
13	Russian	_name_	Russian	NNP	O	_	_NAME_	_	0	IGNORE	true
14	officials,	_	officials,	NNP	O	_	name	_	0	IGNORE	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	10	MOD_s	true
17	him,	_	him,	NNS	O	_	cause-01	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
20	own	_	own	JJ	O	_	person	_	0	IGNORE	true
21	words,	_	words,	NNP	O	_	include-91	_	0	IGNORE	true
22	"almost	_	"almost	''	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
24	wits	_	wit	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	end	_	end	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
26	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
27	vexation".	_	vexation".	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	[2	_	[2	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@p@@wit, 28@@p@@[2, 25@@p@@end-01, 9@@d@@corrupt-01, 10@@a@@and, 6@@s@@complain-01, 11@@d@@venality, 1@@n@@_NAME_, 4@@n@@_NAME_, 1@@p@@person, 2@@s@@dislike-01, 16@@s@@leave-13, 4@@c@@country, 5@@d@@and, 22@@p@@"almost]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	there's	_	there'	VBZ	O	_	person	_	0	IGNORE	true
4	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	kids	_	kid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
6	who	_	who	WP	O	_	name	_	0	IGNORE	true
7	go,	_	go,	VBP	O	_	and	_	0	IGNORE	true
8	na-na-na-na-za-ba-da	_	na-na-na-na-za-ba-da	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
9	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true

nodealignment=[9@@explicitanon0@@interrogative, 1@@a@@and, 5@@d@@kid, 8@@n@@_NAME_, 2@@n@@then, 4@@p@@other]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	neighborhoods	_	neighborhood	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
5	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	8	APP_dom	true
6	commercial	_	commercial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	commerce	(mod())	7	MOD_mod	true
7	centers	_	center	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	8	APP_op1	true
8	and	_	and	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	0	ROOT	true
9	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	heaven	_	heaven	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	8	APP_op2	true
11	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
12	foodies	_	foodie	NNS	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
14	those	_	those	DT	O	_	that	_	0	IGNORE	true
15	who	_	who	WP	O	_	person	_	0	IGNORE	true
16	seek	_	seek	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
17	quieter	_	quiet	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	easy-05	(s())	18	MOD_s	true
18	surroundings	_	surrounding	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	than	_	than	IN	O	_	person	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	hustle	_	hustle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (p<op1>)  :op2 (p2<op2>)  :compared-to-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	16	MOD_mod	true
23	bustle	_	bustle	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	Downtown	_name_	Downtown	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	22	MOD_mod	true
27	Chinatown	_name_	Chinatown	NNP	O	(d<root> / --LEX--)	_NAME_	()	26	APP_op2	true
28	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@d@@or, 16@@s@@seek-01, 25@@d@@Downtown, 18@@d@@surrounding, 27@@d@@_NAME_, 5@@d@@person, 21@@d@@hustle, 22@@a@@and, 6@@p@@commerce, 23@@d@@bustle, 1@@explicitanon0@@many, 12@@i@@foodie, 7@@r@@center, 17@@m@@more, 17@@b@@easy-05, 26@@o@@and, 4@@d@@neighborhood, 9@@p@@absolute, 8@@o@@and, 10@@r@@heaven]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
4	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o	true
5	for	_	for	IN	O	_	name	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	emptiness	_	emptiness	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	remained	_	remain	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@a@@emptiness, 3@@explicitanon0@@-, 2@@s@@have-03, 9@@s@@remain-01, 1@@d@@He, 4@@d@@name-01]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	3	APP_s	true
3	choose	_	choose	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	3	APP_o	true
6	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	green,	_	green,	NNP	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
11	lime	_	lime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
12	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
13	you're	_	you're	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	Skittles,	skittles,	skittles,	NN	O	_	and	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
18	purple,	_	purple,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
21	grape	_	grape	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
24	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
25	style,	_	style,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
27	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	APP_s	true
29	create	_	create	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
30	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	weird	_	weird	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	taste	_	taste	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
33	combination	_	combination	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	combine-01	(s())	34	APP_op1	true
34	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_s	true
35	a	_	a	DT	O	_	thing	_	0	IGNORE	true
36	less	_	less	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	than	_	than	IN	O	_	more-$LEMMA$	_	0	IGNORE	true
38	appealing	_	appeal	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	attract-01	(s())	39	MOD_s	true
39	color	_	color	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op2	true
40	for	_	for	IN	O	_	thing	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	product	_	product	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@p@@original, 21@@d@@grape, 42@@p@@final, 11@@d@@lime, 2@@d@@person, 34@@a@@or, 33@@s@@combine-01, 1@@explicitanon0@@many, 43@@o@@product, 17@@a@@and, 24@@p@@original, 5@@s@@leave-out-03, 14@@s@@use-01, 39@@d@@color, 32@@d@@taste, 36@@s@@less, 29@@s@@create-01, 38@@s@@attract-01, 28@@s@@possible-01, 3@@c@@choose-01, 26@@s@@cause-01, 31@@p@@weird]
sentence=1	However,	_name_	however,	CD	O	_	cause-01	_	0	IGNORE	true
2	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
3	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
4	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	soil	_	soil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_s	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	drought	_	drought	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	lasted	_	last	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
11	nearly	_	nearly	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_o	true
12	two	_	two	CD	O	(d<root> / --LEX--)	2	()	11	APP_op1	true
13	centuries,	_	centuries,	NNS	O	_	and	_	0	IGNORE	true
14	their	_	they	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
15	civilization	_	civilization	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
16	declined	_	decline	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
17	by	_	by	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	about	_	about	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
19	900	_	900	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	18	APP_op1	true
20	CE	ce	CE	NNP	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
22	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	abandoned	_	abandon	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
25	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	population	_	population	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	centers	_	center	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
28	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[20@@explicitanon0@@CE, 8@@d@@drought, 6@@a@@and, 26@@p@@population, 10@@s@@last-01, 14@@d@@they, 17@@p@@by, 15@@d@@civilization, 11@@o@@nearly, 12@@d@@2, 25@@p@@large, 5@@d@@soil, 23@@s@@abandon-01, 4@@p@@poor, 18@@w@@about, 16@@s@@decline-01, 19@@explicitanon0@@_NUMBER_, 27@@d@@center, 19@@d@@date-entity, 2@@s@@cause-01, 21@@a@@and]
sentence=1	Importantly,	importantly,	importantly,	CD	O	_	and	_	0	IGNORE	true
2	studying	_	study	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
3	eye	_	eye	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	movements	_	movement	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	move-01	(s())	2	APP_s	true
5	offers	_	offer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	an	_	an	DT	O	_	thing	_	0	IGNORE	true
7	insight	_	insight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	depend	_	depend	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	participants’	_	participants’	NNP	O	_	thing	_	0	IGNORE	true
15	beliefs,	_	beliefs,	NNP	O	_	and	_	0	IGNORE	true
16	memories	_	memory	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
18	subjective	_	subjective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	19	MOD_mod	true
19	impressions	_	impression	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	feel-01	(s())	17	APP_op2	true
20	of	_	of	IN	O	_	or	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	artwork	_	artwork	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@d@@eye, 7@@d@@insight, 2@@s@@study-01, 18@@p@@subjective-02, 16@@d@@memory, 22@@d@@artwork, 11@@s@@depend-01, 17@@a@@or, 10@@explicitanon0@@-, 5@@s@@offer-01, 4@@s@@move-01, 19@@s@@feel-01]
sentence=1	Although	although	although	IN	O	_	have-concession-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	power	_	power	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	monarchs	_	monarch	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	limited	_	limit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
9	by	_	by	IN	O	_	conclude-01	_	0	IGNORE	true
10	law,	_	law,	NN	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	such	_	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	kings	_	king	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
15	queens	_	queen	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	rule	_	rule	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_s	true
18	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	an	_	an	DT	O	_	1	_	0	IGNORE	true
21	elected	_	elect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	legislature	_	legislature	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	legislate-01	(mod())	17	MOD_mod	true
23	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
24	makes	_	make	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
25	laws	_	law	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	country,	_	country,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
30	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
31	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
32	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	11	APP_op2	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@s@@case-04, 15@@d@@queen, 6@@d@@monarch, 13@@d@@king, 24@@s@@make-01, 3@@m@@power, 5@@explicitanon0@@some, 32@@n@@always, 16@@o@@often, 17@@s@@rule-01, 21@@s@@elect-01, 22@@y@@legislate-01, 25@@d@@law, 12@@p@@such, 14@@a@@and, 31@@explicitanon0@@-, 8@@s@@limit-01, 11@@a@@and]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op3	true
3	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	5	MOD_mod	true
4	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	true
6	that	_	that	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	way,	_	way,	NN	O	_	thing	_	0	IGNORE	true
8	by	_	by	IN	O	_	mean-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
13	myself,	_	myself,	NNS	O	_	thing	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	1	APP_op2	true
15	it's	_	it's	PRP$	O	_	contrast-01	_	0	IGNORE	true
16	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	that's	_	that's	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	here,	_	here,	NNS	O	_	multi-sentence	_	0	IGNORE	true
22	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
25	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
26	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	27	APP_s	true
27	mean	_	mean	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
28	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	24	MOD_mod	true

nodealignment=[3@@p@@probable, 28@@explicitanon0@@interrogative, 11@@d@@i, 1@@a@@and, 6@@p@@that, 26@@d@@i, 16@@n@@always, 24@@s@@know-01, 5@@s@@seem-01, 23@@d@@you, 17@@p@@just, 14@@s@@contrast-01, 27@@s@@mean-01, 18@@d@@something, 2@@d@@it, 4@@explicitanon0@@-, 12@@s@@feel-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_dom	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
4	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	candidate	_	candidate	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_s	true
6	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
7	and	_	and	CC	O	_	$LEMMA$	_	11	IGNORE	true
8	raised	_	raise	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
9	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	Virginia,	_name_	virginia,	NN	O	_	_NAME_	_	0	IGNORE	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
13	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
14	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	candidate	_	candidate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	who	_	who	WP	O	_	name	_	0	IGNORE	true
17	embodies	_	embody	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	physically	_	physically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	physical	(mod())	24	MOD_mod	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	philosophically	_	philosophically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	humane	(mod())	17	MOD_mod	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	diversity	_	diversity	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	17	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	commonwealth	_	commonwealth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
28	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@s@@grow-01, 15@@d@@candidate, 19@@t@@physical, 4@@p@@only, 6@@s@@bear-02, 1@@d@@i, 8@@s@@raise-03, 17@@s@@embody-01, 21@@t@@humane, 24@@m@@diversity, 14@@p@@only, 12@@p@@also, 27@@d@@commonwealth, 5@@r@@candidate, 11@@s@@contrast-01]
sentence=1	Customer	customer	customer	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
3	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	need	_	need	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	3	MOD_s	true
7	redefined	_	redefine	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
8	by	_	by	IN	O	_	and	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	entrepreneurial	_	entrepreneurial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	team	_	team	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	basis	_	basis	NN	O	_	base-02	_	0	IGNORE	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	better	_	well	JJR	O	(m2<root> / more  :degree-of (l / --LEX--  :ARG1 (m<s>)))	good-02	(s())	6	MOD_s	true
17	models,	_	models,	NNS	O	_	and	_	0	IGNORE	true
18	knowing	_	know	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	true
19	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	invest	_	invest	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
22	in	_	in	IN	O	_	monetary-quantity	_	0	IGNORE	true
23	developing	_	develop	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	APP_s	true
24	lower-performance	_	lower-performance	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	quality	(mod())	25	MOD_mod	true
25	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	promise	_	promise	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
28	lower	_	low	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	low-04	(s())	29	MOD_s	true
29	margins	_	margin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
31	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	satisfying	_	satisfy	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	need,	_	need,	NNS	O	_	mean-01	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
36	knowing	_	know	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
37	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
38	to	_	to	TO	O	_	thing	_	0	IGNORE	true
39	pursue	_	pursue	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_s	true
40	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
42	at	_	at	IN	O	_	thing	_	0	IGNORE	true
43	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
44	expense	_	expense	NN	O	_	expend-01	_	0	IGNORE	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	49	MOD_mod	true
47	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
48	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	MOD_s	true
49	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_op2	true
50	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[46@@f2@@large, 36@@s@@know-01, 25@@d@@product, 24@@p@@quality, 35@@a@@and, 27@@s@@promise-01, 28@@b@@low-04, 40@@p@@small, 39@@s@@pursue-01, 47@@a@@or, 3@@s@@possible-01, 49@@d@@market, 46@@m@@more, 1@@p@@customer, 2@@d@@group, 31@@p@@still, 29@@d@@margin, 32@@s@@satisfy-01, 4@@s@@need-01, 10@@p@@entrepreneurial, 41@@d@@market, 7@@s@@redefine-01, 11@@d@@team, 16@@m2@@more, 6@@s@@person, 48@@s@@establish-01, 16@@l@@good-02, 28@@m@@more, 23@@s@@develop-02, 21@@s@@invest-01, 18@@s@@know-01]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	reason,	_	reason,	NNS	O	_	cause-01	_	0	IGNORE	true
4	it's	_	it's	PRP	O	_	cause-01	_	0	IGNORE	true
5	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	better	_	better	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	0	ROOT	true
7	to	_	to	TO	O	_	more	_	0	IGNORE	true
8	practice	_	practice	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
9	ballet	_	ballet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	ballet	_	ballet	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	studio	_	studio	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	guidance	_	guidance	NN	O	(d<root> / --LEX--  :ARG0 (h<s>)  :manner-of (a<mod>))	guide-01	(mod(), s())	8	MOD_mod	true
17	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
18	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
19	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
20	instructor,	_	instructor,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
21	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
22	will	_	will	MD	O	_	person	_	0	IGNORE	true
23	be	_	be	VB	O	_	person	_	0	IGNORE	true
24	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	MOD_s	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	correct	_	correct	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	APP_op1	true
27	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
28	positioning	_	positioning	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	MOD_s	true
30	make	_	make	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
31	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	en$LEMMA$-01	(s(), o())	29	APP_op2	true
32	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	you're	_	you're	PRP$	O	_	thing	_	0	IGNORE	true
34	dancing	_	dance	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_o	true
35	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	34	MOD_mod	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@n@@always, 2@@p@@this, 26@@s@@correct-01, 20@@p@@_NAME_, 8@@s@@practice-01, 6@@b@@good-02, 35@@t@@proper, 34@@d@@dance-01, 31@@s@@ensure-01, 12@@p@@ballet, 16@@d@@guide-01, 29@@a@@and, 19@@s@@good-02, 13@@b@@studio, 6@@m@@more, 9@@d@@ballet, 24@@s@@possible-01, 28@@d@@positioning]
sentence=1	When	when	when	WRB	O	_	cause-01	_	0	IGNORE	true
2	empresario	_	empresario	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	3	MOD_s	true
3	Haden_Edwards	_name_	Edwards	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	attempted	_	attempt	VBD	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	23	MOD_mod	true
5	to	_	to	TO	O	_	person	_	0	IGNORE	true
6	evict	_	evict	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_o	true
8	who	_	who	WP	O	_	person	_	0	IGNORE	true
9	had	_	have	VBD	O	_	person	_	0	IGNORE	true
10	settled	_	settle	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_s	true
11	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	land	_	land	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	grant	_	grant	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
14	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
15	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	gained	_	gain	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	APP_op1	true
17	title	_	title	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
18	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	it,	_	it,	NNP	O	_	and	_	0	IGNORE	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	Mexican	_name_	mexican	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
22	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	23	APP_s	true
23	nullified	_	nullify	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
24	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
25	agreement	_	agreement	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	agree-01	(s())	23	APP_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[4@@s2@@attempt-01, 2@@h@@have-org-role-91, 17@@d@@title, 12@@d@@land, 23@@c@@nullify-01, 6@@s@@evict-01, 2@@p2@@empresario, 22@@g2@@govern-01, 3@@n@@_NAME_, 13@@s@@grant-01, 21@@c@@country, 21@@n@@_NAME_, 7@@d@@person, 3@@p@@person, 16@@s@@gain-02, 25@@s@@agree-01, 22@@g@@government-organization, 14@@w@@before, 10@@s@@settle-02]
sentence=1	Brahms	_name_	Brahms	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	recommended	_	recommend	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	Dvořák	_name_	Dvořák	NNP	O	(d<root> / --LEX--)	_NAME_	()	2	APP_o	true
4	to	_	to	IN	O	_	name	_	0	IGNORE	true
5	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
6	publisher,	_	publisher,	CD	O	(d<root> / --LEX--)	have-org-role-91	()	2	APP_o2	true
7	Simrock,	simrock,	simrock,	CD	O	_	$LEMMA$	_	0	IGNORE	true
8	who	_	who	WP	O	_	name	_	0	IGNORE	true
9	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	10	MOD_mod	true
10	afterward	_	afterward	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	commissioned	_	commission	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
12	what	_	what	WP	O	_	thing	_	0	IGNORE	true
13	became	_	become	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	11	APP_o	true
14	the_Slavonic_Dances,_Op.	_name_	Op.	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
15	46	_	46	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[2@@b@@recommend-01, 15@@explicitanon2@@_NUMBER_, 13@@s@@become-01, 14@@d@@_NAME_, 6@@d@@have-org-role-91, 3@@d@@_NAME_, 1@@n@@_NAME_, 9@@n@@immediate, 10@@n@@afterward, 1@@p@@person, 15@@d@@date-entity, 11@@s@@commission-01]
sentence=1	There's	there's	There's	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	a	_	a	DT	O	_	person	_	0	IGNORE	true
3	grizzly	_	grizzly	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	bear	_	bear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	7	MOD_mod	true
7	babies	_	baby	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	hanging	_	hang	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-06	(s())	5	MOD_s	true
11	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
12	up	_	up	RB	O	_	$LEMMA$	_	0	IGNORE	true
13	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[6@@explicitanon0@@2, 5@@a@@and, 10@@s@@hang-out-06, 7@@d@@baby, 13@@b@@here, 4@@d@@bear, 3@@p@@grizzly]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	look	_	look	VBP	O	(c<root> / --LEX--  :ARG0 (i<o>)  :ARG1 (y<s>)  :condition-of (w<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
4	closely,	_	closely,	NNS	O	_	resemble-01	_	0	IGNORE	true
5	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	location	_	0	IGNORE	true
7	base	_	base	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	leaf	_	leaf	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
11	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	15	MOD_mod	true
13	tiny	_	tiny	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	leaves	_	leave	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	will	_	will	MD	O	_	thing	_	0	IGNORE	true
18	grow	_	grow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	outwards	_	outward	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
22	stem	_	stem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
23	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
24	between	_	between	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
27	cut	_	cut	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-off-04	(mod(), s())	19	MOD_mod	true
28	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
29	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@d@@leaf, 7@@h@@base, 13@@p@@tiny, 14@@p@@little, 22@@d@@stem, 12@@explicitanon0@@2, 27@@o@@cut-off-04, 24@@b@@between, 9@@p@@every, 3@@c@@look-01, 18@@s@@grow-01, 15@@d@@leave, 19@@t@@outward, 2@@d@@you, 23@@s@@grow-01]
sentence=1	1.	_	1.	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	A	(mod())	8	MOD_mod	true
2	Which	which	which	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	8	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	include-01	_	0	IGNORE	true
5	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
6	Indian	_name_	indian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	peoples	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_s	true
8	built	_	build	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	homes	_	home	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
11	cliff	_	cliff	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	dwellings	_	dwelling	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
16	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[11@@b@@cliff, 15@@s@@exist-01, 2@@p@@amr-unknown, 8@@s@@build-01, 7@@d@@person, 14@@p@@still, 6@@p@@indian, 1@@explicitanon0@@A, 12@@b@@dwelling, 5@@s@@follow-01, 9@@d@@home]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
3	unlocked	_	unlock	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	doors	_	door	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	for	_	for	IN	O	_	slash	_	0	IGNORE	true
8	a_quarter_of_a_century	_name_	century	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	between	_	between	IN	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
11	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	the_People's_Republic_of_China	_name_	China	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@a@@between, 13@@o2@@organization, 11@@c@@country, 9@@s@@stand-01, 5@@d@@door, 11@@n@@_NAME_, 8@@n@@_NAME_, 3@@s@@unlock-01, 1@@d@@We, 13@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	study	_	study	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
4	will	_	will	MD	O	_	thing	_	0	IGNORE	true
5	contribute	_	contribute	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	development	_	development	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
11	qualitative	_	qualitative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	quantitative	_	quantitative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
15	that	_	that	WDT	O	_	and	_	0	IGNORE	true
16	will	_	will	MD	O	_	thing	_	0	IGNORE	true
17	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	clearly	_	clearly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	clear-06	(s())	19	MOD_s	true
19	define	_	define	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
22	behaviors	_	behavior	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	behave-01	(s(), o())	19	APP_o	true
23	of	_	of	IN	O	_	thing	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	transmedia	_	transmedia	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	fan	_	fan	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
27	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@study-01, 17@@s@@more, 2@@n@@current, 21@@d@@information, 10@@p@@further, 14@@d@@research-01, 22@@s@@behave-01, 18@@s@@clear-06, 5@@t@@contribute-01, 19@@s@@define-01, 11@@p@@qualitative, 13@@p@@quantitative, 25@@p@@transmedia, 26@@d@@fan, 8@@s@@develop-02]
sentence=1	Sit	sit	sit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
2	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
3	strikes	_	strike	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
4	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
5	began	_	begin	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
6	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	level	_	level	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	1930’s	_	1930’s	CD	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	5	MOD_mod	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	threatening	_	threatening	JJ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	management	_	management	NN	O	(d<root> / --LEX--)	manage-01	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
19	ownership,	_	ownership,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_o	true
21	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
22	sit	_	sit	NN	O	_	$LEMMA$-01	_	0	IGNORE	true
23	down	_	down	RP	O	_	i	_	0	IGNORE	true
24	strike	_	strike	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	37	APP_op3	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	27	MOD_mod	true
27	step	_	step	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_s	true
28	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	27	MOD_mod	true
29	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	person	()	34	APP_s	true
30	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-over-12	(s(), o())	34	APP_op1	true
31	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	factory	_	factory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	37	APP_op1	true
35	running	_	run	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	34	APP_op2	true
36	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	28	APP_op1	true
38	kicking	_	kick	VBG	O	(d<root> / --LEX--)	$LEMMA$-out-03	()	37	APP_op2	true
39	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
40	the	_	the	DT	O	_	person	_	0	IGNORE	true
41	management,	_	management,	NNS	O	(d<root> / --LEX--)	company	()	44	APP_o	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
43	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	44	MOD_mod	true
44	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	42	APP_op2	true
45	a	_	a	DT	O	_	1	_	0	IGNORE	true
46	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	47	MOD_s	true
47	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
48	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@d@@strike-01, 33@@d@@factory, 29@@p2@@person, 14@@s@@very, 46@@b@@good-02, 15@@t@@threatening-01, 34@@a@@and, 12@@c@@country, 19@@d@@ownership,, 3@@d@@strike-01, 8@@s@@significant-02, 5@@s@@begin-01, 17@@d@@manage-01, 30@@s@@take-over-12, 37@@a@@and, 38@@d@@kick-out-03, 29@@e2@@person, 20@@s@@cause-01, 46@@m@@more, 41@@d@@company, 12@@n@@_NAME_, 35@@s@@run-01, 43@@p@@probable, 42@@a@@and, 1@@s@@sit-01, 44@@s@@do-02, 9@@t@@level, 47@@d@@job, 28@@w@@before, 27@@d@@step-01, 18@@a@@and, 26@@explicitanon0@@1]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	look	_	look	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
4	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	future,	_	future,	NNS	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	9	MOD_mod	true
9	essential	_	essential	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
12	begin	_	begin	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op1	true
13	healing	_	heal	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	wounds	_	wound	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
18	Nation,	nation,	nation,	CD	O	_	and	_	0	IGNORE	true
19	to	_	to	TO	O	_	and	_	0	IGNORE	true
20	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op2	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	bitterness	_	bitterness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
24	divisions	_	division	NNS	O	(d<root> / --LEX--)	divide-02	()	23	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	recent	_	recent	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	past	_	past	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
29	behind	_	behind	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
30	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	9	APP_dom	true
32	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
33	rediscover	_	rediscover	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_op3	true
34	those	_	those	DT	O	_	that	_	0	IGNORE	true
35	shared	_	share	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	share-01	(s())	36	MOD_s	true
36	ideals	_	ideal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
37	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
38	lie	_	lie	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	36	MOD_s	true
39	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
40	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
41	heart	_	heart	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	38	APP_o	true
42	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
43	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
44	strength	_	strength	NN	O	(d<root> / --LEX--)	strong-02	()	45	APP_op1	true
45	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	41	APP_poss	true
46	unity	_	unity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op2	true
47	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
48	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
49	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
50	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
51	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
52	a	_	a	DT	O	_	1	_	0	IGNORE	true
53	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	54	MOD_s	true
54	people	_	people	NNS	O	(u<root> / --LEX--  :prep-as-of (f<mod>))	person	(mod())	45	MOD_mod	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@o@@ordinal-entity, 49@@p@@great, 24@@d@@divide-02, 9@@r@@essential, 20@@s@@put-01, 35@@s@@share-01, 3@@s@@look-01, 54@@u@@person, 2@@d@@we, 12@@s@@begin-01, 45@@a@@and, 8@@explicitanon0@@1, 29@@b@@behind, 36@@d@@ideal, 17@@p@@this, 27@@n@@recent, 22@@d@@bitterness, 44@@d@@strong-02, 41@@h@@heart, 38@@s@@lie-01, 53@@s@@free-04, 46@@d@@unity, 33@@s@@rediscover-01, 28@@n@@past, 13@@s@@heal-01, 31@@a@@and, 15@@d@@wound, 23@@a@@and]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	end,	_	end,	NNS	O	_	name	_	0	IGNORE	true
4	Gloria's	_name_	Gloria's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
5	eczema	_	eczema	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_dom	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	severe	_	severe	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	22	APP_op1	true
9	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
10	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	skin	_	skin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	broke	_	break	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
13	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	12	MOD_mod	true
14	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	17	APP_s	true
17	changed	_	change	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
18	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	clothes	_	clothe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
20	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	MOD_op1	true
21	nappy,	_	nappy,	NNS	O	_	et-cetera	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	words	_	word	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	MOD_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	Crown	_name_	Crown	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
29	prosecutor,	_	prosecutor,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
30	Mark_Tedeschi,_QC,	_name_	QC,	NNP	O	_	_NAME_	_	0	IGNORE	true
31	"Gloria	"gloria	"gloria	CD	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	32	APP_s	true
32	spent	_	spend	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	22	APP_op3	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	the_last_five_months	_name_	month	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	32	APP_o	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
39	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_poss	true
40	crying,	_	crying,	NNP	O	_	and	_	0	IGNORE	true
41	irritable,	_	irritable,	NNP	O	_	and	_	0	IGNORE	true
42	scratching	_	scratching	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	43	APP_op3	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	22	MOD_op1	true
44	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
45	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o2	true
47	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
48	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	42	MOD_s	true
49	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
50	solace	_	solace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
51	was	_	be	VBD	O	_	person	_	0	IGNORE	true
52	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
53	suck	_	suck	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	48	MOD_mod	true
54	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
55	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
56	mother's	_	mother's	NN	O	_	person	_	0	IGNORE	true
57	breast.	_	breast.	NN	O	_	$LEMMA$	_	0	IGNORE	true
58	"	_	"	''	O	_	expressive	_	0	IGNORE	true

nodealignment=[53@@i@@suck-01, 46@@d@@thing, 50@@d@@solace, 43@@a@@and, 42@@d@@scratching-01, 22@@a@@and, 39@@d@@life, 16@@p@@person, 16@@f@@parent, 17@@s@@change-01, 19@@d@@clothe, 16@@h@@have-rel-role-91, 28@@p@@Crown, 25@@s@@word-01, 36@@m@@month, 31@@n@@_NAME_, 31@@p@@person, 13@@r@@rate-entity-91, 5@@d@@eczema, 32@@s@@spend-02, 8@@r@@severe, 7@@s@@so, 11@@d@@skin, 4@@n@@_NAME_, 34@@explicitanon0@@lot, 20@@a@@or, 45@@p@@only, 48@@b@@give-01, 12@@s@@break-01]
sentence=1	Yesterday,	yesterday,	Yesterday,	NNP	O	_	name	_	0	IGNORE	true
2	North_Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	fired	_	fire	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	artillery	_	artillery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	rounds	_	round	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	aimed	_	aim	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	5	MOD_s	true
7	at	_	at	IN	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	loudspeaker	_	loudspeaker	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	South_Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	broadcasts	_	broadcast	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_s	true
14	anti-Pyongyang	_name_	anti-pyongyang	JJ	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	propaganda	_	propaganda	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	North	_name_	North	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_o2	true
19	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[11@@n@@_NAME_, 2@@c@@country, 13@@b@@broadcast-01, 4@@p@@artillery, 11@@c@@country, 3@@s@@fire-01, 5@@d@@round, 6@@s@@aim-02, 2@@n@@_NAME_, 15@@d@@propaganda, 14@@c@@city, 18@@d@@_NAME_, 14@@n@@_NAME_, 9@@d@@loudspeaker]
sentence=1	In	in	in	IN	O	_	person	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
4	study,	_	study,	NNP	O	_	and	_	0	IGNORE	true
5	those	_	those	DT	O	_	that	_	0	IGNORE	true
6	respondents	_	respondent	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	respond-01	()	14	APP_s	true
7	who	_	who	WP	O	_	person	_	0	IGNORE	true
8	indicated	_	indicate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	more	_	more	JJR	O	_	$LEMMA$	_	0	IGNORE	true
10	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	more-$LEMMA$	(op1(), mod())	14	MOD_mod	true
11	one	_	one	CD	O	(d<root> / --LEX--)	1	()	10	APP_op1	true
12	race	_	race	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	coded	_	code	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
15	as	_	as	IN	O	_	prove-01	_	0	IGNORE	true
16	“mixed	_	“mixed	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	race”	_	race”	NNS	O	_	thing	_	0	IGNORE	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@p2@@person, 8@@s@@indicate-01, 16@@d@@“mixed, 10@@s@@more-than, 11@@d@@1, 14@@s@@code-01, 6@@e2@@respond-01, 12@@d@@race, 3@@n@@current]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	serves	_	serve	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	reminder	_	reminder	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	remind-01	(s())	2	APP_o	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
9	that	_	that	WDT	O	_	obligate-01	_	0	IGNORE	true
10	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	completed	_	complete	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
14	for	_	for	IN	O	_	or	_	0	IGNORE	true
15	the	_	the	DT	O	_	name	_	0	IGNORE	true
16	cross-linguistic	_	cross-linguistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	hegemony	(mod())	17	MOD_mod	true
17	study	_	study	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	SI	_name_	SI	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_s	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
23	acquisition	_	acquisition	NN	O	(d<root> / --LEX--)	acquire-01	()	22	APP_op2	true
24	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	generally	_	generally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	general-02	(s())	23	MOD_s	true
26	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@s@@serve-01, 22@@a@@and, 1@@d@@It, 24@@s@@more, 16@@p@@hegemony, 8@@d@@work-01, 13@@s@@complete-01, 17@@s@@study-01, 19@@d@@_NAME_, 10@@s@@need-01, 21@@p@@particular, 25@@s@@general-02, 23@@d@@acquire-01, 5@@s@@remind-01]
sentence=1	Biologists	biologists	biologist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	fear	_	fear	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
5	causes	_	cause	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	"hypnosis,"	_	"hypnosis,"	,	O	_	include-91	_	0	IGNORE	true
8	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
9	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	attempt	_	attempt	NN	O	(b<root> / --LEX--  :ARG1 (r<s>)  :compared-to-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
13	to	_	to	IN	O	_	thing	_	0	IGNORE	true
14	"play	_	"play	ADD	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
15	dead"	_	dead"	VBZ	O	_	and	_	0	IGNORE	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	fool	_	fool	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	14	MOD_mod	true
18	predators	_	predator	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	prey-01	()	17	APP_s	true
19	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[18@@p2@@person, 12@@b@@attempt-01, 9@@s@@possible-01, 6@@d@@this, 14@@d@@"play-01, 5@@s@@cause-01, 4@@d@@fear-01, 17@@i@@fool-01, 2@@s@@think-01, 1@@d@@biologist, 18@@e2@@prey-01]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	10	MOD_s	true
2	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
3	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	primary	_	primary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
6	reserve	_	reserve	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	chutes	_	chute	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
8	have	_	have	VBP	O	_	$LEMMA$-quant-91	_	0	IGNORE	true
9	malfunctioned,	_	malfunctioned,	NNS	O	_	and	_	0	IGNORE	true
10	signal	_	signal	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	immediately	_	immediately	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	10	MOD_mod	true
12	to	_	to	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	fellow	_	fellow	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	jumper	_	jumper	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	10	APP_s	true
16	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
17	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
18	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
19	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	deployed	_	deploy	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	chute,	_	chute,	NNS	O	_	and	_	0	IGNORE	true
23	waving	_	wave	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op1	true
24	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	arms	_	arm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
27	signalling	_	signal	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op2	true
28	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
30	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
31	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
32	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	33	MOD_mod	true
33	functional	_	functional	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@n@@immediate, 23@@s@@wave-01, 15@@e2@@jumper, 25@@d@@arm, 32@@explicitanon0@@-, 19@@n@@yet, 26@@a@@and, 1@@s@@have-condition-91, 15@@p2@@person, 14@@p@@fellow, 33@@d@@functional, 7@@d@@chute, 18@@explicitanon0@@-, 2@@p@@both, 20@@s@@deploy-01, 10@@s@@signal-01, 4@@p@@primary, 27@@s@@signal-01, 6@@p@@reserve]
sentence=1	Jerome	_name_	Jerome	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	initially	_	initially	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	initial	(mod())	3	MOD_mod	true
3	used	_	use	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	0	ROOT	true
4	classical	_	classical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	authors	_	author	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	write-01	()	3	APP_o	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	describe	_	describe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o2	true
8	Christian	_name_	christian	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	hell	_	hell	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	indicated	_	indicate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
17	classical	_	classical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
20	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
21	deep	_	deep	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	shame	_	shame	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
25	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	22	MOD_s	true
26	practices,	_	practices,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	pederasty	_	pederasty	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
30	which	_	which	WDT	O	_	name	_	0	IGNORE	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
33	in	_	in	IN	O	_	i	_	0	IGNORE	true
34	Rome.	_name_	Rome.	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	22	MOD_mod	true
35	[citation	_	[citation	XX	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
36	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	MOD_s	true
37	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@p@@classical, 19@@a@@and, 34@@c@@city, 9@@d@@concept, 12@@g@@hell, 36@@s@@need-01, 25@@s@@relate-01, 3@@i@@use-01, 32@@s@@find-01, 34@@n@@_NAME_, 18@@d@@educate-01, 14@@s@@indicate-01, 5@@e2@@write-01, 1@@n@@_NAME_, 22@@d@@shame-01, 29@@g@@pederasty, 1@@p@@person, 5@@p2@@person, 35@@n@@[citation, 7@@s@@describe-01, 8@@r@@religious-group, 4@@p@@classical, 21@@s@@deep-02, 2@@n@@initial, 8@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	Olmec	_name_	Olmec	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	carved	_	carve	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	heads	_	head	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	giant	_	giant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	boulders	_	boulder	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	that	_	that	WDT	O	_	foot	_	0	IGNORE	true
9	ranged	_	range	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	from	_	from	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_o	true
11	four	_	four	CD	O	(d<root> / --LEX--)	4	()	10	APP_s	true
12	to	_	to	TO	O	_	year	_	0	IGNORE	true
13	eleven	_	eleven	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	10	(mod())	14	MOD_mod	true
14	feet	_	foot	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	16	APP_s	true
15	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
16	height	_	height	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	high-02	(s())	9	APP_o	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
19	weigh	_	weigh	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
20	up	_	up	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$-to	(op1())	3	APP_o2	true
21	to	_	to	TO	O	_	up-$LEMMA$	_	0	IGNORE	true
22	fifty	_	fifty	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	20	(mod())	23	MOD_mod	true
23	tons	_	ton	NNS	O	(m<root> / mass-quantity  :unit (g2 / --LEX--))	$LEMMA$	()	20	APP_op1	true
24	.	_	.	.	O	_	have-quant-91	_	0	IGNORE	true

nodealignment=[11@@d@@4, 22@@explicitanon0@@20, 23@@g2@@ton, 3@@b@@carve-01, 13@@explicitanon0@@10, 9@@s@@range-01, 14@@m@@foot, 4@@d@@head, 23@@m@@mass-quantity, 18@@s@@possible-01, 2@@n@@_NAME_, 2@@e@@ethnic-group, 20@@o@@up-to, 16@@s@@high-02, 6@@p@@giant, 14@@d@@distance-quantity, 7@@s@@boulder, 19@@s@@weigh-01, 10@@s@@and]
sentence=1	In	in	in	IN	O	_	cause-01	_	0	IGNORE	true
2	passing	_	pass	VBG	O	(a<root> / --LEX--  :ARG2 (u<o2>)  :ARG1 (t2<o>)  :ARG0 (t<s>)  :condition-of (c<mod>))	$LEMMA$-05	(mod(), o2(), s(), o())	11	MOD_mod	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Vice	vice	Vice	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	President,	president,	President,	NNP	O	_	-	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	do	_	do	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
12	so	_	so	RB	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	profound	_	profound	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	weight	_	weight	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_s	true
20	of	_	of	IN	O	_	person	_	0	IGNORE	true
21	responsibility	_	responsibility	NN	O	(d<root> / --LEX--)	responsible-03	()	19	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	fall	_	fall	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
25	on	_	on	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
26	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	shoulders	_	shoulder	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	tomorrow	_name_	tomorrow	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	and,	_	and,	JJ	O	_	person	_	0	IGNORE	true
30	therefore,	_	therefore,	NNS	O	_	contrast-01	_	0	IGNORE	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	understanding,	_	understanding,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
34	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	he	(s(), o())	11	MOD_o	true
35	patience,	_	patience,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	APP_o2	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	cooperation	_	cooperation	NN	O	(d<root> / --LEX--)	cooperate-01	()	35	APP_s	true
38	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	will	_	will	MD	O	_	person	_	0	IGNORE	true
40	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	true
41	from	_	from	IN	O	_	person	_	0	IGNORE	true
42	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
43	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	25	MOD_mod	true
44	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@a@@pass-05, 42@@p@@all, 19@@s@@weight, 24@@s@@fall-01, 3@@p@@this, 34@@s@@he, 10@@p@@also, 7@@d@@Vice, 15@@p@@profound, 27@@d@@shoulder, 21@@d@@responsible-03, 9@@d@@i, 40@@s@@need-01, 16@@s@@sense-01, 25@@p@@on, 11@@b@@do-02, 35@@s@@patience,, 43@@n@@_NAME_, 43@@c@@country, 12@@d@@so, 37@@d@@cooperate-01, 28@@n@@tomorrow, 4@@d@@office]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	-1	_	0	IGNORE	true
4	ARES	_name_	ARES	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	group	_	group	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	handles	_	handle	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	returned	_	return	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	samples	_	sample	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	true
10	(Moon	(moon	(moon	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	Rocks,_Genesis_chips,	_name_	chips,	NNP	O	_	mean-01	_	0	IGNORE	true
12	Meteorites,	_name_	Meteorites,	NNP	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
14	Interplanetary_Dust_Particles	_name_	Particles	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	collected	_	collect	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
16	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	U2	u2	U2	NNP	O	(d<root> / --LEX--)	_NAME_	()	15	APP_s	true
18	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	stratosphere)	_	stratosphere)	NNS	O	_	_NAME_	_	0	IGNORE	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@collect-01, 1@@d@@this, 8@@s@@return-01, 9@@d@@sample-01, 7@@s@@handle-01, 14@@d@@Particles, 4@@n@@_NAME_, 10@@p@@(moon, 17@@d@@_NAME_, 13@@a@@and, 5@@r@@group]
sentence=1	Often,	_name_	often,	CD	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	entrepreneurial	_	entrepreneurial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	mindset	_	mindset	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
5	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	futuristic	_	futuristic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
9	shake	_	shake	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	7	MOD_s	true
10	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	normal,	_	normal,	NNP	O	_	thing	_	0	IGNORE	true
13	conventional	_	conventional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	processes	_	process	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	grounded	_	ground	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
18	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
19	experience	_	experience	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
20	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@conventional, 14@@d@@process-02, 3@@p@@entrepreneurial, 6@@p@@futuristic, 21@@b@@time, 17@@s@@ground-02, 7@@d@@idea, 5@@s@@include-01, 4@@d@@mindset, 19@@d@@experience-01, 9@@s@@shake-up-03]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	described	_	describe	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	0	ROOT	true
3	Montalvo	_name_	Montalvo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	individual,	_	individual,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
7	"facing	_	"face	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o2	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	penitentiary	_	penitentiary	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	thanks	_	thank	NNS	O	(i2<root> / --LEX--  :ARG0 (i<s>)  :ARG2 (t<o>)  :purpose-of (l<mod>))	thank-01	(mod(), s(), o())	7	MOD_mod	true
12	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
15	sins:	_name_	sins:	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	2	MOD_s	true
16	a)	_	a)	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	Leaving	leaving	leave	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-15	(s())	14	APP_s	true
18	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
19	lifehood	_	lifehood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
21	slavery	_	slavery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	taste	_	taste	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	25	APP_s	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	23	APP_o	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	world.	_	world.	NN	O	(d<root> / --LEX--)	_NAME_	()	28	APP_op2	true
31	b)	_	b)	XX	O	_	_NAME_	_	0	IGNORE	true
32	Refusing	refusing	refuse	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
33	-	_	-	:	O	_	cause-01	_	0	IGNORE	true
34	despite	_	despite	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	provocation	_	provocation	NN	O	(d<root> / --LEX--)	provoke-01	()	37	APP_op1	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	32	APP_o	true
38	incentive	_	incentive	NN	O	(d<root> / --LEX--)	incentivize-01	()	37	APP_op2	true
39	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	37	MOD_mod	true
40	threat	_	threat	NN	O	(d<root> / --LEX--)	$LEMMA$en-01	()	37	APP_op3	true
41	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
42	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
43	frame	_	frame	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_s	true
44	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	45	MOD_mod	true
45	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
46	who	_	who	WP	O	_	slash	_	0	IGNORE	true
47	went	_	go	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-02	(o(poss_UNIFY_s()))	45	MOD_s	true
48	out	_	out	IN	O	_	$LEMMA$-06	_	0	IGNORE	true
49	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
50	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
51	ways	_	way	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	47	APP_o	true
52	(and	_	(and	NNP	O	_	$LEMMA$	_	0	IGNORE	true
53	dipped	_	dip	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	45	MOD_s	true
54	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
55	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
56	pockets)	_	pockets)	NNS	O	_	thing	_	0	IGNORE	true
57	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
58	help	_	help	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	53	MOD_mod	true
59	the	_	the	DT	O	_	person	_	0	IGNORE	true
60	kid	_	kid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	61	APP_s	true
61	achieve	_	achieve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	58	APP_o	true
62	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
63	freedom.	_	freedom.	NN	O	_	$LEMMA$	_	0	IGNORE	true
64	"	_	"	''	O	_	person	_	0	IGNORE	true

nodealignment=[19@@d@@lifehood, 36@@d@@provoke-01, 38@@d@@incentivize-01, 58@@s@@help-01, 61@@s@@achieve-01, 35@@p@@every, 53@@s@@dip-01, 21@@p@@slavery, 23@@s@@get-01, 27@@d@@free-04, 25@@s@@taste-01, 11@@i2@@thank-01, 30@@d@@_NAME_, 14@@s@@follow-01, 28@@a@@and, 47@@l@@go-02, 17@@s@@leave-15, 60@@d@@kid, 51@@m@@way, 43@@s@@frame-01, 3@@n@@_NAME_, 32@@s@@refuse-01, 39@@o@@and, 40@@d@@threaten-01, 3@@p@@person, 15@@s@@and, 7@@s@@"face-01, 44@@explicitanon0@@3, 2@@t@@describe-01, 37@@a@@and, 45@@d@@guy, 1@@d@@He, 9@@d@@penitentiary]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you're	_	you're	PRP	O	_	-	_	0	IGNORE	true
3	a	_	a	DT	O	_	-	_	0	IGNORE	true
4	chronic	_	chronic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	procrastinator,	_	procrastinator,	NNP	O	_	have-03	_	0	IGNORE	true
6	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	pain	_	pain	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
11	stress	_	stress	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	10	APP_op2	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-03	(s(), o())	10	MOD_s	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-off-06	(s())	13	APP_o	true
16	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
17	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@thing, 11@@d@@stress-02, 9@@d@@pain-01, 4@@p@@chronic, 7@@s@@know-01, 10@@a@@and, 13@@s@@come-03, 15@@s@@put-off-06]
sentence=1	Stardust	stardust	Stardust	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
2	is	_	be	VBZ	O	_	recognize-02	_	0	IGNORE	true
3	a	_	a	DT	O	_	name	_	0	IGNORE	true
4	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_poss	true
5	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	capsule	_	capsule	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	0	ROOT	true
7	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
8	collected	_	collect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	samples	_	sample	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
10	from	_	from	IN	O	_	thing	_	0	IGNORE	true
11	comet	_	comet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	81P/Wild	_name_	81p/wild	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
13	(also	_	(also	XX	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
14	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
16	"Wild	"wild	"wild	CD	O	_	_NAME_	_	0	IGNORE	true
17	2)	_	2)	CD	O	_	mean-01	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	deep	_	deep	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	MOD_s	true
20	space	_	space	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
22	landed	_	land	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_op2	true
23	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	Earth	_name_	Earth	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	22	MOD_mod	true
26	on	_	on	IN	O	_	3	_	0	IGNORE	true
27	January_15,_2006	_name_	2006	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_DATE_	(mod())	22	MOD_mod	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@a@@and, 6@@m@@capsule, 23@@a@@back, 4@@n@@_NAME_, 27@@explicitanon0@@_DATE_, 12@@n@@_NAME_, 20@@b@@space, 14@@s@@know-02, 11@@d@@comet, 5@@p@@space, 4@@g@@government-organization, 25@@b@@_NAME_, 1@@n@@_NAME_, 22@@d@@land-01, 19@@s@@deep, 9@@s@@sample-01, 8@@s@@collect-01, 13@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	term	_	term	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
3	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
4	qualified	_	qualify	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	by	_	by	IN	O	_	and	_	0	IGNORE	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	concept	_	concept	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	called	_	call	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	junction	_	junction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
13	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
14	one	_	one	CD	O	(d<root> / --LEX--)	1	()	13	APP_o	true
15	idea,	_	idea,	NNP	O	_	thing	_	0	IGNORE	true
16	expressed	_	express	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
17	by	_	by	IN	O	_	thing	_	0	IGNORE	true
18	means	_	mean	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	two	_	two	CD	O	(d<root> / --LEX--)	2	()	21	APP_op1	true
21	or	_	or	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
22	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	elements,	_	elements,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	whereas	_	whereas	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
25	a	_	a	DT	O	_	thing	_	0	IGNORE	true
26	nexus	_	nexus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	combines	_	combine	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
28	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	29	MOD_mod	true
29	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[26@@d@@nexus, 24@@s@@contrast-01, 27@@s@@combine-01, 28@@explicitanon0@@2, 29@@d@@idea, 8@@d@@concept, 22@@d@@more, 4@@s@@qualify-02, 1@@p@@this, 13@@s@@represent-01, 11@@d@@junction, 2@@d@@term-01, 7@@p@@further, 14@@d@@1, 21@@b2@@or, 16@@s@@express-01, 9@@s@@call-01, 20@@d@@2]
sentence=1	Additionally,	additionally,	additionally,	CD	O	_	-	_	0	IGNORE	true
2	diversity	_	diversity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	been	_	be	VBN	O	_	and	_	0	IGNORE	true
5	shown	_	show	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	supportive	_	supportive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	society	(mod())	11	MOD_mod	true
11	climates	_	climate	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
13	effective	_	effective	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	15	MOD_s	true
14	learning	_	learning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
15	environments	_	environment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
16	[4],	_	[4],	XX	O	_	include-91	_	0	IGNORE	true
17	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
19	facilitate	_	facilitate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	mentoring	_	mentoring	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	scientists	_	scientist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
25	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[21@@s@@mentoring-01, 24@@d@@scientist, 10@@p@@society, 12@@a@@and, 9@@s@@supportive-01, 2@@d@@diversity, 11@@d@@climate, 8@@s@@more, 7@@s@@produce-01, 5@@s@@show-01, 14@@p@@learning-01, 18@@s@@possible-01, 13@@s@@effective-04, 15@@d@@environment, 19@@s@@facilitate-01, 23@@p@@young]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
2	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	Burns	_name_	Burns	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
5	that's	_	that's	PRP	O	_	-	_	0	IGNORE	true
6	been	_	be	VBN	O	_	person	_	0	IGNORE	true
7	objecting	_	object	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	having	_	have	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	APP_o	true
11	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@p@@person, 10@@s@@have-03, 11@@d@@it, 9@@d@@our, 7@@s@@object-01, 4@@n@@_NAME_, 1@@s@@cause-01]
sentence=1	Near	near	near	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_s	true
2	the_Temple_of_the_Feathered_Serpent,	_name_	serpent,	CD	O	_	_NAME_	_	0	IGNORE	true
3	graves	_	grave	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
5	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	true
6	uncovered	_	uncover	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	suggest	_	suggest	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
9	humans	_	human	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	sacrificed	_	sacrifice	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	religion	(mod())	14	MOD_mod	true
14	purposes	_	purpose	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[6@@s@@uncover-01, 11@@s@@sacrifice-01, 3@@d@@grave, 13@@p@@religion, 8@@s@@suggest-01, 9@@d@@human, 14@@o@@purpose, 1@@s@@near-02]
sentence=1	"We	"we	"We	LS	O	(d<root> / --LEX--)	$REPL$	()	19	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	MOD_s	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	thank	_	thank	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	locations	_	location	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	expressed	_	express	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	MOD_s	true
11	an	_	an	DT	O	_	thing	_	0	IGNORE	true
12	interest	_	interest	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
13	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	one	_	one	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	$LEMMA$	()	12	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	14	MOD_mod	true
17	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	14	MOD_mod	true
18	treasures,"	_	treasures,"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	said	_	say	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
20	Bolden	_name_	Bolden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
21	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	gathered	_	gather	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	crowd	_	crowd	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o2	true
25	which	_	which	WDT	O	_	and	_	0	IGNORE	true
26	contained	_	contain	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
27	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	KSC	_name_	KSC	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	29	APP_s	true
29	employees	_	employee	NNS	O	(p<root> / person  :ARG1-of (f2 / --LEX--  :ARG0 (s<s>)))	employ-01	(s())	26	APP_o	true
30	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[4@@s@@thank-01, 1@@d@@"we, 27@@explicitanon0@@many, 29@@f2@@employ-01, 2@@c@@want-01, 28@@n@@_NAME_, 26@@s@@contain-01, 29@@p@@person, 19@@b@@say-01, 23@@s@@gather-02, 28@@o2@@organization, 14@@t@@thing, 10@@c@@express-01, 20@@n@@_NAME_, 8@@d@@location, 20@@p@@person, 24@@d@@crowd, 12@@s@@interest-01, 5@@p@@all, 17@@p@@nation, 14@@explicitanon0@@one, 16@@p@@this]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_o	true
3	am	_	be	VBP	O	_	person	_	0	IGNORE	true
4	glad	_	glad	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-02	(s(s_UNIFY_o()))	1	APP_op2	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	4	APP_s	true
7	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	mayor	_	mayor	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	who	_	who	WP	O	_	name	_	0	IGNORE	true
12	follows	_	follow	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
13	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	16	MOD_mod	true
14	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	distinguished	_	distinguished	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	distinguish-01	(s())	16	MOD_s	true
16	mayors	_	mayor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	city,	_	city,	NNP	O	_	_NAME_	_	0	IGNORE	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	carries	_	carry	VBZ	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-on-02	(o(poss_UNIFY_s()))	10	MOD_s	true
22	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	tradition	_	tradition	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_o	true
25	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
26	Joe_Clark,	_name_	Clark,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
27	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_poss	true
28	United_States	_name_	States	NNP	O	(g<root> / government-organization  :name (n3 / --LEX--)  :poss (c<poss>))	_NAME_	(poss())	29	APP_s	true
29	Senator	senator	Senator	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	37	APP_op1	true
30	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	a	_	a	DT	O	_	1	_	0	IGNORE	true
33	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	mayor	_	mayor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	Philadelphia,	_name_	philadelphia,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	_NAME_	(s(), o())	1	MOD_s	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_o	true
38	Dick_Dilworth,	_name_	Dilworth,	NNP	O	_	_NAME_	_	0	IGNORE	true
39	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
40	followed	_	follow	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	37	APP_op2	true
41	him,	_	him,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
42	who	_	who	WP	O	_	he	_	0	IGNORE	true
43	was	_	be	VBD	O	_	person	_	0	IGNORE	true
44	a	_	a	DT	O	_	1	_	0	IGNORE	true
45	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	mayor	_	mayor	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
47	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
48	Philadelphia	_name_	Philadelphia	NNP	O	_	_NAME_	_	0	IGNORE	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@be-located-at-91, 7@@d@@here, 29@@g@@Senator, 37@@a@@and, 27@@d@@your, 40@@d@@follow-01, 45@@p@@great, 46@@p@@mayor, 33@@p@@great, 28@@n3@@_NAME_, 34@@d@@mayor, 18@@p@@this, 12@@s@@follow-01, 14@@p@@other, 13@@explicitanon0@@2, 1@@a@@and, 15@@s@@distinguish-01, 16@@d@@mayor, 4@@c@@glad-02, 36@@s@@_NAME_, 2@@d@@i, 28@@g@@government-organization, 29@@h@@have-org-role-91, 21@@l@@carry-on-02, 24@@m@@tradition, 10@@p@@mayor]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-09	(s(), o())	0	ROOT	true
3	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
4	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	2	MOD_mod	true
5	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_o	true
7	equipment	_	equipment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	that	_	that	WDT	O	_	1	_	0	IGNORE	true
9	is	_	be	VBZ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	year	(mod())	2	MOD_mod	true
10	30_years_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	7	MOD_mod	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@It, 9@@explicitanon0@@year, 6@@s@@have-03, 7@@d@@equipment, 10@@t@@temporal-quantity, 5@@d@@they, 10@@y@@year, 2@@s@@come-out-09, 4@@n@@recent]
sentence=1	Construction	construction	construction	NN	O	(d<root> / --LEX--)	construct-01	()	3	APP_dom	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	underway	_	underway	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	at	_	at	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	mosque	_	mosque	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
8	order	_	order	NN	O	_	and	_	0	IGNORE	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	enlarge	_	enlarge	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	mosque	_	mosque	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	MOD_s	true
14	improve	_	improve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
15	crowd	_	crowd	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
16	control,	_	control,	NNP	O	_	and	_	0	IGNORE	true
17	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
19	been	_	be	VBN	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	recurring	_	recur	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	problem	_	problem	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
23	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	Mecca's_pilgrimages	_name_	pilgrimage	NNS	O	(n3<root> / --LEX--  :name-of (e / event  :time-of (l<mod>)))	_NAME_	(mod())	22	MOD_mod	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@construct-01, 24@@n3@@_NAME_, 24@@e@@event, 21@@s@@recur-01, 22@@s@@problem, 13@@a@@and, 10@@s@@enlarge-01, 15@@d@@crowd, 3@@r@@underway, 6@@b@@mosque, 14@@s@@improve-01]
sentence=1	Open	open	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	2	MOD_s	true
2	Education_Resources	_name_	resource	NNS	O	(d<root> / --LEX--)	_NAME_	()	12	APP_s	true
3	coupled	_	couple	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
4	with	_	with	IN	O	_	-	_	0	IGNORE	true
5	innovative	_	innovative	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	innovate-01	(s())	6	MOD_s	true
6	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	ICT	ict	ICT	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	in	_	in	IN	O	_	person	_	0	IGNORE	true
10	education	_	education	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	will	_	will	MD	O	_	thing	_	0	IGNORE	true
12	accelerate	_	accelerate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	realization	_	realization	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	realize-02	(s())	12	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	Kenya	_name_	Kenya	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	a	_	a	DT	O	_	resemble-01	_	0	IGNORE	true
22	knowledge-based	_	knowledge-based	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	23	MOD_s	true
23	economy	_	economy	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@couple-01, 6@@s@@use-01, 16@@s@@modern-02, 10@@d@@education, 12@@s@@accelerate-01, 22@@s@@knowledge-based, 23@@explicitanon0@@economy, 13@@s@@realize-02, 1@@s@@open-04, 2@@d@@_NAME_, 5@@s@@innovate-01, 17@@d@@Kenya, 8@@d@@ICT]
sentence=1	The	the	the	DT	O	_	long-03	_	0	IGNORE	true
2	wind-roughened	_	wind-roughened	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
3	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	with	_	with	IN	O	_	name	_	0	IGNORE	true
8	the	_	the	DT	O	_	and	_	0	IGNORE	true
9	increased	_	increase	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	brightness	_	brightness	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	temperature	_	temperature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	(due	_	(due	-LRB-	O	_	$LEMMA$-01	_	0	IGNORE	true
13	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
14	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	roughness	_	roughness	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$	(mod(), s())	11	MOD_mod	true
17	effect),	_	effect),	NNP	O	_	and	_	0	IGNORE	true
18	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
19	induces	_	induce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
20	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	21	MOD_mod	true
21	biases	_	bias	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
23	applied	_	apply	VBN	O	(d<root> / --LEX--  :ARG2 (s<s>)  :time-of (l<mod>))	$LEMMA$-02	(mod(), s())	19	MOD_mod	true
24	to	_	to	IN	O	_	and	_	0	IGNORE	true
25	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	26	MOD_s	true
26	areas	_	area	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
27	[32]	_	[32]	XX	O	_	mean-01	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@temperature, 3@@p@@sea, 23@@d@@apply-02, 16@@i@@roughness, 10@@p@@brightness, 9@@s@@increase-01, 2@@s@@wind-roughened-01, 25@@s@@differ-02, 4@@d@@surface, 26@@d@@area, 14@@p@@sea, 15@@d@@surface, 20@@p@@region, 19@@s@@induce-01, 21@@d@@bias, 6@@s@@associate-01]
sentence=1	Tried-and-tested	tried-and-tested	tried-and-tested	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
2	processes	_	process	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
4	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	12	MOD_o	true
7	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
8	proven	_	prove	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	history	_	history	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
10	of	_	of	IN	O	_	and	_	0	IGNORE	true
11	success	_	success	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	succeed-01	(mod())	9	MOD_mod	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
13	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	formidable	_	formidable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	obstacle	_	obstacle	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	12	APP_s	true
17	to	_	to	IN	O	_	thing	_	0	IGNORE	true
18	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@s@@new-01, 19@@d@@idea, 15@@p@@formidable, 16@@s@@obstacle, 1@@s@@tried-and-tested-01, 4@@d@@product, 6@@s@@have-03, 12@@s@@possible-01, 9@@b@@history, 8@@s@@prove-01, 3@@a@@and, 11@@p@@succeed-01, 2@@d@@process]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	disagreements	_	disagreement	NNS	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	disagree-01	(mod(), s())	23	MOD_mod	true
5	about	_	about	IN	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	policies	_	policy	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	be	_	be	VB	O	_	thing	_	0	IGNORE	true
10	implemented,	_	implemented,	NNP	O	_	and	_	0	IGNORE	true
11	then	_	then	RB	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	wins	_	win	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	18	MOD_mod	true
18	game	_	game	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	will	_	will	MD	O	_	thing	_	0	IGNORE	true
20	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	decision	_	decision	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	decide-01	(s())	0	ROOT	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@d@@policy-01, 4@@o@@disagree-01, 17@@p@@politics, 18@@d@@game, 22@@p@@final, 23@@s@@decide-01, 13@@d@@group, 15@@t@@win-01]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	applying	_	apply	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	14	MOD_mod	true
3	to	_	to	IN	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	Cuban	_name_	Cuban	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	Consulate	consulate	Consulate	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	post,	_	post,	NNP	O	(t<root> / --LEX--  :manner-of (h<mod>))	_NAME_	(mod())	2	MOD_mod	true
9	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	charge	_	charge	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
14	introduced	_	introduce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
15	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
16	2011	_name_	2011	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	14	MOD_mod	true
17	which	_	which	WDT	O	_	and	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	cost-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	cost-01	_	0	IGNORE	true
20	£	_	£	$	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	dollar	()	13	APP_s	true
21	25	_	25	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	20	MOD_mod	true
22	for	_	for	IN	O	_	dollar	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	non-personal	_	non-personal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	transaction	_	transaction	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	transact-01	(mod())	20	MOD_mod	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[16@@d@@date-entity, 2@@t@@apply-02, 12@@s@@new-01, 6@@d@@Consulate, 20@@m2@@monetary-quantity, 14@@s@@introduce-02, 16@@explicitanon0@@_NUMBER_, 20@@d2@@dollar, 5@@n@@_NAME_, 21@@explicitanon0@@_NUMBER_, 25@@o@@transact-01, 8@@t@@_NAME_, 24@@p@@non-personal, 5@@c@@country, 13@@s@@charge-01]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	3	MOD_mod	true
2	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	measures	_	measure	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
4	were	_	be	VBD	O	_	person	_	0	IGNORE	true
5	compared	_	compare	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	in	_	in	IN	O	_	and	_	0	IGNORE	true
7	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	studies	_	study	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
9	to	_	to	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
12	measures	_	measure	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	5	APP_o	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	16	MOD_s	true
16	set	_	set	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	subjects	_	subject	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
20	had	_	have	VBD	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	experienced	_	experience	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	period	_	period	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	limited	_	limited	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	limit-01	(s())	27	MOD_s	true
27	exposure	_	exposure	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	expose-01	(mod())	24	MOD_mod	true
28	[17],	_	[17],	XX	O	_	$LEMMA$	_	0	IGNORE	true
29	[18],	_	[18],	XX	O	_	$LEMMA$	_	0	IGNORE	true
30	[22],	_	[22],	XX	O	_	$LEMMA$	_	0	IGNORE	true
31	[23],	_name_	[23],	XX	O	_	mean-01	_	0	IGNORE	true
32	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
33	to	_	to	TO	O	_	instead-of-91	_	0	IGNORE	true
34	retrospective	_	retrospective	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	ratings	_	rating	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	rate-01	(s(), o())	32	APP_op2	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	the	_	the	DT	O	_	instead-of-91	_	0	IGNORE	true
38	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
39	subjects	_	subject	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
40	[21],	_	[21],	XX	O	_	cause-01	_	0	IGNORE	true
41	with	_	with	IN	O	_	-	_	0	IGNORE	true
42	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
43	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	45	MOD_mod	true
44	longitudinal	_	longitudinal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	study	_	study	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	46	APP_s	true
46	testing	_	test	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	APP_o	true
47	the	_	the	DT	O	_	person	_	0	IGNORE	true
48	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	MOD_s	true
49	subjects	_	subject	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_o	true
50	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	51	APP_op1	true
51	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	46	MOD_mod	true
52	after	_	after	IN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_op2	true
53	a	_	a	DT	O	_	1	_	0	IGNORE	true
54	period	_	period	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_op1	true
55	of	_	of	IN	O	_	thing	_	0	IGNORE	true
56	limited	_	limited	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	57	MOD_s	true
57	exposure	_	exposure	NN	O	(d<root> / --LEX--)	expose-01	()	50	APP_mod	true
58	[24]	_	[24]	XX	O	_	mean-01	_	0	IGNORE	true
59	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@same-01, 51@@d@@and, 50@@w@@before, 57@@d@@expose-01, 1@@p@@this, 56@@s@@limited-01, 26@@s@@limit-01, 21@@explicitanon0@@-, 32@@a@@or, 5@@s@@compare-01, 15@@s@@differ-02, 7@@explicitanon0@@most, 8@@b@@study-01, 27@@p@@expose-01, 52@@d@@after, 46@@s@@test-01, 45@@d@@study-01, 35@@s@@rate-01, 34@@p@@retrospective, 38@@s@@same-01, 39@@d@@subject, 43@@explicitanon0@@1, 49@@d@@subject, 48@@s@@same-01, 2@@d@@language, 12@@d@@measure-02, 22@@s@@experience-01, 42@@p@@only, 24@@d@@period, 3@@s@@measure-01, 44@@p@@longitudinal, 18@@g@@subject, 54@@d@@period, 16@@p@@set]
sentence=1	A	a	a	DT	O	_	thing	_	0	IGNORE	true
2	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	6	MOD_s	true
5	prove	_	prove	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
6	helpful	_	helpful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-04	(s())	5	APP_o	true
7	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	consider	_	consider	VB	O	(i<root> / --LEX--  :domain (t<dom>)  :ARG1 (j<s>))	$LEMMA$-02	(dom(), s())	0	ROOT	true
10	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	amr-unknown	(mod())	11	MOD_mod	true
11	fortunate	_	fortunate	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	9	APP_s	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	that	_	that	IN	O	_	thing	_	0	IGNORE	true
15	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
16	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
17	been	_	be	VBN	O	_	and	_	0	IGNORE	true
18	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	11	APP_dom	true
19	to	_	to	IN	O	_	thing	_	0	IGNORE	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
22	far	_	far	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	so-$LEMMA$	(mod())	18	MOD_mod	true
23	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[18@@s@@good-02, 5@@c@@prove-01, 15@@d@@life, 4@@s@@possible-01, 12@@d@@you, 10@@s@@amr-unknown, 9@@i@@consider-02, 6@@s@@helpful-04, 2@@d@@strategy, 22@@n@@so-far, 11@@r@@fortunate]
sentence=1	Those	those	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	6	MOD_mod	true
2	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
3	power	_	power	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
4	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
5	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	interest	_	interest	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	in	_	in	IN	O	(d<root> / --LEX--)	person	()	6	APP_s	true
8	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
9	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	devolving	_	devolve	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	14	MOD_mod	true
14	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	agents,	_	agents,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	would	_	would	MD	O	_	thing	_	0	IGNORE	true
19	occur	_	occur	VB	O	_	event	_	0	IGNORE	true
20	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	22	MOD_mod	true
22	institutions	_	institution	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
23	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	pluralistic	_	pluralistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	[16]	_name_	[16]	XX	O	_	mean-01	_	0	IGNORE	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@p@@politics, 22@@b@@institution, 10@@s@@devolve-01, 26@@p@@pluralistic, 3@@t@@power, 14@@d@@number, 9@@d@@power, 5@@s@@little, 1@@p@@that, 6@@s@@interest-01, 7@@d@@person, 13@@f2@@great, 13@@m@@more, 25@@s@@more]
sentence=1	An	an	an	DT	O	_	person	_	0	IGNORE	true
2	exchange	_	exchange	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
3	student	_	student	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	11	APP_op1	true
4	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
5	goes	_	go	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
6	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	semester	_	semester	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
10	abroad	_	abroad	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
12	a	_	a	DT	O	_	-	_	0	IGNORE	true
13	sociologist	_	sociologist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
14	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
15	returns	_	return	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	field	_	field	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
19	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
20	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	19	APP_s	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	20	APP_o	true
23	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
24	associate	_	associate	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	22	APP_dom	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	values	_	value	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	24	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
30	own	_	own	JJ	O	_	person	_	0	IGNORE	true
31	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_poss	true
32	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	24	MOD_mod	true
33	having	_	have	VBG	O	_	cause-01	_	0	IGNORE	true
34	experienced	_	experience	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_op1	true
35	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
36	they	_	they	PRP	O	_	person	_	0	IGNORE	true
37	deem	_	deem	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_s	true
38	a	_	a	DT	O	_	thing	_	0	IGNORE	true
39	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	upright	_	upright	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
41	or	_	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
42	nobler	_	noble	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	wise	(s())	43	MOD_s	true
43	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	37	APP_s	true
44	of	_	of	IN	O	_	thing	_	0	IGNORE	true
45	living	_	living	NN	O	(d<root> / --LEX--)	live-01	()	43	APP_mod	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@s@@deem-01, 45@@d@@live-01, 3@@p2@@person, 42@@m@@more, 10@@b@@abroad, 13@@d@@sociologist, 2@@p@@exchange-01, 5@@g@@go-02, 39@@s@@more, 27@@m@@value, 3@@e2@@study-01, 40@@p@@upright, 22@@r@@difficult, 24@@s@@associate-01, 43@@t@@way, 32@@w@@after, 41@@d@@or, 20@@s@@find-02, 7@@w@@after, 19@@s@@possible-01, 11@@a@@or, 42@@b@@wise, 9@@d@@semester, 31@@d@@culture, 18@@d@@field, 6@@d@@home, 15@@g@@return-01, 34@@s@@experience-01]
sentence=1	Citizens_of_Antigua	_name_	Antigua	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	11	APP_op1	true
3	Barbuda	_name_	Barbuda	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_op2	true
4	(28	_	(28	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
5	days),	_	days),	NNP	O	_	hyperlink-91	_	0	IGNORE	true
6	Barbados	_name_	Barbados	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_op3	true
7	(28	_	(28	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	11	MOD_mod	true
8	days),	_	days),	NNP	O	_	and	_	0	IGNORE	true
9	Benin,	benin,	Benin,	NNP	O	_	and	_	0	IGNORE	true
10	Bosnia	_name_	Bosnia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_op2	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
12	Herzegovina,_CIS	_name_	CIS	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_op3	true
13	(except	_	(except	-LRB-	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	11	MOD_s	true
14	Ukraine	_name_	Ukraine	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	30	APP_op2	true
16	Uzbekistan),_Dominica,_Grenada	_name_	Grenada	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	15	APP_op4	true
17	(60	_	(60	.	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
18	days),	_	days),	NNP	O	_	date-interval	_	0	IGNORE	true
19	Liechtenstein	_name_	Liechtenstein	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	39	APP_op3	true
20	(90	_	(90	.	O	_	_NUMBER_	_	0	IGNORE	true
21	days),	_	days),	NNP	O	_	and	_	0	IGNORE	true
22	Macedonia,	macedonia,	Macedonia,	NNP	O	(o<root> / --LEX--  :op1 (b<op1>))	and	(op1())	11	APP_op3	true
23	Malaysia	malaysia	Malaysia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	22	APP_op1	true
24	(90	_	(90	.	O	_	_NUMBER_	_	51	IGNORE	true
25	days),	_	days),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
26	Mongolia,	mongolia,	Mongolia,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	Montenegro	_name_	Montenegro	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	40	APP_s	true
28	(90	_	(90	.	O	(d<root> / --LEX--)	_NUMBER_	()	51	APP_o	true
29	days),	_	days),	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
30	Namibia,	namibia,	namibia,	CD	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	11	MOD_op1	true
31	Singapore,	singapore,	singapore,	CD	O	_	and	_	0	IGNORE	true
32	Slovakia,	slovakia,	slovakia,	NN	O	_	and	_	0	IGNORE	true
33	Saint	saint	Saint	NNP	O	_	$LEMMA$	_	0	IGNORE	true
34	Kitts	kitts	Kitts	NNP	O	(d<root> / --LEX--)	_NAME_	()	39	APP_op4	true
35	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
36	Nevis,_Saint	_name_	Saint	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	39	MOD_mod	true
37	Lucia,	lucia,	lucia,	CD	O	_	$LEMMA$	_	0	IGNORE	true
38	Saint_Vincent	_name_	Vincent	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	13	APP_o	true
40	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	11	APP_op2	true
41	Grenadines,_Serbia	_name_	Serbia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	39	APP_op2	true
42	(90	_	(90	.	O	_	$LEMMA$	_	0	IGNORE	true
43	days),	_	days),	NNP	O	_	$LEMMA$	_	0	IGNORE	true
44	Turkmenistan	_name_	Turkmenistan	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	47	MOD_mod	true
45	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
46	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	47	MOD_s	true
47	stay	_	stay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	51	MOD_s	true
48	30_days	_name_	day	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	47	MOD_s	true
49	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	50	MOD_mod	true
50	visa	_	visa	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
51	.	_	.	.	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	multi-sentence	(s(), o())	11	MOD_s	true

nodealignment=[6@@n@@_NAME_, 19@@c@@country, 23@@c@@country, 44@@c@@country, 14@@n@@_NAME_, 19@@n@@_NAME_, 34@@d@@_NAME_, 28@@d@@_NUMBER_, 30@@a@@and, 38@@c@@company, 46@@s@@possible-01, 44@@n@@_NAME_, 23@@n@@_NAME_, 38@@n@@_NAME_, 48@@s@@day, 10@@c@@country, 47@@s@@stay-01, 2@@a@@and, 17@@explicitanon0@@_NUMBER_, 39@@a@@and, 36@@p@@_NAME_, 27@@n@@_NAME_, 11@@a@@and, 22@@o@@and, 27@@c@@country, 4@@p@@_NUMBER_, 13@@s@@(except, 41@@c@@country, 40@@s@@person, 15@@a@@and, 29@@d@@days),, 50@@t@@visa, 1@@c@@city, 10@@n@@_NAME_, 16@@c@@country, 41@@n@@_NAME_, 1@@n@@_NAME_, 12@@c@@country, 16@@n@@_NAME_, 7@@p@@_NUMBER_, 3@@c@@country, 6@@c@@country, 49@@explicitanon0@@-, 12@@n@@_NAME_, 3@@n@@_NAME_, 51@@s@@multi-sentence, 14@@c@@country]
sentence=1	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	held	_	hold	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	ceremony	_	ceremony	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	commemorating	_	commemorate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	date	_	date	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	outside	_	outside	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	hangar,	_	hangar,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
12	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
13	Orbiter_Processing_Facility-1,	_name_	Facility-1,	NNP	O	_	_NAME_	_	0	IGNORE	true
14	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
15	Space_Shuttle	_name_	Shuttle	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
16	Atlantis,	atlantis,	atlantis,	NN	O	_	_NAME_	_	0	IGNORE	true
17	which	_	which	WDT	O	_	name	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	being	_	be	VBG	O	_	person	_	0	IGNORE	true
20	prepped	_	preppe	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
21	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
27	be	_	be	VB	O	_	mean-01	_	0	IGNORE	true
28	STS-135,	sts-135,	STS-135,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	will	_	will	MD	O	_	-1	_	0	IGNORE	true
31	be	_	be	VB	O	_	seem-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	-1	_	0	IGNORE	true
33	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	Space_Shuttle	_name_	Shuttle	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	35	MOD_mod	true
35	mission	_	mission	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
36	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 11@@s@@know-02, 23@@p@@final, 33@@p@@last, 5@@s@@commemorate-01, 34@@p@@_NAME_, 1@@g@@government-organization, 35@@p@@mission, 20@@s@@preppe-01, 12@@s@@cause-01, 8@@b@@outside, 2@@s@@hold-04, 7@@d@@date, 24@@d@@mission, 15@@c@@company, 1@@n@@_NAME_, 4@@d@@ceremony]
sentence=1	Hypnosis	hypnosis	hypnosis	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	techniques	_	technique	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	involve	_	involve	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	laying	_	lay	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	chicken	_	chicken	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	back	_	back	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
12	"succeed"	_	"succeed"	XX	O	_	and	_	0	IGNORE	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	cutting	_	cut	VBG	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-off-04	(mod(), s(), o())	11	MOD_mod	true
15	off	_	off	RP	O	_	thing	_	0	IGNORE	true
16	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
17	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	supply	_	supply	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@p@@hypnosis, 10@@b@@back, 5@@s@@lay-01, 2@@d@@technique, 4@@s@@involve-01, 7@@d@@chicken, 18@@s@@supply-01, 14@@b@@cut-off-04, 11@@s@@possible-01, 17@@d@@air]
sentence=1	A	a	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
2	mutant	_	mutant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
5	copy	_	copy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
8	system	_	system	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	APP_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	change	_	change	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
13	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
14	been	_	be	VBN	O	_	thing	_	0	IGNORE	true
15	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
16	that,	_	that,	NNP	O	_	-	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	cases,	_	cases,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	will	_	will	MD	O	_	thing	_	0	IGNORE	true
21	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	8	APP_mod	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	a	_	a	DT	O	_	thing	_	0	IGNORE	true
24	behaviour	_	behaviour	NN	O	(d<root> / --LEX--)	behave-01	()	21	APP_o	true
25	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	differ-02	(s(), o())	24	MOD_s	true
26	than	_	than	IN	O	_	thing	_	0	IGNORE	true
27	expected	_	expect	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_o	true
28	.	_	.	.	O	_	have-quant-91	_	0	IGNORE	true

nodealignment=[12@@d@@change-01, 21@@t@@lead-03, 15@@s@@do-02, 5@@s@@copy-01, 2@@d@@mutant, 18@@p@@most, 8@@b@@system, 25@@s@@differ-02, 27@@d@@expect-01, 24@@d@@behave-01]
sentence=1	Finally,_Atlantis	_name_	Atlantis	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
2	will	_	will	MD	O	_	after	_	0	IGNORE	true
3	go	_	go	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
4	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
5	display	_	display	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the_Kennedy_Space_Center_Visitor_Complex	_name_	Complex	NNP	O	(f<root> / facility  :name (n / --LEX--)  :location-of (p<mod>))	_NAME_	(mod())	5	MOD_mod	true
8	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	orbiter's	_	orbiter'	NNS	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	flight	_	flight	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	fly-01	(s())	8	APP_o	true
13	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	launches	_	launch	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	June_28	_name_	28	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
16	.	_	.	.	O	_	11	_	0	IGNORE	true

nodealignment=[12@@s@@fly-01, 10@@n@@_NAME_, 1@@p@@product, 1@@n@@_NAME_, 15@@explicitanon0@@_NUMBER_, 7@@n@@_NAME_, 5@@s@@display-01, 10@@e@@event, 7@@f@@facility, 14@@s@@launch-01, 8@@s@@follow-01, 11@@p@@last]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
3	1)	_	1)	CD	O	_	and	_	0	IGNORE	true
4	sacrifice	_	sacrifice	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
5	on	_	on	IN	O	_	and	_	0	IGNORE	true
6	breadth	_	breadth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	16	APP_op1	true
8	don't	_	don't	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op2	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	topics	_	topic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	won't	_	won't	JJ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	interest	_	interest	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
15	advertisers,	_	advertisers,	NNS	O	_	and	_	0	IGNORE	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	2)	_	2)	CD	O	_	and	_	0	IGNORE	true
18	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	sacrifice	_	sacrifice	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_op1	true
20	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
21	quality	_	quality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_op2	true
23	produce	_	produce	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
24	content	_	content	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
27	cost	_	cost	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
28	much	_	much	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
29	to	_	to	TO	O	_	-	_	0	IGNORE	true
30	write	_	write	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@d@@quality, 16@@a@@or, 13@@explicitanon0@@-, 8@@explicitanon0@@-, 24@@d@@content, 7@@a@@and, 9@@s@@produce-01, 14@@s@@interest-01, 19@@s@@sacrifice-01, 4@@s@@sacrifice-01, 26@@explicitanon0@@-, 1@@d@@You, 6@@d@@breadth, 11@@d@@topic, 28@@d@@much, 30@@s@@write-01, 27@@s@@cost-01, 23@@s@@produce-01, 22@@a@@and]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	sighed	_	sigh	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	0	ROOT	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	a	_	a	DT	O	_	event	_	0	IGNORE	true
6	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	seemed	_	seem	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
10	suggest	_	suggest	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
11	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	regretting	_	regret	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
14	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	decision	_	decision	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	decide-01	(s())	13	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_s	true
18	him	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@seem-01, 10@@s@@suggest-01, 17@@s@@take-01, 19@@d@@home, 1@@n@@then, 18@@d@@he, 15@@s@@decide-01, 13@@s@@regret-01, 3@@s@@sigh-02, 2@@d@@she]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	major	_	major	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	exception	_	exception	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	except-01	(s())	0	ROOT	true
4	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
5	downtown,	_	downtown,	NNP	O	_	include-91	_	0	IGNORE	true
6	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	equal-01	_	0	IGNORE	true
8	slanted	_	slant	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
9	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
10	almost	_	almost	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	45	_	45	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	13	MOD_mod	true
13	degree	_	degree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
14	angle	_	angle	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	APP_o	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	rest	_	rest	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	14	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
20	grid	_	grid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
21	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[12@@explicitanon0@@_NUMBER_, 3@@s@@except-01, 13@@d@@degree, 17@@h@@rest, 10@@s@@almost, 8@@s@@slant-01, 2@@s@@major-02, 14@@s@@angle, 20@@d@@grid]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	Beavertail_Cactus	_name_	Cactus	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	(Opunitia	(opunitia	(Opunitia	.	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	37	MOD_mod	true
4	basilares),	_	basilares),	NNP	O	_	and	_	0	IGNORE	true
5	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
6	primarily	_	primarily	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	primary	(mod())	5	MOD_mod	true
7	in	_	in	IN	O	_	name	_	0	IGNORE	true
8	the_Mojave_Desert	_name_	Desert	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
10	northwest	_	northwest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	Mexico;	mexico;	mexico;	CD	O	_	_NAME_	_	0	IGNORE	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
13	grow	_	grow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	APP_s	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	about	_	about	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	13	APP_s	true
17	24	_	24	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	18	MOD_mod	true
18	inches	_	inch	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	16	APP_op1	true
19	(60	_	(60	NNP	O	_	$LEMMA$	_	0	IGNORE	true
20	cm)	_	cm)	ADD	O	_	$LEMMA$	_	0	IGNORE	true
21	high;	_	high;	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	12	MOD_op1	true
22	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	APP_op2	true
23	pads	_	pad	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
24	that	_	that	WDT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	12	MOD_s	true
25	look	_	look	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
26	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
27	beavertails;	_	beavertails;	NNP	O	_	thing	_	0	IGNORE	true
28	and	_	and	CC	O	_	$LEMMA$	_	12	IGNORE	true
29	yields	_	yield	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	23	MOD_s	true
30	red	_	red	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	33	MOD_s	true
31	or	_	or	CC	O	_	$LEMMA$	_	33	IGNORE	true
32	purple	_	purple	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	flowers	_	flower	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
34	from	_	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	12	MOD_mod	true
35	spring	_	spring	NN	O	(d<root> / date-entity  :season (s / --LEX--))	$LEMMA$	()	34	APP_op1	true
36	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	early_summer	_name_	summer	NN	O	(d<root> / --LEX--)	_NAME_	()	24	APP_o	true
38	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[16@@o@@about, 13@@s@@grow-03, 23@@d@@pad, 34@@w@@from, 12@@s@@possible-01, 29@@s@@yield-01, 30@@s@@red, 17@@explicitanon0@@_NUMBER_, 21@@a@@and, 9@@b@@and, 8@@c@@country, 18@@d@@distance-quantity, 33@@d@@flower, 22@@s@@have-03, 6@@p@@primary, 2@@n@@_NAME_, 5@@s@@find-01, 8@@n@@_NAME_, 10@@d@@northwest, 32@@p@@purple, 18@@m@@inch, 24@@s@@that, 25@@s@@look-02, 37@@d@@_NAME_, 3@@n@@_NAME_, 35@@s@@spring, 35@@d@@date-entity]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
3	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
4	rode	_	ride	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	beside	_	beside	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	him,	_	him,	NNS	O	_	person	_	0	IGNORE	true
7	looking	_	look	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	4	MOD_s	true
8	uncomfortable	_	uncomfortable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	comfortable-02	(s())	7	APP_o	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
11	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	MOD_s	true
12	legs,	_	legs,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	cause-01	(s(), o())	13	MOD_s	true
13	kept	_	keep	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	his	_	he	PRP$	O	_	i	_	0	IGNORE	true
15	gaze	_	gaze	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
16	lowered	_	lower	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	13	APP_o	true
18	fixed	_	fix	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
19	between	_	between	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	ears	_	ear	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	19	APP_op1	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
24	plodding	_	plodding	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	25	MOD_s	true
25	mule	_	mule	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_poss	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@d@@man, 17@@a@@and, 4@@s@@ride-01, 5@@b@@beside, 8@@s@@comfortable-02, 7@@c@@look-02, 15@@d@@gaze-01, 11@@s@@long-03, 16@@s@@lower-05, 12@@s@@cause-01, 24@@s@@plodding-01, 19@@b@@between, 21@@h@@ear, 13@@s@@keep-01, 18@@s@@fix-01, 25@@d@@mule]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	built	_	build	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	on	_	on	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	notion	_	notion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	construction	_	construction	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	construct-01	(mod(), s())	6	MOD_mod	true
9	from	_	from	IN	O	_	instead-of-91	_	0	IGNORE	true
10	traditional	_	traditional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	tradition	(mod())	13	MOD_mod	true
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
12	pedagogical	_	pedagogical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	grammars	_	grammar	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	8	MOD_s	true
15	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
16	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_o	true
17	rule-based	_	rule-based	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
18	formalisms	_	formalism	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	that	_	that	WDT	O	_	name	_	0	IGNORE	true
20	dominate	_	dominate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	generative	_	generative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	grammar	_	grammar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@p@@generative, 17@@s@@rule-based-01, 18@@d@@formalism, 6@@d@@notion, 11@@d@@and, 3@@s@@build-01, 10@@p@@tradition, 21@@p@@most, 16@@s@@resemble-01, 2@@d@@theory, 1@@p@@this, 8@@i@@construct-01, 12@@p@@pedagogical, 20@@s@@dominate-01, 13@@s@@grammar, 24@@d@@grammar, 14@@s@@instead-of-91]
sentence=1	York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	an	_	an	DT	O	_	1	_	0	IGNORE	true
4	ancient	_	ancient	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	cathedral	_	cathedral	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	city	_	city	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	a	_	a	DT	O	_	resemble-01	_	0	IGNORE	true
9	history	_	history	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	dates	_	date	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	back	_	back	RB	O	_	before	_	0	IGNORE	true
13	to	_	to	IN	O	_	before	_	0	IGNORE	true
14	before	_	before	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	11	APP_o	true
15	Roman	_name_	roman	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_op1	true
16	times	_	time	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
17	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[15@@c@@country, 15@@n@@_NAME_, 1@@n@@_NAME_, 11@@s@@date-01, 14@@o@@before, 4@@p@@ancient, 6@@r@@city, 16@@b@@time, 1@@c@@city, 5@@p@@cathedral, 9@@p@@history]
sentence=1	The	the	the	DT	O	_	govern-01	_	0	IGNORE	true
2	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	11	APP_s	true
3	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
4	overseen	_	oversee	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	construction	_	construction	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	construct-01	(s())	4	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	railroad	_	railroad	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	lines	_	line	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	16	MOD_mod	true
15	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
17	standardized	_	standardized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
18	rail	_	rail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	tracks	_	track	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	allowed	_	allow	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
22	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
23	North	_name_	North	NNP	O	(d<root> / --LEX--)	_NAME_	()	25	APP_s	true
24	to	_	to	TO	O	_	-	_	0	IGNORE	true
25	move	_	move	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
26	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_o	true
28	materials	_	material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
29	with	_	with	IN	O	_	-	_	0	IGNORE	true
30	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	31	MOD_mod	true
31	ease	_	ease	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	25	MOD_mod	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@g2@@govern-01, 19@@d@@track, 26@@d@@man, 28@@d@@material, 23@@d@@_NAME_, 16@@s@@use-01, 30@@f2@@great, 9@@p@@railroad, 30@@m@@more, 2@@g@@government-organization, 21@@s@@allow-01, 11@@a@@and, 14@@o@@ordinal-entity, 8@@s@@new-01, 18@@p@@rail, 10@@d@@line, 17@@s@@standardized-01, 27@@a@@and, 6@@s@@construct-01, 31@@t@@ease-01, 14@@explicitanon0@@1, 4@@s@@oversee-01, 25@@s@@move-01]
sentence=1	Having	having	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	APP_s	true
2	DNA-suitable	dna-suitable	dna-suitable	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
3	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	will	_	will	MD	O	_	after	_	0	IGNORE	true
5	let	_	let	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	whether	_	whether	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true
9	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
10	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
11	new	_	new	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	true
12	genes,	_	genes,	NNP	O	_	thing	_	0	IGNORE	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
14	genes	_	gene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	turned	_	turn	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-on-13	(s(), o())	14	MOD_s	true
16	on	_	on	RP	O	_	thing	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	19	MOD_s	true
19	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
21	at	_	at	IN	O	_	thing	_	0	IGNORE	true
22	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	23	MOD_s	true
23	times	_	time	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	help	_	help	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	true
26	explain	_	explain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_o	true
27	how	_	how	WRB	O	_	cause-01	_	0	IGNORE	true
28	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	29	MOD_mod	true
29	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
30	burrow	_	burrow	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	APP_op1	true
31	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	33	MOD_s	true
33	ice	_	ice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	26	APP_o	true
35	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	survive	_	survive	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op2	true
37	in	_	in	IN	O	_	i	_	0	IGNORE	true
38	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
39	cold	_	cold	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	36	MOD_mod	true
40	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[39@@b@@cold-01, 25@@c@@help-01, 14@@d@@gene, 35@@n@@then, 13@@a@@or, 11@@d@@new-01, 7@@s@@see-01, 23@@n@@time, 6@@d@@us, 5@@s@@let-01, 1@@s@@have-03, 18@@s@@differ-02, 28@@p@@this, 2@@s@@possible-01, 22@@s@@differ-02, 3@@d@@material, 30@@s@@burrow-01, 15@@s@@turn-on-13, 32@@s@@hard-02, 19@@t@@way, 33@@d@@ice, 26@@s@@explain-01, 20@@d@@and, 36@@s@@survive-01, 29@@d@@animal, 34@@a@@and, 8@@explicitanon0@@interrogative]
sentence=1	Among	among	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	Thais,	thais,	thais,	NN	O	_	name	_	0	IGNORE	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	are	_	be	VBP	O	_	present-02	_	0	IGNORE	true
5	strict	_	strict	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	rules	_	rule	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	hierarchy	_	hierarchy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	dictate	_	dictate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	and	_	and	CC	O	_	$LEMMA$	_	6	IGNORE	true
13	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	wai	_	wai	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
16	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	10	APP_o	true
17	be	_	be	VB	O	_	thing	_	0	IGNORE	true
18	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@d@@wai, 6@@s@@rule-01, 8@@d@@hierarchy, 16@@s@@recommend-01, 10@@s@@dictate-01, 5@@p@@strict, 18@@s@@give-01]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
3	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_s	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
5	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-09	(s(), o())	10	APP_op1	true
6	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	a	_	a	DT	O	_	multi-sentence	_	0	IGNORE	true
9	cream	_	cream	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_s	true
11	tell	_	tell	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_op2	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
13	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	–	_	–	:	O	_	thing	_	0	IGNORE	true
16	"You	"you	"You	''	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	APP_o	true
18	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
19	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	on	_	on	IN	O	_	and	_	0	IGNORE	true
21	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	wash-n-go's"	_	wash-n-go's"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
24	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	would	_	would	MD	O	_	thing	_	0	IGNORE	true
26	kinda	_	kinda	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	27	MOD_mod	true
27	go	_	go	VB	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
28	against	_	against	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
29	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	I've	i've	i've	NN	O	_	-	_	0	IGNORE	true
32	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
34	on	_	on	IN	O	_	thing	_	0	IGNORE	true
35	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
36	channel,	_	channel,	NNS	O	_	thing	_	0	IGNORE	true
37	which	_	which	WDT	O	_	i	_	0	IGNORE	true
38	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
39	"Gels	"gels	"Gels	``	O	_	mean-01	_	0	IGNORE	true
40	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	43	MOD_s	true
41	are	_	be	VBP	O	_	person	_	0	IGNORE	true
42	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
43	make	_	make	VBP	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	$LEMMA$-02	(s())	33	MOD_s	true
44	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
45	wash-n-go	_name_	wash-n-go	``	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
46	stay.	_	stay.	JJ	O	_	$LEMMA$	_	0	IGNORE	true
47	"	_	"	''	O	_	mean-01	_	0	IGNORE	true

nodealignment=[2@@d@@i, 16@@d@@"You, 17@@s@@possible-01, 32@@n@@always, 40@@s@@actual-02, 13@@p@@guy, 33@@s@@say-01, 18@@s@@use-01, 29@@p@@all, 27@@t@@go-01, 43@@t@@make-02, 43@@t3@@thing, 26@@p@@kind-of, 14@@p@@just, 12@@d@@you, 10@@a@@and, 5@@s@@come-out-09, 9@@d@@cream-01, 19@@d@@it, 4@@explicitanon0@@-, 11@@b@@tell-01, 45@@d@@wash-n-go, 3@@s@@possible-01, 28@@p@@against, 1@@s@@cause-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	alcalde	_	alcalde	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	sent	_	send	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	written	_	write	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	record	_	record	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	of	_	of	IN	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	proceeding	_	proceeding	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	to	_	to	IN	O	_	person	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	judge	_	judge	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o2	true
13	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	Saltillo,	_name_	saltillo,	PDT	O	_	_NAME_	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	state	_	state	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
17	capital,	_	capital,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
18	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
19	decided	_	decide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	outcome	_	outcome	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@d@@outcome, 16@@b@@state, 2@@d@@alcalde, 19@@s@@decide-01, 3@@b@@send-01, 12@@d@@judge-01, 6@@s@@record-01, 9@@d@@proceeding, 5@@s@@write-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	1891	_name_	1891	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	4	MOD_mod	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	her	_	she	PRP$	O	_	and	_	0	IGNORE	true
6	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	advisor	_	advisor	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	advise-01	()	4	APP_o	true
8	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
9	would	_	would	MD	O	_	have-org-role-91	_	0	IGNORE	true
10	help,	_	help,	VB	O	_	have-org-role-91	_	0	IGNORE	true
11	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	assumed,	_	assumed,	VBZ	O	_	person	_	0	IGNORE	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	poet-turned-fiction-writer	_	poet-turned-fiction-writer	NN	O	(d<root> / --LEX--)	_NAME_	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
16	connect	_	connect	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	15	APP_op2	true
17	her	_	she	PRP	O	_	person	_	0	IGNORE	true
18	with	_	with	IN	O	_	i	_	0	IGNORE	true
19	editors:	_	editors:	NNP	O	_	have-org-role-91	_	0	IGNORE	true
20	Tosui_Nakarai	_name_	Nakarai	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
21	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	4	MOD_o	true

nodealignment=[20@@p@@person, 21@@s@@multi-sentence, 15@@a@@and, 7@@p2@@person, 4@@s@@meet-03, 2@@explicitanon2@@_NUMBER_, 16@@s@@connect-01, 3@@d@@she, 14@@d@@_NAME_, 2@@d@@date-entity, 20@@n@@_NAME_, 7@@e2@@advise-01, 6@@n@@future, 13@@p@@this]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	business	_	business	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	model	_	model	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
4	worked	_	work	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	0	ROOT	true
5	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
6	producing	_	produce	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	content	_	content	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	topics	_	topic	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	appeal	_	appeal	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
12	to	_	to	IN	O	_	say-01	_	0	IGNORE	true
13	advertisers	_	advertiser	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	in	_	in	IN	O	_	name	_	0	IGNORE	true
15	languages	_	language	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
16	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
17	English	_name_	English	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	MOD_s	true
20	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	advertising	_	advertising	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	advertise-01	(mod())	22	MOD_mod	true
22	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[19@@s@@have-03, 6@@s@@produce-01, 1@@p@@this, 4@@s@@work-09, 3@@d@@model-01, 17@@n@@_NAME_, 2@@p@@business, 20@@p@@large, 9@@a@@topic, 21@@p@@advertise-01, 15@@b@@language, 22@@d@@market, 7@@d@@content, 11@@s@@appeal-01, 13@@d@@advertiser]
sentence=1	Keep	keep	keep	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	0	ROOT	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	stored	_	store	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	4	MOD_mod	true
6	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
7	airtight	_	airtight	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	containers	_	container	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
10	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
11	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
14	safe	_	safe	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
16	mouse	_	mouse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	attack.	_	attack.	RB	O	_	interrogative	_	0	IGNORE	true
18	[1	_	[1	NNP	O	_	_NUMBER_	_	0	IGNORE	true
19	]	_	]	-RRB-	O	_	-	_	0	IGNORE	true

nodealignment=[9@@a@@or, 14@@s@@safe-01, 11@@d@@place, 5@@t@@proper, 16@@d@@mouse, 8@@d@@container, 2@@p@@all, 4@@s@@store-01, 3@@d@@food, 1@@s@@keep-04, 7@@p@@airtight]
sentence=1	Jóola	_name_	Jóola	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	multi-sentence	(mod())	3	MOD_mod	true
2	language	_	language	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	varieties	_	variety	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
4	which	_	which	WDT	O	_	name	_	0	IGNORE	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	closely	_	closely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	close-10	(s())	7	MOD_s	true
7	related	_	related	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relate-01	(s(), o())	3	MOD_s	true
8	to	_	to	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	10	MOD_s	true
9	Eegimaa	_name_	Eegimaa	NNP	O	(d<root> / --LEX--)	_NAME_	()	7	APP_o	true
10	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-91	(s(), o())	0	ROOT	true
11	Kujireray/Kuluunaay	_name_	kujireray/kuluunaay	CD	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	anyway	(op1(), mod())	21	MOD_mod	true
12	(from	_	(from	NFP	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	village	_	village	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Brin	_name_	Brin	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
17	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
18	76%	_	76%	DT	O	_	_NUMBER_	_	0	IGNORE	true
19	lexical	_	lexical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
20	similarity)	_	similarity)	NN	O	_	and	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
22	Gufiñamay	_name_	Gufiñamay	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	(from	_	(from	NFP	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	village	_	village	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	Afiniam	_name_	Afiniam	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	25	MOD_mod	true
28	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
29	74%	_	74%	CD	O	_	ideology	_	0	IGNORE	true
30	lexical	_	lexical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	similarity	_	similarity	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	25	MOD_s	true
32	(based	_	(based	ADD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
33	on	_	on	IN	O	_	describe-01	_	0	IGNORE	true
34	Lewis_et_al.,	_name_	al.,	NNP	O	_	_NAME_	_	0	IGNORE	true
35	2014	_name_	2014	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	32	MOD_mod	true
36	eds.))	_	eds.))	NNP	O	_	mean-01	_	0	IGNORE	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@d@@village, 19@@p@@lexical, 31@@s@@equal-01, 9@@d@@_NAME_, 16@@n@@_NAME_, 10@@s@@include-91, 32@@s@@(based-01, 11@@n@@anyway, 1@@p@@multi-sentence, 3@@d@@variety, 6@@s@@close-10, 14@@d@@village, 21@@a@@and, 27@@n@@_NAME_, 7@@s@@relate-01, 35@@explicitanon0@@_NUMBER_, 30@@p@@lexical, 35@@d@@date-entity, 23@@s@@(from, 22@@d@@Gufiñamay, 8@@s@@and, 2@@p@@language]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	companies	_	company	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	specialize	_	specialize	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	organic	_	organic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
7	garden	_	garden	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	10	MOD_mod	true
9	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
10	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	mice	_	mouse	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	repellents	_	repellent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
15	are	_	be	VBP	O	_	person	_	0	IGNORE	true
16	better	_	well	JJR	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	good-02	(s(), o())	13	MOD_s	true
17	for	_	for	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	than	_	than	IN	O	_	person	_	0	IGNORE	true
21	traditional	_	traditional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	poisons	_	poison	NNS	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
23	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[19@@d@@environment, 16@@s@@good-02, 10@@d@@product, 12@@p@@mouse, 22@@p@@poison, 8@@b@@and, 6@@p@@organic, 13@@d@@repellent, 2@@d@@company, 11@@s@@make-01, 21@@p@@traditional, 7@@d@@garden, 4@@s@@specialize-01, 1@@explicitanon0@@many, 9@@d@@home]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	noted	_	note	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
3	earlier,	_	earlier,	NNP	O	_	and	_	0	IGNORE	true
4	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	analyses	_	analysis	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
6	were	_	be	VBD	O	_	person	_	0	IGNORE	true
7	weighted	_	weight	VBN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
8	according	_	accord	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	20	MOD_s	true
9	to	_	to	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	survey	_	survey	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
12	weight	_	weight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
14	by	_	by	IN	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	Add	add	Add	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	19	MOD_mod	true
17	Health	health	Health	NNP	O	(d<root> / --LEX--)	$LEMMA$y	()	18	APP_s	true
18	research	_	research	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_s	true
19	staff	_	staff	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	13	APP_s	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
21	standard	_	standard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	errors	_	error	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	were	_	be	VBD	O	_	person	_	0	IGNORE	true
24	corrected	_	correct	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
25	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
26	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
27	clustering	_	clustering	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_op1	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_o	true
29	stratification	_	stratification	NN	O	(d<root> / --LEX--)	suffice-01	()	28	APP_op2	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	defined	_	define	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	sampling	_	sample	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	34	MOD_mod	true
34	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
35	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[28@@a@@and, 12@@d@@weight, 19@@s@@staff, 5@@d@@analysis-01, 8@@s@@accord-02, 33@@p@@sample-01, 16@@p@@Add-02, 7@@s@@weight-01, 13@@s@@provide-01, 34@@d@@strategy, 22@@d@@error, 31@@s@@define-01, 29@@d@@suffice-01, 18@@s@@research-01, 4@@p@@all, 24@@s@@correct-01, 20@@a@@and, 11@@p@@survey-01, 21@@s@@standard-02, 2@@s@@note-01, 17@@d@@Healthy, 27@@d@@clustering-01]
sentence=1	Uh,	_name_	uh,	CD	O	_	expressive	_	0	IGNORE	true
2	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	5	MOD_mod	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	class	_	class	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
5	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	end-01	(s())	0	ROOT	true
6	over	_	over	IN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_op1	true
7	w-	_	w-	XX	O	(n<root> / --LEX--  :time-of (p<mod>))	et-cetera	(mod())	5	MOD_mod	true
8	over	_	over	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	with,	_	with,	NNS	O	_	expressive	_	0	IGNORE	true
10	I'm	i'm	I'm	NNS	O	_	_NAME_	_	0	IGNORE	true
11	sitting	_	sit	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
12	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	at	_	at	IN	O	_	1	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	table,	_	table,	CD	O	_	$LEMMA$	_	0	IGNORE	true
16	there's	_	there'	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
19	from	_	from	IN	O	_	have-03	_	0	IGNORE	true
20	—	_	—	,	O	(s<root> / --LEX--  :source-of (d<mod>))	_NAME_	(mod())	5	MOD_mod	true
21	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
22	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	class,	_	class,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	18	MOD_s	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
27	two	_	two	CD	O	(p<root> / person  :quant (n / --LEX--))	2	()	29	APP_s	true
28	men,	_	men,	NNS	O	_	include-91	_	0	IGNORE	true
29	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
30	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
32	right,	_	right,	NNP	O	_	i	_	0	IGNORE	true
33	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
34	a	_	a	DT	O	_	loc$LEMMA$tion	_	0	IGNORE	true
35	table	_	table	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	with	_	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-03	(s(), o())	5	MOD_o	true
37	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	38	MOD_mod	true
38	women	_	woman	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@explicitanon0@@2, 36@@s@@have-03, 26@@a@@and, 35@@d@@table, 25@@s@@class,, 29@@s@@sit-01, 18@@d@@woman, 4@@d@@class, 8@@p@@over, 11@@d@@sit-01, 6@@r@@over, 7@@n@@et-cetera, 2@@w@@after, 5@@s@@end-01, 20@@s@@_NAME_, 38@@y@@woman, 27@@p@@person, 27@@n@@2]
sentence=1	So,	so,	So,	NNS	O	_	expressive	_	0	IGNORE	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
4	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
5	precaution,	_	precaution,	NNS	O	_	and	_	0	IGNORE	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
8	decided	_	decide	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
10	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
11	arriving	_	arrive	VBG	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	New_Zealand	_name_	Zealand	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	11	MOD_mod	true
14	who	_	who	WP	O	_	name	_	0	IGNORE	true
15	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
16	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	8	MOD_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	northern	_	northern	JJ	O	(h<root> / --LEX--  :part-of (i<poss>))	north	(poss())	20	APP_op1	true
19	Italy	_name_	Italy	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	18	APP_poss	true
20	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
21	South_Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_op2	true
22	who	_	who	WP	O	_	name	_	0	IGNORE	true
23	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
24	been	_	be	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	21	MOD_s	true
25	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
26	in	_	in	IN	O	_	after	_	0	IGNORE	true
27	the_last_14_days	_name_	day	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
28	will	_	will	MD	O	_	person	_	0	IGNORE	true
29	be	_	be	VB	O	_	person	_	0	IGNORE	true
30	registered	_	register	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	8	APP_o	true
31	for	_	for	IN	O	_	course-91	_	0	IGNORE	true
32	self-isolation	_	self-isolation	NN	O	(d<root> / --LEX--)	recognize-01	()	30	APP_o	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@c@@country, 24@@s@@be-located-at-91, 11@@g@@arrive-01, 13@@c@@country, 8@@s@@decide-01, 18@@h@@north, 13@@n@@_NAME_, 27@@n@@_NAME_, 16@@s@@be-located-at-91, 20@@a@@or, 30@@s@@register-02, 6@@d@@we, 21@@n@@_NAME_, 21@@c@@country, 10@@d@@anyone, 19@@n@@_NAME_, 32@@d@@recognize-01, 4@@p@@further]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	there	_	there	EX	O	_	interrogative	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	LibriVox	_name_	LibriVox	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	book	_	book	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op3	true
7	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
10	stands	_	stand	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-06	(s())	6	MOD_s	true
11	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
12	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	quality,	_	quality,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	effort	_	effort	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
19	involved,	_	involved,	NNP	O	_	cause-01	_	0	IGNORE	true
20	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	true
21	popularity,	_	popularity,	NNP	O	_	cause-01	_	0	IGNORE	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
23	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
24	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	reason	_	reason	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
27	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	22	MOD_mod	true

nodealignment=[22@@a@@or, 10@@s@@stand-out-06, 9@@s@@think-01, 24@@p@@some, 25@@p@@other, 27@@explicitanon0@@interrogative, 26@@d@@reason, 8@@d@@you, 17@@p@@overall, 4@@p@@particular, 6@@d@@book, 12@@s@@cause-01, 5@@n@@_NAME_, 18@@d@@effort-01]
sentence=1	Failed	failed	fail	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
2	attempts	_	attempt	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	viewed	_	view	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	11	APP_op1	true
5	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
6	merely	_	merely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	mere	(mod())	7	MOD_mod	true
7	part	_	part	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	have-$LEMMA$-91	(poss())	4	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
10	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	7	APP_poss	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	useful	_	useful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	17	MOD_s	true
17	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	12	APP_o	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	gain	_	gain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	APP_mod	true
20	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	moves	_	move	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	MOD_s	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
24	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	success	_	success	NN	O	(d<root> / --LEX--)	succeed-01	()	22	APP_o2	true
26	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[11@@a@@and, 17@@t@@way, 15@@s@@very, 1@@s@@fail-01, 25@@d@@succeed-01, 10@@d@@process-02, 22@@b@@move-01, 20@@d@@knowledge, 2@@d@@attempt-01, 23@@d@@you, 19@@s@@gain-02, 12@@s@@see-01, 4@@s@@view-02, 16@@s@@useful-05, 6@@p@@mere, 7@@h@@have-part-91]
sentence=1	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	2	MOD_s	true
2	Obama	_name_	Obama	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	an	_	an	DT	O	_	person	_	0	IGNORE	true
5	agenda	_	agenda	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
7	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	left	_	left	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$FORM$-19	(s())	11	MOD_s	true
11	wing	_	wing	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
12	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
14	party	_	party	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_poss	true
15	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[14@@d@@party, 10@@s@@left-19, 11@@h@@wing, 9@@s@@far, 7@@s@@represent-01, 1@@h@@have-org-role-91, 3@@s@@have-03, 2@@n@@_NAME_, 5@@d@@agenda, 1@@p2@@president]
sentence=1	A	a	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
2	potential	_	potential	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
3	outlier	_	outlier	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
4	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	data	_	data	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	7	MOD_mod	true
7	point	_	point	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
10	significantly	_	significantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	significant-02	(s())	11	MOD_s	true
11	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	differ-02	(s(), o())	7	MOD_s	true
12	from	_	from	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	-	_	0	IGNORE	true
14	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	data	_	data	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	16	MOD_mod	true
16	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
17	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@p@@data, 11@@s@@differ-02, 16@@d@@point, 2@@s@@possible-01, 7@@r@@point, 15@@p@@data, 3@@d@@outlier, 10@@s@@significant-02, 14@@p@@other]
sentence=1	Nida's	_name_	Nida's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
2	dynamic-equivalence	_	dynamic-equivalence	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	held	_	hold	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
8	opposition	_	opposition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	oppose-01	(s(), o())	6	MOD_s	true
9	to	_	to	IN	O	_	oppose-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	oppose-01	_	0	IGNORE	true
11	views	_	view	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	8	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	philologists	_	philologist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	maintain	_	maintain	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	that	_	that	IN	O	_	person	_	0	IGNORE	true
17	an	_	an	DT	O	_	thing	_	0	IGNORE	true
18	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	understand-01	(s())	26	APP_s	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	source	_	source	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	text	_	text	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	(ST)	(st)	(ST)	,	O	_	mean-01	_	0	IGNORE	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	APP_o	true
25	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	6	MOD_s	true
26	achieved	_	achieve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
27	by	_	by	IN	O	_	mean-01	_	0	IGNORE	true
28	assessing	_	assess	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
29	the	_	the	DT	O	_	and	_	0	IGNORE	true
30	inter-animation	_	inter-animation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	precise	(s())	28	APP_s	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
33	on	_	on	IN	O	_	thing	_	0	IGNORE	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	page,	_	page,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
37	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
38	meaning	_	meaning	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	40	APP_s	true
39	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
40	self-contained	_	self-containe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_op2	true
41	within	_	within	IN	O	_	conform-01	_	0	IGNORE	true
42	the	_	the	DT	O	_	thing	_	0	IGNORE	true
43	text	_	text	NN	O	(d<root> / --LEX--)	$LEMMA$	()	47	APP_s	true
44	(i.e.	_	(i.e.	NNP	O	_	-	_	0	IGNORE	true
45	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
47	focused	_	focused	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	25	APP_o	true
48	on	_	on	IN	O	_	thing	_	0	IGNORE	true
49	achieving	_	achieve	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	47	APP_o	true
50	semantic	_	semantic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_s	true
51	equivalence)	_	equivalence)	RB	O	_	and	_	0	IGNORE	true
52	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@d@@text, 40@@s@@self-containe-01, 45@@s@@much, 8@@s@@oppose-01, 38@@d@@meaning-01, 43@@d@@text, 1@@n@@_NAME_, 46@@s@@more, 11@@s@@view-02, 18@@s@@understand-01, 2@@p@@dynamic-equivalence, 47@@s@@focused-01, 5@@o@@often, 50@@d@@semantic, 25@@s@@person, 6@@s@@hold-01, 49@@s@@achieve-01, 30@@s@@precise, 21@@p@@source, 13@@d@@philologist, 1@@p@@person, 32@@d@@word, 28@@b@@assess-01, 3@@d@@theory, 26@@s@@achieve-01, 24@@s@@possible-01, 36@@a@@and, 15@@s@@maintain-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	result	_	result	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	healthy	_	healthy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	ants	_	ant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	die	_	die	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_s	true
7	sooner	_	sooner	RB	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	soon	(mod())	6	MOD_mod	true
8	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
9	ingesting	_	ingest	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	6	MOD_mod	true
10	ROS	ros	ROS	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
11	[Reactive	[reactive	[reactive	CD	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	permanent	(s())	12	MOD_s	true
12	Oxygen	oxygen	oxygen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
13	Species,	species,	species,	CD	O	_	mean-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	chemicals	_	chemical	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	hydrogen	_	hydrogen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
21	peroxide]	_	peroxide]	NNP	O	_	and	_	0	IGNORE	true
22	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
23	infected	_	infected	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	ants	_	ant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	die	_	die	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
26	less	_	less	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
27	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	22	MOD_s	true
28	obtained	_	obtain	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
29	in	_	in	IN	O	_	i	_	0	IGNORE	true
30	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	(as	_	(as	-LRB-	O	_	cause-01	_	0	IGNORE	true
33	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
34	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	28	APP_s	true
35	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
36	'force	_	'force	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	34	APP_o	true
37	feed'	_	feed'	VB	O	_	-	_	0	IGNORE	true
38	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
39	ROS,	_name_	ROS,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
40	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
41	healthy	_	healthy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
42	ants,	_	ants,	NNP	O	_	resemble-01	_	0	IGNORE	true
43	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
44	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	34	MOD_mod	true
45	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
46	choice,	_	choice,	NNPS	O	_	thing	_	0	IGNORE	true
47	ignore	_	ignore	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_s	true
48	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
49	food-source.	_name_	food-source.	ADD	O	_	$LEMMA$	_	0	IGNORE	true
50	)	_	)	-RRB-	O	_	and	_	0	IGNORE	true

nodealignment=[33@@d@@you, 28@@s@@obtain-01, 7@@e@@soon, 23@@s@@infected-01, 22@@s@@contrast-01, 25@@s@@die-01, 10@@p@@_NAME_, 15@@d@@group, 12@@d@@oxygen, 2@@s@@result-01, 19@@s@@include-01, 47@@d@@ignore-01, 6@@s@@die-01, 30@@p@@another, 17@@g@@chemical, 44@@s@@give-01, 11@@n@@permanent, 7@@m@@more, 41@@p@@healthy, 34@@o@@obligate-01, 9@@t@@ingest-01, 36@@s@@'force, 26@@s@@less, 24@@d@@ant, 20@@d@@hydrogen, 4@@s@@healthy-02, 11@@explicitanon0@@-, 5@@d@@ant, 27@@s@@person, 31@@t@@way]
sentence=1	Microsoft's_Internet	_name_	Internet	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	Explorer	explorer	Explorer	NNP	O	(d<root> / --LEX--)	_NAME_	()	6	APP_s	true
3	6	_	6	CD	O	(p<root> / product  :name (n / --LEX--))	_NUMBER_	()	6	APP_o2	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	one	_	one	CD	O	_	1	_	0	IGNORE	true
6	of	_	of	IN	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	include-91	(o2(), s(), o())	0	ROOT	true
7	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
8	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	successful	_	successful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	11	MOD_s	true
10	software	_	software	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	measured	_	measure	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	its	_	its	PRP$	O	_	cause-01	_	0	IGNORE	true
17	durability	_	durability	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
19	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
20	massive	_	massive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	numbers	_	number	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	APP_op2	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	21	APP_mod	true
24	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
25	have	_	have	VBP	O	_	person	_	0	IGNORE	true
26	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	MOD_s	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[26@@s@@use-01, 8@@s@@most, 20@@p@@massive, 14@@s@@measure-01, 18@@a@@and, 1@@p@@_NAME_, 21@@explicitanon0@@number, 23@@d@@person, 6@@c@@include-91, 12@@n@@ever, 3@@p@@product, 2@@d@@_NAME_, 11@@d@@product, 9@@s@@succeed-01, 3@@n@@_NUMBER_, 10@@p@@software, 17@@d@@durability]
sentence=1	Just	just	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	possible-01	(mod(), s())	10	MOD_mod	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	abstract	_	abstract	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_s	true
8	concrete,	_	concrete,	NNP	O	_	and	_	0	IGNORE	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
11	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
12	a	_	a	DT	O	_	-	_	0	IGNORE	true
13	distinction	_	distinction	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	distinguish-01	(s(), o())	10	APP_s	true
14	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	functions	_	function	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	direct	_	direct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
27	those	_	those	DT	O	_	that	_	0	IGNORE	true
28	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
29	are	_	be	VBP	O	_	person	_	0	IGNORE	true
30	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	artificial	_	artificial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
32	in	_	in	IN	O	_	-	_	0	IGNORE	true
33	nature	_	nature	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@s@@distinguish-01, 9@@d@@we, 7@@a@@or, 1@@p@@just, 21@@s@@direct-02, 4@@s@@possible-01, 6@@d@@abstract, 22@@s@@experience-01, 3@@d@@concept, 31@@p@@artificial, 18@@s@@function-01, 30@@s@@more, 10@@s@@possible-01, 25@@d@@world, 15@@d@@concept, 33@@p@@nature]
sentence=1	Respondents	respondents	respondent	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	respond-01	()	3	APP_o	true
2	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	12	MOD_s	true
3	provided	_	provide	VBN	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-01	(s(s_UNIFY_o()))	12	APP_op1	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	opportunity	_	opportunity	NN	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$	(o(s()))	3	APP_s	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	select	_	select	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$-than	()	7	APP_o	true
9	than	_	than	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	more-$LEMMA$	(op1(), mod())	7	MOD_mod	true
10	one	_	one	CD	O	(d<root> / --LEX--)	1	()	9	APP_op1	true
11	race,	_	race,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	12	MOD_s	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	those	_	those	DT	O	_	that	_	0	IGNORE	true
14	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
15	did	_	do	VBD	O	_	person	_	0	IGNORE	true
16	were	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	person	(s())	12	MOD_s	true
17	asked	_	ask	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op2	true
18	a	_	a	DT	O	_	person	_	0	IGNORE	true
19	follow-up	_	follow-up	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	question	_	question	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
21	regarding	_	regard	VBG	O	_	person	_	0	IGNORE	true
22	which	_	which	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	12	MOD_mod	true
23	category	_	category	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	best	_	best	RB	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	25	MOD_s	true
25	described	_	describe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
26	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
27	racial	_	racial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	race	(mod())	28	MOD_mod	true
28	background	_	background	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@p2@@person, 24@@m@@most, 25@@s@@describe-01, 1@@e2@@respond-01, 22@@p@@amr-unknown, 24@@b2@@good-02, 28@@d@@background, 19@@p@@follow-up, 8@@d@@more-than, 3@@s@@provide-01, 20@@d@@question-01, 17@@s@@ask-01, 11@@s@@person, 2@@s@@person, 7@@s@@select-01, 23@@d@@category, 5@@f@@opportunity, 10@@d@@1, 12@@a@@and, 27@@p@@race, 16@@s@@person, 9@@s@@more-than]
sentence=1	One	one	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	famous	_	famous	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fame-01	(s())	6	MOD_s	true
6	plants	_	plant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
9	dragon's	_	dragon's	NN	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	11	MOD_mod	true
10	blood	_	blood	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	tree	_	tree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
12	“dracaena	_	“dracaena	ADD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
13	cinnabara”	_	cinnabara”	XX	O	_	_NAME_	_	0	IGNORE	true
14	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
15	exists	_	exist	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
16	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Socotra	_name_	Socotra	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	19	APP_op1	true
19	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
20	nowhere	_	nowhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Earth	_name_	Earth	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	20	MOD_mod	true
25	.	_	.	.	O	_	be-located-at-91	_	0	IGNORE	true

nodealignment=[10@@p@@blood, 12@@n@@_NAME_, 2@@s@@include-91, 5@@s@@fame-01, 6@@d@@plant, 16@@p@@only, 19@@b@@and, 4@@s@@most, 9@@c@@country, 21@@p@@else, 24@@b@@_NAME_, 15@@s@@exist-01, 20@@d@@nowhere, 18@@n@@_NAME_, 11@@d@@tree, 9@@n@@_NAME_, 18@@c@@city]
sentence=1	39._“The_Figures	_name_	figure	NNS	O	(d<root> / --LEX--)	_NAME_	()	10	APP_o	true
2	which	_	which	WDT	O	_	i	_	0	IGNORE	true
3	excite	_	excite	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_s	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Ideas	ideas	Ideas	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	Beauty,	beauty,	Beauty,	NNS	O	_	thing	_	0	IGNORE	true
10	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	those	_	those	DT	O	_	that	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	which	_	which	WDT	O	_	name	_	0	IGNORE	true
16	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
17	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	10	APP_s	true
18	Uniformity	uniformity	uniformity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	amidst	_	amidst	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	Variety”	variety”	variety”	JJ	O	_	and	_	0	IGNORE	true
21	(§	_	(§	NNP	O	_	$LEMMA$	_	0	IGNORE	true
22	II,	ii,	ii,	CD	O	_	and	_	0	IGNORE	true
23	p.	_	p.	NN	O	_	cite-01	_	0	IGNORE	true
24	28)	_	28)	CD	O	_	mean-01	_	0	IGNORE	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[1@@d@@_NAME_, 5@@d@@us, 10@@s@@seem-01, 3@@b@@excite-01, 18@@d@@uniformity, 17@@s@@person, 7@@d@@Ideas]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	2	APP_o	true
5	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	politics;	_	politics;	NNP	O	_	and	_	0	IGNORE	true
10	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	people	_	people	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	person	(mod())	4	MOD_mod	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	give	_	give	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	war	_	war	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	to;	_	to;	NFP	O	_	and	_	0	IGNORE	true
19	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	charge	_	charge	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-05	(o2(), s(), o())	4	MOD_o	true
24	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	Britney_Spears	_name_	Spears	NNPS	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	27	MOD_mod	true
27	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o2	true
28	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	week	_	week	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	—	_	—	:	O	_	and	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	entertainment	_	entertainment	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	stories	_	story	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@d@@story, 7@@p@@great, 2@@s@@have-03, 26@@n@@_NAME_, 30@@n@@week, 4@@d@@person, 13@@s@@give-01, 1@@d@@We, 16@@p@@war, 3@@explicitanon0@@some, 34@@a@@story, 26@@p@@person, 33@@p@@entertainment, 17@@d@@stuff, 19@@d@@someone, 11@@a@@person, 14@@p@@all, 23@@b@@charge-05, 10@@explicitanon0@@some]
sentence=1	Barracuda	barracuda	Barracuda	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
3	Kayangan	_name_	Kayangan	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	lakes	_	lake	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op2	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
7	stunning	_	stunning	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	stun-01	(s())	9	APP_op1	true
8	locations,	_	locations,	NNS	O	_	and	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_op1	true
10	good	_	good	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_op2	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	snorkeling,	_	snorkeling,	NNS	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	the	_	the	DT	O	_	and	_	0	IGNORE	true
15	island	_	island	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_dom	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
18	ancestral	_	ancestral	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	domain	_	domain	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	13	APP_op2	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	an	_	an	DT	O	_	1	_	0	IGNORE	true
22	indigenous	_	indigenous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	tribe	_	tribe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
24	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
25	are	_	be	VBP	O	_	person	_	0	IGNORE	true
26	managing	_	manage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	MOD_s	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	island	_	island	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
30	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	sustainable	_	sustainable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	sustain-01	(mod())	38	MOD_mod	true
32	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	MOD_op1	true
34	keeping	_	keep	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	33	APP_op2	true
35	outsiders	_	outsider	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
36	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
37	a	_	a	DT	O	_	1	_	0	IGNORE	true
38	distance	_	distance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	34	APP_o	true
40	offshore	_	offshore	RB	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
41	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	night	_name_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
43	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@p@@both, 40@@d@@offshore, 1@@p@@product, 15@@d@@island, 2@@a@@and, 13@@a@@and, 3@@n@@_NAME_, 10@@d@@good-02, 42@@m@@night, 26@@s@@manage-01, 22@@p@@indigenous, 31@@p@@sustain-01, 33@@a@@and, 34@@s@@keep-04, 7@@s@@stun-01, 9@@a@@and, 39@@a@@and, 1@@n@@_NAME_, 19@@c@@domain, 38@@d@@distance, 23@@d@@tribe, 35@@d@@outsider, 4@@d@@lake, 42@@d@@date-entity, 18@@p@@ancestral]
sentence=1	Our	our	Our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	thoughts	_	thought	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	think-01	(s(), o())	4	APP_s	true
4	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	unknown	_	unknown	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	-	(s())	9	MOD_s	true
9	volunteers	_	volunteer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
11	soldiers	_	soldier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	freedom	_	freedom	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	free-04	(s())	11	MOD_s	true
14	who,	_	who,	VBN	O	_	-	_	0	IGNORE	true
15	without	_	without	IN	O	(d<root> / --LEX--)	-	()	17	APP_op2	true
16	praise	_	praise	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	true
17	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	20	MOD_mod	true
18	reward,	_	reward,	NNS	O	_	and	_	0	IGNORE	true
19	have	_	have	VBP	O	_	person	_	0	IGNORE	true
20	served	_	serve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
21	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	20	APP_o	true
22	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	unto	_	unto	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	death	_	death	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	die-01	(mod())	20	MOD_mod	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@d@@-, 21@@c@@country, 4@@s@@obligate-01, 10@@a@@and, 9@@d@@volunteer, 24@@s@@die-01, 17@@a@@or, 11@@d@@soldier, 21@@n@@_NAME_, 20@@s@@serve-01, 13@@s@@free-04, 16@@d@@praise-01, 22@@p@@even, 8@@n@@-, 2@@p@@next, 3@@s@@think-01, 1@@d@@Our, 8@@explicitanon0@@-]
sentence=1	Now	now	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	cautious,	_	cautious,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	organization	(mod())	12	MOD_mod	true
4	delegates	_	delegate	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
5	to	_	to	IN	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Consultation	consultation	Consultation	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	MOD_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	1835	_	1835	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	7	MOD_mod	true
10	at	_	at	IN	O	_	name	_	0	IGNORE	true
11	San_Felipe_de_Austin	_name_	Austin	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
12	voted	_	vote	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	declaring	_	declare	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_o	true
15	independence,	_	independence,	NNP	O	_	and	_	0	IGNORE	true
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	12	MOD_s	true
17	drafting	_	draft	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	statement,	_	statement,	NNS	O	_	thing	_	0	IGNORE	true
20	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
21	became	_	become	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	17	MOD_s	true
22	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	21	APP_o	true
23	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Declaration	declaration	Declaration	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	Causes,	_name_	causes,	CD	O	_	$LEMMA$	_	0	IGNORE	true
28	promising	_	promising	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
29	continued	_	continue	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	continue-01	(s())	30	MOD_s	true
30	loyalty	_	loyalty	NN	O	(d<root> / --LEX--)	loyal-01	()	28	APP_s	true
31	if	_	if	IN	O	_	i	_	0	IGNORE	true
32	Mexico	_name_	Mexico	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	33	APP_s	true
33	returned	_	return	VBD	O	(c<root> / --LEX--  :ARG0 (i<o>)  :ARG1 (y<s>)  :condition-of (w<mod>))	$LEMMA$-01	(mod(), s(), o())	28	MOD_mod	true
34	to	_	to	IN	O	_	-	_	0	IGNORE	true
35	a	_	a	DT	O	_	1	_	0	IGNORE	true
36	constitutional	_	constitutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
38	of	_	of	IN	O	_	person	_	0	IGNORE	true
39	government	_	government	NN	O	(g<root> / government-organization  :mod-of (p<mod>)  :ARG0-of (g2 / --LEX--))	govern-01	(mod())	37	MOD_mod	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[36@@p@@constitutional, 9@@explicitanon0@@_NUMBER_, 33@@c@@return-01, 32@@c@@country, 37@@d@@form, 14@@d@@declare-01, 25@@d@@Declaration, 28@@s@@promising-01, 17@@s@@draft-01, 39@@g@@government-organization, 29@@s@@continue-01, 30@@d@@loyal-01, 16@@s@@instead-of-91, 1@@n@@now, 39@@g2@@govern-01, 32@@n@@_NAME_, 3@@p@@organization, 12@@s@@vote-01, 21@@o@@become-01, 7@@s@@Consultation, 4@@d@@delegate-01, 2@@s@@more, 9@@d@@date-entity, 11@@n@@_NAME_, 22@@s@@know-02]
sentence=1	Well,	_name_	Well,	NNP	O	_	expressive	_	0	IGNORE	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_poss	true
3	administration's	_	administration's	IN	O	_	have-purpose-91	_	0	IGNORE	true
4	objective	_	objective	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_dom	true
5	will	_	will	MD	O	_	i	_	0	IGNORE	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	healthy,	_	healthy,	JJ	O	_	and	_	0	IGNORE	true
9	vigorous,	_	vigorous,	NN	O	_	and	_	0	IGNORE	true
10	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	economy	_	economy	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	provides	_	provide	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	MOD_s	true
14	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	opportunities	_	opportunity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
16	for	_	for	IN	O	_	and	_	0	IGNORE	true
17	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	Americans,	_name_	americans,	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	and	(mod())	11	MOD_mod	true
19	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
20	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	barriers	_	barrier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o2	true
22	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	21	MOD_o	true
23	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
24	bigotry	_	bigotry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
25	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_s	true
26	discrimination	_	discrimination	NN	O	(d<root> / --LEX--)	discriminate-02	()	25	APP_op2	true
27	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[22@@s@@bear-02, 25@@a@@or, 26@@d@@discriminate-02, 20@@explicitanon0@@-, 13@@b@@provide-01, 15@@d@@opportunity, 14@@s@@equal-01, 18@@explicitanon0@@and, 21@@d@@barrier, 24@@d@@bigotry, 2@@d@@this, 17@@p@@all, 4@@m@@objective, 10@@s@@grow-01, 11@@r@@economy]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	service	_	service	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	serve-01	(s())	7	APP_o	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
5	means,	_	means,	NNP	O	_	mean-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	service	_	service	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	serve-01	(s(), o())	0	ROOT	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	millions	_	million	NNS	O	(p<root> / person  :quant (m / multiple  :op1 (explicitanon0 / --LEX--)))	1000000	()	7	APP_s	true
11	who	_	who	WP	O	_	person	_	0	IGNORE	true
12	suffer	_	suffer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[7@@s@@serve-01, 4@@n@@_NAME_, 10@@m@@multiple, 10@@p@@person, 12@@s@@suffer-01, 10@@explicitanon0@@1000000, 2@@s@@serve-01, 4@@c@@country]
sentence=1	With	with	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	13	APP_op1	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	park	_	park	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	park	_	park	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	ticket	_	ticket	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	train	_	train	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	Diagon_Alley	_name_	Alley	NNP	O	(c3<root> / county  :name (n3 / --LEX--)  :location-of (f<mod>))	_NAME_	(mod())	8	MOD_mod	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	for	_	for	IN	O	_	and	_	0	IGNORE	true
15	lunch	_	lunch	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (t<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o())	13	APP_op2	true
18	to	_	to	IN	O	_	and	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Leaky	leaky	Leaky	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	Cauldron,	cauldron,	cauldron,	CD	O	_	and	_	0	IGNORE	true
22	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
23	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	MOD_s	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	bunch	_	bunch	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
26	of	_	of	IN	O	_	name	_	0	IGNORE	true
27	British	_name_	british	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	28	MOD_mod	true
28	themed	_	theme	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
30	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[25@@explicitanon0@@bunch, 20@@d@@Leaky, 29@@d@@food, 27@@c@@country, 27@@n@@_NAME_, 13@@a@@and, 6@@d@@ticket, 12@@n3@@_NAME_, 28@@s@@theme-01, 10@@d@@train, 15@@o@@lunch, 17@@g@@go-02, 3@@p@@park, 5@@p@@park, 12@@c3@@county, 7@@d@@we, 23@@s@@have-03, 8@@s@@take-01, 1@@s@@cause-01]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	cause	_	cause	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	5	MOD_mod	true
5	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-13	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	name	_	0	IGNORE	true
7	Padalecki,	padalecki,	padalecki,	CD	O	(d<root> / --LEX--)	_NAME_	()	5	APP_o	true
8	who	_	who	WP	O	_	name	_	0	IGNORE	true
9	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
10	been	_	be	VBN	O	_	person	_	0	IGNORE	true
11	candid	_	candid	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	MOD_s	true
12	about	_	about	IN	O	_	and	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	and	_	0	IGNORE	true
14	own	_	own	JJ	O	_	person	_	0	IGNORE	true
15	struggles	_	struggle	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
16	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
17	depression.	_	depression.	ADD	O	_	_NAME_	_	0	IGNORE	true
18	[20	_	[20	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
19	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@close-13, 4@@p@@particular, 11@@c@@candid-01, 15@@s@@struggle-01, 2@@d@@cause-01, 7@@d@@_NAME_, 18@@p@@_NAME_]
sentence=1	There's	there's	There's	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	_	say-01	_	0	IGNORE	true
3	course	_	course	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	of-$LEMMA$	(mod())	10	MOD_mod	true
4	Jason,	jason,	jason,	CD	O	(d<root> / --LEX--)	original	()	9	APP_op1	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
8	editor	_	editor	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	4	MOD_s	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
10	he's	_	he's	NNP	O	(d<root> / --LEX--)	person	()	9	APP_op3	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
13	who	_	who	WP	O	_	name	_	0	IGNORE	true
14	writes	_	write	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	dD	_name_	dD	NNP	O	(d<root> / --LEX--)	_NAME_	()	14	APP_o	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@one, 8@@g@@editor, 10@@d@@person, 8@@h@@have-org-role-91, 7@@d@@our, 3@@p@@of-course, 4@@d@@original, 9@@a@@and, 15@@d@@_NAME_, 14@@s@@write-01]
sentence=1	“On	“on	“On	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	hand,”	_	hand,”	NNP	O	_	expressive	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
6	said,	_	said,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	3	MOD_s	true
7	“he’s	_	“he’s	NNP	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	10	MOD_mod	true
10	super	_	super	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_o	true
11	we’ve	_name_	we’ve	NNP	O	_	thing	_	0	IGNORE	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_o	true
13	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
14	keeps	_	keep	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	boiler,	_	boiler,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
19	buzzers,	_	buzzers,	NNS	O	_	mean-01	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	electrical	_	electrical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	electricity	(mod())	23	MOD_mod	true
23	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	working	_	work	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-09	(mod())	14	MOD_mod	true
27	order.	_	order.	RB	O	_	$LEMMA$	_	0	IGNORE	true
28	”	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[14@@s@@keep-01, 26@@p@@work-09, 5@@d@@i, 9@@o@@ordinal-entity, 22@@p@@electricity, 20@@a@@and, 23@@d@@system, 9@@explicitanon0@@1, 10@@s@@super, 3@@d@@other, 6@@s@@say-01, 18@@d@@door, 25@@s@@perfect-02, 12@@s@@have-03]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	10	MOD_s	true
2	there's	_	there'	VBZ	O	_	contrast-01	_	0	IGNORE	true
3	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_s	true
6	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	bed	_	bed	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
9	itself,	_	itself,	NNS	O	_	and	_	0	IGNORE	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	does	_	do	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	function,	_	function,	NNS	O	_	and	_	0	IGNORE	true
18	which,	_	which,	NNP	O	_	cause-01	_	0	IGNORE	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_o	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	storage	_	storage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@p@@important, 4@@s@@too, 13@@s@@have-03, 15@@s@@very, 10@@s@@contrast-01, 1@@s@@cause-01, 22@@explicitanon0@@lot, 5@@s@@special-02, 3@@d@@nothing, 20@@s@@have-03, 8@@a@@bed, 24@@d@@storage]
sentence=1	Jens_Otto_Harry_Jespersen	_name_	Jespersen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_dom	true
3	Otto_Jespersen	_name_	Jespersen	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
4	(Danish:	(danish:	(Danish:	NNP	O	_	person	_	0	IGNORE	true
5	[ʌtˢo	_	[ʌtˢo	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	11	MOD_s	true
6	ˈjɛsb̥ɐsn̩];	_	ˈjɛsb̥ɐsn̩];	RB	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	2	APP_op2	true
7	16_July_1860_–_30_April_1943)	_name_	1943)	NNP	O	_	person	_	0	IGNORE	true
8	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	person	(s())	11	MOD_s	true
9	a	_	a	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
10	Danish	_name_	danish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	11	MOD_mod	true
11	linguist	_	linguist	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
12	who	_	who	WP	O	_	name	_	0	IGNORE	true
13	specialized	_	specialize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	in	_	in	IN	O	_	name	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	grammar	_	grammar	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	APP_o	true
17	of	_	of	IN	O	_	name	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	English	_name_	english	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 10@@p@@country, 1@@p@@person, 13@@s@@specialize-01, 6@@explicitanon0@@_NAME_, 11@@r@@linguist, 8@@s@@person, 20@@d@@language, 6@@u@@url-entity, 2@@a@@or, 5@@s@@_NAME_, 16@@s@@grammar, 19@@n@@_NAME_, 3@@n@@_NAME_]
sentence=1	First,	first,	first,	FW	O	_	include-91	_	0	IGNORE	true
2	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_poss	true
3	experimental	_	experimental	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	subjects	_	subject	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_s	true
5	lived	_	live	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	enclosure	_	enclosure	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	conditions	_	condition	NNS	O	(s2<root> / --LEX--  :prep-under-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	allowed	_	allow	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	to	_	to	TO	O	_	date-interval	_	0	IGNORE	true
16	exercise	_	exercise	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o	true
17	all_day_long	_name_	long	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	long-03	(mod())	16	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s2@@condition, 13@@s@@allow-01, 8@@p@@large, 3@@s@@experimental-01, 9@@b@@enclosure, 16@@d@@exercise-01, 2@@d@@our, 17@@t@@long-03, 5@@s@@live-01, 4@@m@@subject]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	APP_op2	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	biggest	_	big	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	big	(mod())	7	MOD_mod	true
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	11	MOD_s	true
11	check	_	check	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-05	(s(), o())	7	MOD_o	true
12	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
13	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
14	you're	_	you're	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	Powell's	_name_	powell's	NN	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	4	APP_s	true
18	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
21	bookstore	_	bookstore	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[6@@t@@big, 17@@f@@facility, 10@@s@@recommend-01, 9@@d@@you, 4@@s@@include-91, 21@@p@@bookstore, 2@@n@@then, 6@@m@@most, 11@@s@@check-out-05, 1@@a@@and, 7@@d@@thing, 17@@n2@@_NAME_]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	folks,	_	folks,	NNS	O	_	expressive	_	0	IGNORE	true
3	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	I'm	i'm	I'm	VBZ	O	_	i	_	0	IGNORE	true
5	going	_	go	VBG	O	_	say-01	_	0	IGNORE	true
6	to	_	to	TO	O	_	say-01	_	0	IGNORE	true
7	show	_	show	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
9	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	happens	_	happen	VBZ	O	_	event	_	0	IGNORE	true
13	when	_	when	WRB	O	_	i	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	change	_	change	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	19	MOD_mod	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	temperature,	_	temperature,	NNS	O	_	thing	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	7	APP_s	true
19	that's	_	that's	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	7	MOD_s	true
20	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
21	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	22	MOD_mod	true
22	balloons	_	balloon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
23	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
24	in	_	in	RP	O	_	thing	_	0	IGNORE	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@d@@balloon, 8@@d@@you, 15@@s@@change-01, 21@@p@@this, 3@@n@@now, 1@@p@@well, 18@@a@@and, 10@@p@@else, 9@@d@@something, 7@@b@@show-01, 19@@s@@mean-01, 23@@s@@come-01]
sentence=1	Wear	wear	wear	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	shoes	_	shoe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	slip	_	slip	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
7	off	_	off	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
8	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	4	MOD_s	true
9	.	_	.	.	O	_	you	_	0	IGNORE	true

nodealignment=[8@@s@@easy-05, 6@@d@@and, 7@@explicitanon0@@off, 2@@d@@shoe, 1@@h@@wear-01, 1@@explicitanon0@@imperative, 4@@s@@slip-01]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	fact	_	fact	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
4	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	5	MOD_mod	true
5	criteria	_	criterion	NNS	O	(d<root> / --LEX--)	$FORM$	()	10	APP_s	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	widely	_	widely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	wide	(s())	5	MOD_s	true
8	known,	_	known,	NNP	O	_	and	_	0	IGNORE	true
9	however,	_	however,	NNP	O	_	cause-01	_	0	IGNORE	true
10	offers	_	offer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	an	_	an	DT	O	_	-	_	0	IGNORE	true
12	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	those	_	those	DT	O	_	that	_	0	IGNORE	true
15	who	_	who	WP	O	_	person	_	0	IGNORE	true
16	would	_	would	MD	O	_	person	_	0	IGNORE	true
17	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	MOD_s	true
18	them	_	they	PRP	O	_	person	_	0	IGNORE	true
19	for	_	for	IN	O	_	thing	_	0	IGNORE	true
20	deception,	_	deception,	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
21	witting	_	witte	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
23	unwitting	_	unwitting	JJ	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	responsible-02	()	22	APP_op2	true
24	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[23@@p@@responsible-02, 17@@s@@use-01, 22@@a@@or, 20@@p@@deception,, 21@@d@@witte-01, 5@@d@@criteria, 10@@s@@offer-01, 23@@explicitanon0@@-, 4@@p@@this, 12@@d@@opportunity, 7@@s@@wide]
sentence=1	Steven	_name_	Steven	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	jiggled	_	jiggle	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	2	MOD_mod	true
4	handle	_	handle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	stuck	_	stick	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-02	(s(), o())	4	MOD_s	true
7	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	beyond	_	beyond	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	6	APP_o	true
9	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_poss	true
10	front	_	front	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	teeth	_	tooth	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	8	APP_op1	true
12	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	6	MOD_s	true
13	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
14	metallic	_	metallic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	duck’s	_	duck’s	NN	O	(n2<root> / --LEX--  :name-of (w / work-of-art  :topic-of (t<mod>)))	_NAME_	(mod())	2	MOD_mod	true
16	bill,	_	bill,	NNP	O	_	and	_	0	IGNORE	true
17	turning	_	turn	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_op1	true
19	twisting	_	twist	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op2	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	professionally	_	professionally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	professional	(mod())	18	MOD_mod	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
24	murmuring	_	murmur	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
25	encouragements	_	encouragement	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@w@@work-of-art, 19@@d@@twist-01, 1@@n@@_NAME_, 25@@d@@encouragement-01, 18@@a@@and, 8@@o@@beyond, 11@@h@@tooth, 23@@a@@and, 13@@p@@some, 2@@s@@jiggle-01, 14@@p@@metallic, 17@@d@@turn-01, 24@@s@@murmur-01, 21@@s@@most, 3@@p@@person, 10@@p@@front, 1@@p@@person, 22@@t@@professional, 9@@d@@your, 6@@s@@stick-out-02, 15@@n2@@_NAME_, 4@@d@@handle, 12@@s@@resemble-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	moment	_	moment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	comes,	_	comes,	NNP	O	_	thing	_	0	IGNORE	true
4	which	_	which	WDT	O	_	i	_	0	IGNORE	true
5	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	2	MOD_s	true
7	rarely	_	rarely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	rare-02	(s())	5	MOD_s	true
8	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
9	history,	_	history,	NNS	O	_	and	_	0	IGNORE	true
10	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	step	_	step	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_op1	true
13	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	old	_	old	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	new,	_	new,	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
21	an	_	an	DT	O	_	1	_	0	IGNORE	true
22	age	_	age	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
23	ends,	_	ends,	NNP	O	_	shit	_	0	IGNORE	true
24	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
25	when	_	when	WRB	O	_	be-temporally-at-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
27	soul	_	soul	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	nation,	_	nation,	NNP	O	_	resemble-01	_	0	IGNORE	true
31	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	27	MOD_s	true
32	suppressed,	_	suppressed,	NNP	O	_	and	_	0	IGNORE	true
33	finds	_	find	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_op2	true
34	utterance	_	utterance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
35	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@d@@and, 16@@d@@old, 6@@s@@contrast-01, 2@@d@@moment, 5@@s@@come-01, 31@@s@@long-03, 22@@n@@age, 34@@d@@utterance, 7@@s@@rare-02, 27@@d@@soul, 11@@d@@we, 12@@s@@step-01, 33@@s@@find-01]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	nostalgic	_	nostalgic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	poems	_	poem	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
4	about	_	about	IN	O	_	cause-01	_	0	IGNORE	true
5	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	Harrow	_name_	Harrow	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	9	MOD_mod	true
7	friendships,	_	friendships,	NNP	O	(g<root> / --LEX--  :ARG0 (r2<s>)  :topic-of (c<mod>))	$LEMMA$	(mod(), s())	11	MOD_mod	true
8	Childish	childish	Childish	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	Recollections	recollections	Recollections	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
10	(1806),	_	(1806),	ADD	O	_	$LEMMA$	_	0	IGNORE	true
11	express	_	express	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	prescient	_	prescient	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	"consciousness	_	"consciousness	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	APP_o	true
15	of	_	of	IN	O	_	person	_	0	IGNORE	true
16	sexual	_	sexual	JJ	O	(d<root> / --LEX--)	sex	()	17	APP_s	true
17	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	14	APP_s	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	23	MOD_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	end	_	end	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	23	MOD_mod	true
23	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
24	England	_name_	England	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
25	untenable	_	untenable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	23	APP_o	true
26	to	_	to	IN	O	_	and	_	0	IGNORE	true
27	him."	_	him."	ADD	O	_	hyperlink-91	_	0	IGNORE	true
28	[23	_	[23	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
29	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@c@@country, 14@@s@@"consciousness, 16@@d@@sex, 3@@d@@poem, 25@@s@@untenable, 11@@s@@express-01, 6@@p@@Harrow-01, 22@@n@@end-01, 9@@p@@Recollections, 7@@g@@friendships,, 13@@p@@prescient, 23@@s@@make-02, 28@@p@@_NAME_, 8@@p@@Childish, 24@@n@@_NAME_, 19@@s@@possible-01, 17@@s@@differ-02, 2@@p@@nostalgic]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	images	_	image	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	will	_	will	MD	O	_	person	_	0	IGNORE	true
6	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	testament	_	testament	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	testify-01	(s(), o())	1	APP_op2	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	14	MOD_s	true
14	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_o	true
15	done	_	do	VBN	O	_	$LEMMA$-02	_	0	IGNORE	true
16	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	20	MOD_mod	true
19	of	_	of	IN	O	_	1	_	0	IGNORE	true
20	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	14	APP_s	true
21	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
22	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_poss	true
23	nation	_	nation	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_op1	true
24	who	_	who	WP	O	_	1	_	0	IGNORE	true
25	dedicated	_	dedicate	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	20	MOD_s	true
26	years	_name_	year	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	25	APP_o	true
27	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	project	_	project	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o2	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@see-01, 29@@d@@project, 26@@m@@year, 20@@e2@@work-01, 26@@t@@temporal-quantity, 10@@s@@testify-01, 14@@s@@work-01, 3@@d@@image, 18@@m@@multiple, 1@@a@@and, 7@@n@@today, 18@@explicitanon0@@1000, 4@@d@@we, 21@@b@@across, 25@@b@@dedicate-01, 20@@p2@@person, 28@@p@@this, 13@@s@@amaze-01, 22@@d@@our, 23@@m@@nation]
sentence=1	There's	there's	there'	NNS	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
2	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	horsetail	_	horsetail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	in	_	in	IN	O	_	name	_	0	IGNORE	true
5	here,	_	here,	NNS	O	_	and	_	0	IGNORE	true
6	which	_	which	WDT	O	_	i	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	equal-01	_	0	IGNORE	true
8	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	3	MOD_s	true
9	for	_	for	IN	O	_	i	_	0	IGNORE	true
10	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	growth	_	growth	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	grow-01	(mod(), s())	8	MOD_mod	true
12	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@i@@grow-01, 3@@d@@horsetail, 10@@d@@hair, 8@@s@@amaze-01, 2@@p@@even]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	runway	_	runway	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
4	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
5	fairly	_	fairly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	fair	(mod())	6	MOD_mod	true
6	regular	_	regular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
7	airline	_	airline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	transportation	_	transportation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	transport-01	(s())	4	APP_o	true
9	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
10	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	constructed	_	construct	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	1999	_name_	1999	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	11	MOD_mod	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@transport-01, 5@@s@@fair, 2@@d@@runway, 6@@s@@regular-02, 4@@s@@provide-01, 7@@d@@airline, 10@@p@@only, 11@@s@@construct-01, 13@@d@@date-entity, 13@@explicitanon0@@_NUMBER_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	study	_	study	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
5	people,	_	people,	NNP	O	_	thing	_	0	IGNORE	true
6	as	_	as	IN	O	_	person	_	0	IGNORE	true
7	fans,	_	fans,	NNP	O	_	thing	_	0	IGNORE	true
8	access	_	access	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	2	APP_s	true
10	manage	_	manage	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
11	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	within	_	within	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	transmedia	_	transmedia	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
16	provides	_	provide	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
17	valuable	_	valuable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	value-02	(s())	18	MOD_s	true
18	insight	_	insight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	contributes	_	contribute	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_s	true
21	not	_	not	RB	O	_	-	_	0	IGNORE	true
22	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	practitioners	_	practitioner	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
26	scholars	_	scholar	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	media	_	medium	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
30	industry,	_	industry,	NNS	O	_	person	_	0	IGNORE	true
31	but	_	but	CC	O	_	contrast-01	_	0	IGNORE	true
32	to	_	to	IN	O	_	person	_	0	IGNORE	true
33	the	_	the	DT	O	(d<root> / --LEX--)	person	()	16	APP_o2	true
34	wider	_	wide	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	wide-02	(s())	35	MOD_s	true
35	context	_	context	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o2	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	35	MOD_mod	true
38	studies,	_	studies,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
39	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
40	offering	_	offer	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	true
41	findings	_	finding	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	find-01	(s())	40	APP_s	true
42	on	_	on	IN	O	_	thing	_	0	IGNORE	true
43	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
44	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	MOD_s	true
45	model	_	model	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	41	MOD_mod	true
46	of	_	of	IN	O	_	person	_	0	IGNORE	true
47	the	_	the	DT	O	_	person	_	0	IGNORE	true
48	fan	_	fan	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
49	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
50	consumer	_	consumer	NN	O	(d<root> / --LEX--)	consume-01	()	51	APP_op1	true
51	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	41	APP_s	true
52	information-user	_	information-user	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_op2	true
53	.	_	.	.	O	_	you	_	0	IGNORE	true

nodealignment=[48@@p@@fan, 51@@a@@and, 41@@s@@find-01, 44@@s@@new-01, 14@@p@@transmedia, 25@@a@@and, 16@@b@@provide-01, 40@@b@@offer-01, 10@@s@@manage-01, 52@@d@@information-user, 34@@m@@more, 34@@b@@wide-02, 9@@a@@and, 26@@d@@scholar, 15@@d@@system, 33@@d@@person, 24@@e2@@practitioner, 35@@d@@context, 20@@b@@contribute-01, 8@@s@@access-01, 17@@s@@value-02, 29@@p@@medium, 24@@p2@@person, 18@@d@@insight, 37@@p@@culture, 11@@d@@information, 2@@s@@study-01, 50@@d@@consume-01, 43@@p@@this, 45@@a@@model-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_dom	true
2	am	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
4	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	candidate	_	candidate	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_op1	true
6	who	_	who	WP	O	_	-	_	0	IGNORE	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	studied	_	study	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	economics	_	economic	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	law,	_	law,	NN	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
15	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	candidate	_	candidate	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
17	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
18	a	_	a	DT	O	_	person	_	0	IGNORE	true
19	background	_	background	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	technology	_	technology	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	entrepreneurship	_	entrepreneurship	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	innovate-01	(mod())	19	MOD_mod	true
23	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@p@@technology, 13@@a@@and, 8@@s@@study-01, 5@@r@@candidate, 16@@d@@candidate, 11@@d@@and, 22@@p@@innovate-01, 19@@p@@background, 15@@p@@only, 1@@d@@i, 10@@p@@economic, 4@@p@@only]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	campsites	_	campsite	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	allow	_	allow	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	tourists	_	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	9	APP_s	true
8	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	barbeque	_	barbeque	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	APP_o	true
10	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	beach	_	beach	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	beautiful	_	beautiful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
15	mountain	_	mountain	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	views	_	view	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
19	background	_	background	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@s@@beautiful-02, 7@@e2@@tour-01, 15@@p@@mountain, 19@@b@@background, 3@@explicitanon0@@several, 6@@s@@allow-01, 7@@p2@@person, 16@@y@@view, 12@@b@@beach, 4@@d@@campsite, 9@@s@@barbeque-01]
sentence=1	No	no	no	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
2	doubt	_	doubt	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	decisions	_	decision	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	decide-01	()	7	APP_dom	true
5	were	_	be	VBD	O	_	person	_	0	IGNORE	true
6	perfectly	_	perfectly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	perfect-02	(s())	7	MOD_s	true
7	logical	_	logical	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_s	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	own	_	own	JJ	O	_	person	_	0	IGNORE	true
11	eyes	_	eye	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	—	_	—	,	O	_	and	_	0	IGNORE	true
13	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	one	_	one	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	prompted	_	prompt	VBD	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	13	MOD_s	true
18	him,	_	him,	NNS	O	_	multi-sentence	_	0	IGNORE	true
19	a	_	a	DT	O	_	person	_	0	IGNORE	true
20	patriotic	_	patriotic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	islander,	_	islander,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	bring	_	bring	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	17	APP_o2	true
24	me	_	I	PRP	O	_	i	_	0	IGNORE	true
25	a	_	a	DT	O	_	person	_	0	IGNORE	true
26	tutor	_	tutor	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	23	APP_o	true
27	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
28	Bain:_Master_Lunre,_an	_name_	an	DT	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	29	MOD_mod	true
29	Olondrian	_name_	Olondrian	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
30	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[6@@s@@perfect-02, 7@@r@@logical, 23@@t@@bring-01, 26@@s@@tutor, 1@@explicitanon0@@-, 4@@t@@thing, 28@@n@@_NAME_, 11@@b@@eye, 15@@p@@one, 28@@p@@person, 2@@s@@doubt-01, 13@@p@@even, 29@@p@@person, 4@@d@@decide-01, 20@@d@@patriotic, 29@@n@@_NAME_, 17@@t@@prompt-01]
sentence=1	While	while	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	21	MOD_s	true
2	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	chapter	_	chapter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	will	_	will	MD	O	_	thing	_	0	IGNORE	true
7	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	aspects	_	aspect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	about	_	about	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	act	_	act	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-02	(mod())	10	MOD_mod	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	learning,	_	learning,	NNS	O	_	thing	_	0	IGNORE	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
18	section,	_	section,	NNS	O	_	and	_	0	IGNORE	true
19	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
21	present	_	present	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
22	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	23	MOD_s	true
23	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	29	MOD_s	true
26	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
27	first	_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	at-$LEMMA$	(mod())	28	MOD_mod	true
28	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
29	unrelated	_	unrelated	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	relate-01	(s())	28	MOD_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[29@@p@@relate-01, 19@@d@@we, 25@@s@@possible-01, 17@@p@@this, 2@@explicitanon0@@much, 29@@explicitanon0@@-, 7@@s@@cover-01, 1@@s@@contrast-01, 8@@s@@very, 5@@d@@chapter, 21@@s@@present-01, 23@@d@@information, 28@@s@@seem-01, 4@@p@@this, 27@@n@@at-first, 9@@s@@specific-02, 22@@s@@differ-02, 10@@d@@aspect, 13@@a@@act-02]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	humans	_	human	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
3	who	_	who	WP	O	_	capable-01	_	0	IGNORE	true
4	have,	_	have,	VBZ	O	_	-	_	0	IGNORE	true
5	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
6	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	reasons,	_	reasons,	NNS	O	_	and	_	0	IGNORE	true
8	become	_	become	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	true
9	aware	_	aware	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	realize-01	(o(s()))	8	APP_o	true
10	of	_	of	IN	O	_	-	_	0	IGNORE	true
11	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
12	impending	_	impend	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
13	death,	_	death,	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
15	psychological	_	psychological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	coping	_	cope	VBG	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_mod	true
17	strategies	_	strategy	NNS	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	14	APP_o	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	deal	_	deal	VB	O	(i2<root> / --LEX--  :ARG0 (i<s>)  :ARG2 (t<o>)  :purpose-of (l<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_s	true
20	with	_	with	IN	O	_	thing	_	0	IGNORE	true
21	this;	_name_	this;	NNP	O	_	and	_	0	IGNORE	true
22	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
23	instance,	_	instance,	NNP	O	_	mean-01	_	0	IGNORE	true
24	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
25	Kubler-Ross	_name_	Kubler-Ross	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	26	MOD_mod	true
26	phases	_	phase	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
27	of	_	of	IN	O	_	and	_	0	IGNORE	true
28	grief	_	grief	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@n@@_NAME_, 17@@m@@strategy, 2@@d@@human, 15@@p@@psychological, 1@@explicitanon0@@some, 8@@o@@become-01, 16@@d@@cope, 9@@c@@realize-01, 14@@s@@develop-02, 26@@d@@phase, 6@@p@@various, 19@@i2@@deal-01, 28@@p@@grief, 12@@s@@impend-01]
sentence=1	Continually	continually	continually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	continue-01	(s())	2	MOD_s	true
2	moving	_	move	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
3	southward,	_	southward,	NNS	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	settlers	_	settler	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	settle-03	()	7	APP_s	true
6	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	7	MOD_mod	true
7	populated	_	populate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	both	_	both	CC	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	North_and_South_America,	_name_	america,	RB	O	_	and	_	0	IGNORE	true
10	creating	_	create	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
11	unique	_	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	cultures	_	culture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	ranged	_	range	VBD	O	(g<root> / --LEX--  :ARG1 (i<s>)  :ARG4 (j3<o2>)  :ARG3 (j2<o>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_s	true
15	from	_	from	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	18	MOD_mod	true
18	complex	_	complex	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	urban	_	urban	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	Aztec	_name_	aztec	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	civilization	_	civilization	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
23	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
24	what	_	what	WP	O	_	$LEMMA$	_	0	IGNORE	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	Mexico_City	_name_	City	NNP	O	(n<root> / --LEX--  :name-of (c2 / city  :location-of (l<mod>)))	_NAME_	(mod())	22	MOD_mod	true
28	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
30	woodland	_	woodland	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	tribes	_	tribe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	eastern	_	eastern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	east	(mod())	31	MOD_mod	true
34	North_America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	31	MOD_mod	true
35	.	_	.	.	O	_	include-91	_	0	IGNORE	true

nodealignment=[30@@p@@woodland, 5@@p2@@person, 31@@d@@tribe, 34@@c@@country, 17@@s@@high, 8@@d@@both, 2@@s@@move-01, 34@@n@@_NAME_, 1@@s@@continue-01, 20@@p@@urban, 12@@d@@culture, 14@@g@@range-01, 26@@n@@now, 21@@p@@_NAME_, 10@@s@@create-01, 6@@n@@eventual, 5@@e2@@settle-03, 27@@c2@@city, 7@@s@@populate-01, 11@@p@@unique, 22@@d@@civilization, 33@@p@@east, 27@@n@@_NAME_, 18@@p@@complex]
sentence=1	Well,	_name_	Well,	NNP	O	_	expressive	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	Barbara	_name_	Barbara	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
7	that	_	that	WDT	O	_	say-01	_	0	IGNORE	true
8	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_o	true
9	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	seeds	_	seed	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@some, 6@@p@@person, 8@@s@@have-03, 2@@d@@i, 10@@d@@seed, 3@@s@@think-01, 6@@n@@_NAME_]
sentence=1	Just_yesterday	_name_	yesterday	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	switched	_	switch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-over-12	(s(), o())	25	APP_snt1	true
4	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
5	to	_	to	IN	O	_	name	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	site	_	site	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	APP_o	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	MOD_s	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	demo	_	demo	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	VM	_name_	VM	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
16	(virtual	_	(virtual	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	microscope)	_	microscope)	NNP	O	(d<root> / --LEX--)	and	()	25	APP_snt2	true
18	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	19	APP_s	true
19	invite	_	invite	VBP	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (y<o>)  :ARG2 (r<o2>))	$LEMMA$-01	(o2(s_UNIFY_o()), s())	8	APP_mod	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
21	to	_	to	TO	O	_	i	_	0	IGNORE	true
22	check	_	check	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-out-05	(s())	19	APP_o2	true
23	it	_	it	PRP	O	_	i	_	0	IGNORE	true
24	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
25	.	_	.	.	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true

nodealignment=[17@@d@@and, 2@@d@@we, 18@@d@@i, 15@@n@@_NAME_, 25@@m@@multi-sentence, 16@@p@@_NAME_, 19@@t@@invite-01, 22@@s@@check-out-05, 7@@s@@new-01, 15@@p@@product, 3@@s@@switch-over-12, 20@@d@@you, 1@@n@@_NAME_, 12@@s@@demo-01, 8@@b@@site, 10@@s@@have-03]
sentence=1	A	a	a	DT	O	_	-	_	0	IGNORE	true
2	viable	_	viable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	economy	_	economy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	requires	_	require	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	an	_	an	DT	O	_	-	_	0	IGNORE	true
6	institutional	_	institutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	structure	_	structure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	reduces	_	reduce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
10	existing	_	exist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	uncertainty	_	uncertainty	NN	O	(d<root> / --LEX--)	-	()	9	APP_o	true
12	and	_	and	CC	O	_	$LEMMA$	_	4	IGNORE	true
13	guarantees	_	guarantee	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
14	property	_	property	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	right-05	(s())	13	APP_o	true
16	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@d@@-, 10@@s@@exist-01, 2@@p@@viable, 7@@d@@structure, 3@@d@@economy, 14@@d@@property, 6@@p@@institutional, 4@@s@@require-01, 9@@s@@reduce-01, 13@@s@@guarantee-01, 15@@s@@right-05]
sentence=1	Tourists	tourists	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	choose	_	choose	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_s	true
4	to	_	to	TO	O	_	person	_	0	IGNORE	true
5	purchase	_	purchase	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	camping	_	camping	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	tour	_	tour	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
8	packages	_	package	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
10	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	driver	_	driver	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	drive-01	()	13	APP_op1	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
14	guide	_	guide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	that	_	that	WDT	O	_	and	_	0	IGNORE	true
16	will	_	will	MD	O	_	person	_	0	IGNORE	true
17	show	_	show	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
18	tourists	_	tourist	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	17	APP_o	true
19	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	17	MOD_mod	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	beaches	_	beach	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
22	as	_	as	RB	O	_	and	_	0	IGNORE	true
23	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
24	as	_	as	IN	O	_	and	_	0	IGNORE	true
25	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
26	meals	_	meal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
27	during	_	during	IN	O	_	i	_	0	IGNORE	true
28	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
29	stay	_	stay	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	25	MOD_mod	true
30	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@a@@or, 2@@s@@possible-01, 18@@e2@@tour-01, 19@@b@@around, 1@@p2@@person, 12@@e2@@drive-01, 18@@p2@@person, 6@@p@@camping, 21@@d@@beach, 1@@e2@@tour-01, 10@@s@@include-01, 26@@d@@meal, 8@@d@@package, 7@@p@@tour-01, 3@@c@@choose-01, 29@@n@@stay-01, 12@@p2@@person, 14@@d@@guide, 25@@s@@provide-01, 5@@s@@purchase-01, 17@@t@@show-01]
sentence=1	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
3	requiring	_	require	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
4	specialized	_	specialized	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	know-01	()	3	APP_o	true
6	(of,	_	(of,	XX	O	_	-	_	0	IGNORE	true
7	for	_	for	IN	O	_	or	_	0	IGNORE	true
8	example,	_	example,	NNP	O	_	mean-01	_	0	IGNORE	true
9	science	_	science	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
11	old	_	old	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	movies)	_	movies)	FW	O	_	and	_	0	IGNORE	true
13	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
14	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	appreciated	_	appreciate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
17	by	_	by	IN	O	_	and	_	0	IGNORE	true
18	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
19	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
20	possess	_	possess	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
22	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[22@@d@@knowledge, 16@@s@@appreciate-01, 2@@d@@joke-01, 18@@d@@person, 1@@a@@and, 4@@s@@specialized-02, 14@@p@@only, 5@@d@@know-01, 11@@d@@old, 20@@s@@possess-01, 3@@s@@require-01, 10@@a@@or, 9@@d@@science]
sentence=1	Cross-clause	_name_	Cross-clause	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	enjambment:	_	enjambment:	XX	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	0	ROOT	true
3	Between	between	between	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_s	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	noun	_	noun	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	antecedent	_	antecedent	RB	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	pronoun	_	pronoun	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
10	heading	_	head	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	relative	_	relative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	clause	_	clause	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	complements	_	complement	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	antecedent	_	antecedent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@pronoun, 15@@s@@complement-01, 6@@d@@antecedent, 2@@s@@mean-01, 10@@s@@head-01, 3@@o@@between, 17@@d@@antecedent, 1@@p@@_NAME_, 12@@p@@relative, 5@@p@@noun, 13@@d@@clause]
sentence=1	Eugene_A._Nida	_name_	Nida	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
2	(November	(november	(November	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	_NAME_	(mod())	1	MOD_mod	true
3	11,	_	11,	NNP	O	_	date-interval	_	0	IGNORE	true
4	1914_–_August	_name_	August	NNP	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	25,	_	25,	NNP	O	_	date-interval	_	0	IGNORE	true
6	2011)	_name_	2011)	NNP	O	_	and	_	0	IGNORE	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	linguist	_	linguist	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
10	who	_	who	WP	O	_	name	_	0	IGNORE	true
11	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_s	true
12	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
13	dynamic-equivalence	_	dynamic-equivalence	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	Bible-translation	bible-translation	bible-translation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	eliminate-01	(mod())	15	MOD_mod	true
15	theory	_	theory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
16	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
17	one	_	one	CD	O	_	1	_	0	IGNORE	true
18	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	MOD_s	true
19	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
20	founders	_	founder	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	found-01	(s())	18	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	discipline	_	discipline	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	Translation_Studies	_name_	Studies	NNPS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
27	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[9@@p@@linguist, 18@@s@@include-91, 4@@explicitanon1@@_NAME_, 13@@p@@dynamic-equivalence, 26@@n@@_NAME_, 2@@explicitanon1@@_NAME_, 20@@s@@found-01, 15@@d@@theory, 14@@p@@eliminate-01, 23@@s@@modern-02, 16@@d@@and, 11@@s@@develop-02, 1@@n@@_NAME_, 24@@d@@discipline]
sentence=1	"I'm	"i'm	"i'm	JJ	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
3	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	2	MOD_mod	true
4	things:	_	things:	NNS	O	_	and	_	0	IGNORE	true
5	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
6	it's	_	it's	PRP	O	_	-	_	0	IGNORE	true
7	neither	_	neither	CC	O	_	-	_	0	IGNORE	true
8	classified	_	classified	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_op1	true
9	nor	_	nor	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	-	(op2(), op1())	11	APP_op1	true
10	secret	_	secret	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	it's	_	it's	PRP$	O	_	-	_	0	IGNORE	true
14	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	18	MOD_s	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	14	MOD_s	true
19	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	access	_	access	NN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
21	to	_	to	IN	O	_	and	_	0	IGNORE	true
22	information,"	_	information,"	NNP	O	_	and	_	0	IGNORE	true
23	Baird	_name_	Baird	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@stuff, 1@@n@@_NAME_, 1@@p@@person, 8@@d@@classified-02, 16@@s@@possible-01, 10@@d@@secret, 20@@s@@access-01, 11@@a@@and, 3@@explicitanon0@@2, 23@@p@@person, 9@@a@@-, 23@@n@@_NAME_, 2@@s@@tell-01, 24@@s@@say-01, 18@@s@@available-02]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	Polaroid	_name_	Polaroid	NNP	O	(p2<root> / product  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	format	_	format	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	what	_	what	WP	O	_	contrast-01	_	0	IGNORE	true
7	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
8	Warhol_famous,_however,	_name_	however,	NNP	O	_	and	_	0	IGNORE	true
9	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
13	company	_	company	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	MOD_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	well-known	_	well-known	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	_NAME_	(s())	17	MOD_s	true
17	photographers	_	photographer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
18	who	_	who	WP	O	_	name	_	0	IGNORE	true
19	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	camera,	_	camera,	NNS	O	_	and	_	0	IGNORE	true
22	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
23	as	_	as	IN	O	_	and	_	0	IGNORE	true
24	Ansel_Adams,_Chuck	_name_	chuck	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	29	APP_op1	true
25	Close,	close,	close,	CD	O	_	and	_	0	IGNORE	true
26	Walker	walker	Walker	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	29	APP_op2	true
27	Evans,	evans,	evans,	NN	O	_	and	_	0	IGNORE	true
28	Robert_Mapplethorpe,	_name_	mapplethorpe,	CD	O	_	and	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	19	APP_o	true
30	Helmut_Newton	_name_	Newton	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	29	APP_op3	true
31	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[30@@n@@_NAME_, 9@@d@@he, 26@@p@@person, 13@@s@@company, 16@@explicitanon0@@-, 5@@explicitanon0@@-, 2@@n@@_NAME_, 3@@d@@format, 29@@a@@and, 16@@n@@_NAME_, 7@@s@@make-02, 24@@n@@_NAME_, 15@@p@@other, 2@@p2@@product, 17@@d@@photographer, 26@@n@@_NAME_, 19@@s@@use-01, 30@@p@@person, 24@@p@@person]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	thank	_	thank	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	true
3	you,	_	you,	PRP	O	_	say-01	_	0	IGNORE	true
4	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
5	dear	_	dear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	friend	_	friend	NN	O	(c<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG1 (i<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	21	MOD_s	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_op2	true
8	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	outstanding	_	outstanding	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	NASA_Administrator	_name_	Administrator	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	_NAME_	(s())	21	MOD_s	true
11	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
13	guy—the	_	guy—the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
14	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	guy	_	guy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
16	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	who’s	_	who’s	NNP	O	_	person	_	0	IGNORE	true
18	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	15	MOD_s	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	space,	_	space,	NNP	O	_	and	_	0	IGNORE	true
21	Bill_Nelson	_name_	Nelson	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p@@outstanding, 8@@d@@our, 15@@d@@guy, 6@@c@@friend, 1@@a@@and, 2@@d@@thank-01, 6@@h@@have-rel-role-91, 10@@s@@_NAME_, 13@@p@@_NAME_, 14@@p@@only, 21@@n@@_NAME_, 16@@b@@here, 5@@p@@dear, 7@@a@@and, 18@@s@@be-located-at-91]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	concerns	_	concern	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
4	underpinning	_	underpin	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	alleged	_	allege	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	7	MOD_s	true
7	crisis	_	crisis	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
9	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	dimensions	_	dimension	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	relating	_	relate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	to:	_	to:	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	(a)	_	(a)	NNP	O	_	mean-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	(small)	_	(small)	HYPH	O	_	mean-01	_	0	IGNORE	true
16	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	APP_op1	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_mod	true
20	research;	_	research;	NNP	O	_	and	_	0	IGNORE	true
21	(b)	_	(b)	NFP	O	_	mean-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
23	(poor)	_	(poor)	JJ	O	_	mean-01	_	0	IGNORE	true
24	quality	_	quality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	28	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_poss	true
27	research;	_	research;	NNP	O	_	include-91	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	11	APP_o	true
29	(c)	_	(c)	-LRB-	O	_	mean-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
31	(lack	_	(lack	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op3	true
32	of)	_	of)	NN	O	_	-	_	0	IGNORE	true
33	reproducibility,	_	reproducibility,	NNS	O	_	_NAME_	_	0	IGNORE	true
34	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
35	refers	_	refer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
36	to	_	to	IN	O	_	mean-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
38	extent	_	extent	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	to	_	to	TO	O	_	thing	_	0	IGNORE	true
40	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
41	findings	_	finding	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	45	APP_s	true
42	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_o	true
43	(not)	_	(not)	RB	O	_	thing	_	0	IGNORE	true
44	be	_	be	VB	O	_	person	_	0	IGNORE	true
45	reproduced	_	reproduce	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	APP_s	true
46	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
47	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
48	attempts	_	attempt	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_o	true
49	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
50	have	_	have	VBP	O	_	person	_	0	IGNORE	true
51	been	_	be	VBN	O	_	person	_	0	IGNORE	true
52	undertaken	_	undertake	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@have-03, 9@@explicitanon0@@several, 3@@d@@concern-01, 10@@d@@dimension, 28@@a@@and, 42@@s@@possible-01, 38@@s@@extent, 35@@s@@refer-01, 47@@d@@replication-01, 19@@d@@replication-01, 18@@s@@publish-01, 26@@d@@replication-01, 24@@m@@quality, 16@@explicitanon0@@amount, 2@@p@@severe, 11@@s@@relate-01, 7@@d@@crisis, 41@@t@@thing, 52@@s@@undertake-01, 48@@s@@attempt-01, 31@@d@@(lack, 41@@d@@finding-01, 4@@s@@underpin-01, 6@@s@@allege-01, 45@@s@@reproduce-01]
sentence=1	That's	that's	that's	PRP	O	_	of	_	0	IGNORE	true
2	the	_	the	DT	O	_	product-of	_	0	IGNORE	true
3	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	that's	_	that's	PRP	O	_	thing	_	0	IGNORE	true
5	ten_days	_name_	day	NNS	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	older	_	old	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	old	(mod())	3	MOD_mod	true
7	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	–	_	–	.	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	_NAME_	(mod())	3	MOD_mod	true

nodealignment=[8@@p@@_NAME_, 5@@m@@day, 3@@d@@one, 6@@m@@more, 6@@f2@@old]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	brings	_	bring	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	APP_s	true
4	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	to	_	to	IN	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	product,	_	product,	NNS	O	_	thing	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
11	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
12	curl	_	curl	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
13	defining	_	define	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
14	jelly	_	jelly	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@s@@define-01, 3@@b@@bring-01, 12@@d@@curl, 14@@d@@jelly, 2@@d@@that, 4@@d@@us, 1@@s@@cause-01, 7@@p@@next]
sentence=1	File	file	file	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	image	_	image	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	of	_	of	IN	O	_	person	_	0	IGNORE	true
4	Space_Shuttle_Atlantis	_name_	Atlantis	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	lifting	_	lift	VBG	O	(g<root> / --LEX--  :ARG0 (r2<s>)  :topic-of (c<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
6	off,	_	off,	NN	O	_	and	_	0	IGNORE	true
7	which	_	which	WDT	O	_	i	_	0	IGNORE	true
8	approaches	_	approach	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
13	retirement	_	retirement	NN	O	(d<root> / --LEX--)	retire-01	()	12	APP_op1	true
14	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@c@@company, 1@@p@@file, 2@@d@@image, 8@@s@@approach-01, 12@@w@@before, 13@@d@@retire-01, 10@@p@@last, 5@@g@@lift-01, 4@@n@@_NAME_, 11@@d@@mission]
sentence=1	Gordon	_name_	Gordon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	brought	_	bring	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-08	(s())	5	APP_op1	true
4	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	remained	_	remain	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	lifelong	_	lifelong	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	Roman_Catholic,	_name_	catholic,	NN	O	_	name	_	0	IGNORE	true
10	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	when	_	when	WRB	O	_	name	_	0	IGNORE	true
14	the	_	the	DT	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	name	(op1(), mod())	5	MOD_mod	true
15	Church	_name_	Church	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	being	_	be	VBG	O	_	person	_	0	IGNORE	true
18	persecuted	_	persecute	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
19	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
20	Scotland,	scotland,	scotland,	CD	O	_	_NAME_	_	0	IGNORE	true
21	which	_	which	WDT	O	_	name	_	0	IGNORE	true
22	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
23	become	_	become	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
24	Calvinist	_name_	Calvinist	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
25	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[8@@d@@lifelong, 15@@d@@Church, 24@@d@@Calvinist, 1@@n@@_NAME_, 1@@p@@person, 23@@s@@become-01, 5@@a@@and, 3@@s@@bring-up-08, 18@@s@@persecute-01, 6@@s@@remain-01, 14@@n@@name]
sentence=1	Why	why	why	WRB	O	(a<root> / --LEX--  :ARG0-of (c / cause-01  :ARG1 (n<s>)))	amr-unknown	(s())	0	ROOT	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	1	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	bother	_	bother	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
5	my	_	my	PRP$	O	_	say-01	_	0	IGNORE	true
6	child	_	child	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	4	APP_o	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
9	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	can	_	can	MD	O	(p<root> / --LEX--  :ARG1 (s2<o>)  :time-of (s<mod>))	possible-01	(mod(), o(s()))	4	MOD_mod	true
12	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	computer	_	computer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	will	_	will	MD	O	_	thing	_	0	IGNORE	true
17	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
18	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_o	true
21	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
24	?	_	?	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@p@@possible-01, 6@@p@@person, 4@@b@@bother-01, 17@@s@@remember-01, 1@@a@@amr-unknown, 20@@s@@ask-02, 3@@d@@i, 18@@d@@everything, 2@@s@@recommend-01, 12@@s@@buy-01, 8@@d@@memory, 1@@c@@cause-01, 14@@d@@computer, 19@@d@@you, 23@@s@@remember-01, 6@@h@@have-rel-role-91, 6@@f@@child]
sentence=1	Nevertheless,	nevertheless,	nevertheless,	XX	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	past	_	past	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	over	_	over	RB	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	future	_	future	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
12	beckons	_	beckon	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
13	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@d@@us, 12@@s@@beckon-01, 10@@d@@future, 3@@d@@past, 14@@n@@now, 6@@a@@and, 5@@r@@over]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	friend	_	friend	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	3	MOD_s	true
3	Andrea	_name_	Andrea	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_dom	true
4	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	8	MOD_s	true
5	a	_	a	DT	O	_	officer	_	0	IGNORE	true
6	biology	_	biology	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	major	_	major	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	4	APP_o	true
8	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
11	stop	_	stop	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
12	to	_	to	TO	O	_	and	_	0	IGNORE	true
13	look	_	look	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
14	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
15	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	slugs	_	slug	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
21	ground	_	ground	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
23	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
24	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
25	beeline	_	beeline	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	slugs	_	slug	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@r@@major, 8@@s@@cause-01, 25@@d@@beeline-01, 11@@s@@stop-01, 2@@h@@have-rel-role-91, 13@@s@@look-01, 27@@a@@away, 22@@a@@and, 6@@p@@biology, 21@@b@@ground, 9@@d@@we, 15@@explicitanon0@@many, 16@@d@@slug, 4@@s@@person, 3@@p@@person, 2@@b@@friend, 3@@n@@_NAME_, 23@@d@@i]
sentence=1	To	to	to	TO	O	_	have-condition-91	_	0	IGNORE	true
2	do	_	do	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	20	MOD_mod	true
3	this,	_	this,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
4	choose	_	choose	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	20	APP_op1	true
5	pads	_	pad	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
6	(the	_	(the	ADD	O	_	$LEMMA$	_	0	IGNORE	true
7	flat,	_	flat,	NNP	O	_	old	_	0	IGNORE	true
8	oval-shaped	_	oval-shaped	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	sections	_	section	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	that	_	that	WDT	O	_	website	_	0	IGNORE	true
11	make	_	make	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-07	(s())	9	MOD_s	true
12	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	cactus)	_	cactus)	NN	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	20	MOD_mod	true
15	that	_	that	WDT	O	_	foot	_	0	IGNORE	true
16	are	_	be	VBP	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	20	MOD_mod	true
17	6_months_old	_name_	old	JJ	O	(m<root> / --LEX--  :unit-of (a<mod>))	year	(mod())	14	MOD_mod	true
18	or	_	or	CC	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	older	_	old	JJR	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	old	(mod())	9	MOD_mod	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
21	cut	_	cut	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	20	APP_op2	true
22	them	_	they	PRP	O	_	person	_	0	IGNORE	true
23	at	_	at	IN	O	_	thing	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	base	_	base	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
26	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@m@@year, 4@@h@@choose-01, 9@@d@@section, 19@@l@@old, 4@@explicitanon0@@imperative, 2@@i@@do-02, 17@@m@@year, 21@@s@@cut-02, 25@@b@@base, 19@@m@@more, 5@@d@@pad, 11@@s@@make-up-07, 8@@s@@oval-shaped, 20@@a@@and, 16@@m@@year, 18@@m@@or]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
3	gels	_	gel	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
4	–	_	–	:	O	_	i	_	0	IGNORE	true
5	a	_	a	DT	O	_	i	_	0	IGNORE	true
6	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	times	_	time	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
11	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
12	gels	_	gel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	kinda,	_	kinda,	NNP	O	_	$LEMMA$-01	_	0	IGNORE	true
15	like,	_	like,	NNS	O	_	thing	_	0	IGNORE	true
16	dry	_	dry	VBP	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-out-03	(o(poss_UNIFY_s()))	12	MOD_s	true
17	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	hair	_	hair	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	16	APP_o	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@t@@gel, 12@@d@@gel, 9@@d@@you, 1@@s@@cause-01, 16@@l@@dry-out-03, 19@@h@@hair, 8@@n@@time, 11@@s@@find-01, 6@@explicitanon0@@lot]
sentence=1	Even	even	even	RB	O	_	contrast-01	_	0	IGNORE	true
2	though	_	though	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	22	MOD_s	true
3	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
4	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	Americans	_name_	Americans	NNPS	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	16	MOD_mod	true
7	who	_	who	WP	O	_	person	_	0	IGNORE	true
8	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	in	_	in	IN	O	_	-	_	0	IGNORE	true
10	God	god	God	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
11	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	outweighs	_	outweigh	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
16	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	22	MOD_o	true
17	not,	_	not,	XX	O	_	-	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	minority	_	minority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	protected	_	protect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@believe-01, 10@@p@@person, 16@@s@@person, 12@@s@@outweigh-01, 6@@c@@country, 21@@p@@still, 2@@s@@have-concession-91, 19@@d@@minority, 6@@n@@_NAME_, 11@@s@@far, 14@@d@@number, 22@@s@@protect-01, 10@@n@@_NAME_, 4@@d@@number]
sentence=1	How	how	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	2	MOD_mod	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	workers,	_	workers,	NNS	O	_	include-91	_	0	IGNORE	true
7	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	specializing	_	specialize	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	certain	_	certain	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	tasks,	_	tasks,	NNS	O	_	thing	_	0	IGNORE	true
12	produce	_	produce	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
13	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	than	_	than	IN	O	_	monetary-quantity	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	19	APP_mod	true
22	who	_	who	WP	O	_	person	_	0	IGNORE	true
23	try	_	try	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	MOD_s	true
24	to	_	to	TO	O	_	person	_	0	IGNORE	true
25	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_o	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	good	_	good	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op1	true
29	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_o	true
30	service	_	service	NN	O	(d<root> / --LEX--)	serve-01	()	29	APP_op2	true
31	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
33	?	_	?	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@p@@each, 2@@s@@possible-01, 25@@s@@produce-01, 15@@explicitanon0@@more, 27@@p@@entire, 13@@s@@so, 4@@d@@group, 1@@t@@amr-unknown, 29@@a@@or, 18@@s@@same-01, 10@@d@@certain, 21@@p2@@person, 12@@s@@produce-01, 19@@explicitanon0@@number, 28@@d@@good, 30@@d@@serve-01, 14@@p@@much, 23@@c@@try-01, 21@@e2@@work-01, 8@@s@@specialize-01]
sentence=1	To	to	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	"route	_	"route	XX	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
3	out"	_	out"	FW	O	_	you	_	0	IGNORE	true
4	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
5	Scientology	scientology	Scientology	NNP	O	(t<root> / thing  :name (n / --LEX--)  :mod-of (w<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	jargon	_	jargon	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	refers	_	refer	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	to	_	to	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	member	_	member	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	7	APP_o	true
11	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
12	wishes	_	wish	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-11	(s(), o())	10	MOD_s	true
15	proceeding	_	proceed	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
16	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	set	_	set	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	interrogative	_	interrogative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	exit	_	exit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
22	interviews	_	interview	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
23	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
24	attached	_	attach	VBN	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
25	to	_	to	IN	O	_	-	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	Scientology	_name_	Scientology	NNP	O	_	_NAME_	_	0	IGNORE	true
28	device	_	device	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
29	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
31	E-meter	_name_	E-meter	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
32	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[5@@t@@thing, 10@@p@@person, 31@@n@@_NAME_, 2@@d@@"route-01, 22@@t@@interview-01, 10@@e@@member, 14@@s@@leave-11, 21@@p@@exit-01, 20@@p@@interrogative, 10@@h@@have-org-role-91, 5@@n@@_NAME_, 7@@s@@refer-01, 18@@p@@set, 24@@b@@attach-01, 12@@s@@wish-01, 15@@d@@proceed-01, 6@@b@@jargon, 28@@d@@device]
sentence=1	You’re	_name_	you’re	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	name	(s())	2	APP_o	true
2	leaning	_	lean	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	railing,	_	railing,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
6	waiting	_	wait	VBG	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	2	MOD_s	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	Derya	_name_	Derya	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
10	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	job,	_	job,	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	watching	_	watch	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	glittering	_	glitter	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	stream	_	stream	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	mites	_	mite	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	arc	_	arc	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
21	over	_	over	IN	O	(a<root> / --LEX--  :op1 (t<op1>)  :path-of (r<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
22	half	_	half	PDT	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
24	sky	_	sky	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
25	—	_	—	HYPH	O	_	and	_	0	IGNORE	true
26	flying	_	fly	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
27	up	_	up	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
28	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
29	rewind	_	rewind	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	26	MOD_mod	true
30	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
31	nanosprings	_	nanospring	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	the	_	the	DT	O	_	he	_	0	IGNORE	true
34	stratospheric	_	stratospheric	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	sunlight,	_	sunlight,	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
36	flying	_	fly	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	MOD_s	true
37	down	_	down	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
38	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
39	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	36	MOD_mod	true
40	Frankfurt	_name_	Frankfurt	NNP	O	_	$LEMMA$	_	0	IGNORE	true
41	run	_	run	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	39	APP_o	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[41@@d@@run-02, 8@@s@@ask-01, 26@@s@@fly-01, 21@@a@@over, 2@@s@@lean-01, 27@@a@@up, 29@@i@@rewind-01, 31@@d@@nanospring, 6@@o@@wait-01, 9@@n@@_NAME_, 37@@a@@down, 1@@s@@name, 39@@s@@make-01, 13@@s@@watch-01, 34@@p@@stratospheric, 24@@d@@sky, 22@@d@@half, 9@@p@@person, 35@@d@@sunlight,, 18@@d@@mite, 36@@s@@fly-01, 20@@s@@arc-01, 16@@s@@stream-01, 15@@s@@glitter-01]
sentence=1	Such	such	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
2	arguments,	_	arguments,	NNS	O	_	oppose-01	_	0	IGNORE	true
3	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	contrary,	_	contrary,	NNS	O	_	thing	_	0	IGNORE	true
6	necessarily	_	necessarily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	7	MOD_s	true
7	appeared	_	appear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	to	_	to	IN	O	_	thing	_	0	IGNORE	true
9	Luther,	_name_	luther,	CD	O	_	mean-01	_	0	IGNORE	true
10	given	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
11	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
12	theological	_	theological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
13	orientation,	_	orientation,	NNS	O	_	thing	_	0	IGNORE	true
14	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
15	suspicious,	_	suspicious,	NNP	O	_	-	_	0	IGNORE	true
16	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	very	_	very	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	start,	_	start,	NNS	O	_	cause-01	_	0	IGNORE	true
20	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
21	they	_	they	PRP	O	_	person	_	0	IGNORE	true
22	originated	_	originate	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	20	APP_s	true
23	from	_	from	IN	O	_	thing	_	0	IGNORE	true
24	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
25	nature,	_	nature,	NNS	O	(d<root> / --LEX--)	and	()	7	APP_s	true
26	which	_	which	WDT	O	_	i	_	0	IGNORE	true
27	exalted	_	exalt	VBD	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-01	(s())	24	MOD_s	true
28	itself	_	itself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	against	_	against	IN	O	_	oppose-01	_	0	IGNORE	true
30	God	god	God	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	27	MOD_mod	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@need-01, 14@@s@@cause-01, 20@@s@@cause-01, 12@@p@@theological, 1@@p@@such, 30@@n@@_NAME_, 7@@s@@appear-01, 27@@r@@exalt-01, 18@@p@@very, 25@@d@@and, 22@@s@@originate-01, 24@@d@@human]
sentence=1	At	at	at	IN	O	_	include-91	_	0	IGNORE	true
2	times,	_	times,	CD	O	_	and	_	0	IGNORE	true
3	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
4	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	17	MOD_mod	true
5	who	_	who	WP	O	_	person	_	0	IGNORE	true
6	work	_	work	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	academia	_	academia	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	APP_op1	true
10	be	_	be	VB	O	_	person	_	0	IGNORE	true
11	unsure	_	unsure	JJ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	sure-02	(mod())	9	MOD_mod	true
12	of	_	of	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	journal’s	_	journal’s	NNP	O	(d<root> / --LEX--)	-	()	17	APP_s	true
16	legitimacy,	_	legitimacy,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
18	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
19	are	_	be	VBP	O	_	person	_	0	IGNORE	true
20	genuine	_	genuine	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	borderline	_	borderline	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	cases	_	case	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	17	APP_op2	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@p@@particular, 3@@p@@even, 21@@p@@borderline, 4@@p@@that, 17@@a@@and, 11@@explicitanon0@@sure-02, 9@@s@@possible-01, 8@@b@@academia, 15@@d@@-, 22@@s@@case-04, 20@@p@@genuine, 6@@s@@work-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	pattern	_	pattern	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	APP_dom	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
5	sustained	_	sustained	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	sustain-01	(s())	6	MOD_s	true
6	economic	_	economic	JJ	O	(m<root> / --LEX--  :poss (i<poss>))	economy	(poss())	2	APP_s	true
7	growth,	_	growth,	NN	O	_	and	_	0	IGNORE	true
8	which	_	which	WDT	O	_	product-of	_	0	IGNORE	true
9	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	equal-01	(s(), o())	21	MOD_s	true
10	at	_	at	IN	O	_	year	_	0	IGNORE	true
11	6_to_7_per_cent	_name_	cent	NN	O	(d<root> / --LEX--)	_NAME_	()	9	APP_o	true
12	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	seventh	_name_	seventh	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	9	MOD_mod	true
15	consecutive	_	consecutive	JJ	O	_	$LEMMA$	_	0	IGNORE	true
16	year,	_	year,	NN	O	_	and	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
20	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
21	base	_	base	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
22	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
24	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
26	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
27	maintain	_	maintain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op1	true
28	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	29	MOD_s	true
29	standards	_	standard	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	APP_s	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	respect	_	respect	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
34	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	right-05	(s())	31	APP_s	true
35	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	21	MOD_mod	true
36	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
37	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
38	poverty	_	poverty	NN	O	(d<root> / --LEX--)	poor	()	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_s	true
40	crime	_	crime	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	39	APP_op2	true
41	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[19@@s@@good-02, 28@@b@@high-02, 40@@d@@crime-02, 4@@d@@our, 11@@d@@_NAME_, 25@@d@@society, 9@@s@@equal-01, 37@@s@@fight-01, 6@@m@@economy, 28@@m@@more, 2@@s@@pattern, 14@@o@@ordinal-entity, 29@@s@@standard, 21@@r@@base, 24@@p@@whole, 38@@d@@poor, 31@@s@@respect-01, 5@@s@@sustain-01, 34@@s@@right-05, 27@@s@@maintain-01, 33@@d@@human, 35@@s@@and, 39@@a@@and, 14@@explicitanon0@@3, 20@@s@@support-01]
sentence=1	Warhol	_name_	Warhol	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-13	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	and	_	0	IGNORE	true
5	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	touchstones	_	touchstone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	1960s,	_	1960s,	CD	O	_	and	_	0	IGNORE	true
10	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	art,	_	art,	JJ	O	_	$LEMMA$	_	0	IGNORE	true
12	music,	_	music,	NNP	O	_	and	_	0	IGNORE	true
13	consumer	_	consumer	NN	O	(d<root> / --LEX--)	consume-01	()	16	APP_op2	true
14	culture,	_	culture,	NNP	O	_	and	_	0	IGNORE	true
15	fashion,	_	fashion,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	MOD_op1	true
17	celebrity	_	celebrity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op3	true
18	worship,	_	worship,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	buzzwords	_	buzzword	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
24	images	_	image	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
25	Wikinews	_name_	Wikinews	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	26	APP_s	true
26	observed	_	observe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
27	at	_	at	IN	O	_	thing	_	0	IGNORE	true
28	USI's	usi's	usi'	NNS	O	_	_NAME_	_	0	IGNORE	true
29	opening	_	open	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	open-01	(s())	30	MOD_s	true
30	exhibit	_	exhibit	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@p@@person, 22@@d@@buzzword, 1@@n@@_NAME_, 6@@d@@touchstone, 25@@n@@newspaper, 30@@b@@exhibit, 26@@s@@observe-01, 25@@n2@@_NAME_, 5@@p@@important, 17@@d@@celebrity, 16@@a@@and, 21@@p@@all, 10@@s@@include-01, 29@@s@@open-01, 3@@s@@close-13, 23@@a@@and, 24@@d@@image, 13@@d@@consume-01]
sentence=1	An	an	an	DT	O	_	1	_	0	IGNORE	true
2	overwhelming	_	overwhelming	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	overwhelm-01	(s())	3	MOD_s	true
3	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_poss	true
7	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
10	forefront	_	forefront	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	0	ROOT	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	enormous	_	enormous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	tide,	_	tide,	NNP	O	_	and	_	0	IGNORE	true
15	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	in	_	in	IN	O	_	event	_	0	IGNORE	true
18	Tunisia	_name_	Tunisia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_op1	true
19	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	16	MOD_mod	true
20	Egypt	_name_	Egypt	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_op2	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[16@@s@@start-01, 19@@b@@and, 2@@s@@overwhelm-01, 3@@explicitanon0@@number, 5@@p@@young, 6@@d@@person, 20@@c@@country, 18@@c@@country, 10@@h@@forefront, 18@@n@@_NAME_, 12@@p@@this, 20@@n@@_NAME_, 13@@p@@enormous]
sentence=1	However,	_name_	however,	CD	O	_	and	_	0	IGNORE	true
2	in	_	in	IN	O	_	i	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	mid-1980s,	_	mid-1980s,	JJ	O	_	name	_	0	IGNORE	true
5	Cleveland	_name_	Cleveland	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	earned	_	earn	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	nickname	_	nickname	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	"Comeback	"comeback	"comeback	CD	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	City"	city"	City"	NNP	O	_	and	_	0	IGNORE	true
12	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	urban	_	urban	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	core	_	core	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	experienced	_	experience	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	dramatic	_	dramatic	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	revitalization	_	revitalization	NN	O	(d<root> / --LEX--)	modernize-01	()	20	APP_s	true
20	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	continues	_	continue	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
23	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[19@@d@@modernize-01, 23@@n@@today, 14@@p@@urban, 5@@n@@_NAME_, 10@@d@@"comeback, 18@@t@@dramatic, 5@@c@@city, 8@@s@@nickname-01, 15@@d@@core, 22@@s@@continue-01, 20@@s@@process-02, 16@@s@@experience-01, 6@@c@@earn-01, 12@@s@@cause-01]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
5	looming	_	loom	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	project	_	project	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that's	_	that's	IN	O	_	-	_	0	IGNORE	true
8	bogging	_	bogge	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_op1	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	MOD_s	true
12	making	_	make	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_op2	true
13	you	_	you	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	MOD_s	true
14	unproductive	_	unproductive	JJ	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	$LEMMA$	()	12	APP_o	true
15	in	_	in	IN	O	_	-	_	0	IGNORE	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	areas,	_	areas,	NNS	O	_	thing	_	0	IGNORE	true
18	tackle	_	tackle	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_s	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	first	_name_	first	RB	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	18	MOD_mod	true
21	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@bogge-01, 16@@p@@other, 11@@a@@and, 12@@s@@make-02, 13@@s@@you, 20@@explicitanon0@@1, 14@@p@@unproductive, 3@@s@@have-03, 20@@o@@ordinal-entity, 14@@explicitanon0@@-, 5@@s@@loom-01, 18@@s@@tackle-01, 6@@d@@project, 2@@d@@you]

