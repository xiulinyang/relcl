sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	brain	_	brain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
3	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	processes	_	process	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	uses	_	use	VBZ	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	7	APP_op2	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	relevant	_	relevant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	create	_	create	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o2	true
14	thoughts,	_	thoughts,	CD	O	_	and	_	0	IGNORE	true
15	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
16	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
17	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	be	_	be	VB	O	_	person	_	0	IGNORE	true
19	expressed	_	express	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op1	true
20	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	language	_	language	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
23	stored	_	store	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
24	in	_	in	IN	O	_	future	_	0	IGNORE	true
25	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	for	_	for	IN	O	_	and	_	0	IGNORE	true
27	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	use.	_	use.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@i@@use-01, 6@@d@@information, 23@@s@@store-01, 19@@d@@express-01, 21@@t@@language, 16@@s@@possible-01, 25@@d@@memory, 22@@a@@or, 5@@p@@this, 2@@d@@brain, 13@@s@@create-01, 27@@n@@future, 7@@a@@and, 11@@d@@piece, 10@@s@@relevant-01, 3@@n@@then, 17@@n@@then, 4@@s@@process-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	olive	_	olive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	works	_	work	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	1	APP_op2	true
5	fine	_	fine	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	4	MOD_s	true
6	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
7	it's	_	it's	PRP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
8	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	that's	_	that's	PRP	O	_	thing	_	0	IGNORE	true
10	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-17	(s())	7	MOD_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	pantry.	_	pantry.	NN	O	(n<root> / --LEX--  :name-of (c2 / country  :location-of (c<mod>)))	_NAME_	(mod())	10	MOD_mod	true

nodealignment=[7@@s@@it's-01, 4@@s@@work-09, 3@@d@@oil, 2@@p@@olive, 1@@a@@and, 13@@c2@@country, 13@@n@@_NAME_, 5@@s@@fine-04, 8@@p@@all, 10@@s@@leave-17]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	topic	_	topic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
6	which	_	which	WDT	O	_	name	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	mathematics	_	mathematic	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
14	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
15	representation	_	representation	NN	O	(d<root> / --LEX--)	represent-01	()	14	APP_o	true
16	theory.	_	theory.	RB	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@a@@and, 11@@b@@mathematic, 4@@p@@another, 9@@p@@important, 15@@d@@represent-01, 8@@s@@very, 14@@s@@call-01, 5@@d@@topic]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	document	_	document	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
3	which	_	which	WDT	O	_	name	_	0	IGNORE	true
4	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	stamp	_	stamp	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	Protected	protected	protect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
8	B	b	B	NNP	O	(explicitanon1<root> / --LEX--  :value-of (s / string-entity  :mod-of (w<mod>)))	$FORM$	(mod())	7	MOD_mod	true
9	on	_	on	IN	O	_	3	_	0	IGNORE	true
10	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	page	_	page	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	detailed	_	detail	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	vulnerabilities	_	vulnerability	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	12	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	NEMISIS	_name_	NEMISIS	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true
19	database	_	database	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	used	_	use	VBN	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	19	MOD_o	true
23	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	officers	_	officer	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	22	APP_s	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	track	_	track	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	22	APP_o2	true
28	prosecute	_	prosecute	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op2	true
29	environmental	_	environmental	JJ	O	(d<root> / --LEX--)	environment	()	27	APP_o	true
30	law-breakers.	_	law-breakers.	''	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@b@@page, 2@@d@@document, 19@@d@@database, 4@@s@@have-03, 28@@s@@prosecute-01, 13@@p@@various, 8@@explicitanon1@@B, 27@@a@@and, 15@@s@@vulnerability, 6@@d@@stamp, 29@@d@@environment, 26@@s@@track-01, 14@@p@@security, 24@@p@@person, 22@@i@@use-01, 7@@s@@protect-01, 18@@p@@_NAME_, 10@@p@@every, 24@@e@@officer, 8@@s@@string-entity, 24@@h@@have-org-role-91, 12@@s@@detail-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	regret	_	regret	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	deeply	_	deeply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	deep-02	(s())	2	MOD_s	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	injuries	_	injury	NNS	O	(d<root> / --LEX--)	injure-01	()	2	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
8	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
9	been	_	be	VBN	O	_	person	_	0	IGNORE	true
10	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	MOD_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	event	_	0	IGNORE	true
13	course	_	course	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	event	_	0	IGNORE	true
16	events	_	event	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	led	_	lead	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	16	MOD_s	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
21	decision.	_	decision.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@d@@injure-01, 18@@t@@lead-03, 1@@d@@i, 16@@n@@event, 20@@d@@this, 7@@s@@possible-01, 2@@s@@regret-01, 3@@s@@deep-02, 4@@p@@any, 10@@s@@do-02]
sentence=1	Socotra	_name_	Socotra	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
2	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
3	pride	_	pride	NN	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	7	APP_op1	true
4	in	_	in	IN	O	_	name	_	0	IGNORE	true
5	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	eco-tourism	_	eco-tourism	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
8	values	_	value	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	APP_op2	true
9	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
10	spectacular	_	spectacular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	plant	_	plant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
13	wildlife	_	wildlife	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
16	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
20	on	_	on	IN	O	_	and	_	0	IGNORE	true
21	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	island.	_	island.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true

nodealignment=[13@@d@@wildlife, 2@@s@@take-01, 19@@s@@find-01, 12@@a@@and, 21@@p@@this, 1@@c@@country, 11@@d@@plant, 6@@m@@eco-tourism, 22@@p@@island., 1@@n@@_NAME_, 16@@o@@sometimes, 10@@p@@spectacular, 8@@s@@value-02, 15@@s@@possible-01, 7@@a@@and, 3@@l@@pride-01, 18@@p@@only]
sentence=1	"This	"this	"This	NNP	O	(d<root> / --LEX--)	_NAME_	()	5	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_s	true
6	decision,	_	decision,	NNS	O	_	and	_	0	IGNORE	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
9	that	_	that	WDT	O	_	name	_	0	IGNORE	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	public	_	public	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
16	in	_	in	IN	O	_	person	_	0	IGNORE	true
17	mind.	_	mind.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[5@@r@@difficult, 14@@c@@country, 1@@d@@_NAME_, 14@@n@@_NAME_, 11@@s@@make-01, 15@@d@@public, 7@@s@@contrast-01, 4@@s@@very]
sentence=1	Paralympic	paralympic	paralympic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	sport	_	sport	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	brings	_	bring	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	attention	_	attention	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	attend-02	(s())	3	APP_o	true
5	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
6	athletes	_	athlete	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	who	_	who	WP	O	_	name	_	0	IGNORE	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	typically	_	typically	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	typical-02	(s())	10	MOD_s	true
10	overlooked	_	overlook	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	in	_	in	IN	O	_	name	_	0	IGNORE	true
12	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	society	_	society	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	majority	_	majority	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
20	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
21	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	APP_s	true
23	to	_	to	TO	O	_	person	_	0	IGNORE	true
24	identify	_	identify	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
25	with	_	with	IN	O	_	-	_	0	IGNORE	true
26	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	24	APP_o	true
27	who	_	who	WP	O	_	person	_	0	IGNORE	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	disabled.	_	disabled.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@d@@athlete, 21@@explicitanon0@@-, 16@@explicitanon0@@majority, 19@@d@@population, 13@@b@@society, 3@@s@@bring-01, 12@@c@@country, 22@@c@@want-01, 26@@d@@person, 10@@s@@overlook-01, 9@@s@@typical-02, 4@@s@@attend-02, 2@@d@@sport, 12@@n@@_NAME_, 14@@s@@cause-01, 1@@p@@_NAME_, 24@@s@@identify-01]
sentence=1	The	the	the	DT	O	_	include-91	_	0	IGNORE	true
2	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	entry	_	entry	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	enter-01	(mod())	4	MOD_mod	true
4	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op3	true
5	are	_	be	VBP	O	_	relative-position	_	0	IGNORE	true
6	Svendborg	_name_	Svendborg	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	18	APP_op1	true
7	which	_	which	WDT	O	_	name	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
9	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	10	MOD_s	true
10	reach	_	reach	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	by	_	by	IN	O	_	and	_	0	IGNORE	true
13	highway,	_	highway,	CD	O	_	$LEMMA$	_	0	IGNORE	true
14	bus	_	bus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
16	train	_	train	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
19	Faaborg,	_name_	faaborg,	CD	O	_	_NAME_	_	0	IGNORE	true
20	which	_	which	WDT	O	_	i	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
22	best	_	best	RBS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	23	MOD_s	true
23	reached	_	reach	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
24	by	_	by	IN	O	_	and	_	0	IGNORE	true
25	bus	_	bus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	from	_	from	IN	O	_	thing	_	0	IGNORE	true
27	Odense.	_name_	Odense.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@d@@point, 2@@p@@main, 23@@s@@reach-01, 25@@d@@bus, 3@@p@@enter-01, 22@@m@@most, 6@@n@@_NAME_, 22@@b2@@good-02, 10@@s@@reach-01, 15@@a@@and, 14@@d@@bus, 6@@c@@city, 9@@s@@easy-05, 16@@d@@train, 18@@a@@and]
sentence=1	Ozone	_name_	ozone	NN	O	(d<root> / --LEX--)	$REPL$	()	3	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	understand	_	understand	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_o	true
7	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
8	causes	_	cause	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
9	of,	_	of,	RB	O	_	thing	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o2	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	steps	_	step	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	improve	_	improve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
20	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	quality."	_	quality."	NNP	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@b@@understand-01, 3@@r@@something, 19@@s@@improve-01, 1@@d@@_name_, 8@@d@@cause-01, 5@@d@@we, 20@@d@@air, 10@@a@@and, 14@@s@@need-01, 17@@s@@take-01, 12@@s@@step-01]
sentence=1	Later,	later,	Later,	LS	O	_	and	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	capture	_	capture	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	methods	_	method	NNS	O	(b<root> / --LEX--  :poss (h2<poss>)  :topic-of (a<mod>))	$LEMMA$	(mod(), poss())	4	MOD_mod	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	SUT	sut	SUT	NNP	O	(t<root> / treaty  :name (n / --LEX--))	_NAME_	()	7	APP_poss	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	mutated,	_	mutated,	NNP	O	_	and	_	0	IGNORE	true
14	together	_	together	RB	O	_	$LEMMA$	_	0	IGNORE	true
15	with	_	with	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	information	_	information	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	mutation	_	mutation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	operators	_	operator	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	that	_	that	WDT	O	_	name	_	0	IGNORE	true
23	were	_	be	VBD	O	_	person	_	0	IGNORE	true
24	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	defined.	_	defined.	ADD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	3	MOD_mod	true

nodealignment=[10@@t@@treaty, 24@@n@@already, 21@@a@@operator, 10@@n@@_NAME_, 7@@b@@method, 25@@n@@_NAME_, 3@@s@@capture-01, 4@@d@@information, 2@@d@@we, 20@@p@@mutation, 17@@s@@information]
sentence=1	Also,	_name_	Also,	NNP	O	_	and	_	0	IGNORE	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
4	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	sites,	_	sites,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	notably	_	notably	RB	O	(d<root> / --LEX--)	notable-04	()	11	APP_s	true
7	podiobooks.com,	_	podiobooks.com,	CD	O	_	_NAME_	_	0	IGNORE	true
8	which	_	which	WDT	O	_	name	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	better	_	better	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	11	MOD_s	true
11	suited	_	suited	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	to	_	to	IN	O	_	and	_	0	IGNORE	true
13	CC	_name_	cc	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	works	_	work	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
15	than	_	than	IN	O	_	cause-01	_	0	IGNORE	true
16	LibriVox.	librivox.	librivox.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@p@@other, 6@@d@@notable-04, 10@@m@@more, 13@@p@@_NAME_, 10@@b@@good-02, 11@@s@@suited-01, 14@@d@@work-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	followed	_	follow	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	by	_	by	IN	O	_	and	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	memoir	_	memoir	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	theory	_	theory	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	tides,	_	tides,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	to	_	to	IN	O	_	name	_	0	IGNORE	true
14	which,	_	which,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	3	MOD_mod	true
15	conjointly	_	conjointly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	objective	(mod())	14	MOD_mod	true
16	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	memoirs	_	memoir	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	6	MOD_o	true
19	by	_	by	IN	O	_	i	_	0	IGNORE	true
20	Euler	_name_	Euler	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	18	APP_s	true
22	Colin_Maclaurin,	_name_	Maclaurin,	NNP	O	_	_NAME_	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	prize	_	prize	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_o	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	awarded	_	award	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_s	true
27	by	_	by	IN	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	name	_	0	IGNORE	true
29	French	_name_	french	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
30	Academy:	academy:	Academy:	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	33	MOD_mod	true
32	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	33	MOD_mod	true
33	memoirs	_	memoir	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
34	contain	_	contain	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_o2	true
35	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
36	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
37	was	_	be	VBD	O	_	person	_	0	IGNORE	true
38	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	34	MOD_s	true
39	on	_	on	IN	O	_	thing	_	0	IGNORE	true
40	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	subject	_	subject	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
42	between	_	between	IN	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	38	MOD_mod	true
43	the	_	the	DT	O	_	and	_	0	IGNORE	true
44	publication	_	publication	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	publish-01	(s())	42	APP_op1	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	Isaac_Newton's_Philosophiae_Naturalis_Principia_Mathematica	_name_	Mathematica	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	44	APP_s	true
47	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	investigations	_	investigation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	investigate-01	(s())	42	APP_op2	true
50	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
51	Pierre-Simon	pierre-simon	Pierre-Simon	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	49	APP_s	true
52	Laplace.	_name_	Laplace.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[29@@c@@country, 9@@a@@theory, 32@@explicitanon0@@3, 26@@b@@award-01, 46@@o2@@organization, 34@@s@@contain-01, 49@@s@@investigate-01, 1@@d@@this, 51@@p@@person, 51@@n@@_NAME_, 42@@d@@between, 35@@d@@all, 40@@p@@this, 33@@d@@memoir, 31@@p@@this, 46@@n@@_NAME_, 14@@p@@thing, 3@@s@@follow-01, 18@@s@@memoir, 15@@t@@objective, 38@@s@@do-02, 44@@s@@publish-01, 41@@d@@subject, 21@@o@@and, 20@@p@@person, 24@@d@@prize-01, 29@@n@@_NAME_, 6@@d@@memoir, 20@@n@@_NAME_]
sentence=1	Moments	moments	moment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	1	MOD_s	true
3	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	0	ROOT	true
5	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	realize	_	realize	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	have	_	have	VBP	O	_	expressive	_	0	IGNORE	true
10	touched	_	touch	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_o	true
12	who	_	who	WP	O	_	i	_	0	IGNORE	true
13	aren't	_	aren't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	normally	_	normally	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	normal-02	(s())	15	MOD_s	true
15	touched	_	touch	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	by	_	by	IN	O	_	-	_	0	IGNORE	true
17	poetry.	_	poetry.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[14@@s@@normal-02, 2@@s@@resemble-01, 1@@d@@moment, 4@@s@@obligate-01, 6@@d@@you, 10@@s@@touch-01, 11@@d@@person, 3@@d@@that, 13@@explicitanon0@@-, 15@@s@@touch-01, 7@@c@@realize-01, 5@@s@@make-02]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	light	_	light	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	toys	_	toy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
5	such	_	such	PDT	O	_	$LEMMA$	_	0	IGNORE	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	swords,	_	swords,	CD	O	_	$LEMMA$	_	0	IGNORE	true
8	devil	_	devil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
9	ears,	_	ears,	NNS	O	_	have-03	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
11	lanterns	_	lantern	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	turn	_	turn	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	milling	_	milling	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	crowd	_	crowd	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	into	_	into	IN	O	_	-	_	0	IGNORE	true
17	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	unique	_	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	show	_	show	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	12	APP_o2	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	24	MOD_s	true
23	be	_	be	VB	O	_	person	_	0	IGNORE	true
24	observed	_	observe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
25	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
26	climbing	_	climb	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	steps	_	step	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	26	APP_s	true
29	of	_	of	IN	O	_	relative-position	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	70	_	70	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	32	MOD_mod	true
32	meter	_	meter	NN	O	(d<root> / distance-quantity  :unit (i / --LEX--)  :mod-of (p2<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
33	memorial	_	memorial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	hall	_	hall	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_poss	true
35	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	grounds.	_	grounds.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[22@@s@@possible-01, 34@@d@@hall, 3@@p@@light, 31@@explicitanon0@@_NUMBER_, 32@@i@@meter, 8@@d@@devil, 15@@d@@crowd, 33@@p@@memorial, 11@@d@@lantern, 18@@p@@unique, 32@@d@@distance-quantity, 24@@s@@observe-01, 10@@a@@and, 2@@explicitanon0@@many, 26@@b@@climb-01, 12@@b@@turn-01, 19@@d@@light, 20@@s@@show-04, 28@@h@@step, 14@@s@@milling-01, 4@@d@@toy]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	case	_	case	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	2	APP_o	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	evidence	_	evidence	NN	O	(t<root> / thing  :ARG0-of (a / --LEX--))	$LEMMA$-01	()	4	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
9	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	adduced	_	adduce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	House.	_name_	House.	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	10	MOD_mod	true

nodealignment=[6@@t@@thing, 1@@d@@They, 14@@b@@_NAME_, 4@@s@@case-03, 6@@a@@evidence-01, 11@@b@@here, 10@@s@@adduce-01, 2@@s@@make-01]
sentence=1	Concepts	concepts	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
2	are,	_	are,	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	ways,	_	ways,	NNS	O	_	mean-01	_	0	IGNORE	true
6	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	ideas	_	idea	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_s	true
8	that	_	that	WDT	O	_	resemble-01	_	0	IGNORE	true
9	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	2	APP_o	true
10	generated	_	generate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
11	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
12	observing	_	observe	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
13	details,	_	details,	NNS	O	_	mean-01	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (m<op1>)  :topic-of (p<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	10	MOD_mod	true
15	categorizing	_	categorize	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	14	APP_op2	true
17	combining	_	combine	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	these	_	these	DT	O	_	this	_	0	IGNORE	true
19	details	_	detail	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	into	_	into	IN	O	_	-	_	0	IGNORE	true
21	cognitive	_	cognitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
22	structures.	_	structures.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@s@@observe-01, 17@@s@@combine-01, 6@@p@@big, 1@@d@@concept, 7@@r@@idea, 10@@s@@generate-01, 4@@explicitanon0@@many, 15@@s@@categorize-01, 16@@a@@and, 14@@a@@and, 9@@d@@person, 21@@p@@cognitive, 2@@s@@are,-01]
sentence=1	The	the	the	DT	O	_	include-91	_	0	IGNORE	true
2	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_s	true
5	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op2	true
6	inside	_	inside	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
7	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
8	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	allowed	_	allow	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	leave	_	leave	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-11	(s())	10	APP_s	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
15	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	adult	_	adult	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	male	_	male	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	survivor,	_	survivor,	NNS	O	_	person	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	slave	_	slave	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	17	MOD_s	true
21	owned	_	own	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
22	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	Travis	_name_	Travis	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	freed	_	free	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
28	by	_	by	IN	O	_	person	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	Mexican	_name_	Mexican	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	31	MOD_mod	true
31	Army.	army.	Army.	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	10	MOD_o	true

nodealignment=[30@@n@@_NAME_, 16@@p@@adult, 23@@p@@person, 20@@s@@slave, 14@@s@@cause-01, 8@@d@@mission, 31@@s@@_NAME_, 3@@d@@woman, 26@@n@@then, 15@@p@@only, 4@@a@@and, 17@@p@@male, 2@@explicitanon0@@few, 6@@b@@inside, 12@@s@@leave-11, 10@@s@@allow-01, 21@@s@@own-01, 27@@s@@free-01, 30@@c@@country, 5@@d@@child, 23@@n@@_NAME_]
sentence=1	Weapons	weapons	weapon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
2	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	obsidian,	_	obsidian,	NNP	O	_	and	_	0	IGNORE	true
5	jewelry	_	jewelry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	crafted	_	craft	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
7	from	_	from	IN	O	_	thing	_	0	IGNORE	true
8	jade,	_	jade,	NNP	O	_	and	_	0	IGNORE	true
9	feathers	_	feather	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
10	woven	_	weave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
11	into	_	into	IN	O	_	-	_	0	IGNORE	true
12	clothing	_	clothing	NN	O	(d<root> / --LEX--)	clothe-01	()	13	APP_op2	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
14	ornaments,	_	ornaments,	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
16	cacao	_	cacao	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	beans	_	bean	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	were	_	be	VBD	O	_	person	_	0	IGNORE	true
20	whipped	_	whip	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
21	into	_	into	IN	O	_	-	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	chocolate	_	chocolate	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	drink	_	drink	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_o	true
25	formed	_	form	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	basis	_	basis	NN	O	(d<root> / --LEX--)	base-02	()	25	APP_o	true
28	of	_	of	IN	O	_	thing	_	0	IGNORE	true
29	commerce.	_	commerce.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@p@@cacao, 5@@d@@jewelry, 24@@d@@drink-01, 23@@g@@chocolate, 6@@s@@craft-01, 1@@d@@weapon, 9@@d@@feather, 25@@s@@form-01, 2@@s@@make-01, 12@@d@@clothe-01, 15@@a@@and, 20@@s@@whip-01, 13@@a@@and, 10@@s@@weave-01, 27@@d@@base-02, 17@@d@@bean]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	brothers	_	brother	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	7	APP_op1	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
8	sisters	_	sister	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	who	_	who	WP	O	_	person	_	0	IGNORE	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	cut	_	cut	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-04	(s(), o())	7	MOD_s	true
13	off	_	off	RP	O	_	-	_	0	IGNORE	true
14	from	_	from	IN	O	_	-	_	0	IGNORE	true
15	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
17	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	18	MOD_mod	true
18	boundaries	_	boundary	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
19	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
20	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
21	unhappily	_	unhappily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	discriminate-01	(s())	24	MOD_s	true
22	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	24	MOD_s	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
24	share	_	share	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
25	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
26	present	_	present	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	freedom	_	freedom	NN	O	(d<root> / --LEX--)	free-04	()	24	APP_o	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
32	come.	_	come.	JJ	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@f@@brother, 22@@s@@possible-01, 7@@a@@and, 18@@d@@boundary, 23@@explicitanon0@@-, 3@@p@@also, 8@@d@@sister, 2@@s@@think-01, 26@@n@@present, 6@@p@@person, 21@@s@@discriminate-01, 12@@s@@cut-off-04, 1@@d@@We, 6@@h@@have-rel-role-91, 29@@d@@free-04, 24@@s@@share-01, 17@@p@@politics]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	6	MOD_mod	true
4	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	motivation	_	motivation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	motivate-01	(mod())	6	MOD_mod	true
6	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
8	have	_	have	VBP	O	_	person	_	0	IGNORE	true
9	been	_	be	VBN	O	_	and	_	0	IGNORE	true
10	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
11	to	_	to	TO	O	_	affect-01	_	0	IGNORE	true
12	directly	_	directly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	direct-02	(s())	13	MOD_s	true
13	relate	_	relate	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	6	MOD_s	true
14	to	_	to	IN	O	_	thing	_	0	IGNORE	true
15	learning.	_	learning.	NNP	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@3, 13@@s@@relate-01, 6@@d@@concept, 4@@p@@main, 12@@s@@direct-02, 5@@p@@motivate-01, 10@@s@@find-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	4	MOD_s	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	battle	_	battle	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$-01	(dom())	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
8	be	_	be	VB	O	_	person	_	0	IGNORE	true
9	won;	_	won;	NNP	O	_	-	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	2	MOD_mod	true
11	now,	_	now,	VB	O	_	contrast-01	_	0	IGNORE	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	ever.	_	ever.	.	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	4	MOD_s	true

nodealignment=[4@@r@@battle-01, 2@@s@@person, 10@@explicitanon0@@-, 12@@explicitanon0@@-, 13@@s@@contrast-01, 7@@explicitanon0@@-, 6@@s@@possible-01, 1@@d@@this]
sentence=1	Water	water	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	burst	_	burst	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_op1	true
3	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	barrels	_	barrel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
7	cans	_	can	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	standing	_	stand	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	under	_	under	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	eaves	_	eave	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
13	gutters,	_	gutters,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	flooding	_	flood	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	pathways,	_	pathways,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	carrying	_	carry	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op2	true
18	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	wasn’t	_	wasn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	fixed	_	fix	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
23	solid	_	solid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
25	licking	_	licking	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
26	at	_	at	IN	O	(d<root> / --LEX--)	and	()	24	APP_op2	true
27	the	_	the	DT	O	_	and	_	0	IGNORE	true
28	stairs	_	stair	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	back	_	back	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	porch	_	porch	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
33	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
34	climbing	_	climb	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op1	true
35	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	step	_	step	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	33	APP_op1	true
38	lapping	_	lap	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op3	true
39	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
40	the	_	the	DT	O	_	and	_	0	IGNORE	true
41	planks	_	plank	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
42	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
43	were	_	be	VBD	O	_	person	_	0	IGNORE	true
44	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	41	MOD_o	true
45	on,	_	on,	:	O	_	cause-01	_	0	IGNORE	true
46	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
47	wooden	_	wooden	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	raft	_	raft	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
49	surrounded	_	surround	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	48	MOD_o	true
50	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
51	angry	_	angry	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	52	MOD_s	true
52	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_op1	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	49	APP_s	true
54	martial	_	martial	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	beat	_	beat	VBD	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_op2	true
56	drum,	_	drum,	NNP	O	_	mean-01	_	0	IGNORE	true
57	drum,	_	drum,	NNS	O	_	mean-01	_	0	IGNORE	true
58	drumming	_	drum	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	53	APP_op3	true
59	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
60	the	_	the	DT	O	_	person	_	0	IGNORE	true
61	roof	_	roof	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
62	above.	_	above.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[44@@s@@sit-01, 31@@p@@back, 48@@b@@raft, 58@@d@@drum-01, 41@@d@@plank, 54@@p@@martial, 28@@d@@stair, 19@@d@@all, 24@@a@@and, 35@@p@@each, 8@@s@@stand-01, 37@@a@@and, 53@@a@@and, 9@@o@@under, 32@@b@@porch, 26@@d@@and, 34@@s@@climb-01, 47@@p@@wooden, 22@@s@@fix-01, 14@@d@@flood-01, 17@@s@@carry-01, 2@@s@@burst-01, 21@@explicitanon0@@-, 6@@a@@and, 55@@d@@beat, 11@@d@@eave, 49@@s@@surround-01, 5@@d@@barrel, 1@@d@@water, 51@@s@@angry, 23@@s@@solid-02, 33@@w@@before, 25@@s@@licking-01, 61@@b@@roof, 38@@s@@lap-01, 36@@d@@step, 12@@a@@and, 52@@d@@water, 7@@d@@can, 42@@d@@we]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	laughed	_	laugh	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	at	_	at	IN	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	idea,	_	idea,	NNP	O	_	cause-01	_	0	IGNORE	true
7	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	for	_	for	IN	O	_	except-01	_	0	IGNORE	true
9	a	_	a	DT	O	_	person	_	0	IGNORE	true
10	chemist	_	chemist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	with	_	with	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	have-03	(s())	10	MOD_s	true
12	a	_	a	DT	O	_	person	_	0	IGNORE	true
13	crooked	_	crooked	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	nose	_	nose	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	10	MOD_poss	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
16	rouge	_	rouge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	caked	_	cake	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	creases	_	crease	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	face,	_	face,	.	O	_	$LEMMA$	_	0	IGNORE	true
24	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	incensed.	_	incensed.	JJ	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[7@@s@@except-01, 14@@h@@nose, 13@@s@@crooked-01, 2@@p@@all, 3@@s@@laugh-01, 1@@d@@We, 17@@s@@cake-01, 16@@d@@rouge, 20@@d@@crease, 11@@s@@have-03, 15@@a@@and, 10@@d@@chemist]
sentence=1	Environment	environment	Environment	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$REPL$	(mod())	2	MOD_mod	true
2	Minister	minister	Minister	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	3	MOD_s	true
3	John_Baird	_name_	Baird	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
4	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
5	asked	_	ask	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	7	APP_s	true
7	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	5	APP_o2	true
8	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
9	such	_	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	be	_	be	VB	O	_	thing	_	0	IGNORE	true
16	stored	_	store	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
17	in	_	in	IN	O	_	thing	_	0	IGNORE	true
18	"approved	_	"approved	ADD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	security	_	security	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	cabinets"	_	cabinets"	SYM	O	_	thing	_	0	IGNORE	true
21	wound	_	wind	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-up-03	(s(), o())	5	APP_o	true
22	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
23	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	street.	_	street.	NN	O	(d<root> / --LEX--)	_NAME_	()	21	APP_o	true

nodealignment=[19@@p@@security, 21@@s@@wind-up-03, 7@@p@@person, 10@@d@@document, 3@@p@@person, 18@@s@@"approved-01, 13@@s@@suppose-02, 7@@o@@official, 9@@p@@such, 2@@h@@have-org-role-91, 16@@s@@store-01, 6@@g@@government-organization, 7@@h@@have-org-role-91, 6@@g2@@govern-01, 3@@n@@_NAME_, 1@@a@@environment, 2@@p2@@minister, 5@@b@@ask-01, 25@@d@@_NAME_]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	topic	_	topic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	which	_	which	WDT	O	_	event	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
8	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
9	asymptotic	_	asymptotic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	groups	_	group	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	theory.	_	theory.	RB	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@whole, 10@@d@@group, 8@@s@@call-01, 5@@d@@topic, 9@@p@@asymptotic]
sentence=1	Based	based	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
2	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
3	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
4	experiments,	_	experiments,	NNS	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	so	_	0	IGNORE	true
6	L-band	l-band	L-band	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_s	true
7	is	_	be	VBZ	O	_	prove-01	_	0	IGNORE	true
8	evidenced	_	evidence	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	optimal	_	optimal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	frequency	_	frequency	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	APP_o	true
13	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	remote	_	remote	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	sensing	_	sensing	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
16	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
17	SSS,	sss,	sss,	JJ	O	_	_NAME_	_	0	IGNORE	true
18	which	_	which	WDT	O	_	i	_	0	IGNORE	true
19	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
20	been	_	be	VBN	O	_	person	_	0	IGNORE	true
21	adopted	_	adopt	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
22	by	_	by	IN	O	_	event	_	0	IGNORE	true
23	SMOS,	smos,	SMOS,	NNP	O	_	_NAME_	_	0	IGNORE	true
24	Aquarius/SAC-D	aquarius/sac-d	aquarius/sac-d	UH	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	25	APP_op2	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	MOD_op1	true
26	SMAP.	smap.	SMAP.	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[21@@s@@adopt-01, 12@@s@@frequency, 8@@c@@evidence-01, 6@@d@@_NAME_, 24@@p@@person, 25@@a@@and, 24@@n@@_NAME_, 1@@s@@base-02, 11@@p@@optimal, 3@@explicitanon0@@many, 14@@p@@remote, 15@@i@@sensing-01]
sentence=1	Stardust	stardust	stardust	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_dom	true
2	@	_	@	IN	O	_	say-01	_	0	IGNORE	true
3	home	_	home	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
4	is	_	be	VBZ	O	_	say-01	_	0	IGNORE	true
5	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
6	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	7	MOD_mod	true
7	distributed	_	distribute	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	project	_	project	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
9	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	a	_	a	DT	O	_	loc$LEMMA$tion	_	0	IGNORE	true
11	"Virtual	"virtual	"virtual	CD	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	Microscope"	microscope"	Microscope"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
15	written	_	write	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
16	in	_	in	IN	O	_	and	_	0	IGNORE	true
17	html	_	html	NN	O	(d<root> / --LEX--)	_NAME_	()	18	APP_op1	true
18	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
19	javascript	_	javascript	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	runs	_	run	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
22	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
23	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	browsers	_	browser	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	—	_	—	:	O	_	-	_	0	IGNORE	true
26	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
27	downloads	_	download	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_s	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	required.	_	required.	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-concession-91	(s(), o())	8	MOD_o	true

nodealignment=[23@@explicitanon0@@most, 6@@s@@high, 3@@b@@home, 27@@d@@download-01, 11@@d@@"virtual, 1@@p@@person, 26@@explicitanon0@@-, 29@@s@@have-concession-91, 8@@r@@project, 17@@d@@_NAME_, 15@@s@@write-01, 9@@s@@use-01, 19@@d@@javascript, 1@@n@@_NAME_, 24@@b@@browser, 18@@b@@and, 21@@s@@run-01, 7@@s@@distribute-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
3	society	_	society	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	establishes,	_	establishes,	NNP	O	_	thing	_	0	IGNORE	true
6	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	15	MOD_mod	true
8	processes,	_	processes,	.	O	_	mean-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	13	MOD_mod	true
13	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	true
14	that	_	that	WDT	O	_	mean-01	_	0	IGNORE	true
15	are	_	be	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	3	MOD_s	true
16	adopted.	_	adopted.	ADD	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[12@@p@@economy, 3@@d@@society, 10@@p@@type, 13@@d@@institution, 15@@s@@person, 7@@p@@politics]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	helps	_	help	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	mask	_	mask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	scent	_	scent	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	5	APP_o	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	tasty	_	tasty	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	morsels	_	morsel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
12	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	been	_	be	VBN	O	_	person	_	0	IGNORE	true
15	missed	_	miss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	when	_	when	WRB	O	_	i	_	0	IGNORE	true
17	cleaning.	_	cleaning.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[5@@s@@mask-01, 2@@p@@also, 9@@p@@any, 7@@c@@scent-01, 1@@d@@It, 7@@t@@thing, 10@@p@@tasty, 3@@c@@help-01, 11@@d@@morsel, 15@@s@@miss-01]
sentence=1	Markus_Landgraf	_name_	Landgraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
3	estimated	_	estimate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	interstellar	_	interstellar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	dust	_	dust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	14	MOD_s	true
12	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	captured	_	capture	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	Stardust	_name_	Stardust	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	during	_	during	IN	O	_	i	_	0	IGNORE	true
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	19	MOD_mod	true
19	periods	_	period	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
22	"cruise"	_name_	"cruise"	NNP	O	_	and	_	0	IGNORE	true
23	phase	_	phase	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	14	MOD_mod	true
24	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	between	_	0	IGNORE	true
26	interplanetary	_	interplanetary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	orbit	_	orbit	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	23	APP_poss	true
28	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
29	which	_	which	WDT	O	_	name	_	0	IGNORE	true
30	the	_	the	DT	O	_	name	_	0	IGNORE	true
31	spacecraft	_	spacecraft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	was	_	be	VBD	O	_	person	_	0	IGNORE	true
33	moving	_	move	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_mod	true
34	with	_	with	IN	O	_	-	_	0	IGNORE	true
35	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
36	wind.	_	wind.	NNS	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 7@@p@@interstellar, 14@@s@@capture-01, 16@@d@@Stardust, 9@@d@@particle, 11@@s@@recommend-01, 23@@h@@phase, 33@@s@@move-01, 19@@n@@period, 31@@d@@spacecraft, 8@@p@@dust, 26@@p@@interplanetary, 5@@explicitanon0@@number, 18@@explicitanon0@@2, 1@@p@@person, 27@@b@@orbit-01, 3@@s@@estimate-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	committed	_	committed	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	to	_	to	IN	O	_	thing	_	0	IGNORE	true
5	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	APP_o	true
6	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
9	required	_	require	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	election	_	election	NN	O	(d<root> / --LEX--)	elect-01	()	15	APP_s	true
15	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_s	true
16	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
17	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	18	MOD_mod	true
18	compatible	_	compatible	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	standards	_	standard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	for	_	for	IN	O	_	thing	_	0	IGNORE	true
23	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	21	MOD_s	true
24	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	fair	_	fair	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
26	elections.	_	elections.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@d@@We, 11@@s@@ensure-01, 17@@s@@full, 3@@o@@committed-01, 20@@p@@international, 15@@s@@process-02, 14@@d@@elect-01, 5@@s@@do-02, 21@@d@@standard, 6@@d@@all, 25@@s@@fair-01, 9@@s@@require-01, 18@@s@@compatible-01, 23@@s@@free-04]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	cool	_	cool	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	7	MOD_s	true
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	thing	_	thing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	posted	_	post	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
11	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	loop	_	loop	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
15	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_s	true
16	this_Going-To-The-Sun_Road	_name_	Road	NNP	O	(r<root> / road  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
17	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
18	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	19	MOD_s	true
19	considered	_	consider	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	22	MOD_mod	true
22	landmark	_	landmark	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	now,	_	now,	NN	O	_	thing	_	0	IGNORE	true
24	how	_	how	WRB	O	_	so	_	0	IGNORE	true
25	cool.	_	cool.	RB	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@p@@little, 14@@b@@loop, 18@@s@@actual-02, 21@@p@@nation, 22@@d@@landmark, 16@@r@@road, 4@@s@@pretty, 19@@s@@consider-01, 16@@n@@_NAME_, 7@@r@@thing, 15@@s@@cause-01, 11@@b@@here, 5@@s@@cool-04, 1@@d@@this, 10@@s@@post-01]
sentence=1	What	what	what	WP	O	_	thing	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	don’t	_	don’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	wash	_	wash	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	them	_	they	PRP	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	anything	_	anything	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	MOD_s	true
13	get	_	get	VB	O	_	cause-01	_	0	IGNORE	true
14	twisted	_	twist	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
15	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	straps,	_	straps,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	like	_	like	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	resemble-01	(s())	14	MOD_s	true
20	women’s	_	women’s	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	23	MOD_mod	true
21	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	MOD_s	true
22	sleeve	_	sleeve	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	shirts	_	shirt	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	MOD_op1	true
25	kids’	_	kids’	NN	O	_	and	_	0	IGNORE	true
26	blankets.	_	blankets.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[12@@s@@possible-01, 24@@a@@or, 22@@p@@sleeve, 20@@b@@_NAME_, 19@@s@@resemble-01, 4@@c@@want-01, 2@@d@@you, 21@@s@@long-03, 6@@s@@wash-01, 14@@s@@twist-01, 3@@explicitanon0@@-, 23@@d@@shirt, 10@@p@@anything, 8@@y@@they]
sentence=1	Well,	well,	Well,	NNP	O	_	and	_	0	IGNORE	true
2	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	concern	_	concern	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
4	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	interest	_	interest	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
13	been	_	be	VBN	O	_	possible-01	_	0	IGNORE	true
14	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	true
16	neglected.	_	neglected.	NN	O	_	interrogative	_	0	IGNORE	true

nodealignment=[10@@d@@group, 3@@s@@concern-01, 2@@d@@our, 4@@s@@obligate-01, 9@@p@@interest, 8@@s@@special-02, 14@@s@@too, 15@@s@@long-03]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	3	MOD_mod	true
3	diversity	_	diversity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	represented	_	represent	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
6	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	vast	_	vast	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	variety	_	variety	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	restaurants	_	restaurant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	and	_	and	CC	O	(o<root> / --LEX--  :op2 (s<op2>)  :op1 (a<op1>)  :source-of (i<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
14	small	_	small	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
15	business,	_	business,	NNS	O	_	and	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
17	in	_	in	IN	O	_	and	_	0	IGNORE	true
18	particular,	_	particular,	NNP	O	_	and	_	0	IGNORE	true
19	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
23	Korean	_name_	korean	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	presence	_	presence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	present-02	(s())	16	APP_op2	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	28	MOD_s	true
27	be	_	be	VB	O	_	person	_	0	IGNORE	true
28	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
29	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
30	retail	_	retail	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_op1	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_o	true
32	dining	_	dining	NN	O	(d<root> / --LEX--)	dine-01	()	31	APP_op2	true
33	storefronts.	_	storefronts.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[32@@d@@dine-01, 1@@p@@this, 3@@d@@diversity, 8@@p@@vast, 30@@d@@retail-01, 28@@s@@see-01, 26@@s@@possible-01, 11@@p@@international, 23@@n@@_NAME_, 31@@a@@and, 14@@d@@small, 23@@c@@country, 13@@o@@and, 16@@a@@and, 22@@s@@strong-02, 24@@s@@present-02, 9@@d@@variety, 2@@p@@culture, 12@@d@@restaurant, 5@@s@@represent-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_s	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	distortion	_	distortion	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	discriminate-02	(s())	2	APP_mod	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	spacetime	_	spacetime	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	depends	_	depend	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	mass	_	mass	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_op2	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
15	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
17	on	_	on	IN	O	_	concern-02	_	0	IGNORE	true
18	how	_	how	WRB	O	(s<root> / --LEX--  :degree-of (t<mod>))	so	(mod())	20	MOD_mod	true
19	concentrated	_	concentrated	JJ	O	(d<root> / --LEX--)	concentrate-01	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
21	compact	_	compact	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
22	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	is.	_	is.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@s@@involve-01, 21@@d@@compact, 6@@d@@spacetime, 4@@s@@discriminate-02, 16@@a@@and, 20@@a@@and, 12@@d@@material, 2@@explicitanon0@@amount, 18@@s@@so, 19@@d@@concentrate-01, 10@@m@@mass, 7@@s@@depend-01]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	senses	_	sense	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	serve	_	serve	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	interface	_	interface	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
7	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	mind	_	mind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	(d<root> / --LEX--)	person	()	3	APP_o2	true
12	external	_	external	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	environment,	_	environment,	NNS	O	_	and	_	0	IGNORE	true
14	receiving	_	receive	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
15	stimuli	_	stimulus	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o	true
17	translating	_	translate	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	into	_	into	IN	O	_	-	_	0	IGNORE	true
20	nervous	_	nervous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	impulses	_	impulse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	transmitted	_	transmit	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
25	to	_	to	IN	O	_	-	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	brain.	_	brain.	NN	O	(d<root> / --LEX--)	_NAME_	()	24	APP_o	true

nodealignment=[2@@d@@sense, 12@@p@@external, 27@@d@@_NAME_, 3@@b@@serve-01, 21@@d@@impulse, 11@@d@@person, 20@@p@@nervous, 6@@s@@interface-01, 9@@d@@mind, 17@@s@@translate-01, 14@@s@@receive-01, 24@@s@@transmit-01, 16@@a@@and, 15@@d@@stimulus]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	know,	_	know,	.	O	_	expressive	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_o	true
4	mean,	_	mean,	VBP	O	_	and	_	0	IGNORE	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
6	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
7	like,	_	like,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	0	ROOT	true
8	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	9	MOD_s	true
9	off	_	off	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	APP_o	true
10	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	wonderful	_	wonderful	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	MOD_s	true
12	abstract	_	abstract	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	notions,	_	notions,	NNS	O	_	and	_	0	IGNORE	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	were	_	be	VBD	O	_	person	_	0	IGNORE	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	12	MOD_s	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	peaceful	_	peaceful	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	world.	_	world.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[12@@p@@abstract, 11@@s@@wonderful-03, 16@@p@@all, 9@@s@@off, 1@@d@@You, 20@@d@@peaceful, 3@@d@@i, 8@@s@@real-04, 5@@d@@he, 7@@s@@thing, 17@@s@@base-02]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	am	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
3	back	_	back	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	Philadelphia	_name_	Philadelphia	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
6	to	_	to	TO	O	_	and	_	0	IGNORE	true
7	express	_	express	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	APP_op1	true
8	my	_	my	PRP$	O	_	and	_	0	IGNORE	true
9	thanks	_	thank	NNS	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$	(s(), o())	7	APP_o	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	MOD_s	true
14	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
16	express	_	express	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
17	appreciation	_	appreciation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_o	true
18	for	_	for	IN	O	_	and	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	help	_	help	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
23	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	2	MOD_mod	true
25	Democrats	_name_	Democrats	NNPS	O	(p2<root> / political-party  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
26	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op1	true
29	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	25	MOD_mod	true
30	State,	_name_	state,	NN	O	(d<root> / --LEX--)	_NAME_	()	29	APP_op2	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	2	APP_o	true
32	to	_	to	TO	O	_	person	_	0	IGNORE	true
33	report	_	report	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	31	APP_op2	true
34	to	_	to	IN	O	_	person	_	0	IGNORE	true
35	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
36	on	_	on	IN	O	_	person	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	progress	_	progress	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_s	true
39	that	_	that	IN	O	_	name	_	0	IGNORE	true
40	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
42	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
43	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
44	on	_	on	IN	O	_	thing	_	0	IGNORE	true
45	the	_	the	DT	O	_	person	_	0	IGNORE	true
46	goals	_	goal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
47	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
48	were	_	be	VBD	O	_	person	_	0	IGNORE	true
49	outlined	_	outline	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	46	MOD_s	true
50	3_years	_name_	year	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
51	ago.	_	ago.	XX	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@d@@_NAME_, 50@@p@@year, 25@@n@@_NAME_, 14@@p@@also, 40@@p@@this, 43@@s@@make-01, 25@@p2@@political-party, 22@@s@@receive-01, 41@@d@@country, 28@@d@@city, 13@@a@@and, 5@@n@@_NAME_, 1@@d@@i, 27@@p@@this, 7@@c@@express-01, 38@@s@@progress-01, 35@@d@@you, 3@@w@@back, 29@@b@@and, 5@@c@@city, 46@@d@@goal, 20@@d@@help-01, 24@@p@@that, 21@@d@@we, 31@@a@@and, 9@@t@@thank, 17@@s@@appreciation, 49@@s@@outline-01, 16@@s@@express-01, 12@@d@@support-01, 11@@p@@that, 33@@t@@report-01, 2@@s@@be-located-at-91]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	data	_	datum	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	3	MOD_mod	true
3	set	_	set	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	13	APP_s	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	values	_	value	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	(14	_	(14	NNP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
11	data	_	datum	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$FORM$	(mod())	9	MOD_mod	true
12	values),	_	values),	NNP	O	_	mean-01	_	0	IGNORE	true
13	so	_	so	RB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	cause-01	(o2(), s(), o())	0	ROOT	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	median	_	median	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_s	true
16	will	_	will	MD	O	_	thing	_	0	IGNORE	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	the	_	the	DT	O	_	and	_	0	IGNORE	true
19	average	_	average	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_o2	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	24	MOD_mod	true
23	middle	_	middle	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	values	_	value	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
25	(the	_	(the	NN	O	_	mean-01	_	0	IGNORE	true
26	average	_	average	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	6.8	_	6.8	CD	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
30	7.2),	_	7.2),	CD	O	_	$LEMMA$	_	0	IGNORE	true
31	which	_	which	WDT	O	_	i	_	0	IGNORE	true
32	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
33	calculated	_	calculate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
34	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
35	(6.8+7.2)/2	_	(6.8+7.2)/2	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
36	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
37	equals	_	equal	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
38	7.	_	7.	LS	O	_	thing	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@number, 26@@s@@average-01, 24@@d@@value, 33@@s@@calculate-01, 3@@d@@set, 29@@d@@and, 11@@p@@data, 4@@s@@have-03, 37@@s@@equal-01, 2@@p@@data, 10@@explicitanon0@@_NUMBER_, 9@@d@@value, 6@@p@@even, 28@@d@@6.8, 23@@p@@middle, 22@@explicitanon0@@2, 19@@s@@average-01, 13@@b@@cause-01, 15@@d@@median-01, 35@@d@@(6.8+7.2)/2]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	instance	_	instance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	8	MOD_o	true
3	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
4	which	_	which	WDT	O	_	name	_	0	IGNORE	true
5	colleges	_	college	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
7	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	percentiles	_	percentile	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
11	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	SAT	_name_	SAT	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
13	results	_	result	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	15	APP_s	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	used	_	use	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	2	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	minimum	_	minimum	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	testing	_	testing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	test-01	(mod())	21	MOD_mod	true
21	score	_	score	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	be	_	be	VB	O	_	person	_	0	IGNORE	true
25	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
26	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	acceptance	_	acceptance	NN	O	(d<root> / --LEX--)	accept-01	()	25	APP_o	true
29	factor.	_	factor.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@d@@college, 20@@p@@test-01, 19@@p@@minimum, 7@@d@@university, 25@@s@@use-01, 12@@d@@_NAME_, 8@@s@@use-01, 6@@a@@and, 13@@t@@thing, 1@@explicitanon0@@1, 28@@d@@accept-01, 13@@c@@result-01, 17@@s@@determine-01, 9@@d@@percentile, 21@@d@@score-01, 15@@o@@use-01, 2@@s@@instance]
sentence=1	Pack	pack	pack	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
2	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
3	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
4	at	_	at	IN	O	_	thing	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	time	_	time	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-a-$LEMMA$	(mod())	1	MOD_mod	true
7	if	_	if	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	possible,	_	possible,	NNS	O	_	and	_	0	IGNORE	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
10	start	_	start	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	items	_	item	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	9	APP_s	true
15	least	_	least	JJS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	used.	_	used.	JJ	O	_	1	_	0	IGNORE	true

nodealignment=[6@@p@@at-a-time, 1@@explicitanon0@@imperative, 16@@o@@often, 9@@a@@and, 3@@d@@room, 2@@explicitanon0@@1, 10@@s@@start-01, 12@@d@@item, 15@@s@@least, 14@@d@@person, 1@@h@@pack-01]
sentence=1	Countries	countries	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	colored	_	color	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
5	red,	_	red,	RB	O	_	mean-01	_	0	IGNORE	true
6	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
7	China,_Vietnam,	_name_	Vietnam,	NNP	O	(d<root> / --LEX--)	_NAME_	()	8	APP_op2	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
9	Cuba,	_name_	Cuba,	NNP	O	_	and	_	0	IGNORE	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
11	an	_	an	DT	O	_	1	_	0	IGNORE	true
12	oligarchic	_	oligarchic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	government.	_	government.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@d@@_NAME_, 13@@d@@form, 10@@s@@have-03, 1@@d@@country, 12@@p@@oligarchic, 8@@a@@and, 4@@s@@color-01]
sentence=1	Albania,	_name_	albania,	CD	O	_	and	_	0	IGNORE	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	one	_	one	CD	O	_	9	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	11	MOD_s	true
5	the	_	the	DT	O	_	include-01	_	0	IGNORE	true
6	191	_	191	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
7	signatory	_	signatory	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	sign-02	(s())	8	MOD_s	true
8	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the_Millennium_Declaration,	_name_	declaration,	CD	O	_	_NAME_	_	0	IGNORE	true
11	remains	_	remain	VBZ	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	0	ROOT	true
12	fully	_	fully	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	full	(mod())	13	MOD_mod	true
13	committed	_	commit	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	11	APP_o	true
14	to	_	to	IN	O	_	thing	_	0	IGNORE	true
15	implementation	_	implementation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	implement-01	(s())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the_Millennium_Development_Goals,	_name_	Goals,	NNS	O	_	_NAME_	_	0	IGNORE	true
18	which	_	which	WDT	O	_	name	_	0	IGNORE	true
19	have	_	have	VBP	O	_	person	_	0	IGNORE	true
20	been	_	be	VBN	O	_	person	_	0	IGNORE	true
21	properly	_	properly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	proper	(mod())	22	MOD_mod	true
22	reflected	_	reflect	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
23	in	_	in	IN	O	_	after	_	0	IGNORE	true
24	a	_	a	DT	O	_	1	_	0	IGNORE	true
25	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	26	MOD_mod	true
26	strategy	_	strategy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
27	for	_	for	IN	O	_	thing	_	0	IGNORE	true
28	social	_	social	JJ	O	(d<root> / --LEX--)	society	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
30	economic	_	economic	JJ	O	(d<root> / --LEX--)	economy	()	29	APP_op2	true
31	development.	_	development.	NN	O	_	product	_	0	IGNORE	true

nodealignment=[12@@s@@full, 29@@a@@and, 28@@d@@society, 6@@explicitanon0@@_NUMBER_, 7@@s@@sign-02, 30@@d@@economy, 8@@d@@country, 11@@f@@remain-01, 26@@d@@strategy, 13@@o@@commit-01, 15@@s@@implement-01, 4@@s@@include-91, 25@@p@@nation, 21@@t@@proper, 22@@s@@reflect-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	remains	_	remain	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	0	ROOT	true
3	unclear	_	unclear	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	2	APP_s	true
4	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
5	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_s	true
6	explain	_	explain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
7	such	_	such	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
8	gains,	_	gains,	NNS	O	_	thing	_	0	IGNORE	true
9	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	attributed	_	attribute	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
13	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
14	motivation	_	motivation	NN	O	(d<root> / --LEX--)	motivate-01	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o	true
16	to	_	to	IN	O	_	concern-02	_	0	IGNORE	true
17	L2	l2	L2	NNP	O	(s3<root> / small-molecule  :name (n2 / --LEX--)  :mod-of (l<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
19	during	_	during	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
21	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	ostensibly	_	ostensibly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ostensible	(mod())	24	MOD_mod	true
24	limited	_	limit	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	limit-01	(s())	25	MOD_s	true
25	exposure	_	exposure	NN	O	(d<root> / --LEX--)	expose-01	()	18	APP_s	true
26	[24],	_	[24],	XX	O	_	and	_	0	IGNORE	true
27	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	MOD_op1	true
28	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
29	factors	_	factor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
30	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	29	MOD_s	true
31	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
32	general	_	general	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	36	APP_op1	true
33	maturation,	_	maturation,	NNS	O	_	and	_	0	IGNORE	true
34	cognitive	_	cognitive	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
35	development,	_	development,	NNS	O	_	mean-01	_	0	IGNORE	true
36	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	30	APP_o	true
37	continued	_	continue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
38	academic	_	academic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	academia	(mod())	39	MOD_mod	true
39	training	_	training	NN	O	(d<root> / --LEX--)	train-01	()	36	APP_op3	true
40	[18].	_	[18].	XX	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[23@@p@@ostensible, 12@@s@@attribute-01, 38@@p@@academia, 2@@s@@-, 17@@n2@@_NAME_, 21@@n@@period, 27@@a@@or, 37@@s@@continue-01, 29@@d@@factor, 6@@s@@explain-01, 36@@a@@or, 34@@d@@cognitive, 5@@s@@possible-01, 30@@s@@relate-01, 3@@s@@unclear, 39@@d@@train-01, 17@@s3@@small-molecule, 15@@a@@and, 7@@d@@such, 18@@s@@experience-01, 24@@s@@limit-01, 14@@d@@motivate-01, 25@@d@@expose-01, 32@@d@@general-02]
sentence=1	On	on	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	other	_	other	JJ	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
4	hand,	_	hand,	NNS	O	_	and	_	0	IGNORE	true
5	extant	_	extant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
6	newspaper	_	newspaper	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	clippings	_	clipping	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	APP_s	true
8	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	only_a_few_days	_name_	day	NNS	O	(r<root> / --LEX--  :ARG1 (p<s>)  :source-of (a2<mod>))	_NAME_	(mod(), s())	7	MOD_mod	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	duel	_	duel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
13	give	_	give	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	description	_	description	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	describe-01	(s())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	opponent	_	opponent	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	oppose-01	()	15	APP_s	true
19	(identified	_	(identified	ADD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
20	by	_	by	IN	O	_	thing	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	initials	_	initial	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	"L.	"l.	"l.	ADD	O	_	$LEMMA$	_	0	IGNORE	true
24	D.")	d.")	d.")	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	appear	_	appear	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	MOD_s	true
27	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
28	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	accurately	_	accurately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	accurate	(mod())	30	MOD_mod	true
30	apply	_	apply	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	18	MOD_s	true
31	to	_	to	IN	O	_	person	_	0	IGNORE	true
32	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
33	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	32	MOD_s	true
34	Galois'_Republican	_name_	Republican	NNP	O	(d<root> / --LEX--)	_NAME_	()	35	APP_o	true
35	friends,	_	friends,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	name	(s(), o())	3	APP_o	true
36	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	30	MOD_mod	true
38	Ernest_Duchatelet,	_name_	Duchatelet,	NNP	O	_	name	_	0	IGNORE	true
39	who	_	who	WP	O	_	name	_	0	IGNORE	true
40	was	_	be	VBD	O	_	person	_	0	IGNORE	true
41	imprisoned	_	imprison	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	true
42	with	_	with	IN	O	_	-	_	0	IGNORE	true
43	Galois	_name_	Galois	NNP	O	_	$LEMMA$	_	0	IGNORE	true
44	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
45	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
46	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	MOD_s	true
47	charges.	_	charges.	NN	O	_	name	_	0	IGNORE	true
48	[21]	_	[21]	XX	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@h@@contrast-01, 30@@s@@apply-02, 13@@s@@give-01, 10@@w@@after, 7@@s@@clipping, 6@@d@@newspaper, 35@@s@@name, 34@@d@@_NAME_, 15@@c@@describe-01, 22@@d@@initial, 28@@s@@more, 41@@s@@imprison-01, 26@@s@@appear-02, 18@@p2@@person, 36@@s@@most, 32@@d@@one, 15@@t@@thing, 18@@e2@@oppose-01, 37@@p@@probable, 5@@s@@extant-01, 9@@r@@_NAME_, 19@@s@@(identified-01, 12@@d@@duel-01, 29@@t@@accurate, 46@@s@@same-01, 33@@s@@include-91]
sentence=1	Other	other	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	items	_	item	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
3	include	_	include	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-91	(s(), o())	0	ROOT	true
4	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	shuttle	_	shuttle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	simulators	_	simulator	NNS	O	(d<root> / --LEX--)	launch-01	()	3	APP_s	true
7	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
8	will	_	will	MD	O	_	and	_	0	IGNORE	true
9	be	_	be	VB	O	_	person	_	0	IGNORE	true
10	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	the_Adler_Planetarium	_name_	Planetarium	NNP	O	(f<root> / facility  :name (n / --LEX--)  :location-of (p<mod>))	_NAME_	(mod())	10	APP_o	true
13	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
14	Chicago,	_name_	Chicago,	NNP	O	_	and	_	0	IGNORE	true
15	Illinois,	illinois,	illinois,	CD	O	_	_NAME_	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Evergreen_Aviation_&_Space_Museum	_name_	Museum	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	20	APP_op2	true
18	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	McMinnville,_Oregon,	_name_	oregon,	CD	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	12	APP_mod	true
21	Texas_A&M's_Aerospace_Engineering	_name_	Engineering	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	20	APP_op3	true
22	Department.	department.	Department.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[17@@o2@@organization, 1@@p@@other, 6@@d@@launch-01, 3@@s@@include-91, 12@@f@@facility, 2@@d@@item, 21@@n@@_NAME_, 4@@p@@various, 17@@n@@_NAME_, 19@@c@@company, 19@@n@@_NAME_, 12@@n@@_NAME_, 20@@a@@and, 10@@s@@give-01, 21@@c@@company, 5@@p@@shuttle]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	smelled	_	smell	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
4	honey	_	honey	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
7	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	kept	_	keep	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	while	_	while	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	dark	_	dark	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
14	room,	_	room,	NNS	O	_	and	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
17	fermented.	_	fermented.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@s@@little, 4@@d@@honey, 2@@s@@smell-02, 1@@d@@She, 10@@b@@while, 13@@s@@dark-02, 8@@s@@keep-01]
sentence=1	USI's	usi's	usi'	NNS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
2	exhibit,	_	exhibit,	NNP	O	_	_NAME_	_	0	IGNORE	true
3	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	located	_	locate	VBN	O	_	locate-01	_	0	IGNORE	true
6	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
7	Evansville,	_name_	evansville,	CD	O	_	and	_	0	IGNORE	true
8	Indiana,	_name_	indiana,	CD	O	_	_NAME_	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	run	_	run	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	from	_	from	IN	O	_	and	_	0	IGNORE	true
13	January_23_through_March_9.	_name_	9.	CD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[1@@o2@@organization, 11@@s@@run-01, 1@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	sample	_	sample	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_s	true
3	consisted	_	consist	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	71	_	71	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	3	APP_o	true
7	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	3	MOD_s	true
8	the_Application_School_of_Basic_Education,_Federal_University_of_Santa_Catarina,	_name_	catarina,	NN	O	_	_NAME_	_	0	IGNORE	true
9	aged	_	age	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	age-01	(s())	6	MOD_s	true
10	7_and_9_years_old	_name_	old	JJ	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	6	MOD_mod	true
11	(M	(m	(m	NN	O	_	_NAME_	_	0	IGNORE	true
12	=	_	=	SYM	O	_	$LEMMA$	_	0	IGNORE	true
13	7.64	_	7.64	CD	O	(d<root> / --LEX--)	_NUMBER_	()	7	APP_o	true
14	±	_	±	NN	O	_	include-91	_	0	IGNORE	true
15	1.12),	_	1.12),	CD	O	_	value-interval	_	0	IGNORE	true
16	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
17	were	_	be	VBD	O	_	person	_	0	IGNORE	true
18	divided	_	divide	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
19	into	_	into	IN	O	_	i	_	0	IGNORE	true
20	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	22	MOD_mod	true
21	groups:	_	groups:	NNS	O	_	have-org-role-91	_	0	IGNORE	true
22	participant	_	participant	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	participate-01	(s())	23	MOD_s	true
23	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
24	control.	_	control.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@s@@consist-01, 2@@d@@sample-01, 9@@s@@age-01, 10@@t@@temporal-quantity, 10@@y@@year, 18@@s@@divide-02, 20@@explicitanon0@@2, 5@@explicitanon0@@_NUMBER_, 22@@s@@participate-01, 6@@p2@@person, 7@@s@@include-91, 23@@d@@and, 13@@d@@_NUMBER_, 6@@e2@@study-01]
sentence=1	There's	there's	There's	NNP	O	_	have-03	_	0	IGNORE	true
2	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
3	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	unfunny	_	unfunny	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
12	back	_	back	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	room,	_	room,	NNS	O	_	and	_	0	IGNORE	true
14	that's	_	that's	PRP	O	_	cause-01	_	0	IGNORE	true
15	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	9	MOD_s	true
16	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	stay	_	stay	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	15	APP_o	true
19	die	_	die	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
22	back	_	back	JJ	O	_	$LEMMA$	_	0	IGNORE	true
23	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
25	don’t	_	don’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	go	_	go	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_op2	true
27	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	The	the	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
30	Onion.	_name_	Onion.	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@d@@joke-01, 24@@a@@and, 15@@s@@cause-01, 26@@d@@go-02, 23@@b@@room, 19@@s@@die-01, 5@@p@@unfunny, 25@@explicitanon0@@-, 16@@d@@they, 3@@explicitanon0@@lot, 9@@s@@tell-01, 18@@a@@and, 21@@p@@that, 12@@b@@back, 17@@s@@stay-01]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	4	MOD_mod	true
4	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
7	ingredients,	_	ingredients,	NNS	O	_	and	_	0	IGNORE	true
8	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
9	as	_	as	IN	O	_	and	_	0	IGNORE	true
10	peppermint,	_	peppermint,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	disagreeable	_	disagreeable	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	18	MOD_s	true
17	to	_	to	IN	O	_	-	_	0	IGNORE	true
18	mice.	_	mice.	NN	O	(d<root> / --LEX--)	_NAME_	()	5	APP_o	true

nodealignment=[3@@p@@this, 4@@d@@product, 1@@explicitanon0@@many, 16@@s@@disagreeable-02, 18@@d@@_NAME_, 13@@s@@know-01, 6@@s@@natural-03, 5@@s@@use-01]
sentence=1	At	at	at	IN	O	_	person	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	ceremony,	_	ceremony,	NNP	O	_	_NAME_	_	0	IGNORE	true
4	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
5	Administrator	administrator	Administrator	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	6	MOD_s	true
6	Charles_Bolden	_name_	Bolden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	announced	_	announce	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	locations	_	location	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	would	_	would	MD	O	_	person	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	18	MOD_mod	true
16	remaining	_	remain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
17	Space_Shuttle	_name_	Shuttle	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	orbiters	_	orbiter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
19	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	end	_	end	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
22	of	_	of	IN	O	_	person	_	0	IGNORE	true
23	the_Space_Shuttle	_name_	Shuttle	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
24	program.	_	program.	NN	O	_	person	_	0	IGNORE	true

nodealignment=[4@@g@@government-organization, 7@@s@@announce-01, 5@@h@@have-org-role-91, 6@@n@@_NAME_, 17@@n@@_NAME_, 5@@g@@administrator, 23@@p@@person, 4@@n@@_NAME_, 19@@s@@follow-01, 21@@s@@end-01, 13@@s@@give-01, 16@@s@@remain-01, 23@@n@@_NAME_, 15@@explicitanon0@@3, 18@@d@@orbiter, 9@@d@@location, 6@@p@@person]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	it's	_	it's	PRP	O	_	$LEMMA$-02	_	0	IGNORE	true
3	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
4	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	grade	_	grade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	grape	_	grape	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	that	_	that	WDT	O	_	name	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
10	from	_	from	IN	O	_	and	_	0	IGNORE	true
11	Pinot_Noir	_name_	Noir	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Hermitage.	_name_	hermitage.	NN	O	(d<root> / --LEX--)	_NAME_	()	12	APP_op2	true

nodealignment=[9@@s@@make-01, 6@@d@@grape, 14@@d@@_NAME_, 1@@s@@cause-01, 11@@n@@_NAME_, 5@@p@@grade, 12@@a@@and, 4@@s@@high-02, 11@@c@@company]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	15	_	15	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	18	APP_s	true
4	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
5	were	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	seated	_	seat	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	nearby	_	nearby	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	6	APP_o	true
8	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	individual	_	individual	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
10	on	_	on	IN	O	_	and	_	0	IGNORE	true
11	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	flight	_	flight	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	fly-01	(mod(), s())	6	MOD_mod	true
13	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	New_Zealand	_name_	Zealand	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	have	_	have	VBP	O	_	person	_	0	IGNORE	true
16	been	_	be	VBN	O	_	person	_	0	IGNORE	true
17	traced	_	trace	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
19	are	_	be	VBP	O	_	person	_	0	IGNORE	true
20	being	_	be	VBG	O	_	person	_	0	IGNORE	true
21	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
22	to	_	to	IN	O	_	thing	_	0	IGNORE	true
23	self-isolate.	_	self-isolate.	ADD	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[7@@o@@nearby, 6@@s@@seat-01, 14@@c@@country, 3@@d@@person, 9@@d@@individual, 12@@v@@fly-01, 17@@s@@trace-01, 21@@s@@tell-01, 14@@n@@_NAME_, 1@@p@@all, 2@@explicitanon0@@_NUMBER_, 18@@a@@and]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	5	MOD_mod	true
4	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	lighting	_	lighting	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	widely	_	widely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	wide	(mod())	11	MOD_mod	true
11	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
12	in	_	in	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	household	_	household	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	nowadays:	_	nowadays:	NN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	target-01	_	0	IGNORE	true
17	(light-emitting	_	(light-emitting	ADD	O	_	protect-01	_	25	IGNORE	true
18	diode)	_	diode)	NN	O	_	product	_	0	IGNORE	true
19	LED	led	lead	VBD	O	_	$LEMMA$	_	25	IGNORE	true
20	bulb,	_	bulb,	NNP	O	_	product	_	0	IGNORE	true
21	(compact	_	(compact	NNP	O	_	$LEMMA$	_	25	IGNORE	true
22	fluorescent	_	fluorescent	VBP	O	_	$LEMMA$	_	25	IGNORE	true
23	light)	_	light)	NNP	O	_	mean-01	_	0	IGNORE	true
24	CFL	cfl	CFL	NNP	O	_	_NAME_	_	25	IGNORE	true
25	bulb	_	bulb	NN	O	_	$LEMMA$	_	26	IGNORE	true
26	and	_	and	CC	O	_	$LEMMA$	_	11	IGNORE	true
27	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	mean-01	(s())	7	MOD_s	true
28	incandescent	_	incandescent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
29	bulb.	_	bulb.	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[14@@b@@household, 11@@s@@use-01, 7@@d@@lighting, 4@@s@@general-02, 10@@s@@wide, 28@@p@@incandescent, 27@@s@@mean-01, 5@@p@@type, 3@@explicitanon0@@3]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	19	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	islands	_	island	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	Moriori,	_name_	moriori,	NN	O	_	_NAME_	_	0	IGNORE	true
10	who	_	who	WP	O	_	name	_	0	IGNORE	true
11	were	_	be	VBD	O	_	person	_	0	IGNORE	true
12	descended	_	descend	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
13	from	_	from	IN	O	_	-	_	0	IGNORE	true
14	the	_	the	DT	O	_	name	_	0	IGNORE	true
15	Maori	_name_	Maori	NNP	O	(d<root> / --LEX--)	_NAME_	()	12	APP_o	true
16	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	mainland	_	mainland	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	New_Zealand,	_name_	Zealand,	NNS	O	_	_NAME_	_	0	IGNORE	true
19	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
20	who	_	who	WP	O	_	name	_	0	IGNORE	true
21	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_o	true
22	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
23	own	_	own	JJ	O	_	person	_	0	IGNORE	true
24	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
26	variant	_	variant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	language.	_	language.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@d@@person, 6@@g@@island, 24@@d@@culture, 12@@s@@descend-01, 15@@d@@_NAME_, 2@@p@@original, 25@@a@@and, 17@@p@@mainland, 21@@s@@develop-02, 26@@d@@variant, 19@@s@@contrast-01]
sentence=1	Use	use	use	VB	O	(u<root> / --LEX--  :ARG0 (y / you)  :ARG1 (s<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	isn't	_	isn't	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
7	every_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	such	_	such	JJ	O	_	i	_	0	IGNORE	true
9	as	_	as	IN	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	formal	_	formal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	dining	_	dining	NN	O	(d<root> / --LEX--)	dine-01	()	13	APP_op1	true
13	or	_	or	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
14	living	_	live	VBG	O	(d<root> / --LEX--)	live-01	()	13	APP_op2	true
15	room.	_	room.	JJ	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@s@@use-01, 3@@d@@room, 1@@u@@use-01, 12@@d@@dine-01, 14@@d@@live-01, 1@@y@@you, 7@@n@@day, 11@@p@@formal, 5@@explicitanon0@@-, 13@@a@@or]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	tracks	_	track	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_mod	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
5	demo	_	demo	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
8	submicron	_	submicron	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	carbonyl	_	carbonyl	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	iron	_	iron	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	particles	_	particle	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	0	ROOT	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	shot	_	shoot	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	into	_	into	IN	O	_	cause-01	_	0	IGNORE	true
16	aerogel	_	aerogel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
18	a	_	a	DT	O	_	person	_	0	IGNORE	true
19	particle	_	particle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	accelerator	_	accelerator	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	modified	_	modify	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	20	MOD_s	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	accelerate	_	accelerate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_o	true
24	dust	_	dust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
27	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	high	_	high	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	23	APP_o2	true
29	speeds,	_	speeds,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	simulate	_	simulate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
32	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
33	interstellar	_	interstellar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	dust	_	dust	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
35	impacts	_	impact	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
36	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	we're	_	we're	NN	O	_	multi-sentence	_	0	IGNORE	true
38	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	MOD_o	true
39	for.	_	for.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[38@@s@@look-01, 34@@d@@dust, 33@@p@@interstellar, 27@@s@@very, 20@@d@@accelerator, 23@@b@@accelerate-01, 19@@p@@particle, 35@@s@@impact-01, 31@@i@@simulate-01, 11@@a@@particle, 16@@d@@aerogel, 5@@b@@demo, 25@@d@@particle, 2@@d@@track, 14@@s@@shoot-01, 10@@p@@iron, 24@@p@@dust, 28@@d@@high-02, 21@@o@@modify-01, 17@@s@@use-01, 8@@p@@submicron, 9@@p@@carbonyl]
sentence=1	Jespersen	_name_	Jespersen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
2	in	_	in	IN	O	_	and	_	0	IGNORE	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	theory	_	theory	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	ranks	_	rank	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
7	removes	_	remove	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
8	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
9	parts	_	part	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	speech	_	speech	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
12	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	syntax,	_	syntax,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
16	differentiates	_	differentiate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op2	true
17	between	_	between	IN	O	_	and	_	0	IGNORE	true
18	primaries,	_	primaries,	NNP	O	_	mean-01	_	0	IGNORE	true
19	secondaries,	_	secondaries,	NNP	O	_	mean-01	_	0	IGNORE	true
20	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
21	tertiaries;	_	tertiaries;	NNP	O	_	contrast-01	_	0	IGNORE	true
22	e.g.	_	e.g.	RB	O	_	_NAME_	_	0	IGNORE	true
23	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
24	"well	_	"well	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	honed	_	hone	VBN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
26	phrase,"	_	phrase,"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	"phrase"	_	"phrase"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
29	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
30	primary,	_	primary,	NNP	O	_	thing	_	0	IGNORE	true
31	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
32	being	_	being	NN	O	_	person	_	0	IGNORE	true
33	defined	_	define	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	MOD_o	true
34	by	_	by	IN	O	_	mean-01	_	0	IGNORE	true
35	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
36	secondary,	_	secondary,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	15	MOD_s	true
37	"honed",	_	"honed",	XX	O	_	mean-01	_	0	IGNORE	true
38	which	_	which	WDT	O	_	i	_	0	IGNORE	true
39	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
40	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
41	defined	_	define	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	MOD_o	true
42	by	_	by	IN	O	_	mean-01	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	tertiary	_name_	tertiary	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
45	"well".	_	"well".	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@h@@part, 33@@s@@define-01, 1@@n@@_NAME_, 39@@p@@again, 1@@p@@person, 41@@s@@define-01, 44@@d@@tertiary, 6@@a@@rank-01, 36@@s@@thing, 25@@p@@hone-01, 11@@d@@speech, 31@@p@@this, 16@@s@@differentiate-01, 7@@s@@remove-01, 3@@p@@this, 15@@a@@and, 4@@p@@theory, 20@@d@@and, 24@@p@@"well]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	one,	_	one,	JJ	O	_	thing	_	0	IGNORE	true
4	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	message	_	message	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	that	_	that	WDT	O	_	original	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	collaboratively	_	collaboratively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	clandestine	(mod())	9	MOD_mod	true
9	curated	_	curate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
10	by	_	by	IN	O	_	and	_	0	IGNORE	true
11	everybody.	_	everybody.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[5@@s@@message-01, 9@@s@@curate-01, 1@@d@@It, 8@@t@@clandestine, 4@@s@@single-02]
sentence=1	Einstein	_name_	Einstein	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	preferred	_	prefer	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	and	_	0	IGNORE	true
4	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	that	_	that	IN	O	_	resemble-01	_	0	IGNORE	true
6	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
8	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
10	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
12	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
13	affected	_	affect	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
14	by	_	by	IN	O	_	thing	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	presence	_	presence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	present-02	(s())	23	APP_op1	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	mass;	_	mass;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	light	_	light	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	beams,	_	beams,	NNP	O	_	mean-01	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_s	true
24	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
25	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
27	travels	_	travel	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
28	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	space	_	space	NN	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
31	time,	_	time,	NNP	O	_	and	_	0	IGNORE	true
32	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
34	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
35	paths	_	path	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
36	affected.	_	affected.	JJ	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[19@@p@@large, 1@@n@@_NAME_, 1@@p@@person, 23@@a@@and, 16@@s@@present-02, 2@@c@@prefer-01, 27@@s@@travel-01, 35@@d@@path, 21@@d@@light, 32@@n@@then, 29@@t@@space, 8@@d@@space, 9@@a@@and, 25@@p@@else, 13@@s@@affect-01, 33@@s@@find-01, 10@@d@@time, 24@@d@@everything, 4@@s@@think-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	error	_	error	NN	O	(d<root> / --LEX--)	err-01	()	3	APP_s	true
3	causes	_	cause	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	incorrect	_	incorrect	JJ	O	(explicitanon0<root> / -  :polarity-of (n / --LEX--  :ARG1 (t<s>)))	correct-02	(s())	6	MOD_s	true
6	display	_	display	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	resulting	_	result	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	geometry	_	geometry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	14	MOD_s	true
13	be	_	be	VB	O	_	thing	_	0	IGNORE	true
14	drawn	_	draw	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
15	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	user	_	user	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	interface	_	interface	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
19	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
20	the	_	the	DT	O	_	affect-01	_	0	IGNORE	true
21	operation	_	operation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
22	applied	_	apply	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	21	MOD_s	true
23	to	_	to	IN	O	_	and	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	true
26	initial	_	initial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	geometries	_	geometry	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
28	(Figure	(figure	(Figure	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
29	2).	_	2).	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@s@@result-01, 25@@explicitanon0@@2, 10@@d@@geometry, 6@@s@@display-01, 27@@d@@geometry, 3@@s@@cause-01, 12@@s@@recommend-01, 28@@p@@(Figure-01, 5@@n@@correct-02, 19@@w@@after, 26@@p@@initial, 2@@d@@err-01, 1@@p@@this, 17@@p@@user, 22@@s@@apply-02, 14@@s@@draw-01, 21@@d@@operation, 18@@b@@interface, 5@@explicitanon0@@-]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	died	_	die	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
4	infection	_	infection	NN	O	(d<root> / --LEX--)	infect-01	()	2	APP_o	true
5	caused	_	cause	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
6	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
7	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	eczema	_	eczema	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
10	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	shunned	_	shun	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
12	effective	_	effective	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	15	MOD_s	true
13	conventional	_	conventional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	medical	_	medical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	medicine	(mod())	15	MOD_mod	true
15	treatments	_	treatment	NNS	O	(d<root> / --LEX--)	treat-03	()	11	APP_o	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	homeopathy,	_	homeopathy,	NNS	O	_	and	_	0	IGNORE	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	alternative	_	alternative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	medicine	_	medicine	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	that	_	that	WDT	O	_	and	_	0	IGNORE	true
24	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
25	been	_	be	VBN	O	_	person	_	0	IGNORE	true
26	described	_	describe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
27	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
28	pseudoscience.	_	pseudoscience.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@cause-01, 8@@d@@eczema, 1@@d@@She, 4@@d@@infect-01, 21@@p@@alternative, 2@@s@@die-01, 13@@p@@conventional, 7@@p@@severe, 26@@s@@describe-01, 11@@s@@shun-01, 22@@p@@medicine, 10@@d@@they, 14@@p@@medicine, 12@@s@@effective-04, 19@@p@@form, 15@@d@@treat-03, 9@@w@@after]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	advantages	_	advantage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
6	based	_	base	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	4	APP_s	true
7	on	_	on	IN	O	_	and	_	0	IGNORE	true
8	educational	_	educational	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	educate-01	(s())	6	APP_o	true
9	choices,	_	choices,	NNP	O	_	thing	_	0	IGNORE	true
10	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
11	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
12	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
13	turn	_	turn	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	14	MOD_mod	true
14	shaped	_	shape	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	interests	_	interest	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	MOD_op1	true
18	talents.	_	talents.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@s@@shape-01, 16@@d@@interest, 4@@s@@possible-01, 6@@o@@base-02, 2@@p@@particular, 8@@s@@educate-01, 3@@d@@advantage, 17@@a@@and, 13@@p@@in-turn]
sentence=1	Alternatively	alternatively	alternatively	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	snitch	_	snitch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
6	a	_	a	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
7	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	yellow	_	yellow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	ball	_	ball	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	(tennis	_	(tenni	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	balls	_	ball	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
12	work	_	work	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	4	APP_s	true
13	great)	_	great)	UH	O	_	and	_	0	IGNORE	true
14	that	_	that	WDT	O	_	name	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	hidden	_	hide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
17	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	game	_	game	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	starts	_	start	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
21	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	bystander	_	bystander	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	24	APP_op2	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	MOD_op1	true
25	referee.	_	referee.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[23@@p2@@person, 12@@s@@work-09, 11@@d@@ball, 1@@p@@alternatively, 9@@g@@ball, 4@@s@@possible-01, 16@@s@@hide-01, 20@@s@@start-01, 8@@s@@yellow-02, 19@@d@@game, 17@@w@@before, 23@@e2@@bystander, 10@@p@@_NAME_, 3@@d@@snitch, 24@@a@@or, 7@@p@@small]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_s	true
6	decision,	_	decision,	NNS	O	_	and	_	0	IGNORE	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
8	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	(d<root> / --LEX--)	person	()	7	APP_o	true
14	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	public	_	public	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
16	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
17	mind.	_	mind.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[13@@d@@person, 14@@n@@_NAME_, 7@@s@@contrast-01, 5@@r@@difficult, 4@@s@@very, 15@@s@@public, 14@@c@@country, 1@@d@@this]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	grouped	_	group	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
6	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
7	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
8	uses	_	use	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
9	that	_	that	WDT	O	_	and	_	0	IGNORE	true
10	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
11	distributed	_	distribute	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	for	_	for	IN	O	_	and	_	0	IGNORE	true
13	heating	_	heating	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	11	APP_o	true
15	cooling,	_	cooling,	NNP	O	_	and	_	0	IGNORE	true
16	lighting,	_	lighting,	NNP	O	_	and	_	0	IGNORE	true
17	operating	_	operate	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	operate-01	(s())	18	MOD_s	true
18	appliances	_	appliance	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
19	etc	_	etc	FW	O	(d<root> / --LEX--)	et-cetera	()	14	APP_op3	true
20	[1]	_	[1]	XX	O	_	and	_	0	IGNORE	true

nodealignment=[18@@d@@appliance, 4@@s@@group-01, 11@@s@@distribute-01, 1@@d@@It, 19@@d@@et-cetera, 5@@s@@depend-01, 17@@s@@operate-01, 8@@d@@use-01, 3@@o@@often, 14@@a@@and, 13@@d@@heating-01]
sentence=1	However,	_name_	However,	LS	O	_	and	_	0	IGNORE	true
2	a	_	a	DT	O	_	thing	_	0	IGNORE	true
3	systematic	_	systematic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	metascience	_	metascience	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
7	research	_	research	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
8	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
10	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	field	_	field	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	L2	l2	L2	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	research,	_	research,	NNS	O	_	cause-01	_	0	IGNORE	true
19	leaving	_	leave	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	12	MOD_s	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	understand-01	(s())	19	APP_o	true
23	of	_	of	IN	O	_	-	_	0	IGNORE	true
24	the	_	the	DT	O	_	-	_	0	IGNORE	true
25	actual	_	actual	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	number	_	number	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	27	APP_op1	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op1 (b<op1>))	$LEMMA$	(op2(poss()), op1(poss()))	22	APP_s	true
28	nature	_	nature	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	27	APP_op2	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	replication	_	replication	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	31	MOD_mod	true
31	studies	_	study	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_poss	true
32	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
33	have	_	have	VBP	O	_	person	_	0	IGNORE	true
34	been	_	be	VBN	O	_	person	_	0	IGNORE	true
35	published.	_	published.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[7@@r@@research-01, 17@@n@@_NAME_, 27@@a@@and, 30@@p@@replication-01, 15@@b@@field, 25@@s@@actual-02, 4@@d@@metascience, 31@@d@@study-01, 28@@m@@nature, 6@@d@@replication-01, 10@@n@@yet, 26@@m@@number, 3@@p@@systematic, 21@@p@@poor, 22@@s@@understand-01, 19@@s@@leave-13, 9@@explicitanon0@@-, 12@@s@@establish-01]
sentence=1	Socotra_Island	_name_	Island	NNP	O	(i<root> / island  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
2	is	_	be	VBZ	O	_	name	_	0	IGNORE	true
3	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	rich	_	rich	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	home	_	home	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	5	APP_op2	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	rare	_	rare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
11	spectacular	_	spectacular	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	12	MOD_s	true
12	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	reefs,	_	reefs,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	fish,	_	fish,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
16	birds,	_	birds,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
17	plants,	_	plants,	NNP	O	_	and	_	0	IGNORE	true
18	and	_	and	CC	O	_	$LEMMA$	_	12	IGNORE	true
19	trees	_	tree	NNS	O	_	$LEMMA$	_	18	IGNORE	true
20	which	_	which	WDT	O	_	name	_	0	IGNORE	true
21	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
24	anywhere	_	anywhere	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
25	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	world.	_	world.	NN	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true

nodealignment=[3@@s@@very, 1@@n@@_NAME_, 25@@p@@else, 9@@explicitanon0@@many, 11@@s@@spectacular, 5@@a@@and, 10@@s@@rare-02, 24@@b@@anywhere, 22@@explicitanon0@@-, 28@@c@@country, 23@@s@@find-01, 12@@d@@specie, 7@@s@@home, 4@@s@@rich, 1@@i@@island, 28@@n@@_NAME_]
sentence=1	By	by	by	IN	O	_	cause-01	_	0	IGNORE	true
2	taking	_	take	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	action,	_	action,	NNS	O	_	and	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	hope	_	hope	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
8	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
9	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
10	have	_	have	VB	O	_	person	_	0	IGNORE	true
11	hastened	_	hasten	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	start	_	start	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_o	true
14	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_s	true
17	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
18	healing	_	healing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
19	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	desperately	_	desperately	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	desperate-02	(s())	23	MOD_s	true
23	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
24	in	_	in	IN	O	_	name	_	0	IGNORE	true
25	America.	_name_	America.	NNS	O	(n<root> / --LEX--  :name-of (c2 / country  :location-of (c<mod>)))	_NAME_	(mod())	23	MOD_mod	true

nodealignment=[25@@c2@@country, 3@@p@@this, 16@@s@@process-02, 21@@s@@so, 2@@b@@take-01, 22@@s@@desperate-02, 6@@c@@hope-01, 15@@p@@that, 5@@d@@i, 23@@s@@need-01, 13@@s@@start-01, 11@@s@@hasten-01, 18@@d@@healing-01, 25@@n@@_NAME_]
sentence=1	Hugh_McGuire	_name_	McGuire	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	0	ROOT	true
2	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	books	_	book	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	have	_	have	VBP	O	_	person	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	yet	_	yet	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	been	_	be	VBN	O	_	person	_	0	IGNORE	true
10	acoustically	_	acoustically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	democratic	(mod())	11	MOD_mod	true
11	liberated.	_	liberated.	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true

nodealignment=[4@@y@@book, 1@@n@@_NAME_, 1@@p@@person, 3@@explicitanon0@@some, 7@@explicitanon0@@-, 11@@s@@liberated.-01, 10@@t@@democratic, 8@@n@@yet]
sentence=1	Tropical	tropical	tropical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	cyclones	_	cyclone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
3	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	4	MOD_s	true
4	sustained	_	sustain	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	by	_	by	IN	O	_	and	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	energy	_	energy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
10	called	_	call	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
11	latent	_	latent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	heat,	_	heat,	NNS	O	_	cause-01	_	0	IGNORE	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
15	released	_	release	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
16	by	_	by	IN	O	_	and	_	0	IGNORE	true
17	moisture	_	moisture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	evaporated	_	evaporate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
19	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	ocean	_	ocean	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	condenses	_	condense	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
24	to	_	to	TO	O	_	and	_	0	IGNORE	true
25	form	_	form	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
26	rain.	_	rain.	JJ	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[23@@s@@condense-01, 15@@s@@release-01, 17@@d@@moisture, 9@@d@@energy, 11@@p@@latent, 3@@s@@person, 2@@d@@cyclone, 1@@p@@tropical, 25@@i@@form-01, 7@@p@@form, 21@@d@@ocean, 4@@s@@sustain-01, 18@@s@@evaporate-01]
sentence=1	Stardust	stardust	Stardust	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	say-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	_NAME_	_	0	IGNORE	true
4	NASA	_name_	NASA	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
5	Discovery	_name_	Discovery	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	discover-01	(mod())	6	MOD_mod	true
6	mission	_	mission	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	name	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	launched	_	launch	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
11	1999.	_name_	1999.	NNP	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@p@@person, 5@@p@@discover-01, 6@@r@@mission, 9@@s@@launch-01, 4@@n@@_NAME_, 1@@n@@_NAME_]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	exchanges	_	exchange	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	coordinate	_	coordinate	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	system	_	system	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	2	APP_o	true
6	of	_	of	IN	O	_	thing	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	geometry,	_	geometry,	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
9	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	match	_	match	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	coordinate	_	coordinate	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
17	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
19	being	_	be	VBG	O	_	person	_	0	IGNORE	true
20	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	user	_	user	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	use-01	(mod())	20	MOD_mod	true
24	interface.	_	interface.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[20@@s@@use-01, 16@@d@@system, 4@@p@@coordinate, 1@@d@@It, 12@@explicitanon0@@-, 2@@s@@exchange-01, 8@@d@@geometry,, 23@@p@@use-01, 13@@s@@match-01, 9@@s@@cause-01, 5@@m@@system, 15@@p@@coordinate]
sentence=1	Civil_Defense_Authority	_name_	Authority	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
2	director	_	director	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$FORM$	(s(), o())	4	MOD_s	true
3	General	general	General	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
4	Suleiman	_name_	Suleiman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
5	al-Amr,	al-amr,	al-amr,	CD	O	_	have-org-role-91	_	0	IGNORE	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	remarks	_	remark	NNS	O	(d<root> / --LEX--  :ARG2 (s<s>)  :time-of (l<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
8	to	_	to	IN	O	_	name	_	0	IGNORE	true
9	al-Ikhbariya	al-ikhbariya	al-Ikhbariya	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
10	television,	_	television,	NNS	O	_	_NAME_	_	0	IGNORE	true
11	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	"All	"all	"all	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	have-org-role-91	(mod())	11	MOD_mod	true
14	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
15	were	_	be	VBD	O	_	person	_	0	IGNORE	true
16	wounded	_	wound	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	and	_	and	CC	O	_	$LEMMA$	_	22	IGNORE	true
18	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
19	dead	_	dead	NNS	O	_	die-01	_	0	IGNORE	true
20	have	_	have	VBP	O	_	person	_	0	IGNORE	true
21	been	_	be	VBN	O	_	person	_	0	IGNORE	true
22	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
23	to	_	to	IN	O	_	-	_	0	IGNORE	true
24	hospital.	_	hospital.	NN	O	_	$LEMMA$	_	0	IGNORE	true
25	There	there	there	EX	O	_	person	_	0	IGNORE	true
26	are	_	be	VBP	O	_	person	_	0	IGNORE	true
27	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
28	casualties	_	casualty	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-17	(s())	11	APP_o	true
30	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
31	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
32	location."	_	location."	NNP	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[28@@d@@casualty, 11@@s@@say-01, 1@@g@@government-organization, 4@@p@@person, 2@@g@@director, 29@@s@@leave-17, 2@@h@@have-org-role-91, 3@@p@@general, 1@@n@@_NAME_, 16@@s@@wound-01, 22@@s@@take-01, 13@@p@@have-org-role-91, 9@@n@@_NAME_, 27@@explicitanon0@@-, 7@@d@@remark-01, 9@@c@@city, 4@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
3	exploited	_	exploit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	by	_	by	IN	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	wing	_	wing	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	an	_	an	DT	O	_	thing	_	0	IGNORE	true
9	aeroplane	_	aeroplane	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
10	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	6	MOD_s	true
13	to	_	to	TO	O	_	mean-01	_	0	IGNORE	true
14	create	_	create	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
15	an	_	an	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	me$LEMMA$n-01	(s(), o())	3	MOD_o	true
16	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	above	_	above	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
18	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
20	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	location	_	0	IGNORE	true
22	air	_	air	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	velocity	_	velocity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
24	increases.	_	increases.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[22@@p@@air, 16@@d@@area, 17@@b@@above, 14@@s@@create-01, 15@@s@@meann-01, 9@@d@@aeroplane, 23@@d@@velocity, 3@@s@@exploit-01, 12@@f@@design-01, 1@@d@@this, 6@@h@@wing, 19@@d@@surface]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
2	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	22	MOD_o	true
3	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	1	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	7	MOD_s	true
5	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	22	APP_s	true
6	remaining	_	remain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	passengers	_	passenger	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	flight,	_	flight,	NNS	O	_	include-91	_	0	IGNORE	true
11	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	considered	_	consider	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	22	MOD_s	true
16	be	_	be	VB	O	(d<root> / --LEX--)	person	()	22	APP_o	true
17	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	16	MOD_s	true
18	contacts,	_	contacts,	NNP	O	_	and	_	0	IGNORE	true
19	have	_	have	VBP	O	_	person	_	0	IGNORE	true
20	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	been	_	be	VBN	O	_	person	_	0	IGNORE	true
22	contacted	_	contact	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
23	to	_	to	TO	O	_	and	_	0	IGNORE	true
24	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
25	reassurance	_	reassurance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (h<op2>)  :op1 (d<op1>)  :purpose-of (s2<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	22	MOD_mod	true
27	answer	_	answer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op2	true
28	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	questions	_	question	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	27	APP_o	true
30	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
32	have;	_	have;	NNP	O	_	and	_	0	IGNORE	true
33	those	_	those	DT	O	_	that	_	0	IGNORE	true
34	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	22	MOD_mod	true
35	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
36	haven't	_	haven't	WDT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	true
37	been	_	be	VBN	O	_	person	_	0	IGNORE	true
38	contacted	_	contact	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
39	did	_	do	VBD	O	_	person	_	0	IGNORE	true
40	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	41	MOD_mod	true
41	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
42	accurate	_	accurate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	contact	_	contact	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	41	APP_o	true
44	information.	_	information.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[42@@p@@accurate, 40@@explicitanon0@@-, 29@@d@@question-01, 34@@explicitanon0@@_NUMBER_, 31@@s@@possible-01, 24@@s@@provide-01, 17@@s@@close-13, 25@@d@@reassurance, 29@@t@@thing, 36@@explicitanon0@@-, 2@@s@@contrast-01, 6@@s@@remain-01, 7@@d@@passenger, 5@@s@@include-91, 4@@s@@include-91, 41@@s@@provide-01, 14@@s@@consider-01, 28@@p@@any, 27@@s@@answer-01, 15@@s@@and, 43@@d@@contact-01, 20@@p@@also, 1@@p@@all, 38@@s@@contact-01, 22@@s@@contact-01, 3@@explicitanon0@@_NUMBER_, 13@@explicitanon0@@-, 26@@a@@and, 16@@d@@person]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	have-quant-91	_	0	IGNORE	true
3	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	5	MOD_s	true
5	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	APP_s	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	playing	_	play	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_mod	true
8	Quidditch,	_name_	Quidditch,	NNP	O	_	and	_	0	IGNORE	true
9	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
10	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
11	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	commonly	_	commonly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	common	(mod())	13	MOD_mod	true
13	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	set	_	set	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	rules	_	rule	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	those	_	those	DT	O	_	that	_	0	IGNORE	true
19	given	_	give	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
20	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
21	the_International_Quidditch_Association	_name_	Association	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
22	(which	_	(which	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
23	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
24	be	_	be	VB	O	_	person	_	0	IGNORE	true
25	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	here).	_	here).	CD	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[19@@s@@give-01, 11@@s@@most, 4@@s@@differ-02, 3@@explicitanon0@@many, 14@@s@@set, 21@@c@@company, 5@@t@@way, 16@@d@@rule, 12@@p@@common, 13@@s@@use-01, 22@@p@@(which, 25@@s@@find-01, 23@@s@@possible-01, 9@@s@@contrast-01, 7@@d@@play-01, 21@@n@@_NAME_]
sentence=1	Could	could	Could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	1	MOD_o	true
4	a	_	a	DT	O	_	permit-01	_	0	IGNORE	true
5	sample,	_	sample,	CD	O	_	and	_	0	IGNORE	true
6	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	necessarily	_	necessarily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
8	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
9	that's	_	that's	XX	O	_	_NAME_	_	0	IGNORE	true
10	filled	_	fill	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
11	out,	_	out,	NN	O	_	and	_	0	IGNORE	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	1	APP_s	true
13	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	one	_	one	CD	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	that	_	that	WDT	O	_	contrast-01	_	0	IGNORE	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
17	--	_	--	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[1@@s@@possible-01, 2@@d@@i, 7@@s@@possible-01, 12@@s@@contrast-01, 16@@d@@you, 13@@p@@just, 6@@explicitanon0@@-, 10@@s@@fill-01, 14@@d@@one, 3@@s@@have-03, 8@@p@@one]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	13	MOD_s	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	don’t	_	don’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	13	APP_s	true
5	writers	_	writer	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	write-01	()	6	APP_s	true
6	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-11	(s())	4	APP_o	true
7	up	_	up	RP	O	_	thing	_	0	IGNORE	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
12	headline,	_	headline,	NNS	O	_	contrast-01	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	will	_	will	MD	O	_	person	_	0	IGNORE	true
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	26	MOD_s	true
17	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
18	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	team	_	team	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	writers	_	writer	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	write-01	(mod())	19	MOD_mod	true
22	choosing	_	choose	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	25	MOD_s	true
25	headlines	_	headline	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	13	APP_o	true
27	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	assign	_	assign	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	26	APP_op2	true
29	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	a	_	a	DT	O	_	person	_	0	IGNORE	true
32	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	writer	_	writer	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	write-01	()	28	APP_o	true
34	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
35	was	_	be	VBD	O	_	person	_	0	IGNORE	true
36	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
37	necessarily	_	necessarily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	38	MOD_s	true
38	involved?	_	involved?	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	interrogative	(s())	13	MOD_s	true

nodealignment=[10@@d@@story, 33@@e2@@write-01, 24@@m@@most, 6@@s@@come-up-11, 26@@a@@and, 3@@explicitanon0@@-, 19@@d@@team, 21@@g@@write-01, 11@@a@@and, 5@@p2@@person, 17@@s@@have-03, 38@@s@@interrogative, 36@@explicitanon0@@-, 13@@s@@contrast-01, 22@@s@@choose-01, 25@@d@@headline, 24@@b2@@good-02, 5@@e2@@write-01, 27@@n@@then, 32@@p@@particular, 37@@s@@need-01, 28@@s@@assign-01, 1@@s@@infer-01, 33@@p2@@person, 4@@s@@have-03, 2@@d@@you, 16@@s@@instead-of-91]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	17	MOD_s	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	4	MOD_mod	true
4	product	_	product	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	I'm	i'm	i'm	PRP	O	_	_NAME_	_	0	IGNORE	true
7	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	show	_	show	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	Nourished	_name_	Nourished	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	Shawnta_Curl_Defining	_name_	defining	NN	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
18	Soft	soft	Soft	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	Hold	hold	Hold	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op2	true
20	Styler,	styler,	styler,	CD	O	_	and	_	0	IGNORE	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	enriched	_	enrich	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	sesame	_	sesame	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	seed	_	seed	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
29	rose	_	rise	VBD	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op2	true
30	essence.	_	essence.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@p@@guy, 3@@o@@ordinal-entity, 19@@d@@Hold-01, 28@@a@@and, 4@@d@@product, 10@@d@@you, 18@@s@@Soft-02, 1@@s@@cause-01, 14@@s@@Nourished-01, 23@@s@@enrich-01, 25@@p@@sesame, 17@@a@@and, 27@@d@@oil, 3@@explicitanon0@@1, 9@@s@@show-01, 29@@d@@rise, 16@@n@@_NAME_, 2@@p@@this, 26@@p@@seed, 16@@p@@product]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	9	MOD_o	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
4	academic	_	academic	JJ	O	(d<root> / --LEX--)	academia	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	22	MOD_mod	true
6	professional	_	professional	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
7	background,	_	background,	NNS	O	_	and	_	0	IGNORE	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	22	APP_s	true
9	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op1	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	issues	_	issue	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
13	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
14	facing	_	face	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
15	Virginia	_name_	Virginia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
16	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	better	_	better	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	9	MOD_s	true
18	than	_	than	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	more	(mod())	22	MOD_mod	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	candidates,	_	candidates,	NNP	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	have-org-role-91	(mod())	14	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
23	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	am	_	be	VBP	O	_	person	_	0	IGNORE	true
25	offering	_	offer	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op2	true
26	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	27	MOD_s	true
27	solutions	_	solution	NNS	O	(d<root> / --LEX--)	solve-01	()	25	APP_o	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	31	MOD_s	true
30	be	_	be	VB	O	_	person	_	0	IGNORE	true
31	appreciated	_	appreciate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
32	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	31	MOD_mod	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	political	_	political	JJ	O	(d<root> / --LEX--)	politics	()	32	APP_op1	true
35	spectrum.	_	spectrum.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@d@@professional, 17@@b@@good-02, 13@@d@@challenge-01, 17@@m@@more, 14@@s@@face-01, 27@@d@@solve-01, 15@@c@@country, 8@@d@@i, 22@@a@@and, 18@@s@@more, 1@@s@@cause-01, 5@@a@@and, 16@@s@@much, 9@@s@@understand-01, 29@@s@@possible-01, 31@@s@@appreciate-01, 12@@a@@and, 32@@b@@across, 15@@n@@_NAME_, 21@@p@@have-org-role-91, 4@@d@@academia, 26@@s@@real-04, 11@@d@@issue-02, 34@@d@@politics, 20@@p@@other, 25@@s@@offer-01]
sentence=1	For	for	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	remainder	_	remainder	NN	O	(r<root> / --LEX--  :part-of (c4<poss>)  :duration-of (p2<mod>))	$LEMMA$	(mod(), poss())	9	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	year,	_	year,	NNS	O	_	and	_	0	IGNORE	true
7	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	8	MOD_s	true
8	stays	_	stay	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_poss	true
9	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	0	ROOT	true
10	permitted,	_	permitted,	NNP	O	_	and	_	0	IGNORE	true
11	which	_	which	WDT	O	_	i	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	interpreted	_	interpret	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	MOD_o	true
14	by	_	by	IN	O	_	event	_	0	IGNORE	true
15	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
16	authorities	_	authority	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	day	_name_	day	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
20	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o2	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	night.	_	night.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true

nodealignment=[20@@a@@or, 13@@b@@interpret-01, 3@@r@@remainder, 7@@s@@short-07, 9@@d@@person, 19@@d@@day, 16@@d@@authority, 22@@d@@night., 8@@d@@stay-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	live	_	live	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
4	an	_	an	DT	O	_	1	_	0	IGNORE	true
5	epistemic	_	epistemic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	environment	_	environment	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	heavily	_	heavily	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	heavy	(mod())	12	MOD_mod	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	deliberately	_	deliberately	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	deliberate	(mod())	12	MOD_mod	true
12	polluted	_	pollute	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
14	agents	_	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
16	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
17	mimicry	_	mimicry	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_o	true
19	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	means	_	means	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	of	_	of	IN	O	_	thing	_	0	IGNORE	true
25	inflating	_	inflate	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
26	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
27	pretense	_	pretense	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	to	_	to	IN	O	_	and	_	0	IGNORE	true
29	expertise.	_	expertise.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[27@@d@@pretense, 2@@s@@live-01, 18@@a@@and, 1@@d@@We, 16@@s@@use-01, 6@@b@@environment, 9@@t@@heavy, 17@@d@@mimicry, 14@@d@@agent, 19@@p@@other, 25@@s@@inflate-01, 5@@p@@epistemic, 11@@t@@deliberate, 20@@d@@method, 12@@s@@pollute-01]
sentence=1	Chao	_name_	Chao	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	possessed	_	possess	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
5	gift	_	gift	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	hearing	_	hear	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	5	MOD_mod	true
8	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	distinctions	_	distinction	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	distinguish-01	(s())	7	APP_s	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	pronunciation	_	pronunciation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
14	said	_	say	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	"legendary	_	"legendary	``	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	MOD_s	true
18	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
19	its	_	its	PRP$	O	_	he	_	0	IGNORE	true
20	acuity",	_	acuity",	NN	O	_	cause-01	_	0	IGNORE	true
21	enabling	_	enable	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
22	him	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	record	_	record	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	sounds	_	sound	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	dialects	_	dialect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
30	with	_	with	IN	O	_	-	_	0	IGNORE	true
31	a	_	a	DT	O	_	1	_	0	IGNORE	true
32	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	33	MOD_s	true
33	degree	_	degree	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
34	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
35	accuracy.	_	accuracy.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@s@@distinguish-01, 26@@s@@sound-01, 32@@s@@high-02, 29@@d@@dialect, 11@@d@@pronunciation, 4@@s@@natural-03, 24@@s@@record-01, 8@@s@@fine, 7@@i@@hear-01, 5@@d@@gift, 33@@s@@degree, 1@@n@@_NAME_, 14@@s@@say-01, 2@@s@@possess-01, 17@@s@@"legendary, 28@@p@@various, 1@@p@@person, 21@@s@@enable-01]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	14	MOD_s	true
2	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
3	“big	_	“big	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	project”	_	project”	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	-	(mod(), s())	14	MOD_mod	true
5	is	_	be	VBZ	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	14	MOD_mod	true
6	something	_	something	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	can’t	_	can’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	be	_	be	VB	O	_	person	_	0	IGNORE	true
10	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
11	in	_	in	IN	O	_	after	_	0	IGNORE	true
12	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	10	MOD_mod	true
13	sitting,	_	sitting,	NNPS	O	_	and	_	0	IGNORE	true
14	make	_	make	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	parts	_	part	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	accomplish	_	accomplish	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
26	today.	_	today.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@-, 6@@p@@something, 3@@d@@“big, 23@@d@@you, 5@@p@@thing, 14@@b@@make-01, 1@@s@@have-condition-91, 4@@o@@-, 19@@d@@part, 12@@explicitanon0@@1, 18@@p@@small, 2@@d@@your, 25@@s@@accomplish-01, 24@@s@@possible-01, 16@@s@@list-01, 10@@s@@do-02]
sentence=1	Padalecki	_name_	Padalecki	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	originally	_	originally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	original	(mod())	3	MOD_mod	true
3	auditioned	_	audition	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
4	for	_	for	IN	O	_	and	_	0	IGNORE	true
5	Welling's	_name_	Welling's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
6	role,	_	role,	NNP	O	(d<root> / --LEX--)	have-org-role-91	()	8	APP_s	true
7	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	0	ROOT	true
8	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-07	(s())	7	APP_o	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	up	_	up	RP	O	_	thing	_	0	IGNORE	true
11	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
12	order	_	order	NN	O	_	and	_	0	IGNORE	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	film	_	film	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
15	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	pilot	_	pilot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	titled	_	title	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
18	Young_MacGyver	_name_	MacGyver	NNP	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	17	APP_o	true
19	which	_	which	WDT	O	_	name	_	0	IGNORE	true
20	was	_	be	VBD	O	_	person	_	0	IGNORE	true
21	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	22	MOD_mod	true
22	picked	_	pick	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
23	up.	_	up.	RB	O	_	-	_	0	IGNORE	true
24	[8]	_	[8]	XX	O	_	-	_	0	IGNORE	true

nodealignment=[22@@s@@pick-01, 16@@d@@pilot, 7@@s@@have-concession-91, 5@@p@@person, 8@@s@@give-up-07, 17@@s@@title-01, 1@@p@@person, 5@@n@@_NAME_, 1@@n@@_NAME_, 2@@n@@original, 6@@d@@have-org-role-91, 18@@b@@broadcast-program, 18@@n4@@_NAME_, 3@@s@@audition-01, 21@@n@@ever, 14@@i@@film-01]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	hope	_	hope	NN	O	(d<root> / --LEX--)	$LEMMA$ful-03	()	22	APP_o	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	about—the	_	about—the	RB	O	_	_NAME_	_	0	IGNORE	true
6	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
9	hope—	_	hope—	ADD	O	_	mean-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	hope	_	hope	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
14	today,	_	today,	NNP	O	_	multi-sentence	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
17	hope,	_	hope,	NNP	O	_	multi-sentence	_	0	IGNORE	true
18	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
19	course,	_	course,	NNP	O	_	and	_	0	IGNORE	true
20	that	_	that	WDT	O	_	i	_	0	IGNORE	true
21	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	0	ROOT	true
22	tempered	_	temper	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
23	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
24	reality.	_	reality.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true

nodealignment=[24@@p@@_NAME_, 8@@s@@happy-01, 11@@s@@hope-01, 21@@d@@person, 12@@d@@we, 2@@d@@hopeful-03, 22@@s@@temper-01, 3@@d@@she, 6@@s@@strong-02, 13@@s@@feel-01, 4@@s@@speak-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	put	_	put	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	shoes	_	shoe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	that	_	that	WDT	O	_	have-03	_	0	IGNORE	true
7	were	_	be	VBD	O	_	person	_	0	IGNORE	true
8	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	made,	_	made,	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
10	on	_	on	IN	O	_	i	_	0	IGNORE	true
11	a	_	a	DT	O	_	h$LEMMA$ve-org-role-91	_	0	IGNORE	true
12	horse.	_	horse.	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_o2	true

nodealignment=[3@@b@@put-01, 9@@explicitanon0@@-, 1@@d@@We, 12@@d@@_NAME_, 8@@n@@already, 5@@d@@shoe, 2@@p@@just]
sentence=1	For	for	for	IN	O	_	include-91	_	0	IGNORE	true
2	example,	_	example,	NNP	O	_	and	_	0	IGNORE	true
3	the_Instruments_for_Research	_name_	Research	NNP	O	(l<root> / location  :name (n / --LEX--)  :location-of (m<mod>))	_NAME_	(mod())	8	MOD_mod	true
4	into	_	into	IN	O	_	person	_	0	IGNORE	true
5	Second	second	Second	NNP	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	6	MOD_mod	true
6	Languages	languages	Languages	NNPS	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	(IRIS)	(iris)	(iris)	ADD	O	_	mean-01	_	0	IGNORE	true
8	repository	_	repository	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
9	(http://www.irisdatabase.org)	_	(http://www.irisdatabase.org)	NNS	O	_	_NAME_	_	0	IGNORE	true
10	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
11	established	_	establish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
12	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
13	2011	_name_	2011	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	11	MOD_mod	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
15	holds,	_	holds,	NNS	O	_	and	_	0	IGNORE	true
16	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	writing,	_	writing,	NNP	O	_	-	_	0	IGNORE	true
21	over	_	over	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
22	3,800	_	3,800	CD	O	(d<root> / --LEX--)	_NUMBER_	()	21	APP_op1	true
23	materials	_	material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
26	be	_	be	VB	O	_	person	_	0	IGNORE	true
27	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
28	for	_	for	IN	O	_	thing	_	0	IGNORE	true
29	replication,	_	replication,	NNS	O	_	and	_	0	IGNORE	true
30	among	_	among	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	14	APP_op3	true
31	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
32	purposes,	_	purposes,	NNS	O	_	thing	_	0	IGNORE	true
33	in	_	in	IN	O	_	i	_	0	IGNORE	true
34	L2	l2	L2	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	35	MOD_mod	true
35	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	37	APP_s	true
36	(Marsden	(marsden	(Marsden	.	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	30	APP_op1	true
37	&	_	&	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	publication-91	(s(), o())	14	MOD_o	true
38	Mackey,	mackey,	mackey,	CD	O	_	publication-91	_	0	IGNORE	true
39	2014;	_	2014;	CD	O	_	and	_	0	IGNORE	true
40	Marsden,	marsden,	marsden,	CD	O	_	have-org-role-91	_	0	IGNORE	true
41	Mackey,	mackey,	mackey,	CD	O	_	describe-01	_	0	IGNORE	true
42	&	_	&	CC	O	_	and	_	14	IGNORE	true
43	Plonsky,	plonsky,	plonsky,	CD	O	_	and	_	0	IGNORE	true
44	2016).	_	2016).	CD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@l@@location, 11@@s@@establish-01, 23@@d@@material, 13@@explicitanon0@@_NUMBER_, 30@@o@@among, 5@@o@@ordinal-entity, 36@@n@@_NAME_, 25@@s@@possible-01, 37@@s@@publication-91, 22@@d@@_NUMBER_, 36@@p@@person, 13@@d@@date-entity, 8@@d@@repository, 31@@p@@other, 35@@d@@research-01, 27@@s@@use-01, 21@@s@@over, 34@@p@@_NAME_, 14@@a@@and, 6@@t@@Languages, 5@@explicitanon0@@2, 3@@n@@_NAME_]
sentence=1	Jerome	_name_	Jerome	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	initially	_	initially	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	initial	(mod())	3	MOD_mod	true
3	used	_	use	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	0	ROOT	true
4	classical	_	classical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	authors	_	author	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	3	APP_o	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	describe	_	describe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o2	true
8	Christian	_name_	christian	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	hell	_	hell	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	indicated	_	indicate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_s	true
15	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
17	classical	_	classical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
20	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
21	deep	_	deep	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
22	shame	_	shame	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_op2	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
25	associated	_	associate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	22	MOD_s	true
26	practices,	_	practices,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
27	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	pederasty	_	pederasty	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
30	which	_	which	WDT	O	_	name	_	0	IGNORE	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
33	in	_	in	IN	O	_	name	_	0	IGNORE	true
34	Rome.	_name_	Rome.	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	32	MOD_mod	true
35	[citation	_	[citation	XX	O	(n<root> / --LEX--  :time-of (p<mod>))	describe-01	(mod())	32	MOD_mod	true
36	needed]	_	needed]	NNP	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@n@@initial, 35@@n@@describe-01, 17@@p@@classical, 32@@s@@find-01, 25@@s@@relate-01, 5@@p2@@person, 19@@a@@and, 9@@d@@concept, 21@@s@@deep-02, 34@@c@@city, 4@@p@@classical, 34@@n@@_NAME_, 8@@n@@_NAME_, 7@@s@@describe-01, 29@@g@@pederasty, 8@@r@@religious-group, 22@@d@@shame-01, 12@@g@@hell, 5@@e2@@author-01, 3@@i@@use-01, 1@@p@@person, 1@@n@@_NAME_, 18@@d@@educate-01, 14@@s@@indicate-01]
sentence=1	Often,	_name_	often,	CD	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	entrepreneurial	_	entrepreneurial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	mindset	_	mindset	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
5	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	futuristic	_	futuristic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	that	_	that	WDT	O	_	and	_	0	IGNORE	true
9	shake	_	shake	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	7	MOD_s	true
10	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	normal,	_	normal,	NNP	O	_	mean-01	_	0	IGNORE	true
13	conventional	_	conventional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	processes	_	process	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	9	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	grounded	_	ground	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	14	MOD_s	true
18	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
19	experience	_	experience	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
20	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	time.	_	time.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@s@@ground-02, 7@@d@@idea, 9@@s@@shake-up-03, 14@@d@@process-02, 3@@p@@entrepreneurial, 5@@s@@include-01, 4@@d@@mindset, 6@@p@@futuristic, 13@@p@@conventional, 19@@d@@experience-01]
sentence=1	In	in	in	IN	O	_	person	_	0	IGNORE	true
2	2007,_Jared	_name_	Jared	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	served	_	serve	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	host	_	host	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	MTV's	_name_	mtv'	NNS	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
9	horror	_	horror	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	reality	_	reality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	series,	_	series,	NNP	O	_	mean-01	_	0	IGNORE	true
12	Room	room	Room	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	6	MOD_mod	true
13	401,	_	401,	CD	O	_	and	_	0	IGNORE	true
14	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	was	_	be	VBD	O	_	person	_	0	IGNORE	true
16	discontinued	_	discontinue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
18	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	eight	_	eight	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	8	(mod())	20	MOD_mod	true
20	episodes	_	episode	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
21	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	16	MOD_o	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	poor	_	poor	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
24	ratings.	_	ratings.	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
25	[11]	_	[11]	XX	O	_	and	_	0	IGNORE	true

nodealignment=[23@@p@@poor, 6@@d@@host-01, 2@@p@@person, 12@@p@@room, 8@@n@@_NAME_, 21@@s@@cause-01, 24@@d@@ratings.-01, 10@@p@@reality, 16@@s@@discontinue-01, 20@@d@@episode, 19@@explicitanon0@@8, 2@@n@@_NAME_, 3@@s@@serve-01, 18@@p@@only, 17@@w@@after, 9@@p@@horror]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	believe	_	believe	VBP	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
3	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
6	responsibility	_	responsibility	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	responsible-03	(o(s()))	2	APP_o	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	pass	_	pass	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-on-14	(o2(), s(), o())	6	APP_o	true
9	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
12	opportunities	_	opportunity	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
13	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	future	_	future	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	generations	_	generation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	were	_	be	VBD	O	_	person	_	0	IGNORE	true
18	promised	_	promise	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	15	MOD_s	true
19	to	_	to	IN	O	_	thing	_	0	IGNORE	true
20	us.	_	us.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[1@@d@@i, 6@@c@@responsible-03, 2@@w@@believe-01, 5@@d@@our, 14@@p@@future, 11@@s@@same-01, 12@@d@@opportunity, 8@@b@@pass-on-14, 18@@s@@promise-01, 15@@d@@generation]
sentence=1	Suppose	suppose	suppose	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	1	APP_o	true
4	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
5	extremely	_	extremely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	extreme	(mod())	6	MOD_mod	true
6	intelligent	_	intelligent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	ant—a	_	ant—a	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
8	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	3	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	comic	_	comic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	book	_	book	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	superhero	_	superhero	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
14	Ant-Man,	ant-man,	ant-man,	CD	O	_	_NAME_	_	0	IGNORE	true
15	perhaps—that	_	perhaps—that	NNP	O	(p<root> / person  :name (n / --LEX--))	-	()	18	APP_s	true
16	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
17	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	true
18	trained	_	train	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	1	APP_s	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	walk	_	walk	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_o	true
21	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	straight	_	straight	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	20	MOD_s	true
24	line.	_	line.	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true

nodealignment=[20@@s@@walk-01, 5@@s@@extreme, 24@@t@@line., 8@@s@@friend, 8@@h@@have-rel-role-91, 13@@d@@superhero, 6@@s@@intelligent-01, 15@@n@@-, 7@@p@@_NAME_, 11@@p@@comic, 15@@p@@person, 8@@p@@person, 18@@o@@train-01, 3@@s@@have-03, 1@@s@@suppose-01, 2@@d@@we, 12@@p@@book, 23@@s@@straight-04]
sentence=1	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	held	_	hold	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	ceremony	_	ceremony	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	commemorating	_	commemorate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	date	_	date	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	outside	_	outside	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	hangar,	_	hangar,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	4	MOD_s	true
12	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
13	Orbiter_Processing_Facility-1,	_name_	Facility-1,	NNP	O	_	_NAME_	_	0	IGNORE	true
14	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
15	Space_Shuttle	_name_	Shuttle	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
16	Atlantis,	atlantis,	atlantis,	NN	O	_	_NAME_	_	0	IGNORE	true
17	which	_	which	WDT	O	_	name	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	being	_	be	VBG	O	_	person	_	0	IGNORE	true
20	prepped	_	preppe	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
21	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	mission	_	mission	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
26	will	_	will	MD	O	_	mean-01	_	0	IGNORE	true
27	be	_	be	VB	O	_	mean-01	_	0	IGNORE	true
28	STS-135,	sts-135,	STS-135,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	will	_	will	MD	O	_	-1	_	0	IGNORE	true
31	be	_	be	VB	O	_	seem-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	-1	_	0	IGNORE	true
33	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	Space_Shuttle	_name_	Shuttle	NNP	O	(o<root> / ordinal-entity  :value (explicitanon0 / --LEX--)  :ord-of (d<mod>))	_NAME_	(mod())	24	MOD_mod	true
35	mission.	_	mission.	NN	O	_	another	_	0	IGNORE	true

nodealignment=[8@@b@@outside, 20@@s@@preppe-01, 34@@explicitanon0@@_NAME_, 5@@s@@commemorate-01, 4@@d@@ceremony, 2@@s@@hold-04, 15@@c@@company, 24@@d@@mission, 15@@n@@_NAME_, 1@@g@@government-organization, 1@@n@@_NAME_, 34@@o@@ordinal-entity, 7@@d@@date, 33@@p@@last, 23@@p@@final, 12@@s@@cause-01, 11@@s@@know-02]
sentence=1	Aside	aside	aside	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	from	_	from	IN	O	_	except-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	except-01	_	0	IGNORE	true
4	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
5	transportation	_	transportation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	transport-01	(mod())	6	MOD_mod	true
6	infrastructure	_	infrastructure	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
7	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	completed	_	complete	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
10	in	_	in	IN	O	_	after	_	0	IGNORE	true
11	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	for	_	for	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	2004	_name_	2004	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	15	MOD_mod	true
15	Olympics	_name_	Olympics	NNPS	O	(n3<root> / --LEX--  :name-of (g / game  :time-of (p4<mod>)))	_NAME_	(mod())	9	MOD_mod	true
16	(from	_	(from	NFP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	27	MOD_o	true
17	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
18	freeways	_	freeway	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	to	_	to	IN	O	_	and	_	0	IGNORE	true
20	light	_	light	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	MOD_s	true
21	rail	_	rail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
22	systems),	_	systems),	NNP	O	_	and	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	city's	_	city'	NNS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	26	APP_poss	true
25	historic	_	historic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	center	_	center	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	27	APP_s	true
27	underwent	_	undergo	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
28	serious	_	serious	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	APP_o	true
29	renovation.	_	renovation.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[21@@p@@rail, 9@@s@@complete-01, 18@@d@@freeway, 20@@s@@light, 6@@p@@infrastructure, 24@@n@@_NAME_, 26@@m@@center, 14@@explicitanon0@@_NUMBER_, 15@@g@@game, 25@@p@@historic, 14@@d@@date-entity, 5@@p@@transport-01, 27@@c@@undergo-01, 17@@s@@new-01, 24@@g@@government-organization, 4@@s@@excellent-02, 15@@n3@@_NAME_, 28@@s@@serious-02, 16@@s@@(from]
sentence=1	As	as	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	26	MOD_o	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	foam	_	foam	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	effect	_	effect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_s	true
7	at	_	at	IN	O	_	d$LEMMA$e-entity	_	0	IGNORE	true
8	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
9	wind	_	wind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	speed	_	speed	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	conditions	_	condition	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	(above	_	(above	-LRB-	O	_	mean-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
14	threshold	_	threshold	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
16	12	_	12	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
17	m/s)	_	m/s)	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	due	_	due	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	wave	_	wave	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	breaking,	_	breaking,	NNP	O	_	and	_	0	IGNORE	true
23	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
25	been	_	be	VBN	O	_	person	_	0	IGNORE	true
26	corrected	_	correct	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
27	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
28	numerous	_	numerous	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
29	models;	_	models;	NNP	O	_	and	_	0	IGNORE	true
30	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
31	example,	_	example,	NNS	O	_	mean-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
33	semi-empirical	_	semi-empirical	JJ	O	(n<root> / --LEX--  :name-of (o / organization  :source-of (r<mod>)))	_NAME_	(mod())	34	MOD_mod	true
34	models	_	model	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op1	true
35	[27,28]	_	[27,28]	XX	O	_	mean-01	_	0	IGNORE	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	APP_s	true
37	radiative	_	radiative	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
38	transfer	_	transfer	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	39	MOD_mod	true
39	equation	_	equation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
40	(RTE)	(rte)	(rte)	NN	O	_	thing	_	0	IGNORE	true
41	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
42	models	_	model	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
43	[29,30],	_	[29,30],	XX	O	_	thing	_	0	IGNORE	true
44	which	_	which	WDT	O	_	name	_	0	IGNORE	true
45	were	_	be	VBD	O	_	person	_	0	IGNORE	true
46	developed	_	develop	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
47	to	_	to	TO	O	_	thing	_	0	IGNORE	true
48	estimate	_	estimate	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	46	MOD_mod	true
49	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
50	foam	_	foam	NN	O	(d<root> / --LEX--)	$LEMMA$	()	51	APP_o	true
51	covered	_	cover	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	53	MOD_s	true
52	sea	_	sea	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	surface	_	surface	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_o	true
54	emissivity.	_	emissivity.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@b@@condition, 36@@a@@and, 38@@i@@transfer-01, 42@@d@@model, 33@@o@@organization, 51@@s@@cover-01, 33@@n@@_NAME_, 52@@p@@sea, 4@@d@@effect, 26@@s@@correct-01, 28@@explicitanon0@@numerous, 9@@p@@wind, 10@@p@@speed, 6@@s@@significant-02, 18@@s@@cause-01, 53@@d@@surface, 21@@d@@wave, 16@@explicitanon0@@_NUMBER_, 20@@s@@strong-02, 3@@p@@foam, 50@@d@@foam, 8@@s@@high-02, 48@@s@@estimate-01, 1@@s@@cause-01, 39@@p@@equation, 37@@d@@radiative, 46@@s@@develop-02, 14@@p@@threshold, 41@@s@@base-02, 34@@d@@model]
sentence=1	Afghanistan	_name_	Afghanistan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
2	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
5	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	14	APP_s	true
6	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
7	nations	_	nation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	covered	_	cover	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
9	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
10	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	12	APP_s	true
11	Trump's	trump's	Trump's	NNP	O	_	_NAME_	_	0	IGNORE	true
12	travel	_	travel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_s	true
13	ban,	_	ban,	NN	O	_	and	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
15	teams	_	team	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_dom	true
16	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	Sudan,	sudan,	sudan,	CD	O	_	$LEMMA$	_	0	IGNORE	true
18	Iran,	iran,	Iran,	NNP	O	_	and	_	0	IGNORE	true
19	Libya,	libya,	libya,	CD	O	_	and	_	0	IGNORE	true
20	and	_	and	CC	O	_	$LEMMA$	_	15	IGNORE	true
21	Yemen,	_name_	yemen,	CD	O	_	_NAME_	_	0	IGNORE	true
22	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
23	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
24	covered,	_	covered,	NNS	O	_	and	_	0	IGNORE	true
25	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
26	among	_	among	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
28	163	_	163	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
29	teams	_	team	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_o	true
30	in	_	in	IN	O	_	include-91	_	0	IGNORE	true
31	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
32	competition.	_	competition.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@-, 7@@d@@nation, 10@@p@@person, 1@@n@@_NAME_, 28@@explicitanon0@@_NUMBER_, 12@@s@@travel-01, 29@@r@@team, 1@@c@@country, 5@@s@@include-91, 10@@e@@president, 15@@d@@team, 8@@s@@cover-01, 14@@s@@contrast-01, 10@@h@@have-org-role-91]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	whore	_	whore	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	14	APP_s	true
4	prefers	_	prefer	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	APP_op1	true
5	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
6	submit	_	submit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	Devil,	_name_	devil,	NN	O	_	_NAME_	_	0	IGNORE	true
10	adjusts	_	adjust	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	situations,	_	situations,	NNS	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
15	proves	_	prove	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op3	true
16	everything,	_	everything,	NNS	O	_	thing	_	0	IGNORE	true
17	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	demanded	_	demand	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
20	of	_	of	IN	O	_	and	_	0	IGNORE	true
21	her.	_	her.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true

nodealignment=[4@@c@@prefer-01, 3@@s@@reason, 21@@p@@_NAME_, 2@@d@@whore, 6@@s@@submit-01, 19@@s@@demand-01, 10@@s@@adjust-01, 15@@s@@prove-01, 12@@d@@all, 14@@a@@and]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	concerns	_	concern	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
4	underpinning	_	underpin	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	alleged	_	allege	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	7	MOD_s	true
7	crisis	_	crisis	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
9	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	dimensions	_	dimension	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	relating	_	relate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	to:	_	to:	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	(a)	_	(a)	NNP	O	_	mean-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	(small)	_	(small)	HYPH	O	_	mean-01	_	0	IGNORE	true
16	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	APP_op1	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_mod	true
20	research;	_	research;	NNP	O	_	and	_	0	IGNORE	true
21	(b)	_	(b)	NFP	O	_	mean-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
23	(poor)	_	(poor)	JJ	O	_	mean-01	_	0	IGNORE	true
24	quality	_	quality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	28	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_poss	true
27	research;	_	research;	NNP	O	_	include-91	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	11	APP_o	true
29	(c)	_	(c)	-LRB-	O	_	mean-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
31	(lack	_	(lack	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op3	true
32	of)	_	of)	NN	O	_	-	_	0	IGNORE	true
33	reproducibility,	_	reproducibility,	NNS	O	_	_NAME_	_	0	IGNORE	true
34	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
35	refers	_	refer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
36	to	_	to	IN	O	_	mean-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
38	extent	_	extent	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	to	_	to	TO	O	_	thing	_	0	IGNORE	true
40	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
41	findings	_	finding	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	45	APP_s	true
42	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_o	true
43	(not)	_	(not)	RB	O	_	thing	_	0	IGNORE	true
44	be	_	be	VB	O	_	person	_	0	IGNORE	true
45	reproduced	_	reproduce	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	APP_s	true
46	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
47	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
48	attempts	_	attempt	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_o	true
49	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
50	have	_	have	VBP	O	_	person	_	0	IGNORE	true
51	been	_	be	VBN	O	_	person	_	0	IGNORE	true
52	undertaken.	_	undertaken.	ADD	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[42@@s@@possible-01, 4@@s@@underpin-01, 19@@d@@replication-01, 16@@explicitanon0@@amount, 24@@m@@quality, 2@@p@@severe, 45@@s@@reproduce-01, 7@@d@@crisis, 11@@s@@relate-01, 26@@d@@replication-01, 18@@s@@publish-01, 10@@d@@dimension, 28@@a@@and, 41@@d@@finding-01, 48@@s@@attempt-01, 35@@s@@refer-01, 41@@t@@thing, 38@@s@@extent, 3@@d@@concern-01, 9@@explicitanon0@@several, 47@@d@@replication-01, 6@@s@@allege-01, 31@@d@@(lack, 8@@s@@have-03]
sentence=1	Somehow	somehow	somehow	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	we’ve	_name_	we’ve	NNP	O	_	cause-01	_	0	IGNORE	true
3	weathered	_	weather	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
5	witnessed	_	witness	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_op2	true
6	a	_	a	DT	O	_	interrogative	_	0	IGNORE	true
7	nation	_	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	isn’t	_	isn’t	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	broken	_	break	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-18	(s())	7	MOD_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
12	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	11	MOD_s	true
13	unfinished	_	unfinished	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true

nodealignment=[11@@s@@contrast-01, 12@@s@@simple-02, 4@@a@@and, 9@@explicitanon0@@-, 5@@s@@witness-01, 3@@s@@weather-01, 7@@d@@nation, 10@@s@@break-18, 1@@t@@somehow, 13@@d@@unfinished]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	2	MOD_mod	true
6	claim,	_	claim,	NNS	O	_	and	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	show	_	show	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
9	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
10	Huh?	_name_	Huh?	NNP	O	_	_NAME_	_	0	IGNORE	true
11	meets	_	meet	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	criteria	_	criterion	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$FORM$	(poss())	11	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_poss	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
19	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	8	MOD_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	being	_	be	VBG	O	_	person	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	conventional	_	conventional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	lexical	_	lexical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	sign	_	sign	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
26	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
27	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	25	MOD_s	true
28	be	_	be	VB	O	_	person	_	0	IGNORE	true
29	learnt.	_	learnt.	NN	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@2, 16@@d@@word, 27@@s@@obligate-01, 7@@d@@we, 8@@c@@show-01, 25@@d@@sign, 5@@o@@ordinal-entity, 13@@m@@criteria, 19@@s@@mean-01, 23@@p@@conventional, 11@@s@@meet-01, 2@@s@@support-01, 24@@p@@lexical]
sentence=1	Countries	countries	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
2	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	colored	_	color	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
5	yellow	_	yellow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	are	_	be	VBP	O	_	free-04	_	0	IGNORE	true
7	monarchies	_	monarchy	NNS	O	(n<root> / --LEX--  :domain (a<dom>)  :location-of (l<mod>))	$LEMMA$	(dom(), mod())	0	ROOT	true
8	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	11	APP_s	true
11	play	_	play	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_mod	true
12	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$icipate-01	()	11	APP_o	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	governing.	_	governing.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@s@@play-01, 12@@p@@little, 10@@d@@person, 13@@d@@participate-01, 1@@d@@country, 5@@d@@yellow, 7@@n@@monarchy, 4@@s@@color-01]
sentence=1	Peace	peace	peace	NN	O	(d<root> / --LEX--)	$REPL$	()	14	APP_op1	true
2	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	14	APP_op2	true
3	said	_	say	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	be	_	be	VB	O	_	person	_	0	IGNORE	true
6	indivisible,	_	indivisible,	NNP	O	_	and	_	0	IGNORE	true
7	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	contrast-01	_	0	IGNORE	true
9	freedom,	_	freedom,	NNP	O	_	and	_	0	IGNORE	true
10	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	contrast-01	_	0	IGNORE	true
12	prosperity	_	prosperity	NN	O	(d<root> / --LEX--)	prosper-01	()	2	APP_s	true
13	now,	_	now,	NN	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
15	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	disaster	_	disaster	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op3	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	21	MOD_mod	true
21	world	_	world	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	27	MOD_s	true
24	no	_	no	RB	O	_	-	_	0	IGNORE	true
25	longer	_	longer	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	no-$LEMMA$	(mod())	27	MOD_mod	true
26	be	_	be	VB	O	_	person	_	0	IGNORE	true
27	split	_	split	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
28	into	_	into	IN	O	_	cause-01	_	0	IGNORE	true
29	isolated	_	isolate	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_o	true
30	fragments.	_	fragments.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@a@@and, 1@@d@@peace, 20@@explicitanon0@@1, 2@@s@@person, 17@@d@@disaster, 21@@b@@world, 12@@d@@prosper-01, 23@@s@@possible-01, 25@@n@@no-longer, 19@@p@@this, 3@@s@@say-01, 15@@p@@also, 29@@d@@isolate-01, 27@@s@@split-01]
sentence=1	Cyclone_Phailin	_name_	Phailin	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
2	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	3	MOD_s	true
3	winds	_	wind	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	that	_	that	WDT	O	_	name	_	0	IGNORE	true
5	have	_	have	VBP	O	_	person	_	0	IGNORE	true
6	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relative-position	(s(), o())	3	MOD_s	true
7	measured	_	measure	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
8	at	_	at	IN	O	_	foot	_	0	IGNORE	true
9	200	_	200	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
10	km	_	km	NNS	O	(d<root> / distance-quantity  :unit (m / --LEX--))	$LEMMA$	()	7	APP_o	true
11	/	_	/	SYM	O	_	and	_	0	IGNORE	true
12	h,	_	h,	NN	O	_	and	_	0	IGNORE	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	surges	_	surge	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	20	MOD_mod	true
16	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	land	_	land	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
18	will	_	will	MD	O	_	and	_	0	IGNORE	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	begin	_	begin	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	MOD_s	true
21	to	_	to	TO	O	_	and	_	0	IGNORE	true
22	lose	_	lose	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_o	true
23	strength?	_	strength?	NN	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[10@@m@@km, 6@@s@@relative-position, 1@@n@@_NAME_, 10@@d@@distance-quantity, 1@@p@@person, 17@@d@@land, 7@@s@@measure-01, 9@@explicitanon0@@_NUMBER_, 22@@s@@lose-02, 2@@s@@have-03, 3@@d@@wind, 20@@c@@begin-01, 15@@t@@surge-01]
sentence=1	Countries	countries	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	colored	_	color	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
5	blue	_	blue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
7	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	representative	_	representative	JJ	O	(d<root> / --LEX--)	represent-01	()	6	APP_o	true
11	democracy,	_	democracy,	NNS	O	_	and	_	0	IGNORE	true
12	although	_	although	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	6	MOD_s	true
13	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	17	APP_s	true
15	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	true
16	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	APP_s	true
18	as	_	as	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	19	MOD_mod	true
19	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	21	MOD_mod	true
21	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	as	_	as	IN	O	_	equal	_	0	IGNORE	true
23	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	do	_	do	VBP	O	_	person	_	0	IGNORE	true
25	in	_	in	IN	O	_	event	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	United	united	United	NNP	O	_	_NAME_	_	0	IGNORE	true
28	States.	states.	States.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@explicitanon0@@much, 12@@s@@have-concession-91, 17@@s@@have-03, 8@@p@@form, 14@@d@@person, 6@@s@@have-03, 15@@s@@possible-01, 18@@s@@equal, 4@@s@@color-01, 21@@d@@power, 1@@d@@country, 7@@p@@some, 16@@explicitanon0@@-, 5@@d@@blue, 10@@d@@represent-01, 20@@p@@politics]
sentence=1	Those	those	those	DT	O	_	that	_	0	IGNORE	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	were	_	be	VBD	O	_	person	_	0	IGNORE	true
4	tripped	_	trip	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	were	_	be	VBD	O	(d<root> / --LEX--)	person	()	7	APP_o	true
6	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	crushed	_	crush	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	by	_	by	IN	O	_	ordinal-entity	_	0	IGNORE	true
9	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
10	wave	_	wave	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	7	APP_s	true
11	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
12	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_s	true
13	behind	_	behind	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	them.	_	them.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@s@@crush-01, 5@@d@@person, 13@@b@@behind, 4@@s@@trip-01, 10@@s@@wave-04, 6@@n@@then, 12@@d@@person]

