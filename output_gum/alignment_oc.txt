sentence=1	Hamill's	hamill's	Hamill's	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
2	schedule	_	schedule	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
3	included	_	include	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	panel	_	panel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	with	_	with	IN	O	_	be-located-at-91	_	0	IGNORE	true
7	Kevin_Conroy,	_name_	Conroy,	NNP	O	_	_NAME_	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	voice	_	voice	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	Batman	_name_	Batman	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	Batman:_The_Animated_Series,	_name_	series,	CD	O	_	_NAME_	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	which	_	which	WDT	O	_	name	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Star	star	Star	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	Wars	wars	Wars	NNP	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
19	lead	_	lead	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	20	APP_s	true
20	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	APP_s	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	Joker	_name_	Joker	NNP	O	(d<root> / --LEX--)	_NAME_	()	20	APP_o	true
23	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[19@@s@@lead-02, 11@@n@@_NAME_, 1@@n@@_NAME_, 2@@d@@schedule, 3@@s@@include-01, 22@@d@@_NAME_, 9@@s@@voice-01, 18@@d@@_NAME_, 5@@d@@panel, 20@@s@@play-02, 17@@p@@Star]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	8	APP_s	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	2	APP_o	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	job,	_	job,	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	2	MOD_s	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	offered	_	offer	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
13	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
16	monetary	_	monetary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	money	(mod())	17	MOD_mod	true
17	burden	_	burden	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
18	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
20	back,	_	back,	NNP	O	_	cause-01	_	0	IGNORE	true
21	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
22	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	could	_	could	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	12	MOD_mod	true
25	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	APP_s	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	for	_	for	IN	O	_	thing	_	0	IGNORE	true
28	the	_	the	DT	O	_	thing	_	0	IGNORE	true
29	agreed	_	agree	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	amounts	_	amount	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
31	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	were	_	be	VBD	O	_	person	_	0	IGNORE	true
34	gonna	_	gonna	VB	O	_	thing	_	0	IGNORE	true
35	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	30	MOD_s	true
36	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@offer-01, 8@@s@@cause-01, 29@@s@@agree-01, 13@@p@@some, 12@@s@@take-01, 1@@d@@He, 24@@i@@possible-01, 7@@s@@and, 16@@p@@money, 5@@s@@do-02, 35@@s@@do-02, 2@@c@@want-01, 30@@d@@amount, 17@@d@@burden-01, 25@@s@@do-02]
sentence=1	Once	once	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	figured	_	figure	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-out-05	(mod(), s(), o())	9	MOD_mod	true
4	out	_	out	RP	O	_	thing	_	0	IGNORE	true
5	what	_	what	WP	O	_	thing	_	0	IGNORE	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	was,	_	was,	VBD	O	_	thing	_	0	IGNORE	true
8	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	manuscript	_	manuscript	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	email	_	email	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
15	tag,	_	tag,	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
18	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
19	challenging	_	challenging	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	challenge-01	(s())	14	MOD_s	true
20	and	_	and	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	9	MOD_s	true
21	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
22	consuming	_	consume	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
23	given	_	give	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
24	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
25	differing	_	differ	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
26	schedules	_	schedule	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
27	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
28	folks	_	folk	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	terms	_	term	NNS	O	_	$LEMMA$	_	0	IGNORE	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	travel,	_	travel,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	9	MOD_mod	true
34	field	_	field	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
35	work,	_	work,	CD	O	_	and	_	0	IGNORE	true
36	etc	_	etc	FW	O	(p<root> / --LEX--  :mod-of (s<mod>))	et-cetera	(mod())	29	MOD_mod	true
37	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@email-01, 2@@d@@we, 13@@p@@manuscript, 21@@d@@time, 28@@d@@folk, 11@@explicitanon0@@lot, 22@@s@@consume-01, 29@@s@@keep-01, 3@@t@@figure-out-05, 25@@s@@differ-01, 9@@s@@play-01, 26@@d@@schedule-01, 19@@s@@challenge-01, 17@@s@@possible-01, 23@@s@@give-01, 6@@d@@it, 34@@p@@field, 36@@p@@et-cetera, 20@@s@@and, 33@@p@@mean-01]
sentence=1	In	in	in	IN	O	_	after	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	past	_	past	JJ	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	8	MOD_mod	true
4	nine	_	nine	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	9	(mod())	3	MOD_mod	true
5	months,	_	months,	NNS	O	_	and	_	0	IGNORE	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
8	witnessed	_	witness	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	momentous	_	momentous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	changes	_	change	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Arab	_name_	arab	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true
14	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	nobody	_	nobody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	expected	_	expect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
18	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
19	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	met	_	meet	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-03	(mod(), s())	17	MOD_mod	true
21	one_year_ago	_name_	ago	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	20	MOD_mod	true
22	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[16@@d@@nobody, 10@@s@@change-01, 8@@s@@witness-01, 6@@d@@we, 13@@e@@ethnic-group, 3@@n@@now, 13@@n@@_NAME_, 14@@d@@world, 4@@explicitanon0@@9, 17@@s@@expect-01, 3@@b@@before, 20@@v@@meet-03, 21@@n@@_NAME_, 9@@p@@momentous]
sentence=1	So	so	so	CC	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	down	_	down	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
4	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	1	APP_s	true
5	basically	_	basically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	basic	(mod())	8	MOD_mod	true
6	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
9	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
11	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
13	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	14	MOD_s	true
14	keep	_	keep	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
15	in	_	in	IN	O	_	thing	_	0	IGNORE	true
16	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
17	room,	_	room,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
19	there's	_	there'	VBZ	O	_	-	_	0	IGNORE	true
20	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	enough	_	enough	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
23	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[14@@s@@keep-01, 5@@p@@basic, 20@@explicitanon0@@-, 8@@s@@keep-01, 7@@d@@i, 12@@explicitanon0@@-, 21@@p@@enough, 2@@b@@down, 18@@s@@cause-01, 9@@d@@everything, 22@@d@@space, 3@@d@@here, 1@@s@@cause-01, 4@@s@@be-located-at-91, 13@@s@@real-04]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	felt	_	feel	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	horrible	_	horrible	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	doing	_	do	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	3	MOD_o	true
5	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	eye	_	eye	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
10	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_o	true
13	in	_	in	RB	O	_	be-located-at-91	_	0	IGNORE	true
14	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	week,	_	week,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	under	_	under	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o2	true
18	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	night	_	night	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	was	_	be	VBD	O	_	person	_	0	IGNORE	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@d@@night, 15@@p@@last, 17@@o@@under, 2@@b@@feel-01, 18@@p@@whatever, 3@@d@@horrible, 7@@p@@that, 8@@p@@eye, 4@@b@@do-02, 11@@d@@he, 5@@d@@that, 9@@d@@dog, 14@@b@@here, 12@@s@@have-03, 1@@d@@i]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	experimental	_	experimental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	6	MOD_mod	true
4	setup,	_	setup,	NNS	O	_	and	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	attempted	_	attempt	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	closely	_	closely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	close-10	(s())	10	MOD_s	true
10	mimic	_	mimic	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
11	non-avian	_	non-avian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
12	theropod	_	theropod	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	tail	_	tail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	APP_o	true
14	morphology,	_	morphology,	NNP	O	_	and	_	0	IGNORE	true
15	in	_	in	IN	O	_	name	_	0	IGNORE	true
16	which	_	which	WDT	O	_	name	_	0	IGNORE	true
17	mass	_	mass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	distributed	_	distribute	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_mod	true
20	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	person	_	0	IGNORE	true
22	distally	_	distally	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	intellectual	(mod())	23	MOD_mod	true
23	tapering	_	tapering	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
24	tail	_	tail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[12@@p@@theropod, 13@@p@@tail, 9@@s@@close-10, 10@@s@@mimic-01, 6@@c@@attempt-01, 3@@p@@experimental-01, 5@@d@@we, 24@@d@@tail, 22@@p@@intellectual, 8@@s@@more, 23@@s@@tapering-01, 19@@s@@distribute-01, 17@@d@@mass, 11@@p@@_NAME_]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
2	also,	_	also,	NNS	O	_	and	_	0	IGNORE	true
3	I'm	i'm	i'm	PRP	O	_	_NAME_	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	proud	_	proud	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	pride-01	(o(s()))	1	APP_op1	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	say	_	say	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
8	that	_	that	IN	O	_	and	_	0	IGNORE	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
11	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
12	gone	_	go	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-back-19	(s())	7	APP_o	true
13	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	therapy,	_	therapy,	NNS	O	_	and	_	0	IGNORE	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	event	_	0	IGNORE	true
18	something	_	something	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	haven't	_	haven't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	MOD_s	true
23	since	_	since	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	—	_	—	:	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	1	MOD_mod	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	mean	_	mean	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
28	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	I	i	I	PRP	O	_	1	_	0	IGNORE	true
31	was	_	be	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	1	APP_s	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	therapy,	_	therapy,	.	O	_	$LEMMA$	_	0	IGNORE	true
34	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
35	I	i	I	PRP	O	_	age-01	_	0	IGNORE	true
36	was	_	be	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	age-01	(s())	1	APP_op2	true
37	like	_	like	UH	O	(s<root> / --LEX--  :ARG2 (g<s>))	resemble-01	(s())	31	APP_s	true
38	20	_	20	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	37	APP_s	true
39	.	_	.	.	O	_	year	_	0	IGNORE	true

nodealignment=[24@@explicitanon0@@-, 22@@s@@do-02, 12@@s@@go-back-19, 1@@a@@and, 11@@s@@actual-02, 7@@c@@say-01, 5@@c@@pride-01, 26@@s@@mean-01, 28@@p@@last, 4@@s@@very, 31@@s@@be-located-at-91, 21@@explicitanon0@@-, 38@@explicitanon0@@_NUMBER_, 36@@s@@age-01, 23@@n@@since, 34@@p@@almost, 37@@s@@resemble-01, 38@@t@@temporal-quantity]
sentence=1	The	the	the	DT	O	_	ballistic	_	0	IGNORE	true
2	Galileo	_name_	Galileo	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	and	_	and	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	Ulysses	_name_	Ulysses	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	spacecraft	_	spacecraft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	carried	_	carry	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	dust	_	dust	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	detectors	_	detector	NNS	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	$LEMMA$	(s())	6	APP_o	true
9	onboard	_	onboard	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	that	_	that	IN	O	_	expert-01	_	0	IGNORE	true
11	Eberhard_Gruen	_name_	Gruen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
13	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	colleagues	_	colleague	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
15	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
16	to	_	to	TO	O	_	person	_	0	IGNORE	true
17	first	_name_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	1	(mod())	18	MOD_mod	true
18	detect	_	detect	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	MOD_s	true
20	them	_	they	PRP	O	_	person	_	0	IGNORE	true
21	measure	_	measure	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op2	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	flux	_	flux	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	APP_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	interstellar	_	interstellar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	dust	_	dust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
28	streaming	_	stream	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
29	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	solar	_	solar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@s@@measure-01, 27@@d@@particle, 8@@t3@@thing, 17@@n@@1, 25@@p@@interstellar, 23@@s@@flux, 8@@t@@detector, 6@@s@@carry-01, 5@@d@@spacecraft, 2@@n@@_NAME_, 28@@s@@stream-01, 3@@p@@and, 4@@n@@_NAME_, 15@@s@@use-01, 14@@d@@colleague, 26@@p@@dust, 31@@p@@solar, 11@@n@@_NAME_, 11@@p@@person, 32@@d@@system, 12@@a@@and, 9@@b@@onboard, 7@@d@@dust, 18@@s@@detect-01, 19@@a@@and]
sentence=1	Islands	islands	island	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
2	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
3	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
4	archipelago	_	archipelago	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	listed	_	list	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
6	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
7	east	_	east	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	to	_	to	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	23	MOD_s	true
9	west	_	west	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	order;	_	order;	NNP	O	_	and	_	0	IGNORE	true
11	note	_	note	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	23	APP_o	true
12	that	_	that	IN	O	_	and	_	0	IGNORE	true
13	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
14	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
16	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	islands	_	island	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_s	true
19	islets	_	islet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
21	the	_	the	DT	O	_	and	_	0	IGNORE	true
22	area,	_name_	area,	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	18	MOD_mod	true
23	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
24	these	_	these	DT	O	_	this	_	0	IGNORE	true
25	are	_	be	VBP	O	_	person	_	0	IGNORE	true
26	the	_	the	DT	O	_	and	_	0	IGNORE	true
27	ones	_	one	NNS	O	_	$LEMMA$	_	0	IGNORE	true
28	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
29	ferry	_	ferry	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	traffic	_	traffic	NN	O	(i<root> / --LEX--  :prep-with-of (l<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	are	_	be	VBP	O	_	person	_	0	IGNORE	true
33	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	MOD_s	true
34	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
35	visit	_	visit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
36	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	39	MOD_mod	true
37	making	_	make	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
38	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	39	MOD_s	true
39	arrangements	_	arrangement	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	arrange-01	(mod())	35	MOD_mod	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@imperative, 19@@d@@islet, 23@@s@@contrast-01, 30@@i@@traffic, 38@@s@@special-02, 29@@p@@ferry, 16@@explicitanon0@@more, 7@@b@@east, 11@@y@@you, 17@@d@@island, 33@@s@@possible-01, 18@@a@@and, 39@@t@@arrange-01, 1@@d@@island, 15@@explicitanon0@@many, 8@@s@@and, 4@@b@@archipelago, 9@@d@@west, 36@@explicitanon0@@-, 11@@b@@note-01, 22@@b@@_NAME_, 35@@s@@visit-01, 5@@s@@list-01]
sentence=1	In	in	in	IN	O	_	name	_	0	IGNORE	true
2	Spanish	_name_	spanish	JJ	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	poetry,	_	poetry,	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	and	(mod())	16	MOD_mod	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	syntactic	_	syntactic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	grammar	(mod())	6	MOD_mod	true
6	configurations	_	configuration	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
7	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
9	enjambment	_	enjambment	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	takes	_	take	VBZ	O	_	$LEMMA$-01	_	0	IGNORE	true
11	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	16	MOD_o	true
13	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	16	MOD_s	true
14	described	_	describe	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
15	extensively,	_	extensively,	NNS	O	_	and	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
17	detailed	_	detailed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	18	MOD_s	true
18	studies	_	study	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
19	on	_	on	IN	O	_	and	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
22	of	_	of	IN	O	_	thing	_	0	IGNORE	true
23	enjambment	_	enjambment	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	individual	_	individual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	authors	_	author	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	21	APP_s	true
27	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	APP_op2	true
28	(see	_	(see	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	27	MOD_mod	true
29	Martínez_Cantón,	_name_	cantón,	CD	O	(explicitanon1<root> / --LEX--  :month-of (d<mod>))	_NAME_	(mod())	27	MOD_mod	true
30	2011	_	2011	CD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	27	MOD_mod	true
31	for	_	for	IN	O	_	and	_	0	IGNORE	true
32	an	_	an	DT	O	_	1	_	0	IGNORE	true
33	overview)	_	overview)	NN	O	_	and	_	0	IGNORE	true
34	including,	_	including,	NNP	O	_	include-91	_	0	IGNORE	true
35	among	_	among	IN	O	_	include-91	_	0	IGNORE	true
36	others	_	other	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
37	Quilis	_name_	Quilis	NNP	O	(d<root> / --LEX--)	_NAME_	()	50	APP_op1	true
38	(1964),	_	(1964),	NNP	O	_	hyperlink-91	_	0	IGNORE	true
39	Domínguez_Caparrós,	_name_	Caparrós,	NNP	O	(l<root> / --LEX--  :ARG3 (b<s>))	$LEMMA$	(s())	16	MOD_s	true
40	(2000),	_	(2000),	ADD	O	_	$LEMMA$	_	0	IGNORE	true
41	Paraíso,	paraíso,	paraíso,	NN	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	$LEMMA$	()	16	APP_op3	true
42	(2000),	_	(2000),	ADD	O	_	$LEMMA$	_	0	IGNORE	true
43	Spang	_name_	Spang	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	50	APP_op3	true
44	(1983)	_	(1983)	NNP	O	_	hyperlink-91	_	0	IGNORE	true
45	for	_	for	IN	O	_	and	_	0	IGNORE	true
46	a	_	a	DT	O	_	1	_	0	IGNORE	true
47	description	_	description	NN	O	(d<root> / --LEX--)	describe-01	()	12	APP_s	true
48	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
49	enjambment,	_name_	enjambment,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
50	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	27	APP_o	true
51	Alarcos	_name_	Alarcos	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	50	APP_op2	true
52	(1966),	_	(1966),	ADD	O	_	$LEMMA$	_	0	IGNORE	true
53	Senabre	_name_	Senabre	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	50	APP_op4	true
54	(1982),	_	(1982),	.	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op4	true
55	Luján	_name_	Luján	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
56	(2006),	_	(2006),	-LRB-	O	_	$LEMMA$	_	0	IGNORE	true
57	Martínez_Fernández	_name_	Fernández	NNP	O	_	_NAME_	_	16	IGNORE	true
58	(2010)	_	(2010)	NNP	O	_	hyperlink-91	_	0	IGNORE	true
59	for	_	for	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	hyperlink-91	(s(), o())	16	MOD_o	true
60	case-studies	_	case-studie	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	59	APP_s	true
61	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
62	a	_	a	DT	O	_	person	_	0	IGNORE	true
63	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	64	MOD_s	true
64	author	_	author	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	60	APP_s	true
65	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[50@@a@@and, 51@@p@@person, 27@@s@@exist-01, 43@@n@@_NAME_, 25@@p@@individual, 16@@a@@and, 29@@explicitanon1@@_NAME_, 47@@d@@describe-01, 41@@explicitanon0@@paraíso,, 55@@p@@Luján, 12@@s@@person, 21@@s@@use-01, 13@@s@@person, 6@@d@@configuration, 51@@n@@_NAME_, 43@@p@@person, 28@@p@@(see-01, 41@@u@@url-entity, 3@@explicitanon0@@and, 64@@p2@@person, 37@@d@@_NAME_, 9@@a@@enjambment, 60@@s@@_NAME_, 59@@s@@hyperlink-91, 26@@p2@@person, 2@@n@@_NAME_, 14@@s@@describe-01, 53@@n@@_NAME_, 63@@s@@single-02, 5@@p@@grammar, 30@@explicitanon0@@_NUMBER_, 53@@p@@person, 54@@d@@(1982),, 39@@l@@Caparrós,, 64@@e2@@author-01, 26@@e2@@author-01, 36@@p@@other, 17@@s@@detail-01, 2@@c@@country, 18@@s@@study-01]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	Olmec	_name_	Olmec	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
5	who	_	who	WP	O	_	name	_	0	IGNORE	true
6	worshipped	_	worship	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	rain	_	rain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
9	god,	_	god,	VB	O	_	mean-01	_	0	IGNORE	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	maize	_	maize	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
12	god,	_	god,	NN	O	_	mean-01	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	6	APP_o	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	feathered	_	feathered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	serpent	_	serpent	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op3	true
17	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	future	_	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	pantheons	_	pantheon	NNS	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	18	MOD_mod	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Aztecs	_name_	Aztecs	NNPS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_poss	true
26	(who	_	(who	-RRB-	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
27	called	_	call	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
28	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	Quetzalcoatl)	quetzalcoatl)	Quetzalcoatl)	NNP	O	_	person	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	27	APP_o	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	Maya	_name_	Maya	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	30	APP_op2	true
33	(to	_	(to	NFP	O	_	person	_	0	IGNORE	true
34	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
35	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
36	was	_	be	VBD	O	_	person	_	0	IGNORE	true
37	Kukulkan)	_name_	Kukulkan)	NNP	O	_	name	_	0	IGNORE	true
38	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@maize, 4@@e@@ethnic-group, 6@@s@@worship-01, 16@@d@@serpent, 22@@w@@pantheon, 32@@e@@ethnic-group, 13@@a@@and, 21@@n@@future, 4@@n@@_NAME_, 18@@p@@important, 32@@n@@_NAME_, 17@@s@@so, 27@@t@@call-01, 30@@a@@and, 25@@d@@_NAME_, 26@@explicitanon0@@(who, 8@@d@@rain, 15@@s@@feathered-01]
sentence=1	For	for	for	IN	O	_	say-01	_	0	IGNORE	true
2	optimal	_	optimal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	comparability,	_	comparability,	NNP	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	studied	_	study	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	conversational	_	conversational	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	environment	_	environment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
11	across	_	across	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
12	languages:	_	languages:	XX	O	_	and	_	0	IGNORE	true
13	that	_	that	DT	O	_	thing	_	0	IGNORE	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	other-initiated	_	other-initiated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	depend-01	(s())	16	MOD_s	true
16	repair	_	repair	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
17	(OIR),	(oir),	(OIR),	NFP	O	_	include-91	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	which	_	which	WDT	O	_	contrast-01	_	0	IGNORE	true
20	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	participant	_	participant	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	22	APP_s	true
22	produces	_	produce	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
23	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
24	turn	_	turn	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_o	true
25	at	_	at	IN	O	_	mean-01	_	0	IGNORE	true
26	talk,	_	talk,	NNS	O	_	mean-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
29	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	signals	_	signal	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
31	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	trouble	_	trouble	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
35	turn,	_	turn,	NNS	O	_	and	_	0	IGNORE	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
37	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	40	MOD_mod	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	first	_	first	JJ	O	(d<root> / --LEX--)	1	()	40	APP_s	true
40	produces	_	produce	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	36	APP_op2	true
41	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
42	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	turn	_	turn	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
44	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
45	aims	_	aim	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	43	MOD_s	true
46	to	_	to	TO	O	_	thing	_	0	IGNORE	true
47	solve	_	solve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	45	APP_o	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	trouble,	_	trouble,	NNS	O	_	-	_	0	IGNORE	true
50	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	47	MOD_mod	true
51	by	_	by	IN	O	_	resemble-01	_	0	IGNORE	true
52	means	_	mean	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
53	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
54	repetition	_	repetition	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
55	and/or	_	and/or	CC	O	(d<root> / --LEX--)	and-or	()	56	APP_s	true
56	modification	_	modification	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	modify-01	(s())	47	APP_o	true
57	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[56@@s@@modify-01, 4@@d@@we, 2@@p@@optimal, 11@@p@@across, 31@@p@@some, 36@@a@@and, 32@@d@@trouble, 42@@p@@next, 22@@t@@produce-01, 54@@p@@repetition, 21@@p2@@person, 37@@n@@final, 43@@d@@turn, 47@@s@@solve-01, 5@@s@@study-01, 8@@s@@same-01, 16@@p@@repair, 10@@d@@environment, 21@@e2@@participant, 29@@n@@then, 9@@p@@conversational, 40@@s@@produce-01, 15@@s@@depend-01, 39@@d@@1, 20@@explicitanon0@@one, 45@@c@@aim-01, 30@@t@@signal-01, 24@@d@@turn-01, 50@@p@@usual, 7@@p@@exact, 55@@d@@and-or, 28@@d@@other]
sentence=1	Although	although	although	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	have-concession-91	(s())	41	APP_op1	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	am	_	be	VBP	O	_	have-concession-91	_	0	IGNORE	true
4	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_s	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	being	_	be	VBG	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	22	APP_s	true
7	there	_	there	EX	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
8	would	_	would	MD	O	_	thing	_	0	IGNORE	true
9	enhance	_	enhance	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	22	APP_op1	true
10	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
11	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	understand-01	(s())	9	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
20	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	live,	_	live,	NNP	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	4	APP_o	true
23	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
24	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op2	true
25	me	_	I	PRP	O	_	i	_	0	IGNORE	true
26	formulate	_	formulate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
27	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
28	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
29	better	_	well	JJR	O	(s<root> / --LEX--  :ARG1 (p<s>))	good-02	(s())	30	MOD_s	true
30	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
31	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	anemones,	_	anemones,	NNP	O	_	_NAME_	_	0	IGNORE	true
34	ship	_	ship	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
36	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
37	expensive,	_	expensive,	NNP	O	_	mean-01	_	0	IGNORE	true
38	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	Antarctica,	_name_	antarctica,	CD	O	_	and	_	0	IGNORE	true
41	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
42	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
43	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
44	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
45	biologists	_	biologist	NNS	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
46	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
47	contribution	_	contribution	NN	O	(d<root> / --LEX--)	contribute-01	()	49	APP_o	true
48	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
49	predicated	_	predicate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	45	MOD_s	true
50	on	_	on	IN	O	_	mean-01	_	0	IGNORE	true
51	being	_	be	VBG	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
52	there,	_	there,	XX	O	_	and	_	0	IGNORE	true
53	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
54	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	41	APP_op2	true
55	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
56	priority	_	priority	NN	O	(d<root> / --LEX--)	prioritize-01	()	54	APP_s	true
57	to	_	to	TO	O	_	and	_	0	IGNORE	true
58	be	_	be	VB	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	41	APP_op3	true
59	there	_	there	RB	O	_	$LEMMA$	_	0	IGNORE	true
60	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[34@@a@@ship, 9@@b@@enhance-01, 58@@d@@be-located-at-91, 56@@d@@prioritize-01, 47@@d@@contribute-01, 54@@s@@recommend-01, 41@@a@@and, 26@@s@@formulate-01, 27@@s@@more, 24@@s@@help-01, 6@@d@@be-located-at-91, 30@@s@@question-01, 17@@d@@system, 15@@a@@and, 29@@s@@good-02, 11@@s@@understand-01, 14@@d@@animal, 7@@d@@there, 2@@d@@i, 49@@s@@predicate-01, 1@@s@@have-concession-91, 22@@a@@and, 38@@p@@especially, 35@@d@@time, 4@@s@@sure-02, 45@@r@@biologist]
sentence=1	Nevertheless,	nevertheless,	nevertheless,	CD	O	_	and	_	0	IGNORE	true
2	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	initial	_	initial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	efforts	_	effort	NNS	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	at	_	at	IN	O	_	thing	_	0	IGNORE	true
6	writing	_	write	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	fiction	_	fiction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	were	_	be	VBD	O	_	thing	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	he	_	0	IGNORE	true
11	form	_	form	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	short	_	short	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	11	MOD_s	true
15	story,	_	story,	NNS	O	_	mean-01	_	0	IGNORE	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	would	_	would	MD	O	_	person	_	0	IGNORE	true
22	remain	_	remain	VB	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	17	MOD_s	true
23	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@c@@effort-01, 3@@p@@initial, 23@@s@@true-01, 22@@f@@remain-01, 14@@s@@short-07, 11@@p@@form, 6@@s@@write-01, 17@@d@@form, 7@@d@@fiction]
sentence=1	His	his	he	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	initiation	_	initiation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	invite-01	(s(), o())	0	ROOT	true
3	took	_	take	VBD	O	_	cause-01	_	0	IGNORE	true
4	place	_	place	NN	O	_	person	_	0	IGNORE	true
5	on	_	on	IN	O	_	9	_	0	IGNORE	true
6	April_17,	_name_	17,	NNP	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	1	(mod())	2	MOD_mod	true
7	1789,	_	1789,	CD	O	_	and	_	0	IGNORE	true
8	at	_	at	IN	O	_	name	_	0	IGNORE	true
9	Holland_Lodge_No._8,	_name_	8,	CD	O	(d<root> / --LEX--)	_NAME_	()	2	APP_o	true
10	F&AM,	_name_	F&AM,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	the_Grand_Lodge	_name_	Lodge	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	16	APP_s	true
13	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	New_York_F&AM	_name_	F&AM	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
15	had	_	have	VBD	O	_	person	_	0	IGNORE	true
16	chartered	_	charter	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
17	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
18	1787	_name_	1787	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@p@@person, 18@@explicitanon0@@_NUMBER_, 16@@s@@charter-01, 9@@d@@_NAME_, 14@@n@@_NAME_, 12@@n@@_NAME_, 18@@d@@date-entity, 2@@s@@invite-01, 6@@explicitanon4@@1, 1@@d@@he]
sentence=1	And	and	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
2	—	_	—	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
4	uh,	_	uh,	JJ	O	_	and	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op3	true
6	know,	_	know,	.	O	_	and	_	0	IGNORE	true
7	I	i	i	NN	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	think,	_	think,	NNP	O	_	and	_	0	IGNORE	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_op1	true
11	that,	_	that,	NNP	O	_	cause-01	_	0	IGNORE	true
12	one	_	one	CD	O	_	1	_	0	IGNORE	true
13	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	5	MOD_s	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	reasons	_	reason	NNS	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	cause-01	(s())	13	APP_o	true
16	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
17	there's	_	there'	VBZ	O	_	cause-01	_	0	IGNORE	true
18	been	_	be	VBN	O	_	possible-01	_	0	IGNORE	true
19	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	focus	_	focus	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	because,	_	because,	NNP	O	_	expressive	_	0	IGNORE	true
23	oh,	_	oh,	UH	O	_	mean-01	_	0	IGNORE	true
24	everybody	_	everybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
25	accepted	_	accept	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	36	APP_op1	true
26	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
27	scientific	_	scientific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	science	(mod())	28	MOD_mod	true
28	method	_	method	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	32	MOD_s	true
32	tool	_	tool	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	25	APP_o2	true
33	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
34	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_poss	true
35	have,	_	have,	NNPS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	mean-01	(s(), o())	3	MOD_s	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	35	APP_o	true
37	was	_	be	VBD	O	_	person	_	0	IGNORE	true
38	kinda	_	kinda	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	39	MOD_mod	true
39	letting	_	let	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	APP_op2	true
40	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
41	scientific	_	scientific	JJ	O	_	$LEMMA$	_	0	IGNORE	true
42	method	_	method	NN	O	_	$LEMMA$	_	3	IGNORE	true
43	be	_	be	VB	O	_	person	_	0	IGNORE	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	—	_	—	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
46	be	_	be	VB	O	_	person	_	0	IGNORE	true
47	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
48	leader	_	leader	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	lead-02	(s())	45	MOD_s	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@b@@accept-01, 7@@d@@i, 34@@d@@we, 32@@m@@tool, 1@@d@@and, 5@@d@@you, 19@@explicitanon0@@-, 31@@m@@most, 3@@a@@and, 15@@t3@@thing, 27@@p@@science, 15@@t@@cause-01, 24@@d@@everybody, 20@@d@@focus-01, 38@@p@@kind-of, 36@@a@@and, 10@@s@@think-01, 31@@b2@@good-02, 28@@d@@method, 45@@p@@—, 13@@s@@include-91, 35@@s@@mean-01, 48@@s@@lead-02, 39@@s@@let-01]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	content	_	content	NN	O	(t2<root> / thing  :ARG1-of (d / --LEX--  :ARG0 (t<s>)))	contain-01	(s())	7	APP_s	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	5	MOD_mod	true
5	sessions	_	session	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
6	should	_	should	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	recommend-01	(o(s()))	0	ROOT	true
7	enable	_	enable	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
8	them	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	6	MOD_o	true
9	to	_	to	TO	O	_	and	_	0	IGNORE	true
10	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
11	services	_	service	NNS	O	(d<root> / --LEX--)	serve-01	()	7	APP_o	true
12	to	_	to	IN	O	_	person	_	0	IGNORE	true
13	researchers	_	researcher	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	research-01	()	14	APP_op2	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	MOD_op1	true
15	students,	_	students,	NNP	O	_	and	_	0	IGNORE	true
16	identify	_	identify	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_op1	true
17	remaining	_	remain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
18	gaps	_	gap	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_s	true
19	in	_	in	IN	O	_	thing	_	0	IGNORE	true
20	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
22	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	they	_	they	PRP	O	_	person	_	0	IGNORE	true
25	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	MOD_s	true
26	address	_	address	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
27	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
28	self-directed	_	self-directed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	control-01	(s())	29	MOD_s	true
29	learning	_	learning	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
31	(perhaps)	_	(perhaps)	NN	O	_	mean-01	_	0	IGNORE	true
32	to	_	to	TO	O	_	thing	_	0	IGNORE	true
33	automate	_	automate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_op2	true
34	their	_	they	PRP$	O	_	1	_	0	IGNORE	true
35	daily	_name_	daily	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	37	MOD_mod	true
36	library	_	library	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
37	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_s	true
38	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@s@@they, 13@@p2@@person, 21@@a@@or, 35@@d@@day, 33@@s@@automate-01, 35@@r@@rate-entity-91, 2@@d@@contain-01, 7@@s@@enable-01, 35@@t@@temporal-quantity, 6@@f@@recommend-01, 5@@d@@session, 13@@e2@@research-01, 4@@p@@this, 25@@s@@possible-01, 14@@a@@and, 11@@d@@serve-01, 17@@s@@remain-01, 2@@t2@@thing, 26@@s@@address-02, 16@@s@@identify-01, 20@@d@@knowledge, 37@@s@@work-01, 30@@a@@and, 22@@d@@skill, 18@@s@@gap, 29@@t@@learning-01, 28@@s@@control-01, 10@@s@@provide-01, 36@@d@@library]
sentence=1	Throughout	throughout	throughout	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	6	MOD_s	true
4	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
5	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	Watergate,	watergate,	Watergate,	NNP	O	_	_NAME_	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
11	felt	_	feel	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	it	_	it	PRP	O	_	i	_	0	IGNORE	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
15	duty	_	duty	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_o	true
16	to	_	to	IN	O	_	thing	_	0	IGNORE	true
17	persevere,	_	persevere,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
20	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	effort	_	effort	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_dom	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	complete	_	complete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	term	_	term	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	of	_	of	IN	O	_	and	_	0	IGNORE	true
28	office	_	office	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
30	which	_	which	WDT	O	_	i	_	0	IGNORE	true
31	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
32	elected	_	elect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_o	true
33	me	_	I	PRP	O	_	i	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@n@@period, 20@@p@@every, 28@@p@@office, 21@@s@@possible-01, 11@@s@@feel-01, 5@@p@@difficult, 26@@d@@term, 31@@d@@you, 9@@d@@i, 24@@s@@complete-01, 22@@s@@effort-01, 15@@r@@duty, 3@@s@@long-03, 32@@s@@elect-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
2	said,	_	said,	NNP	O	_	resemble-01	_	0	IGNORE	true
3	first	_name_	first	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	8	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	all,	_	all,	NN	O	_	and	_	0	IGNORE	true
6	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	believed	_	believe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
10	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	8	MOD_mod	true
11	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_s	true
13	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	8	MOD_o	true
14	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	35	APP_op1	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	those	_	those	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
18	were	_	be	VBD	O	_	person	_	0	IGNORE	true
19	willing	_	willing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	will-02	(s())	10	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	work,	_	work,	CD	O	_	and	_	0	IGNORE	true
24	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
25	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
26	waste	_	waste	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	41	MOD_o	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	idle	_	idle	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	29	MOD_s	true
29	men	_	man	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	26	APP_s	true
31	machines	_	machine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
32	could	_	could	MD	O	(d<root> / --LEX--)	possible-01	()	35	APP_op2	true
33	be	_	be	VB	O	_	person	_	0	IGNORE	true
34	avoided,	_	avoided,	NNP	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	8	APP_o	true
36	where	_	where	WRB	O	_	$LEMMA$	_	0	IGNORE	true
37	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	39	MOD_mod	true
38	economic	_	economic	JJ	O	(d<root> / --LEX--)	economy	()	39	APP_s	true
39	growth	_	growth	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	grow-01	(s())	41	APP_s	true
40	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_op3	true
41	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	APP_s	true
42	the	_	the	DT	O	_	he	_	0	IGNORE	true
43	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	44	MOD_s	true
44	jobs	_	job	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op1	true
45	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	41	APP_o	true
46	the	_	the	DT	O	_	person	_	0	IGNORE	true
47	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
48	markets	_	market	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_op2	true
49	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
50	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_poss	true
51	growing	_	grow	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	MOD_s	true
52	Nation	nation	Nation	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	53	APP_s	true
53	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	48	MOD_o	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@work-01, 51@@s@@grow-01, 35@@a@@and, 14@@s@@available-02, 26@@s@@waste-01, 3@@p@@1, 21@@s@@possible-01, 1@@d@@i, 37@@f2@@great, 53@@s@@need-01, 44@@d@@job, 30@@a@@and, 10@@n@@_NAME_, 28@@s@@idle, 52@@m@@Nation, 48@@d@@market, 43@@s@@new-01, 31@@d@@machine, 8@@s@@believe-01, 39@@s@@grow-01, 45@@a@@and, 10@@c@@country, 38@@d@@economy, 32@@d@@possible-01, 37@@m@@more, 19@@s@@will-02, 40@@s@@possible-01, 29@@d@@man, 41@@s@@provide-01, 13@@s@@person, 47@@s@@new-01, 50@@d@@our]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	7	MOD_s	true
2	these	_	these	DT	O	(d<root> / --LEX--)	this	()	7	APP_dom	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	wine	_	wine	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	MOD_s	true
11	enjoy	_	enjoy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
12	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
13	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
15	and	_	and	CC	O	_	$LEMMA$	_	11	IGNORE	true
16	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	with	_	with	IN	O	_	-	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	light	_	light	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	20	MOD_s	true
20	meals,	_	meals,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	MOD_s	true
21	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
22	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	are	_	be	VBP	O	_	and	_	0	IGNORE	true
24	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	open	_	open	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
27	now,	_	now,	NN	O	_	and	_	0	IGNORE	true
28	drink	_	drink	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
29	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	wines	_	wine	VBZ	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[30@@d@@wine, 16@@p@@also, 20@@s@@meals,, 2@@d@@this, 9@@d@@you, 29@@n@@now, 28@@s@@drink-01, 10@@s@@possible-01, 21@@s@@cause-01, 1@@s@@infer-01, 19@@s@@light-06, 11@@s@@enjoy-01, 5@@p@@type, 26@@s@@open-01, 24@@s@@make-01, 7@@r@@wine]
sentence=1	So,	so,	So,	NNS	O	_	say-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	APP_o	true
7	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
8	outro	_	outro	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	you've	_	you've	PRP	O	_	i	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	practicing	_	practice	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	?	_	?	.	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	3	MOD_mod	true

nodealignment=[6@@s@@have-03, 8@@d@@outro, 13@@explicitanon0@@interrogative, 12@@s@@practice-01, 3@@c@@say-01, 2@@d@@you]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	arrogant	_	arrogant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	9	MOD_mod	true
7	more	_	more	JJR	O	_	$LEMMA$	_	0	IGNORE	true
8	than	_	than	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	more-$LEMMA$	(mod())	9	MOD_mod	true
9	happy	_	happy	JJ	O	(c<root> / --LEX--  :ARG1 (w<o>)  :ARG0 (m<s>))	$LEMMA$-01	(s(s_UNIFY_o()))	1	APP_s	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	show	_	show	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	9	APP_s	true
12	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	cruel	_	cruel	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	side	_	side	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	11	APP_o	true
15	to	_	to	IN	O	_	thing	_	0	IGNORE	true
16	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	1	MOD_mod	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	they	_	they	PRP	O	_	person	_	0	IGNORE	true
19	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	20	MOD_mod	true
20	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@p@@arrogant, 1@@s@@contrast-01, 19@@explicitanon0@@-, 6@@p@@usual, 11@@l@@show-01, 20@@s@@like-01, 14@@m@@side, 16@@p@@that, 13@@p@@cruel, 9@@c@@happy-01, 8@@s@@more-than, 4@@d@@person]
sentence=1	So	so	so	RB	O	_	infer-01	_	0	IGNORE	true
2	maybe	_	maybe	RB	O	_	possible-01	_	0	IGNORE	true
3	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
4	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	20	APP_s	true
7	that	_	that	WDT	O	_	contrast-01	_	0	IGNORE	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
10	to	_	to	TO	O	_	event	_	0	IGNORE	true
11	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	9	MOD_o	true
12	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
13	you're	_	you're	PRP	O	_	or	_	0	IGNORE	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	going	_	go	VBG	O	(m<root> / --LEX--  :ARG1 (i<s>)  :ARG2 (y<o>)  :condition-of (k<mod>))	$LEMMA$-02	(mod(), s(), o())	20	MOD_mod	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	Portland	_name_	Portland	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	15	APP_o	true
18	for	_	for	IN	O	_	and	_	0	IGNORE	true
19	a_couple_of_days	_name_	day	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	15	MOD_mod	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	it's	_	it's	PRP$	O	_	contrast-01	_	0	IGNORE	true
22	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	23	MOD_mod	true
23	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
24	to	_	to	TO	O	_	thing	_	0	IGNORE	true
25	consider	_	consider	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
26	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
27	you're	_	you're	PRP	O	_	slash	_	0	IGNORE	true
28	going	_	go	VBG	O	(p<root> / --LEX--  :ARG0 (i<s>)  :condition-of (r<mod>))	$LEMMA$-02	(mod(), s())	25	MOD_mod	true
29	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	IN	O	_	and	_	0	IGNORE	true
31	Oregon	_name_	Oregon	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
32	for	_	for	IN	O	_	or	_	0	IGNORE	true
33	a	_	a	DT	O	_	1	_	0	IGNORE	true
34	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	bit	_	bit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	longer	_	long	JJR	O	(m2<root> / more  :degree-of (l / --LEX--  :ARG1 (m<s>)))	long-03	(s())	37	MOD_s	true
37	period	_	period	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[36@@m2@@more, 6@@r@@something, 11@@s@@do-02, 8@@d@@you, 37@@b@@period, 25@@s@@consider-02, 36@@l@@long-03, 5@@explicitanon0@@-, 17@@n@@_NAME_, 31@@s@@state, 19@@b@@_NAME_, 22@@p@@definite, 17@@c@@city, 34@@p@@little, 23@@d@@something, 9@@s@@want-01, 35@@p@@bit, 15@@m@@go-02, 14@@p@@just, 31@@n@@_NAME_, 28@@p@@go-02, 3@@d@@this, 20@@s@@contrast-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	what	_	what	WP	O	(p<root> / --LEX--  :mod-of (s<mod>))	amr-unknown	(mod())	5	MOD_mod	true
3	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	call	_	call	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	APP_op2	true
6	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
9	—	_	—	:	O	_	$LEMMA$-01	_	0	IGNORE	true
10	that	_	that	IN	O	_	and	_	0	IGNORE	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	MOD_s	true
13	splish	_	splish	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
14	splash	_	splash	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
15	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[13@@s@@splish-01, 6@@d@@something, 8@@d@@you, 14@@s@@splash-01, 1@@a@@and, 5@@b@@call-01, 4@@d@@we, 2@@p@@amr-unknown, 12@@s@@possible-01]
sentence=1	A	a	a	DT	O	_	person	_	0	IGNORE	true
2	democracy	_	democracy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	-	_	0	IGNORE	true
5	government	_	government	NN	O	(g<root> / government-organization  :domain (g3<dom>)  :ARG0-of (g2 / --LEX--))	govern-01	(dom())	0	ROOT	true
6	in	_	in	IN	O	_	government-organization	_	0	IGNORE	true
7	which	_	which	WDT	O	_	name	_	0	IGNORE	true
8	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	9	MOD_mod	true
9	power—influence	_	power—influence	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
10	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	institutions,	_	institutions,	NNP	O	_	mean-01	_	0	IGNORE	true
12	leaders,	_	leaders,	NNP	O	_	mean-01	_	0	IGNORE	true
13	and	_	and	CC	O	_	$LEMMA$	_	9	IGNORE	true
14	policies—rests	_	policies—rests	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	hands	_	hand	NNS	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	14	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	17	APP_poss	true
21	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[5@@g@@government-organization, 17@@h@@hand, 9@@d@@power—influence, 5@@g2@@govern-01, 8@@p@@politics, 14@@s@@policies—rests-01, 20@@d@@person, 2@@d@@democracy]
sentence=1	Late	late	late	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
2	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
3	his	_	he	PRP$	O	_	and	_	0	IGNORE	true
4	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	published	_	publish	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	Analytic_Syntax	_name_	Syntax	NNP	O	(p<root> / publication  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
8	(1937),	_	(1937),	ADD	O	_	and	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	which	_	which	WDT	O	_	i	_	0	IGNORE	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	presents	_	present	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
13	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
14	views	_	view	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	APP_o	true
15	on	_	on	IN	O	_	thing	_	0	IGNORE	true
16	syntactic	_	syntactic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	structure	_	structure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
19	an	_	an	DT	O	_	thing	_	0	IGNORE	true
20	idiosyncratic	_	idiosyncratic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	shorthand	_	shorthand	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	notation	_	notation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@w@@late, 22@@d@@notation, 16@@p@@syntactic, 4@@d@@life, 6@@s@@publish-01, 7@@n@@_NAME_, 12@@s@@present-01, 7@@p@@publication, 5@@d@@he, 14@@s@@view-02, 17@@d@@structure, 21@@p@@shorthand, 18@@l@@use-01, 20@@p@@idiosyncratic]
sentence=1	Santorum	_name_	Santorum	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	criticized	_	criticize	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	response	_	response	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	respond-01	(s(), o())	2	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	press	_	press	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	to	_	to	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	phenomenon	_	phenomenon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	2011	_name_	2011	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	14	MOD_mod	true
14	radio	_	radio	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
15	interview,	_	interview,	NNP	O	_	and	_	0	IGNORE	true
16	saying,	_	saying,	NNP	O	_	name	_	0	IGNORE	true
17	"It's	"it's	"it's	FW	O	_	-	_	0	IGNORE	true
18	offensive	_	offensive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	offend-01	(s())	33	APP_op1	true
19	beyond,	_	beyond,	NNS	O	_	oppose-01	_	0	IGNORE	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	know,	_	know,	NNP	O	_	mean-01	_	0	IGNORE	true
22	anything	_	anything	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
23	that	_	that	WDT	O	_	name	_	0	IGNORE	true
24	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	figure	_	figure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
27	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	37	APP_o	true
28	anybody	_	anybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
29	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
30	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	28	MOD_mod	true
31	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	33	MOD_s	true
32	tolerate,	_	tolerate,	NNP	O	_	recommend-01	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o2	true
34	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
35	mainstream	_	mainstream	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	36	MOD_s	true
36	media	_	media	NN	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_s	true
37	laughs	_	laugh	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	33	APP_op2	true
38	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
39	it.	_	it.	NN	O	_	_NAME_	_	0	IGNORE	true
40	"	_	"	''	O	_	and	_	0	IGNORE	true

nodealignment=[20@@d@@you, 27@@a@@or, 10@@d@@phenomenon, 24@@p@@any, 33@@a@@and, 18@@s@@offend-01, 30@@n@@_NAME_, 26@@d@@figure, 4@@s@@respond-01, 25@@s@@public-02, 7@@d@@press, 13@@d@@date-entity, 1@@p@@person, 28@@d@@anybody, 1@@n@@_NAME_, 31@@s@@recommend-01, 22@@p@@anything, 2@@b@@criticize-01, 37@@t@@laugh-01, 30@@c@@country, 13@@explicitanon2@@_NUMBER_, 36@@d@@media, 35@@s@@mainstream-02, 14@@b@@radio]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	followed	_	follow	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	by	_	by	IN	O	_	and	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	memoir	_	memoir	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	theory	_	theory	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	tides,	_	tides,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	to	_	to	IN	O	_	name	_	0	IGNORE	true
14	which,	_	which,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	3	MOD_mod	true
15	conjointly	_	conjointly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	objective	(mod())	14	MOD_mod	true
16	with	_	with	IN	O	_	cause-01	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	memoirs	_	memoir	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	6	MOD_o	true
19	by	_	by	IN	O	_	i	_	0	IGNORE	true
20	Euler	_name_	Euler	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	18	APP_s	true
22	Colin_Maclaurin,	_name_	Maclaurin,	NNP	O	_	_NAME_	_	0	IGNORE	true
23	a	_	a	DT	O	_	1	_	0	IGNORE	true
24	prize	_	prize	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_o	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	awarded	_	award	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_s	true
27	by	_	by	IN	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	name	_	0	IGNORE	true
29	French	_name_	french	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
30	Academy:	academy:	Academy:	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	33	MOD_mod	true
32	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	33	MOD_mod	true
33	memoirs	_	memoir	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
34	contain	_	contain	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_o2	true
35	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
36	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
37	was	_	be	VBD	O	_	person	_	0	IGNORE	true
38	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	34	MOD_s	true
39	on	_	on	IN	O	_	thing	_	0	IGNORE	true
40	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	subject	_	subject	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
42	between	_	between	IN	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	38	MOD_mod	true
43	the	_	the	DT	O	_	and	_	0	IGNORE	true
44	publication	_	publication	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	publish-01	(s())	42	APP_op1	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	Isaac_Newton's_Philosophiae_Naturalis_Principia_Mathematica	_name_	Mathematica	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	44	APP_s	true
47	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	investigations	_	investigation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	investigate-01	(s())	42	APP_op2	true
50	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
51	Pierre-Simon	pierre-simon	Pierre-Simon	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	49	MOD_mod	true
52	Laplace	laplace	Laplace	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	49	APP_s	true
53	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[20@@n@@_NAME_, 33@@d@@memoir, 24@@d@@prize-01, 29@@c@@country, 6@@d@@memoir, 1@@d@@this, 52@@n@@_NAME_, 9@@a@@theory, 32@@explicitanon0@@3, 26@@b@@award-01, 46@@o2@@organization, 14@@p@@thing, 49@@s@@investigate-01, 3@@s@@follow-01, 38@@s@@do-02, 34@@s@@contain-01, 51@@n@@_NAME_, 15@@t@@objective, 44@@s@@publish-01, 41@@d@@subject, 46@@n@@_NAME_, 40@@p@@this, 29@@n@@_NAME_, 35@@d@@all, 52@@p@@person, 31@@p@@this, 42@@d@@between, 18@@s@@memoir, 21@@o@@and, 20@@p@@person]
sentence=1	So	so	so	RB	O	_	cause-01	_	0	IGNORE	true
2	the_first_couple_days	_name_	day	NNS	O	(f<root> / festival  :name (n / --LEX--)  :time-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	Portland,	portland,	portland,	CD	O	_	_NAME_	_	0	IGNORE	true
7	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_o	true
9	hiking	_	hike	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
10	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
11	Forest_Park	_name_	Park	NNP	O	(p<root> / park  :name (n / --LEX--)  :location-of (b<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	11	MOD_o	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	transit	_	transit	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@public-02, 8@@s@@go-02, 4@@s@@be-located-at-91, 14@@s@@possible-01, 11@@n@@_NAME_, 9@@d@@hike-01, 2@@n@@_NAME_, 3@@d@@we, 15@@s@@get-05, 2@@f@@festival, 19@@t@@transit, 13@@d@@you, 22@@b@@city, 11@@p@@park]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	Erasmus	_name_	Erasmus	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	laid	_	lay	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_o	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	—	_	—	HYPH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
7	laid	_	lay	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_s	true
8	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	1	MOD_s	true
9	egg,	_	egg,	NNS	O	_	say-01	_	0	IGNORE	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	Luther	_name_	Luther	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
12	hatched	_	hatch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@hatch-01, 2@@p@@person, 11@@n@@_NAME_, 1@@s@@cause-01, 2@@n@@_NAME_, 11@@p@@person, 3@@s@@lay-01, 7@@d@@lay-01, 8@@s@@person, 6@@p@@—]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	exactly	_	exactly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	exact	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	approach	_	approach	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	New_Zealand	_name_	Zealand	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	taking,	_	taking,	NNP	O	_	thing	_	0	IGNORE	true
10	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
11	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	12	MOD_mod	true
12	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
13	tools:	_	tools:	NN	O	_	mean-01	_	0	IGNORE	true
14	border	_	border	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
15	controls;	_	controls;	NNP	O	_	mean-01	_	0	IGNORE	true
16	self-isolation;	_	self-isolation;	ADD	O	_	include-91	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
18	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
19	public	_	public	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$y	()	17	APP_op2	true
21	practices,	_	practices,	NNS	O	_	and	_	0	IGNORE	true
22	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
23	highlighting	_	highlight	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	importance	_	importance	NN	O	(r<root> / --LEX--  :domain (q<dom>))	important	(dom())	23	APP_s	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	basic	_	basic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	hygiene	_	hygiene	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_dom	true
29	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 7@@c@@country, 27@@p@@basic, 1@@d@@this, 25@@r@@important, 12@@p@@main, 5@@s@@approach-02, 23@@s@@highlight-01, 28@@d@@hygiene, 3@@p@@exact, 22@@s@@include-01, 18@@s@@good-02, 11@@explicitanon0@@3, 20@@d@@healthy, 17@@a@@and, 14@@d@@border, 19@@p@@public, 10@@s@@use-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
2	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	5	APP_dom	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	first	_name_	first	JJ	O	(o2<root> / ordinal-entity  :value (explicitanon3 / --LEX--)  :domain (p2<dom>))	1	(dom())	0	ROOT	true
6	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	deadly	_	deadly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	stampedes	_	stampede	NNS	O	(d<root> / --LEX--)	fight-01	()	2	APP_o	true
9	have	_	have	VBP	O	_	person	_	0	IGNORE	true
10	taken	_	take	VBN	O	_	cause-01	_	0	IGNORE	true
11	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	during	_	during	IN	O	_	some	_	0	IGNORE	true
13	the	_	the	DT	O	_	name	_	0	IGNORE	true
14	Hajj,	hajj,	Hajj,	NNP	O	_	_NAME_	_	0	IGNORE	true
15	with	_	with	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	deadliest	_	deadly	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	18	MOD_mod	true
18	stampede	_	stampede	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
19	during	_	during	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	12	_	0	IGNORE	true
21	1991	_name_	1991	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	18	MOD_mod	true
22	Hajj,	hajj,	Hajj,	NNP	O	_	_NAME_	_	0	IGNORE	true
23	in	_	in	IN	O	_	12	_	0	IGNORE	true
24	which	_	which	WDT	O	_	name	_	0	IGNORE	true
25	1,426	_	1,426	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	26	MOD_mod	true
26	pilgrims	_	pilgrim	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	28	APP_s	true
27	were	_	be	VBD	O	_	person	_	0	IGNORE	true
28	trampled	_	trample	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
29	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[8@@d@@fight-01, 21@@explicitanon0@@_NUMBER_, 28@@s@@trample-01, 26@@p2@@person, 26@@e2@@tour-01, 25@@explicitanon0@@_NUMBER_, 1@@p@@this, 2@@s@@person, 5@@explicitanon3@@1, 17@@t@@large, 5@@o2@@ordinal-entity, 7@@p@@deadly, 18@@d@@stampede, 21@@d@@date-entity, 17@@m@@most, 3@@explicitanon0@@-]
sentence=1	In	in	in	IN	O	_	after	_	0	IGNORE	true
2	the_fifth_century	_name_	century	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	7	MOD_mod	true
3	BC,	bc,	BC,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
4	Leucippus	_name_	Leucippus	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
6	Democritus	_name_	Democritus	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op2	true
7	argued	_	argue	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	matter	_	matter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	composed	_	compose	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	small,	_	small,	JJ	O	_	-	_	0	IGNORE	true
15	finite	_	finite	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	that	_	that	WDT	O	_	name	_	0	IGNORE	true
18	they	_	they	PRP	O	_	person	_	0	IGNORE	true
19	called	_	call	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
20	atomos,	_	atomos,	NNP	O	_	mean-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
22	term	_	term	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	19	APP_o	true
23	derived	_	derive	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
24	from	_	from	IN	O	_	mean-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	Greek	_name_	greek	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	27	MOD_mod	true
27	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
28	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
29	“indivisible.	_	“indivisible.	FW	O	_	mean-01	_	0	IGNORE	true
30	”	_	"	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[22@@d@@term-01, 12@@s@@compose-01, 5@@a@@and, 23@@s@@derive-01, 26@@c@@country, 10@@d@@matter, 16@@d@@particle, 2@@n@@_NAME_, 6@@n@@_NAME_, 6@@p@@person, 26@@n@@_NAME_, 4@@p@@person, 15@@p@@finite, 7@@s@@argue-01, 27@@d@@word, 4@@n@@_NAME_, 19@@s@@call-01, 9@@p@@all]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	6	MOD_s	true
2	yeah	_	yeah	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	that's	_	that's	PRP	O	_	now	_	0	IGNORE	true
4	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
6	it,	_	it,	NNS	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	multi-sentence	(op2(), op1())	0	ROOT	true
7	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_s	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
9	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	mind	_	mind	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_s	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
14	of	_	of	IN	O	_	person	_	0	IGNORE	true
15	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	11	MOD_s	true
16	random	_	random	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	vlog	_	vlog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I'm	i'm	I'm	LS	O	_	i	_	0	IGNORE	true
20	doing,	_	doing,	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	multi-sentence	(mod())	11	MOD_mod	true
21	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	APP_op2	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_o	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	show	_	show	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
27	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	guys	_	guy	NNS	O	_	$LEMMA$	_	0	IGNORE	true
29	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	31	MOD_mod	true
30	of	_	of	RB	O	_	thing	_	0	IGNORE	true
31	loosely	_	loosely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	26	MOD_s	true
32	like	_	like	UH	O	_	resemble-01	_	0	IGNORE	true
33	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
34	a_week	_name_	week	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	35	APP_s	true
35	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	6	APP_op1	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	31	MOD_op1	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	life	_	life	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	36	APP_op2	true
39	of	_	of	IN	O	_	person	_	0	IGNORE	true
40	a	_	a	DT	O	_	1	_	0	IGNORE	true
41	radiology	_	radiology	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	resident	_	resident	NN	O	(d<root> / --LEX--)	reside-01	()	38	APP_poss	true
43	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[1@@s@@contrast-01, 20@@explicitanon0@@multi-sentence, 31@@s@@loosely, 9@@p@@guy, 4@@s@@pretty, 12@@p@@this, 16@@p@@random, 17@@d@@vlog, 11@@s@@mind-01, 41@@p@@radiology, 42@@d@@reside-01, 2@@p@@yeah, 23@@p@@just, 5@@p@@much, 24@@s@@want-01, 6@@a@@multi-sentence, 21@@s@@contrast-01, 34@@n@@newspaper, 13@@p@@kind, 8@@d@@you, 7@@s@@hope-01, 29@@s@@kind-of, 35@@s@@person, 34@@n2@@_NAME_, 15@@s@@resemble-01, 36@@a@@and, 10@@explicitanon0@@-, 26@@d@@show-01, 38@@m@@life]
sentence=1	Also	also	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	while	_	while	IN	O	_	he	_	0	IGNORE	true
3	at	_	at	IN	O	_	name	_	0	IGNORE	true
4	Cambridge	_name_	Cambridge	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	6	MOD_mod	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	formed	_	form	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
7	lifelong	_	lifelong	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	friendships	_	friendship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	men	_	man	NNS	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
12	as	_	as	IN	O	_	1	_	0	IGNORE	true
13	John_Cam	_name_	Cam	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
14	Hobhouse,	hobhouse,	hobhouse,	NN	O	_	person	_	0	IGNORE	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	initiated	_	initiate	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
17	him	_	he	PRP	O	_	name	_	0	IGNORE	true
18	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Cambridge	_name_	Cambridge	NNP	O	_	_NAME_	_	0	IGNORE	true
21	Whig	whig	Whig	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_o	true
22	Club,	_name_	Club,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
23	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	endorsed	_	endorse	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
25	liberal	_	liberal	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	24	APP_o	true
26	politics,_[28]	_name_	[28]	NNP	O	_	have-org-role-91	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
28	Francis_Hodgson,	_name_	Hodgson,	NNP	O	_	include-91	_	0	IGNORE	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	Fellow	fellow	fellow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op2	true
31	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
32	King's	king's	king's	XX	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	30	MOD_mod	true
33	College,	college,	college,	CD	O	_	have-org-role-91	_	0	IGNORE	true
34	with	_	with	IN	O	_	person	_	0	IGNORE	true
35	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
36	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	corresponded	_	correspond	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	MOD_s	true
38	on	_	on	IN	O	_	and	_	0	IGNORE	true
39	literary	_	literary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
40	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
41	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	matters	_	matter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_o	true
43	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	37	MOD_mod	true
44	the	_	the	DT	O	_	person	_	0	IGNORE	true
45	end	_	end	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_op1	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
48	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@s@@correspond-01, 32@@n@@_NAME_, 25@@d@@liberal-02, 30@@d@@fellow, 6@@s@@form-02, 48@@d@@life, 42@@d@@matter, 39@@p@@literary, 27@@a@@and, 32@@c@@city, 4@@c@@city, 8@@d@@friendship, 13@@n@@_NAME_, 7@@p@@lifelong, 43@@w@@until, 4@@n@@_NAME_, 10@@y@@man, 1@@p@@also, 45@@s@@end-01, 21@@d@@_NAME_, 5@@d@@he, 24@@s@@endorse-01, 41@@p@@other, 16@@t@@initiate-01]
sentence=1	You,	you,	You,	NNP	O	_	mean-01	_	0	IGNORE	true
2	and	_	and	CC	O	_	$LEMMA$	_	6	IGNORE	true
3	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	alone,	_	alone,	NNS	O	_	thing	_	0	IGNORE	true
5	have	_	have	VBP	O	_	person	_	0	IGNORE	true
6	identified	_	identify	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
7	that	_	that	IN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	hinges	_	hinge	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_o	true
13	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@s@@hinge-02, 7@@d@@that, 10@@d@@all, 6@@s@@identify-01, 11@@p@@else]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
2	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	container	_	container	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	pureed	_	pureed	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	fruit	_	fruit	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
7	is	_	be	VBZ	O	_	equal-01	_	0	IGNORE	true
8	sufficient	_	sufficient	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	suffice-01	(s())	0	ROOT	true
9	for	_	for	IN	O	_	thing	_	0	IGNORE	true
10	flavoring	_	flavor	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	8	MOD_mod	true
11	(the	_	(the	JJ	O	_	$LEMMA$	_	0	IGNORE	true
12	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	containers	_	container	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	take	_	take	VBP	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	13	MOD_o	true
17	to	_	to	IN	O	_	and	_	0	IGNORE	true
18	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o2	true
19	in	_	in	IN	O	_	i	_	0	IGNORE	true
20	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
21	lunchboxes.	_	lunchboxes.	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
22	)	_	)	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@t@@take-01, 21@@b@@lunchboxes., 1@@explicitanon0@@1, 13@@b@@container, 8@@s@@suffice-01, 3@@d@@container, 6@@g@@fruit, 18@@d@@school, 10@@o@@flavor-01, 2@@p@@small, 5@@s@@pureed-01, 15@@d@@child, 12@@p@@little]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_op1	true
5	obtain	_	obtain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	early	_	early	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	passage	_	passage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	pass-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	an	_	an	DT	O	_	1	_	0	IGNORE	true
11	effective	_	effective	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-04	(s())	13	MOD_s	true
12	tax	_	tax	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_s	true
13	cut	_	cut	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	APP_s	true
14	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	the_House_of_Representatives	_name_	Representatives	NNPS	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	13	MOD_s	true
16	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
17	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	passed--and	_	passed--and	XX	O	_	_NAME_	_	0	IGNORE	true
19	which	_	which	WDT	O	_	contrast-01	_	0	IGNORE	true
20	the_Ways_and_Means_Committee,	_name_	committee,	CD	O	_	_NAME_	_	0	IGNORE	true
21	on	_	on	IN	O	_	name	_	0	IGNORE	true
22	which	_	which	WDT	O	_	name	_	0	IGNORE	true
23	Bill_Green	_name_	Green	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
24	serves,	_	serves,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
25	wrote--we	_name_	wrote--we	NNP	O	(d<root> / --LEX--)	_NAME_	()	1	APP_op3	true
26	shall	_	shall	MD	O	_	have-org-role-91	_	0	IGNORE	true
27	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
28	sailing	_	sail	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
29	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
31	next_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
33	the	_	the	DT	O	_	1	_	0	IGNORE	true
34	longest	_	long	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	long-03	(s())	38	MOD_s	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	1	MOD_mod	true
36	strongest	_	strong	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	strong-02	(s())	38	MOD_s	true
37	peacetime	_	peacetime	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	expansion	_	expansion	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	expand-01	(mod(), s())	28	MOD_mod	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
41	economy	_	economy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
42	in	_	in	IN	O	_	i	_	0	IGNORE	true
43	the	_	the	DT	O	_	thing	_	0	IGNORE	true
44	history	_	history	NN	O	(p<root> / --LEX--  :poss (h<poss>)  :time-of (a<mod>))	$LEMMA$	(mod(), poss())	38	MOD_mod	true
45	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
46	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	44	APP_poss	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@d@@_NAME_, 17@@n@@already, 30@@d@@country, 1@@a@@and, 46@@c@@country, 40@@d@@our, 13@@s@@cut-02, 23@@p@@person, 31@@n@@year, 11@@s@@effective-04, 37@@p@@peacetime, 15@@s@@_NAME_, 41@@d@@economy, 12@@d@@tax-01, 5@@s@@obtain-01, 34@@b2@@long-03, 28@@s@@sail-01, 34@@m@@most, 3@@d@@we, 36@@b2@@strong-02, 4@@s@@possible-01, 36@@m@@most, 35@@a@@and, 44@@p@@history, 46@@n@@_NAME_, 38@@i@@expand-01, 23@@n@@_NAME_, 29@@p@@this, 8@@s@@pass-01, 7@@n@@early]
sentence=1	"To	"to	"To	``	O	_	say-01	_	0	IGNORE	true
2	have	_	have	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-03	(o(s()))	21	APP_dom	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	of	_	of	IN	O	_	any	_	0	IGNORE	true
9	filth	_	filth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	to	_	to	TO	O	_	-	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	purveyed	_	purvey	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
13	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
16	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
17	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
20	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
21	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
22	that	_	that	WDT	O	_	and	_	0	IGNORE	true
23	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	say	_	say	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
25	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
27	handle	_	handle	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@d@@business, 7@@p@@type, 5@@s@@allow-01, 9@@d@@filth, 21@@r@@something, 24@@s@@say-01, 12@@s@@purvey-01, 27@@s@@handle-01, 16@@a@@or, 6@@p@@that, 26@@explicitanon0@@-, 15@@d@@website, 2@@c@@have-03, 19@@d@@system]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
7	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
10	with	_	with	IN	O	_	thing	_	0	IGNORE	true
11	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
12	pile,	_	pile,	NNP	O	_	and	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
16	these	_	these	DT	O	(d<root> / --LEX--)	this	()	21	APP_dom	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	the	_	the	DT	O	_	and	_	0	IGNORE	true
20	Dose_of_Colors	_name_	Colors	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	lipsticks	_	lipstick	VBZ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_s	true
22	that	_	that	WDT	O	_	name	_	0	IGNORE	true
23	I	i	I	PRP	O	_	1	_	0	IGNORE	true
24	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
25	I've	i've	I've	NNP	O	_	thing	_	0	IGNORE	true
26	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
27	for	_	for	IN	O	_	slash	_	0	IGNORE	true
28	at_least_over_two_years	_name_	year	NNS	O	(b<root> / --LEX--  :duration-of (e<mod>))	_NAME_	(mod())	26	MOD_mod	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@b@@_NAME_, 6@@s@@know-01, 16@@d@@this, 11@@d@@it, 4@@d@@i, 9@@s@@do-02, 24@@s@@know-01, 20@@p@@_NAME_, 15@@s@@think-01, 18@@p@@all, 13@@s@@contrast-01, 21@@r@@lipstick, 26@@s@@have-03, 5@@explicitanon0@@-, 1@@p@@this]
sentence=1	--	_	--	:	O	_	have-purpose-91	_	0	IGNORE	true
2	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	APP_s	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	chart	_	chart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	I'll	i'll	i'll	NN	O	_	i	_	0	IGNORE	true
9	go	_	go	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
10	through;	_	through;	NNP	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	MMPI	_name_	MMPI	NNP	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
13	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@i, 2@@s@@contrast-01, 9@@s@@go-02, 6@@d@@chart, 12@@t@@thing, 12@@n@@_NAME_, 4@@s@@have-03]
sentence=1	For	for	for	IN	O	_	event	_	0	IGNORE	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	part,	_	part,	NNPS	O	_	so	_	0	IGNORE	true
5	arrogant	_	arrogant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_s	true
7	see	_	see	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	7	APP_o	true
9	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	threats	_	threat	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$en-01	(s())	7	APP_o2	true
15	to	_	to	IN	O	_	thing	_	0	IGNORE	true
16	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
18	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@perfect-02, 8@@d@@person, 19@@d@@world, 14@@s@@threaten-01, 3@@p@@most, 18@@p@@little, 6@@d@@person, 5@@p@@arrogant, 11@@explicitanon0@@-, 7@@b@@see-01, 12@@s@@like-01]
sentence=1	Th-	th-	Th-	NNP	O	_	_NAME_	_	0	IGNORE	true
2	there's	_	there'	VBZ	O	_	mean-01	_	0	IGNORE	true
3	a	_	a	DT	O	_	mean-01	_	0	IGNORE	true
4	white	_	white	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
5	line,	_	line,	NN	O	_	product	_	0	IGNORE	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	go	_	go	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_op1	true
9	by,	_	by,	NNP	O	_	mean-01	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	horse	_	horse	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_op2	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	white	_	white	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	10	APP_op3	true
17	line,	_	line,	NNP	O	_	and	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	MOD_op1	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	clean	_	clean	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op3	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
23	with	_	with	IN	O	_	-	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	—	_	—	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	hoof	_	hoof	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	knife	_	knife	NN	O	(m<root> / --LEX--  :instrument-of (f<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
30	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[4@@s@@white-02, 18@@a@@and, 20@@d@@clean-01, 10@@a@@and, 8@@s@@go-02, 16@@d@@white-02, 7@@d@@you, 29@@m@@knife, 14@@p@@this, 28@@p@@hoof, 12@@d@@horse, 13@@s@@have-03, 15@@p@@little]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_o	true
2	am	_	be	VBP	O	_	cause-01	_	0	IGNORE	true
3	curious	_	curious	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_op1	true
4	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
6	population	_	population	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	structure	_	structure	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	"fields"	_	"fields"	NNP	O	_	include-91	_	0	IGNORE	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	anemones	_	anemone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
13	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	which	_	which	WDT	O	_	name	_	0	IGNORE	true
18	Edwardsiella	_name_	Edwardsiella	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	andrillae	_	andrillae	RB	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	belongs	_	belong	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
21	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	APP_op2	true
22	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
25	reproduce	_	reproduce	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	asexually,	_	asexually,	NNS	O	_	and	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
28	it's	_	it's	PRP$	O	_	multi-sentence	_	0	IGNORE	true
29	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op3	true
30	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
31	the	_	the	DT	O	_	thing	_	0	IGNORE	true
32	fields	_	field	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
33	are	_	be	VBP	O	_	person	_	0	IGNORE	true
34	"clones"	_	"clones"	NNP	O	_	thing	_	0	IGNORE	true
35	produced	_	produce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_s	true
36	asexually	_	asexually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	collective	(mod())	35	MOD_mod	true
37	rather	_	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	35	MOD_s	true
38	than	_	than	IN	O	_	instead-of-91	_	0	IGNORE	true
39	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
40	result	_	result	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	37	APP_o	true
41	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
42	sexual	_	sexual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	sex	(mod())	43	MOD_mod	true
43	reproduction	_	reproduction	NN	O	(d<root> / --LEX--)	reproduce-01	()	40	APP_s	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[36@@t@@collective, 42@@p@@sex, 22@@explicitanon0@@many, 3@@s@@curious-01, 27@@a@@and, 1@@d@@i, 32@@d@@field, 12@@d@@anemone, 7@@m@@structure, 23@@d@@specie, 19@@n@@_NAME_, 25@@s@@reproduce-01, 40@@s@@result-01, 18@@d@@Edwardsiella, 6@@p@@population, 21@@s@@include-01, 43@@d@@reproduce-01, 20@@s@@belong-01, 29@@s@@possible-01, 15@@d@@group, 35@@s@@produce-01, 37@@s@@instead-of-91]
sentence=1	Anything	anything	Anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
2	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
5	to	_	to	TO	O	_	event	_	0	IGNORE	true
6	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-off-06	(s())	1	MOD_s	true
7	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	8	APP_o	true
10	two_minutes	_name_	minute	NNS	O	(m2<root> / monetary-quantity  :quant (explicitanon0 / --LEX--))	5	()	9	APP_o	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	APP_s	true
13	-	_	-	:	O	_	and	_	0	IGNORE	true
14	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	8	APP_s	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@s@@do-02, 9@@s@@take-10, 10@@explicitanon0@@5, 8@@s@@contrast-01, 1@@d@@Anything, 6@@s@@put-off-06, 14@@d@@do-02, 10@@m2@@monetary-quantity, 4@@s@@want-01, 3@@d@@you]
sentence=1	From	from	from	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	first	_	first	JJ	O	(d<root> / --LEX--)	1	()	1	APP_op1	true
4	day,	_	day,	NN	O	_	and	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	have	_	have	VBP	O	_	person	_	0	IGNORE	true
7	emphasized	_	emphasize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	prevention,	_	prevention,	CD	O	_	mean-01	_	0	IGNORE	true
9	mediation	_	mediation	NN	O	(d<root> / --LEX--)	mediate-01	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	surge	_	surge	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
13	in	_	in	IN	O	_	elect-01	_	0	IGNORE	true
14	diplomacy	_	diplomacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	peace	_	peace	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
18	order	_	order	NN	O	_	and	_	0	IGNORE	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	address	_	address	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	7	MOD_mod	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	crises	_	crisis	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
24	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	face	_	face	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	MOD_o	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@address-02, 25@@s@@face-01, 10@@a@@and, 3@@d@@1, 14@@d@@diplomacy, 1@@w@@from, 7@@s@@emphasize-01, 5@@d@@i, 16@@o@@peace, 9@@d@@mediate-01, 12@@s@@surge-01, 24@@d@@we, 22@@d@@crisis]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	behind	_	behind	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
6	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	scenes	_	scene	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
10	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	13	MOD_mod	true
11	will	_	will	MD	O	_	-	_	0	IGNORE	true
12	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	13	MOD_mod	true
13	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
14	again	_	again	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	a	_	a	DT	O	_	-	_	0	IGNORE	true
17	video	_	video	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	down	_	down	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	23	APP_s	true
23	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
24	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	thing	_	0	IGNORE	true
27	filming	_	film	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
28	gear	_	gear	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
31	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	32	MOD_s	true
32	fit	_	fit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
33	anywhere	_	anywhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
34	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
35	in	_	in	IN	O	_	or	_	0	IGNORE	true
36	the	_	the	DT	O	_	instead-of-91	_	0	IGNORE	true
37	room:	_	room:	NNS	O	_	mean-01	_	0	IGNORE	true
38	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	39	MOD_mod	true
39	sets	_	set	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
40	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
41	tripods,	_	tripods,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
42	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
43	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	23	MOD_s	true
45	a	_	a	DT	O	_	1	_	0	IGNORE	true
46	c-stand	_	c-stand	NN	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	44	APP_o	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[46@@n@@_NAME_, 14@@explicitanon0@@-, 1@@a@@and, 5@@b@@behind, 28@@d@@gear, 12@@n@@ever, 34@@p@@else, 30@@explicitanon0@@-, 32@@s@@fit-01, 27@@s@@film-01, 20@@b@@down, 23@@s@@keep-01, 22@@d@@i, 2@@p@@then, 43@@p@@also, 13@@s@@see-01, 21@@b@@here, 44@@s@@have-03, 46@@t@@thing, 39@@p@@set, 38@@explicitanon0@@2, 4@@s@@little, 17@@b@@video, 7@@d@@scene, 31@@s@@real-04, 9@@d@@you, 24@@p@@all, 10@@p@@probable, 33@@d@@anywhere]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	theory,	_	theory,	NNS	O	(d<root> / --LEX--)	and	()	12	APP_s	true
3	along	_	along	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	with	_	with	IN	O	_	i	_	0	IGNORE	true
5	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	theories	_	theory	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	correspondence	_	correspondence	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	in	_	in	IN	O	_	thing	_	0	IGNORE	true
10	translating,	_	translating,	CD	O	_	thing	_	0	IGNORE	true
11	are	_	be	VBP	O	_	person	_	0	IGNORE	true
12	elaborated	_	elaborate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	essay	_	essay	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	Principles_of_Correspondence,	_name_	correspondence,	CD	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	12	MOD_mod	true
17	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
18	Nida	_name_	Nida	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	begins	_	begin	VBZ	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
20	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
21	asserting	_	assert	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	19	MOD_mod	true
22	that	_	that	DT	O	_	name	_	0	IGNORE	true
23	given	_	give	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
24	that	_	that	DT	O	_	mean-01	_	0	IGNORE	true
25	"no	_	"no	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	true
27	languages	_	language	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
28	are	_	be	VBP	O	_	person	_	0	IGNORE	true
29	identical,	_	identical,	NNPS	O	_	mean-01	_	0	IGNORE	true
30	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
31	in	_	in	IN	O	_	thing	_	0	IGNORE	true
32	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
33	meanings	_	meaning	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	mean-01	(s())	38	APP_op1	true
34	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	33	APP_s	true
35	to	_	to	IN	O	_	thing	_	0	IGNORE	true
36	corresponding	_	correspond	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	37	MOD_s	true
37	symbols	_	symbol	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
38	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
39	in	_	in	IN	O	_	thing	_	0	IGNORE	true
40	the	_	the	DT	O	_	thing	_	0	IGNORE	true
41	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	38	APP_op2	true
42	in	_	in	IN	O	_	i	_	0	IGNORE	true
43	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
44	symbols	_	symbol	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
45	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
46	arranged	_	arrange	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	APP_mod	true
47	in	_	in	IN	O	_	i	_	0	IGNORE	true
48	phrases	_	phrase	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_op2	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	46	MOD_op1	true
50	sentences,	_	sentences,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
51	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
52	stands	_	stand	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	21	APP_o	true
53	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
54	reason	_	reason	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	APP_o	true
55	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
56	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
57	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	52	APP_s	true
58	be	_	be	VB	O	_	person	_	0	IGNORE	true
59	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	61	MOD_mod	true
60	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	61	MOD_mod	true
61	correspondence	_	correspondence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	true
62	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
63	languages	_	language	NNS	O	_	$LEMMA$	_	0	IGNORE	true
64	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[46@@s@@arrange-01, 1@@p@@this, 61@@d@@correspondence, 18@@p@@person, 57@@s@@possible-01, 12@@s@@elaborate-01, 60@@p@@absolute, 5@@p@@other, 33@@s@@mean-01, 48@@d@@phrase, 38@@a@@or, 21@@l@@assert-01, 36@@s@@correspond-02, 18@@n@@_NAME_, 52@@o@@stand-02, 15@@b@@essay, 2@@d@@and, 34@@s@@give-01, 27@@d@@language, 19@@s@@begin-01, 41@@t@@way, 37@@d@@symbol, 6@@p@@theory, 54@@s@@reason-01, 8@@a@@correspondence, 26@@explicitanon0@@2, 16@@b@@_NAME_, 44@@d@@symbol, 59@@explicitanon0@@-, 49@@a@@and]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_s	true
3	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
4	searching	_	search	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
5	using	_	use	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	virtual	_	virtual	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	microscope,	_	microscope,	NNS	O	_	and	_	0	IGNORE	true
9	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
10	will	_	will	MD	O	_	and	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
14	for	_	for	IN	O	_	contrast-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
16	particles,	_	particles,	NNP	O	_	contrast-01	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	12	MOD_s	true
18	for	_	for	IN	O	_	contrast-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
20	tracks	_	track	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
23	particles	_	particle	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	make,	_	make,	NNP	O	_	and	_	0	IGNORE	true
25	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
26	are	_	be	VBP	O	_	1	_	0	IGNORE	true
27	much	_	much	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	larger	_	large	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	large	(mod())	20	MOD_mod	true
29	—	_	—	HYPH	O	_	more	_	0	IGNORE	true
30	several	_	several	JJ	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	33	MOD_mod	true
31	microns	_	micron	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
32	in	_	in	IN	O	_	between	_	0	IGNORE	true
33	diameter	_	diameter	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[28@@p@@large, 30@@s@@several, 31@@d@@micron, 4@@v@@search-01, 13@@explicitanon0@@-, 27@@s@@much, 9@@d@@they, 20@@d@@track, 17@@s@@contrast-01, 7@@d@@virtual, 5@@l@@use-01, 33@@p@@diameter, 2@@d@@person, 12@@s@@look-01]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	discussed	_	discuss	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	"dictionary	_	"dictionary	XX	O	(t<root> / treaty  :name (n / --LEX--))	$LEMMA$	()	2	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	future",	_	future",	NNS	O	_	_NAME_	_	0	IGNORE	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
10	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	linked	_	link	VBN	O	(b<root> / --LEX--  :ARG2 (s<o>)  :ARG1 (k2<s>)  :manner-of (k<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	17	MOD_s	true
17	sentences	_	sentence	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	from	_	from	IN	O	_	describe-01	_	0	IGNORE	true
19	corpora.	_	corpora.	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	_NAME_	(mod())	17	MOD_mod	true
20	[7]	_	[7]	XX	O	_	and	_	0	IGNORE	true
21	[9	_	[9	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NUMBER_	(mod())	17	MOD_mod	true
22	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@b@@link-01, 16@@s@@exemplify-01, 4@@t@@treaty, 17@@d@@sentence, 10@@p@@every, 11@@d@@word, 19@@g@@_NAME_, 2@@s@@discuss-01, 1@@d@@They, 4@@n@@"dictionary, 21@@p@@_NUMBER_]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	picked	_	pick	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-04	(s(), o())	0	ROOT	true
3	up	_	up	RP	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	pans	_	pan	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	she’d	_	she’d	NNP	O	_	and	_	0	IGNORE	true
9	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
11	potatoes	_	potato	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
13	maple	_	maple	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	glaze	_	glaze	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@d@@pan, 13@@g@@maple, 11@@d@@potato, 14@@d@@glaze, 2@@s@@pick-up-04, 1@@d@@She, 12@@a@@and, 9@@s@@make-01]
sentence=1	Sociologists	sociologists	sociologist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	attempting	_	attempt	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	MOD_s	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	engage	_	engage	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	4	APP_o	true
7	relativism,	_	relativism,	NNS	O	_	and	_	0	IGNORE	true
8	then,	_	then,	NNP	O	_	-	_	0	IGNORE	true
9	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
10	struggle	_	struggle	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_s	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	reconcile	_	reconcile	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_o	true
13	aspects	_	aspect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	own	_	own	JJ	O	_	person	_	0	IGNORE	true
17	culture	_	culture	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	with	_	with	IN	O	_	-	_	0	IGNORE	true
19	aspects	_	aspect	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	12	APP_o2	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_poss	true
23	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	they	_	they	PRP	O	_	person	_	0	IGNORE	true
25	are	_	be	VBP	O	_	person	_	0	IGNORE	true
26	studying	_	study	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
27	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@s@@engage-01, 2@@c@@attempt-01, 1@@d@@sociologist, 9@@s@@possible-01, 6@@d@@culture, 13@@d@@aspect, 26@@s@@study-01, 10@@c@@struggle-01, 19@@m@@aspect, 17@@p@@culture, 22@@d@@culture, 12@@b@@reconcile-01]
sentence=1	Markus_Landgraf	_name_	Landgraf	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
3	estimated	_	estimate	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	interstellar	_	interstellar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	dust	_	dust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	14	MOD_s	true
12	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
13	been	_	be	VBN	O	_	person	_	0	IGNORE	true
14	captured	_	capture	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	Stardust	_name_	Stardust	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	during	_	during	IN	O	_	i	_	0	IGNORE	true
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	19	MOD_mod	true
19	periods	_	period	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
22	"cruise"	_name_	"cruise"	NNP	O	_	and	_	0	IGNORE	true
23	phase	_	phase	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	14	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	between	_	0	IGNORE	true
26	interplanetary	_	interplanetary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	orbit	_	orbit	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	23	APP_poss	true
28	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
29	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	spacecraft	_	spacecraft	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	was	_	be	VBD	O	_	person	_	0	IGNORE	true
33	moving	_	move	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_mod	true
34	with	_	with	IN	O	_	-	_	0	IGNORE	true
35	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	wind	_	wind	NN	O	(y<root> / --LEX--  :accompanier-of (i<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
37	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[16@@d@@Stardust, 18@@explicitanon0@@2, 26@@p@@interplanetary, 27@@b@@orbit-01, 14@@s@@capture-01, 9@@d@@particle, 5@@explicitanon0@@number, 23@@h@@phase, 1@@p@@person, 11@@s@@recommend-01, 7@@p@@interstellar, 33@@s@@move-01, 3@@s@@estimate-01, 36@@y@@wind, 35@@p@@this, 31@@d@@spacecraft, 1@@n@@_NAME_, 19@@n@@period, 8@@p@@dust]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$REPL$	()	4	APP_s	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	drawn	_	draw	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
5	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
6	praise	_	praise	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op1	true
7	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
8	helping	_	help	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	enter	_	enter	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	11	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
15	criticism	_	criticism	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	criticize-01	(s())	14	APP_op2	true
16	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
18	travel	_	travel	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
19	ban,	_	ban,	NN	O	_	cause-01	_	0	IGNORE	true
20	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	does	_	do	VBZ	O	_	person	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	cover	_	cover	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
24	Afghanistan,	afghanistan,	afghanistan,	RB	O	_	and	_	0	IGNORE	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	4	APP_o2	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	atmosphere	_	atmosphere	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	hostility	_	hostility	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
31	toward	_	toward	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	Muslims	_name_	Muslims	NNPS	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	38	MOD_mod	true
33	that	_	that	IN	O	_	person	_	0	IGNORE	true
34	critics	_	critic	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$ize-01	()	35	APP_s	true
35	blame	_	blame	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	30	MOD_o	true
36	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
37	denying	_	deny	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_o2	true
38	them	_	they	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	4	MOD_o	true
39	entry	_	entry	NN	O	(d<root> / --LEX--)	enter-01	()	37	APP_s	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	the	_	the	DT	O	_	person	_	0	IGNORE	true
42	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	43	MOD_mod	true
43	place	_	place	NN	O	(t<root> / --LEX--  :prep-in-of (y<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@h@@have-org-role-91, 2@@p@@person, 34@@e2@@criticize-01, 13@@n@@_NAME_, 42@@o@@ordinal-entity, 30@@p@@hostility, 39@@d@@enter-01, 32@@r@@religious-group, 28@@d@@atmosphere, 2@@e@@president, 37@@s@@deny-01, 13@@c@@country, 38@@s@@person, 23@@s@@cover-01, 32@@n@@_NAME_, 43@@t@@place, 22@@explicitanon0@@-, 14@@a@@and, 4@@b@@draw-02, 18@@d@@travel-01, 11@@s@@enter-01, 10@@d@@girl, 8@@s@@help-01, 6@@s@@praise-01, 15@@s@@criticize-01, 42@@explicitanon0@@1, 25@@a@@and, 35@@b@@blame-01, 34@@p2@@person]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	characterized	_	characterize	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
4	conflict	_	conflict	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the_Church_of_Scientology	_name_	Scientology	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	anonymous	_	anonymous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	posters	_	poster	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$	(s())	4	APP_o	true
10	of	_	of	IN	O	_	person	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Cruise	_name_	Cruise	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	"another	_	"another	``	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	skirmish	_	skirmish	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_o2	true
18	in	_	in	IN	O	_	name	_	0	IGNORE	true
19	a	_	a	DT	O	_	name	_	0	IGNORE	true
20	war	_	war	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	17	MOD_mod	true
21	that	_	that	WDT	O	_	name	_	0	IGNORE	true
22	Scientology	_name_	Scientology	NNP	O	(d<root> / --LEX--)	_NAME_	()	25	APP_s	true
23	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
24	been	_	be	VBN	O	_	person	_	0	IGNORE	true
25	waging	_	wage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
26	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
27	almost	_	almost	RB	O	(a<root> / --LEX--  :op1 (t<op1>)  :duration-of (r<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
28	15	_	15	CD	O	(d<root> / --LEX--)	_NUMBER_	()	27	APP_op1	true
29	years,	_	years,	NNS	O	_	cause-01	_	0	IGNORE	true
30	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
31	the_early_days	_name_	day	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	_NAME_	(poss())	30	APP_op1	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	newsgroups	_	newsgroup	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_poss	true
34	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
35	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	alt.religion.scientology,	_	alt.religion.scientology,	NNP	O	_	_NAME_	_	0	IGNORE	true
37	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
38	posted	_	post	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
39	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	41	MOD_s	true
40	church	_	church	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	documents	_	document	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_o	true
42	in	_	in	IN	O	_	oppose-01	_	0	IGNORE	true
43	1994	_name_	1994	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	38	MOD_mod	true
44	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@c@@poster, 6@@o2@@organization, 17@@d@@skirmish-01, 41@@d@@document, 27@@a@@almost, 39@@s@@internal-02, 33@@d@@newsgroup, 43@@d@@date-entity, 30@@w@@since, 1@@d@@He, 43@@explicitanon0@@_NUMBER_, 2@@b@@characterize-01, 12@@n@@_NAME_, 16@@p@@small, 15@@p@@"another, 6@@n@@_NAME_, 4@@s@@conflict-01, 8@@p@@anonymous, 9@@t@@thing, 13@@d@@video, 38@@s@@post-01, 22@@d@@_NAME_, 20@@p@@war-01, 28@@d@@_NUMBER_, 31@@m@@_NAME_, 40@@p@@church, 25@@s@@wage-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	2004,	_name_	2004,	CD	O	_	and	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	appeared	_	appear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Mary-Kate	_name_	Mary-Kate	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
9	Ashley_Olsen	_name_	Olsen	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op2	true
10	comedy	_	comedy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	New_York_Minute	_name_	Minute	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
12	as	_	as	IN	O	_	and	_	0	IGNORE	true
13	Trey	_name_	Trey	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
14	Lipton,	lipton,	Lipton,	NFP	O	_	-	_	0	IGNORE	true
15	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	cute	_	cute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	boy	_	boy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	to	_	to	TO	O	_	name	_	0	IGNORE	true
19	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	he	_	0	IGNORE	true
21	Olsens'	_name_	olsens'	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	characters	_	character	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	attracted	_	attract	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
25	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[13@@n@@_NAME_, 22@@d@@character, 9@@n@@_NAME_, 9@@p@@person, 10@@p@@comedy, 11@@n@@_NAME_, 4@@s@@appear-01, 8@@a@@and, 7@@p@@person, 3@@d@@he, 7@@n@@_NAME_, 21@@n@@_NAME_, 16@@p@@cute, 17@@p@@boy, 24@@s@@attract-01]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	sand	_	sand	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	does	_	do	VBZ	O	_	-	_	0	IGNORE	true
4	distort	_	distort	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_s	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	sheet	_	sheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	tiny	_	tiny	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	bit,	_	bit,	NNS	O	_	and	_	0	IGNORE	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
11	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
15	distortion	_	distortion	NN	O	(d<root> / --LEX--)	lose-02	()	10	APP_o	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	22	APP_s	true
19	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
20	ant	_	ant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
21	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	MOD_s	true
22	measure	_	measure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@explicitanon0@@-, 18@@a@@or, 22@@s@@measure-01, 4@@s@@distort-01, 15@@d@@lose-02, 6@@d@@sheet, 2@@d@@sand, 17@@d@@we, 20@@d@@ant, 21@@s@@possible-01, 8@@p@@tiny, 10@@s@@contrast-01]
sentence=1	Um	um	um	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	if	_	if	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	want	_	want	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	tour	_	tour	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
10	of	_	of	IN	O	_	i	_	0	IGNORE	true
11	Pittock_Mansion,_I'd	_name_	i'd	PRP	O	_	_NAME_	_	0	IGNORE	true
12	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	recommend	_	recommend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
14	like	_	like	IN	O	_	$LEMMA$-01	_	0	IGNORE	true
15	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	trail	_	trail	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	up	_	up	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	13	MOD_o	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	20	APP_s	true
23	a	_	a	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
24	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	cool	_	cool	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	27	MOD_s	true
26	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	27	MOD_s	true
27	overlook	_	overlook	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	MOD_s	true
34	go	_	go	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
35	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[33@@s@@possible-01, 12@@p@@still, 1@@p@@um, 2@@s@@cause-01, 13@@s@@recommend-01, 26@@s@@resemble-01, 24@@s@@really, 35@@s@@see-01, 30@@d@@city, 22@@s@@have-03, 3@@d@@you, 20@@s@@cause-01, 4@@explicitanon0@@-, 9@@s@@tour-01, 19@@b@@there, 27@@s@@overlook-01, 17@@d@@trail, 5@@o@@want-01, 15@@s@@take-01, 25@@s@@cool-04, 18@@p@@up]
sentence=1	Doing	doing	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	APP_s	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
6	quickly	_	quickly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	quick-02	(s())	7	MOD_s	true
7	turn	_	turn	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	5	APP_s	true
8	an	_	an	DT	O	_	thing	_	0	IGNORE	true
9	otherwise	_	otherwise	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	flirtatious	_	flirtatious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	conversation	_	conversation	NN	O	(d<root> / --LEX--)	converse-01	()	7	APP_o	true
12	into	_	into	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
13	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	appear	_	appear	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	APP_o2	true
18	needy	_	needy	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
20	self-loathing	_	self-loathing	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	.	_	.	.	O	_	-	_	0	IGNORE	true

nodealignment=[19@@a@@and, 10@@p@@flirtatious, 12@@explicitanon0@@-, 17@@s@@appear-02, 7@@b@@turn-02, 1@@s@@do-02, 20@@d@@self-loathing, 11@@d@@converse-01, 3@@s@@too, 5@@s@@possible-01, 9@@p@@otherwise, 18@@d@@needy-02, 16@@d@@you, 6@@s@@quick-02, 2@@d@@this, 4@@o@@often]
sentence=1	From	from	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	discussions	_	discussion	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	discuss-01	(s(), o())	16	MOD_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
5	have	_	have	VBP	O	_	person	_	0	IGNORE	true
6	had	_	have	VBN	O	_	$LEMMA$-03	_	0	IGNORE	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	Congressional	_name_	congressional	JJ	O	(d<root> / --LEX--)	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
10	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	leaders,	_	leaders,	NNS	O	_	and	_	0	IGNORE	true
12	I	i	I	PRP	O	_	$REPL$	_	14	IGNORE	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	concluded	_	conclude	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
15	that	_	that	IN	O	_	thing	_	0	IGNORE	true
16	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	24	MOD_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Watergate	_name_	Watergate	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_s	true
20	matter,	_	matter,	NNP	O	_	-	_	0	IGNORE	true
21	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
22	might	_	may	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	14	APP_o	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	22	APP_o	true
25	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
26	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	APP_o	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Congress	_name_	Congress	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
30	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
32	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
33	consider	_	consider	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
34	necessary	_	necessary	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	need-01	(s())	26	MOD_s	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	back	_	back	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	APP_op1	true
37	the	_	the	DT	O	_	he	_	0	IGNORE	true
38	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	decisions	_	decision	NNS	O	(d<root> / --LEX--)	decide-01	()	36	APP_s	true
41	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	34	MOD_mod	true
42	carry	_	carry	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-03	(s())	41	APP_op2	true
43	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	duties	_	duty	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	42	APP_s	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_poss	true
49	in	_	in	IN	O	_	thing	_	0	IGNORE	true
50	the	_	the	DT	O	_	thing	_	0	IGNORE	true
51	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
52	the	_	the	DT	O	_	thing	_	0	IGNORE	true
53	interests	_	interest	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	58	APP_s	true
54	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
55	the	_	the	DT	O	_	person	_	0	IGNORE	true
56	Nation	_name_	Nation	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_poss	true
57	will	_	will	MD	O	_	person	_	0	IGNORE	true
58	require	_	require	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	51	MOD_o	true
59	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[29@@n@@_NAME_, 42@@s@@carry-out-03, 36@@s@@back-01, 14@@c@@conclude-01, 4@@d@@i, 22@@f@@possible-01, 29@@g@@government-organization, 56@@d@@Nation, 48@@d@@office, 8@@d@@_NAME_, 45@@m@@duty, 53@@m@@interest, 58@@s@@require-01, 41@@s@@and, 39@@p@@difficult, 23@@explicitanon0@@-, 34@@s@@need-01, 26@@s@@support-01, 16@@s@@cause-01, 24@@s@@have-03, 51@@t@@way, 19@@d@@_NAME_, 40@@d@@decide-01, 33@@s@@consider-01, 47@@p@@this, 9@@a@@and, 3@@s@@discuss-01, 10@@d@@other, 38@@s@@very]
sentence=1	In	in	in	IN	O	_	cause-01	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	sense,	_	sense,	JJ	O	_	and	_	0	IGNORE	true
4	fans	_	fan	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	8	APP_s	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	series	_	series	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	represent	_	represent	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	an	_	an	DT	O	_	person	_	0	IGNORE	true
10	emerging	_	emerge	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	model	_	model	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	14	APP_s	true
14	consumption	_	consumption	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	consume-01	(s())	11	APP_s	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	19	MOD_s	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	carefully	_	carefully	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	careful	(mod())	19	MOD_mod	true
19	explored	_	explore	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
20	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@s@@emerge-01, 18@@t@@careful, 13@@d@@culture, 19@@s@@explore-01, 4@@h@@have-rel-role-91, 11@@s@@model-01, 2@@p@@this, 8@@s@@represent-01, 4@@s@@fan, 7@@d@@series, 4@@p@@person, 16@@s@@recommend-01, 14@@s@@consume-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	—	_	—	:	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	9	MOD_mod	true
6	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
8	double	_	double	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	thing	_	thing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
10	that,	_	that,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	2	MOD_s	true
13	in	_	in	IN	O	(d<root> / --LEX--)	th$LEMMA$g	()	2	APP_o2	true
14	—	_	—	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	class,	_	class,	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
21	kinda	_	kinda	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	22	MOD_mod	true
22	review	_	review	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
23	for	_	for	IN	O	_	and	_	0	IGNORE	true
24	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@b@@—-01, 18@@s@@cause-01, 22@@d@@review-01, 12@@s@@have-03, 1@@d@@We, 21@@p@@kind-of, 16@@p@@another, 3@@d@@that, 8@@s@@double, 9@@r@@thing, 5@@s@@kind-of, 13@@d@@thing]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	6	APP_op1	true
3	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	out,	_	out,	RB	O	_	and	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
7	I'm	i'm	i'm	PRP	O	_	_NAME_	_	0	IGNORE	true
8	gonna	_	gonna	VBP	O	_	i	_	0	IGNORE	true
9	be	_	be	VB	O	_	person	_	0	IGNORE	true
10	showing	_	show	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_op2	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
12	guys	_	guy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	exactly	_	exactly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	exact	(mod())	11	MOD_mod	true
15	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
16	I'm	i'm	I'm	NNS	O	_	thing	_	0	IGNORE	true
17	going	_	go	VBG	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	6	APP_op4	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	be	_	be	VB	O	_	thing	_	0	IGNORE	true
20	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_mod	true
21	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
22	products,	_	products,	NNS	O	(d<root> / --LEX--)	thing	()	20	APP_s	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	6	APP_op3	true
24	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
25	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
26	going	_	go	VBG	O	_	and	_	0	IGNORE	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	be	_	be	VB	O	_	person	_	0	IGNORE	true
29	showing	_	show	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
30	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	guys	_	guy	NNS	O	_	$LEMMA$	_	0	IGNORE	true
32	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
33	extreme	_	extreme	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	moisture	_	moisture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
35	bomb	_	bomb	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	36	MOD_mod	true
36	routine	_	routine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
37	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	41	MOD_s	true
40	do,	_	do,	XX	O	_	expressive	_	0	IGNORE	true
41	um,	_	um,	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	6	MOD_s	true
42	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
43	wintertime	_name_	wintertime	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
44	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	29	MOD_o	true
45	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
46	is	_	be	VBZ	O	_	i	_	0	IGNORE	true
47	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-03	(s())	44	APP_s	true
48	a	_	a	DT	O	_	1	_	0	IGNORE	true
49	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
50	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
51	colder	_	cold	JJR	O	(d<root> / --LEX--)	small	()	47	APP_s	true
52	outside	_	outside	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	51	MOD_mod	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@p@@exact, 17@@t@@thing, 2@@s@@have-03, 11@@d@@you, 1@@d@@i, 33@@p@@extreme, 39@@s@@possible-01, 41@@s@@-, 49@@p@@little, 50@@s@@bit, 51@@d@@small, 10@@s@@show-01, 13@@n@@today, 6@@a@@and, 32@@p@@this, 43@@b@@wintertime, 20@@s@@use-01, 22@@d@@thing, 29@@s@@show-01, 47@@s@@get-03, 35@@i@@bomb-01, 44@@s@@cause-01, 25@@p@@also, 34@@d@@moisture, 3@@s@@new-01, 4@@d@@product, 12@@d@@guy, 23@@a@@and, 52@@b@@outside, 36@@d@@routine]
sentence=1	As	as	as	RB	O	_	cause-01	_	0	IGNORE	true
2	soon	_	soon	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	as-$LEMMA$-as	(op1(), mod())	11	MOD_mod	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	I	i	I	PRP	O	_	$REPL$	_	15	IGNORE	true
5	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-09	(s())	2	APP_op1	true
6	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
8	pill	_	pill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
10	period	_	period	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
12	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	regularly	_	regularly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	regular-02	(s())	11	MOD_s	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	started	_	start	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
18	tracking	_	track	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
19	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
20	periods	_	period	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	MOD_o	true
23	I	i	I	PRP	O	_	1	_	0	IGNORE	true
24	knew	_	know	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_s	true
25	the	_	the	DT	O	_	and	_	0	IGNORE	true
26	pregnancy	_	pregnancy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	APP_o	true
27	was	_	be	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	15	MOD_s	true
28	something	_	something	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	26	MOD_mod	true
31	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
32	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
33	want,	_	want,	NNP	O	_	and	_	0	IGNORE	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	15	APP_op3	true
35	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
36	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op2	true
37	that	_	that	IN	O	_	request-confirmation-91	_	0	IGNORE	true
38	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	helps	_	help	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	36	APP_s	true
40	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
41	you've	_	you've	PRP	O	_	or	_	0	IGNORE	true
42	been	_	be	VBN	O	_	person	_	0	IGNORE	true
43	tracking	_	track	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	39	MOD_mod	true
44	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
45	period	_	period	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
46	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
47	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
48	know	_	know	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
49	your	_	your	PRP$	O	_	cause-01	_	0	IGNORE	true
50	cycle	_	cycle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
51	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[39@@s@@help-01, 45@@d@@period, 14@@s@@regular-02, 8@@d@@pill, 21@@p@@just, 10@@d@@period, 34@@a@@and, 11@@s@@come-01, 12@@a@@back, 50@@d@@cycle, 18@@s@@track-01, 13@@s@@pretty, 5@@s@@come-out-09, 26@@s@@pregnancy, 15@@a@@and, 30@@n@@eventual, 22@@s@@cause-01, 43@@o@@track-01, 17@@s@@start-01, 31@@d@@we, 24@@d@@know-01, 48@@s@@know-01, 27@@s@@person, 2@@w@@as-soon-as, 20@@d@@period, 36@@s@@know-01]
sentence=1	A	a	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
5	notes	_	note	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	35	APP_o	true
8	had	_	have	VBD	O	_	person	_	0	IGNORE	true
9	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
10	from	_	from	IN	O	_	thing	_	0	IGNORE	true
11	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	meeting	_	meeting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	meet-03	(s())	9	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	MOD_op1	true
15	being	_	be	VBG	O	_	person	_	0	IGNORE	true
16	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	cause	_	cause	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op2	true
20	or	_	or	CC	O	(o<root> / --LEX--  :op1 (g<op1>)  :op2 (b<op2>)  :domain (a<dom>))	$LEMMA$	(op2(), op1(), dom())	0	ROOT	true
21	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
22	leading	_	lead	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	20	MOD_s	true
23	to	_	to	IN	O	_	thing	_	0	IGNORE	true
24	memory's	_	memory'	NNS	O	_	and	_	0	IGNORE	true
25	importance	_	importance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
30	sources,	_	sources,	NNP	O	_	and	_	0	IGNORE	true
31	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	20	APP_op1	true
32	—	_	—	:	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	20	MOD_s	true
33	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
34	essentially	_	essentially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	essential	(mod())	35	MOD_mod	true
35	changed	_	change	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	32	APP_o	true
36	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_dom	true
37	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
38	um	_	um	UH	O	_	$LEMMA$	_	0	IGNORE	true
39	"it's	_	"it's	XX	O	_	and	_	0	IGNORE	true
40	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
41	one	_	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	43	MOD_mod	true
42	persistent	_	persistent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	43	MOD_s	true
43	element	_	element	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	35	APP_o2	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	our	_	our	PRP$	O	_	$LEMMA$	_	20	IGNORE	true
46	existence	_	existence	NN	O	(d<root> / --LEX--)	exist-01	()	43	APP_poss	true
47	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
48	gives	_	give	VBZ	O	_	$LEMMA$-01	_	20	IGNORE	true
49	meaning	_	meaning	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	43	MOD_s	true
50	to	_	to	IN	O	_	mean-01	_	0	IGNORE	true
51	the	_	the	DT	O	_	thing	_	0	IGNORE	true
52	inheritance	_	inheritance	NN	O	(d<root> / --LEX--)	inherit-01	()	49	APP_o	true
53	of	_	of	IN	O	_	thing	_	0	IGNORE	true
54	memory"	_	memory"	ADD	O	_	thing	_	0	IGNORE	true
55	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@lot, 32@@c@@—-01, 36@@d@@it, 43@@h@@element, 7@@d@@i, 14@@a@@and, 52@@d@@inherit-01, 34@@p@@essential, 42@@s@@persistent-02, 46@@d@@exist-01, 5@@d@@note, 13@@s@@meet-03, 20@@o@@or, 12@@p@@last, 16@@s@@more, 19@@d@@cause-01, 22@@t@@lead-03, 31@@d@@i, 49@@s@@mean-01, 9@@s@@take-01, 11@@d@@our, 21@@s@@like-01, 27@@p@@each, 25@@d@@importance, 41@@p@@1, 35@@b@@change-01]
sentence=1	Malaysia	_name_	Malaysia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
3	Indonesia	_name_	Indonesia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_op2	true
4	have	_	have	VBP	O	_	person	_	0	IGNORE	true
5	maintained	_	maintain	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	APP_o	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	policy	_	policy	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
8	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
9	turning	_	turn	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-away-04	(s(), o())	7	APP_o	true
10	away	_	away	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	boats	_	boat	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	migrants	_	migrant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	migrate-01	()	11	APP_poss	true
14	which,	_name_	which,	VBD	O	_	cause-01	_	0	IGNORE	true
15	according	_	accord	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	0	ROOT	true
16	to	_	to	IN	O	_	include-91	_	0	IGNORE	true
17	AFP,	afp,	AFP,	NNP	O	_	_NAME_	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Untied	untied	Untied	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	20	MOD_mod	true
20	Nations	nations	Nations	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
22	United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	21	APP_op2	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	both	_	both	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
25	criticised	_	criticise	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>))	criticize-01	(s())	15	APP_s	true
26	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[15@@s@@say-01, 1@@n@@_NAME_, 19@@n@@_NAME_, 9@@s@@turn-away-04, 2@@a@@and, 11@@m@@boat, 19@@c@@country, 13@@e2@@migrate-01, 7@@c@@policy-01, 3@@n@@_NAME_, 22@@n@@_NAME_, 13@@p2@@person, 3@@c@@country, 21@@a@@and, 24@@p@@both, 20@@d@@Nations, 1@@c@@country, 22@@c@@country, 25@@s@@criticize-01, 5@@c@@maintain-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
2	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
3	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
4	two,	_	two,	NN	O	_	-	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
6	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	take	_	take	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
8	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
9	square	_	square	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	root	_	root	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	two,	_	two,	NN	O	_	include-91	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_op3	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	negative	_	negative	JJ	O	(d<root> / --LEX--)	$LEMMA$-05	()	15	APP_o	true
18	two,	_	two,	NN	O	_	mean-01	_	0	IGNORE	true
19	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
20	you	_	you	PRP	O	_	mean-01	_	0	IGNORE	true
21	take	_	take	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
22	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
23	square,	_	square,	NNS	O	(d<root> / --LEX--)	mean-01	()	5	APP_s	true
24	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	comes	_	come	VBZ	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
27	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
28	two	_	two	CD	O	(d<root> / --LEX--)	2	()	26	APP_o	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[26@@g@@come-01, 23@@d@@mean-01, 28@@d@@2, 9@@p@@square, 17@@d@@negative-05, 21@@s@@take-01, 1@@d@@You, 7@@s@@take-01, 2@@s@@get-01, 5@@a@@and, 13@@a@@and, 10@@d@@root, 15@@s@@get-01]
sentence=1	“The	“the	“The	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
2	internal	_	internal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	Sense	sense	Sense	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_dom	true
4	is,	_	is,	NNP	O	_	-	_	0	IGNORE	true
5	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
6	passive	_	passive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	Power	power	Power	NNP	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
8	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
9	receiving	_	receive	VBG	O	(r2<root> / --LEX--  :ARG2 (j<o>)  :ARG1 (m<s>)  :purpose-of (r<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
10	Ideas	ideas	Ideas	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Beauty	beauty	Beauty	NNP	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	from	_	from	IN	O	_	thing	_	0	IGNORE	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	Objects	objects	object	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	APP_o	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
18	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	Uniformity	uniformity	uniformity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_mod	true
21	amidst	_	amidst	IN	O	_	$LEMMA$	_	0	IGNORE	true
22	Variety”	variety”	Variety”	NNP	O	_	include-91	_	0	IGNORE	true
23	(§	_	(§	NNP	O	_	$LEMMA$	_	0	IGNORE	true
24	VI,	vi,	VI,	NNP	O	_	cite-01	_	0	IGNORE	true
25	67)	_	67)	CD	O	_	mean-01	_	0	IGNORE	true
26	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[20@@d@@uniformity, 15@@b@@object, 14@@p@@all, 2@@s@@internal-02, 1@@p@@_NAME_, 3@@d@@Sense-01, 6@@p@@passive, 12@@a@@Beauty, 9@@r2@@receive-01, 7@@r@@Power, 10@@d@@Ideas]
sentence=1	I'm	i'm	i'm	PRP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-located-at-91	(s())	5	APP_op1	true
2	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	now,	_	now,	NN	O	_	expressive	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	basically	_	basically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	basic	(mod())	9	MOD_mod	true
8	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	typed	_	type	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-03	(s())	5	APP_op2	true
10	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	calendar	_	calendar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
14	laying	_	lay	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
15	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	chapters	_	chapter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
21	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-17	(s())	23	MOD_s	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	review	_	review	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
24	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
25	Tuesday	_name_	Tuesday	NNP	O	(d<root> / date-entity  :weekday (w / --LEX--))	$REPL$	()	24	APP_op1	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@s@@i'm-located-at-91, 23@@s@@review-01, 25@@w@@_name_, 24@@w@@before, 25@@d@@date-entity, 13@@d@@calendar, 17@@d@@chapter, 5@@a@@and, 21@@s@@leave-17, 2@@p@@back, 8@@p@@just, 12@@p@@little, 14@@s@@lay-01, 3@@d@@home, 9@@s@@type-up-03, 7@@p@@basic]
sentence=1	Even	even	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	21	MOD_s	true
3	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	culturally	_	culturally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	culture	(mod())	5	MOD_mod	true
5	relativist	_	relativist	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	22	APP_s	true
7	from	_	from	IN	O	_	have-03	_	0	IGNORE	true
8	egalitarian	_	egalitarian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	societies—ones	_	societies—ones	NNP	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
12	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
13	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
14	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	15	MOD_mod	true
15	rights	_	right	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	right-05	(s())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
17	control	_	control	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op2	true
18	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
20	own	_	own	JJ	O	_	person	_	0	IGNORE	true
21	bodies—would	_	bodies—would	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	0	ROOT	true
22	question	_	question	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_s	true
23	whether	_	whether	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	21	MOD_mod	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	widespread	_	widespread	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	practice	_	practice	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	female	_	female	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	genital	_	genital	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	mutilation	_	mutilation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	decapitate-01	(s())	26	APP_s	true
31	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
32	countries	_	country	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
33	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
34	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
35	Ethiopia	_name_	Ethiopia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	36	APP_op1	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	32	MOD_mod	true
37	Sudan	_name_	Sudan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	36	APP_op2	true
38	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	22	APP_o	true
39	be	_	be	VB	O	_	person	_	0	IGNORE	true
40	accepted	_	accept	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	38	APP_s	true
41	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
42	a	_	a	DT	O	_	1	_	0	IGNORE	true
43	part	_	part	NN	O	_	$LEMMA$	_	0	IGNORE	true
44	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
45	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	46	MOD_mod	true
46	tradition	_	tradition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
47	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@s@@and, 3@@s@@most, 29@@d@@genital, 46@@d@@tradition, 37@@c@@country, 12@@d@@woman, 5@@p@@relativist, 37@@n@@_NAME_, 21@@s@@_NAME_, 38@@s@@recommend-01, 45@@p@@culture, 23@@explicitanon0@@interrogative, 36@@a@@and, 14@@p@@politics, 32@@b@@country, 28@@p@@female, 22@@s@@question-01, 30@@s@@decapitate-01, 35@@n@@_NAME_, 4@@t@@culture, 8@@p@@egalitarian, 6@@d@@person, 26@@s@@practice-01, 16@@a@@and, 35@@c@@country, 9@@s@@societies—ones, 40@@s@@accept-01, 15@@s@@right-05, 25@@p@@widespread, 17@@s@@control-01, 1@@p@@even]
sentence=1	[The	[the	[the	XX	O	_	name	_	0	IGNORE	true
2	santorum	_	santorum	NN	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	3	MOD_mod	true
3	neologism	_	neologism	VBD	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	is]	_	is]	CD	O	_	cause-01	_	0	IGNORE	true
5	offensive	_	offensive	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	offend-01	(s(), o())	20	APP_op1	true
6	beyond,	_	beyond,	NNS	O	_	oppose-01	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	know,	_	know,	NNP	O	_	mean-01	_	0	IGNORE	true
9	anything	_	anything	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
13	figure	_	figure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	or	_	or	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
15	anybody	_	anybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
16	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true
18	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	9	MOD_s	true
19	tolerate,	_	tolerate,	NNP	O	_	recommend-01	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	mainstream	_	mainstream	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	media	_	media	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	laughs	_	laugh	VBZ	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	20	APP_op2	true
25	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	it.	_	it.	NN	O	_	$LEMMA$	_	0	IGNORE	true
27	—	_	—	:	O	_	say-01	_	0	IGNORE	true
28	Rick	rick	Rick	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
29	Santoru	santoru	Santoru	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_o	true
30	m	_	m	XX	O	_	say-01	_	0	IGNORE	true

nodealignment=[20@@a@@and, 24@@t@@laugh-01, 9@@p@@anything, 23@@d@@media, 17@@n@@_NAME_, 17@@c@@country, 3@@d@@neologism, 14@@o@@or, 2@@n@@_NAME_, 29@@n@@_NAME_, 28@@n@@_NAME_, 29@@p@@person, 18@@s@@recommend-01, 11@@p@@any, 5@@s@@offend-01, 12@@s@@public-02, 7@@d@@you, 22@@s@@mainstream-02, 2@@p@@person, 15@@d@@anybody, 13@@d@@figure]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	baseline	_	baseline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	data	_	datum	NNS	O	(d<root> / --LEX--)	$FORM$	()	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
8	-	_	-	HYPH	O	_	and	_	0	IGNORE	true
9	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@p@@baseline, 3@@d@@data, 6@@s@@use-01, 5@@d@@i]
sentence=1	Um	um	um	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	include-91	(s())	0	ROOT	true
4	the	_	the	DT	O	_	expressive	_	0	IGNORE	true
5	coolest	_	cool	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	stupid	(mod())	6	MOD_mod	true
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
9	have	_	have	VBP	O	_	say-01	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
12	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@include-91, 8@@d@@i, 10@@n@@ever, 5@@m@@most, 11@@s@@see-01, 1@@p@@um, 5@@t@@stupid, 6@@d@@thing]
sentence=1	Moreover,	_name_	Moreover,	LS	O	_	and	_	0	IGNORE	true
2	seeing	_	see	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
3	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	perform	_	perform	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	2	APP_s	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	internet	_	internet	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-away-05	(s(), o())	0	ROOT	true
9	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	and	_	0	IGNORE	true
11	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_poss	true
14	senses,	_	senses,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	originality	_	originality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
17	imagination	_	imagination	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
18	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	reading	_	read	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	25	APP_s	true
21	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
22	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	magic	_	magic	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	produce	_	produce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
26	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[8@@s@@take-away-05, 23@@d@@magic, 15@@m@@originality, 13@@d@@our, 3@@d@@someone, 11@@s@@use-01, 21@@s@@think-01, 19@@s@@read-01, 4@@s@@perform-02, 16@@a@@and, 24@@s@@possible-01, 2@@s@@see-01, 7@@l@@internet, 25@@s@@produce-01, 17@@d@@imagination, 20@@a@@and]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	in	_	in	IN	O	_	after	_	0	IGNORE	true
3	19	_	19	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	8	MOD_mod	true
4	—	_	—	,	O	_	year	_	0	IGNORE	true
5	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	1	MOD_mod	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	will	_	will	MD	O	_	have-condition-91	_	0	IGNORE	true
8	tell	_	tell	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	APP_op1	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	this,	_	this,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_op2	true
12	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
13	said	_	say	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_op2	true
14	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
15	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	strongly,	_	strongly,	NN	O	_	1	_	0	IGNORE	true
17	years	_	year	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	ago,	_	ago,	DT	O	_	and	_	0	IGNORE	true
19	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
20	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	39	APP_op1	true
21	—	_	—	:	O	_	mean-01	_	0	IGNORE	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	I	i	I	PRP	O	_	1	_	0	IGNORE	true
24	love	_	love	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op1	true
25	the	_	the	DT	O	_	he	_	0	IGNORE	true
26	military,	_	military,	NNS	O	_	and	_	0	IGNORE	true
27	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
28	I	i	I	PRP	O	_	1	_	0	IGNORE	true
29	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_op2	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	29	APP_s	true
32	the	_	the	DT	O	_	and	_	0	IGNORE	true
33	strongest	_	strong	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	strong-02	(s())	34	MOD_s	true
34	military	_	military	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
35	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
36	we've	_	we've	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	1	MOD_mod	true
37	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
38	had,	_	had,	RB	O	_	-	_	0	IGNORE	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	MOD_s	true
40	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op2	true
42	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
43	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
44	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
45	than	_	than	IN	O	_	cause-01	_	0	IGNORE	true
46	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[27@@a@@and, 41@@s@@need-01, 8@@t@@tell-01, 44@@n@@now, 13@@d@@say-01, 3@@explicitanon0@@_NUMBER_, 11@@a@@and, 34@@d@@military, 14@@d@@it, 36@@explicitanon0@@-, 1@@a@@and, 17@@y@@year, 31@@s@@have-03, 33@@b2@@strong-02, 9@@d@@you, 29@@s@@want-01, 24@@d@@love-01, 15@@s@@very, 46@@n@@ever, 17@@t@@temporal-quantity, 20@@s@@say-01, 5@@d@@and, 43@@s@@more, 6@@d@@i, 39@@a@@and, 37@@n@@ever, 33@@m@@most]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	scholars	_	scholar	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	between	_	between	IN	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	15	MOD_mod	true
6	nine	_	nine	CD	O	(d<root> / --LEX--)	9	()	5	APP_op1	true
7	and	_	and	CC	O	_	year	_	0	IGNORE	true
8	fifteen	_	fifteen	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	5	(mod())	3	MOD_mod	true
9	thousand	_	thousand	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1000	(mod())	10	MOD_mod	true
10	years	_	year	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	5	APP_op2	true
11	ago,	_	ago,	VBP	O	_	between	_	0	IGNORE	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	land	_	land	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	bridge	_	bridge	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	15	APP_s	true
15	existed	_	exist	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
16	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	Asia	_name_	Asia	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
18	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
19	North_America	_name_	America	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	14	APP_o	true
20	that	_	that	IN	O	_	name	_	0	IGNORE	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	call	_	call	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	19	MOD_o	true
24	Beringia	_name_	Beringia	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	23	APP_o2	true
25	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@b@@call-01, 14@@s@@bridge, 9@@explicitanon0@@1000, 17@@c@@continent, 21@@d@@we, 6@@d@@9, 19@@c@@continent, 10@@t@@temporal-quantity, 19@@n@@_NAME_, 10@@m@@year, 15@@s@@exist-01, 24@@n@@_NAME_, 3@@s@@believe-01, 8@@explicitanon0@@5, 5@@b2@@between, 22@@n@@now, 13@@p@@land, 1@@explicitanon0@@some, 17@@n@@_NAME_, 24@@c@@continent, 2@@d@@scholar]
sentence=1	Upon	upon	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	waking	_	wake	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
3	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	morning,	_	morning,	NNP	O	_	and	_	0	IGNORE	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	begin	_	begin	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
7	thinking—contemplating	_	thinking—contemplating	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
8	the	_	the	DT	O	_	and	_	0	IGNORE	true
9	tasks	_	task	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	that	_	that	WDT	O	_	1	_	0	IGNORE	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	13	MOD_s	true
13	complete	_	complete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
14	that_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[3@@p@@each, 2@@s@@wake-01, 9@@d@@task, 6@@c@@begin-01, 13@@s@@complete-01, 14@@n@@day, 5@@d@@you, 12@@s@@obligate-01, 7@@s@@thinking—contemplating-01]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	instance	_	instance	NN	O	(n<root> / --LEX--  :domain (a<dom>)  :location-of (l<mod>))	$LEMMA$	(dom(), mod())	8	MOD_mod	true
3	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
4	which	_	which	WDT	O	_	event	_	0	IGNORE	true
5	colleges	_	college	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
7	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	percentiles	_	percentile	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
11	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	SAT	_name_	SAT	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
13	results	_	result	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	15	APP_s	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_dom	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	determine	_	determine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	minimum	_	minimum	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	testing	_	testing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	test-01	(mod())	21	MOD_mod	true
21	score	_	score	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	be	_	be	VB	O	_	person	_	0	IGNORE	true
25	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
26	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	acceptance	_	acceptance	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	accept-01	(mod())	29	MOD_mod	true
29	factor	_	factor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@d@@score-01, 20@@p@@test-01, 12@@d@@_NAME_, 2@@n@@instance, 28@@p@@accept-01, 19@@p@@minimum, 1@@explicitanon0@@1, 8@@s@@use-01, 6@@a@@and, 17@@s@@determine-01, 9@@d@@percentile, 15@@s@@use-01, 13@@c@@result-01, 29@@d@@factor, 7@@d@@university, 5@@d@@college, 25@@s@@use-01, 13@@t@@thing]
sentence=1	We're	_name_	We're	NNP	O	_	multi-sentence	_	0	IGNORE	true
2	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	an	_	an	DT	O	_	1	_	0	IGNORE	true
6	automated	_	automate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	automate-01	(s())	7	MOD_s	true
7	microscope	_	microscope	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	developed	_	develop	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	several_years_ago	_name_	ago	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
12	for	_	for	IN	O	_	3	_	0	IGNORE	true
13	nuclear	_	nuclear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nucleus	(mod())	14	MOD_mod	true
14	astrophysics	_	astrophysic	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	work	_	work	VBP	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
16	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
17	scan	_	scan	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
18	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
19	collector	_	collector	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
21	the_Cosmic_Dust_Lab_in_Building_31	_name_	31	CD	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	17	MOD_mod	true
22	at	_	at	IN	O	_	thing	_	0	IGNORE	true
23	Johnson_Space_Center	_name_	Center	NNP	O	(f<root> / facility  :name (n / --LEX--)  :location-of (p<mod>))	_NAME_	(mod())	19	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@microscope, 6@@s@@automate-01, 15@@i@@work-01, 3@@n@@now, 13@@p@@nucleus, 9@@d@@we, 23@@n@@_NAME_, 21@@c@@city, 2@@p@@right, 4@@s@@use-01, 19@@d@@collector, 11@@p@@_NAME_, 17@@s@@scan-01, 21@@n@@_NAME_, 23@@f@@facility, 10@@s@@develop-01, 14@@p@@astrophysic]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	true
3	recall	_	recall	VBP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-02	(mod(), s())	17	MOD_mod	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	high	_	high	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	hopes	_	hope	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$ful-03	(s())	3	APP_s	true
7	for	_	for	IN	O	_	thing	_	0	IGNORE	true
8	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
9	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
10	which	_	which	WDT	O	_	name	_	0	IGNORE	true
11	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	began	_	begin	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	second	_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	12	MOD_mod	true
15	term,	_	term,	NNS	O	_	and	_	0	IGNORE	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	feel	_	feel	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	sadness	_	sadness	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	sad-02	(o(s()))	17	APP_o	true
21	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	will	_	will	MD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
24	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
25	be	_	be	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	20	APP_o	true
26	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	office	_	office	NN	O	(w<root> / --LEX--  :poss (h<poss>)  :location-of (r<mod>))	$LEMMA$	(mod(), poss())	25	MOD_mod	true
30	working	_	work	VBG	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	25	MOD_mod	true
31	on	_	on	IN	O	_	thing	_	0	IGNORE	true
32	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_poss	true
33	behalf	_	behalf	NN	O	_	$LEMMA$	_	0	IGNORE	true
34	to	_	to	TO	O	_	thing	_	0	IGNORE	true
35	achieve	_	achieve	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	30	MOD_mod	true
36	those	_	those	DT	O	_	that	_	0	IGNORE	true
37	hopes	_	hope	NNS	O	(d<root> / --LEX--)	$LEMMA$ful-03	()	35	APP_o	true
38	in	_	in	IN	O	_	after	_	0	IGNORE	true
39	the_next_2_1/2_years	_name_	year	NNS	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	35	MOD_mod	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[37@@d@@hopeful-03, 32@@d@@your, 35@@s@@achieve-01, 39@@n@@_NAME_, 2@@d@@i, 28@@p@@this, 14@@o@@ordinal-entity, 19@@p@@great, 6@@s@@hopeful-03, 8@@c@@country, 26@@d@@here, 29@@w@@office, 20@@c@@sad-02, 24@@explicitanon0@@-, 11@@d@@we, 12@@s@@begin-01, 30@@v@@work-01, 5@@s@@high-02, 3@@s@@recall-02, 17@@c@@feel-01, 25@@s@@be-located-at-91, 13@@p@@this, 8@@n@@_NAME_, 14@@explicitanon0@@2]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	effect	_	effect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	gets	_	get	VBZ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-03	(o(s()))	0	ROOT	true
4	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	noticeable	_	noticeable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	3	APP_o	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	increase	_	increase	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	3	MOD_mod	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	mass	_	mass	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	object	_	object	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_poss	true
14	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
15	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	put	_	put	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	MOD_s	true
17	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	sheet	_	sheet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[3@@o@@get-03, 13@@d@@object, 2@@d@@effect, 5@@s@@noticeable, 19@@d@@sheet, 8@@t@@increase-01, 16@@s@@put-01, 4@@s@@more, 7@@d@@we, 10@@m@@mass]
sentence=1	AKA	aka	aka	EX	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
2	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	vegetarian	_	vegetarian	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	that	_	that	WDT	O	_	expressive	_	0	IGNORE	true
6	Ash	_name_	Ash	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	4	MOD_o	true
8	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
9	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	fridge	_	fridge	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	that	_	that	WDT	O	_	name	_	0	IGNORE	true
12	will	_	will	MD	O	_	thing	_	0	IGNORE	true
13	remotely	_	remotely	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	remote	(mod())	14	MOD_mod	true
14	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-06	(s())	4	MOD_s	true
15	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	14	MOD_s	true
16	together	_	together	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@s@@aka, 6@@p@@person, 10@@b@@fridge, 2@@p@@every, 6@@n@@_NAME_, 13@@s@@remote, 4@@d@@thing, 7@@s@@have-03, 16@@t@@together, 3@@p@@vegetarian, 14@@s@@go-06, 15@@s@@well-09]
sentence=1	According	according	accord	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	say-01	(o(s()))	0	ROOT	true
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
3	Wilkins,_Warhol	_name_	Warhol	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	1	APP_s	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	able	_	able	JJ	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	1	APP_o	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	reproduce	_	reproduce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	Polaroid	_name_	Polaroid	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	photograph	_	photograph	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
12	create	_	create	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_op2	true
13	an	_	an	DT	O	_	thing	_	0	IGNORE	true
14	enlargement	_	enlargement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	modify-01	(s())	12	APP_o	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	it,	_	it,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	which	_	which	WDT	O	_	i	_	0	IGNORE	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	21	MOD_s	true
21	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	commit	_	commit	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	image	_	image	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	to	_	to	IN	O	_	thing	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	silk	_	silk	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	screen	_	screen	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	medium	_	medium	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
31	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
32	applying	_	apply	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	34	APP_op1	true
33	paint	_	paint	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
34	or	_	or	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	23	MOD_mod	true
35	manipulating	_	manipulate	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_op2	true
36	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	further	_	further	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
38	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[30@@d@@medium, 12@@c@@create-01, 37@@s@@further, 21@@s@@use-01, 10@@d@@photograph, 29@@p@@screen, 33@@d@@paint, 3@@n@@_NAME_, 35@@d@@manipulate-01, 28@@p@@silk, 19@@n@@then, 32@@s@@apply-02, 20@@s@@possible-01, 3@@p@@person, 1@@c@@say-01, 34@@a@@or, 11@@a@@and, 23@@s@@commit-01, 7@@s@@reproduce-01, 25@@d@@image, 5@@f@@possible-01, 14@@s@@modify-01, 9@@n@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_op1	true
3	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_o	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	have	_	have	VBP	O	_	person	_	0	IGNORE	true
10	requested	_	request	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
11	for	_	for	IN	O	_	or	_	0	IGNORE	true
12	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
13	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	MOD_s	true
15	time,	_	time,	NNS	O	_	and	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
17	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	24	MOD_mod	true
18	two_and_a_half_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	17	MOD_mod	true
19	of	_	of	IN	O	_	before	_	0	IGNORE	true
20	living	_	live	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op1	true
21	here,	_	here,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	24	MOD_mod	true
24	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op2	true
25	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
26	I've	i've	I've	NNP	O	_	person	_	0	IGNORE	true
27	made	_	make	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_op1	true
28	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
30	own	_	own	JJ	O	_	$LEMMA$	_	0	IGNORE	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_s	true
32	decorated	_	decorate	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	31	APP_op2	true
33	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
34	how	_	how	WRB	O	_	manner	_	0	IGNORE	true
35	I	i	I	PRP	O	_	have-manner-91	_	0	IGNORE	true
36	want,	_	want,	NNP	O	_	thing	_	0	IGNORE	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	16	APP_op3	true
38	I'm	i'm	I'm	NNPS	O	_	thing	_	0	IGNORE	true
39	ready	_	ready	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	37	APP_op2	true
40	to	_	to	TO	O	_	thing	_	0	IGNORE	true
41	show	_	show	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	39	APP_s	true
42	it	_	it	PRP	O	_	i	_	0	IGNORE	true
43	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
44	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
45	guys	_	guy	NNS	O	_	$LEMMA$	_	0	IGNORE	true
46	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@d@@live-01, 32@@d@@decorate-01, 24@@s@@feel-01, 13@@s@@very, 41@@s@@show-01, 2@@s@@know-01, 5@@r@@something, 18@@t2@@temporal-quantity, 39@@s@@ready-02, 7@@d@@you, 23@@p@@final, 31@@a@@and, 16@@a@@and, 17@@w@@after, 18@@explicitanon0@@_NAME_, 37@@a@@and, 27@@d@@make-01, 3@@d@@this, 44@@d@@you, 1@@d@@i, 10@@s@@request-01, 8@@p@@guy, 14@@s@@long-03]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	student	_	student	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	6	APP_s	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	Rome,_Jerome	_name_	Jerome	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	engaged	_	engage	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	in	_	in	IN	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	superficial	_	superficial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	escapades	_	escapade	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	6	APP_o	true
12	sexual	_	sexual	JJ	O	(d<root> / --LEX--)	sex	()	13	APP_o	true
13	experimentation	_	experimentation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	experiment-01	(s(), o())	11	APP_op2	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	11	APP_s	true
16	there,	_	there,	NNS	O	_	and	_	0	IGNORE	true
17	which	_	which	WDT	O	_	person	_	0	IGNORE	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	indulged	_	indulge	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
20	in	_	in	IN	O	_	thing	_	0	IGNORE	true
21	quite	_	quite	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	casually	_	casually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	casual	(mod())	19	MOD_mod	true
23	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
24	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
25	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
26	he	_	he	PRP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_s	true
27	suffered	_	suffer	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
28	terrible	_	terrible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
29	bouts	_	bout	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	27	APP_s	true
30	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
31	guilt	_	guilt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
32	afterwards.	_	afterwards.	NN	O	_	$LEMMA$	_	0	IGNORE	true
33	[13]	_	[13]	XX	O	_	cause-01	_	0	IGNORE	true
34	[better	_	[better	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	source	_	source	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
36	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
37	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@s@@escapade, 9@@p@@superficial, 19@@s@@indulge-01, 3@@e2@@study-01, 31@@d@@guilt, 36@@s@@need-01, 15@@e2@@study-01, 21@@s@@quite, 5@@n@@_NAME_, 35@@d@@source, 5@@c@@city, 15@@p2@@person, 27@@s@@suffer-01, 29@@s@@bout, 12@@d@@sex, 26@@s@@cause-01, 3@@p2@@person, 6@@s@@engage-01, 22@@t@@casual, 13@@s@@experiment-01, 28@@s@@terrible-01, 11@@a@@and, 23@@s@@contrast-01, 34@@p@@[better]
sentence=1	Then,	then,	Then,	NNP	O	_	expressive	_	0	IGNORE	true
2	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
3	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
4	that,	_	that,	NNP	O	_	and	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	make	_	make	VBP	O	_	$LEMMA$-01	_	0	IGNORE	true
7	open	_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	innovations	_	innovation	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	innovate-01	(s())	0	ROOT	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	we,	_	we,	NNP	O	_	mean-01	_	0	IGNORE	true
11	then,	_	then,	NNP	O	_	mean-01	_	0	IGNORE	true
12	export,	_	export,	NNP	O	_	mean-01	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	colonizers	_	colonizer	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	but,	_	but,	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	8	MOD_s	true
17	really,	_	really,	NNP	O	_	person	_	0	IGNORE	true
18	co-creators	_	co-creator	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	16	APP_o	true
19	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@explicitanon0@@-, 8@@s@@innovate-01, 18@@p2@@person, 15@@t@@colonizer, 5@@d@@we, 2@@s@@base-02, 7@@s@@open-02, 16@@s@@person, 18@@e2@@co-creator]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
5	realism	_	realism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	Street	street	Street	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
8	has	_	have	VBZ	O	_	$LEMMA$-03	_	0	IGNORE	true
9	in	_	in	IN	O	_	consider-02	_	0	IGNORE	true
10	mind	_	mind	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-04	(s(), o())	5	MOD_o	true
11	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
12	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
13	view	_	view	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
14	that	_	that	IN	O	_	thing	_	0	IGNORE	true
15	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	properties	_	property	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	exist	_	exist	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	objective	_	objective	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	features	_	feature	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	17	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_poss	true
24	(to	_	(to	.	O	_	$LEMMA$	_	0	IGNORE	true
25	wit,	_	wit,	XX	O	_	mean-01	_	0	IGNORE	true
26	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
27	stealing	_	stealing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_s	true
28	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
29	wrong	_	wrong	JJ	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-02	(mod(), s())	31	MOD_mod	true
30	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
31	independent	_	independent	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	depend-01	(s(), o())	17	MOD_s	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
34	anyone	_	anyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
35	thinks	_	think	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	36	APP_op1	true
36	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	31	APP_o	true
37	feels	_	feel	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	36	APP_op2	true
38	that	_	that	IN	O	_	-	_	0	IGNORE	true
39	stealing	_	steal	VBG	O	_	$LEMMA$-01	_	0	IGNORE	true
40	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
41	wrong)	_	wrong)	NNS	O	_	and	_	0	IGNORE	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@p@@kind, 10@@s@@mind-04, 7@@p@@person, 15@@s@@moral-02, 37@@s@@feel-02, 23@@d@@world, 17@@s@@exist-01, 36@@a@@or, 31@@s@@depend-01, 7@@n@@_NAME_, 16@@d@@property, 20@@m@@feature, 34@@d@@anyone, 19@@p@@objective, 4@@s@@moral-02, 29@@o@@wrong-02, 13@@s@@view-02, 27@@d@@stealing-01, 5@@d@@realism, 35@@s@@think-01]
sentence=1	So	so	so	CC	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	think	_	think	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	APP_s	true
4	we're	_	we're	NN	O	_	person	_	0	IGNORE	true
5	gonna	_	gonna	VBP	O	_	thing	_	0	IGNORE	true
6	start	_	start	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	at	_	at	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	loop	_	loop	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	trailhead	_	trailhead	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
16	highline	_	highline	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	–	_	–	NNS	O	_	and	_	0	IGNORE	true
18	um,	_	um,	JJ	O	_	mean-01	_	0	IGNORE	true
19	trail	_	trail	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
22	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
23	the_other_day	_name_	day	NN	O	(e<root> / event  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
24	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[21@@d@@we, 2@@d@@i, 3@@c@@think-01, 6@@s@@start-01, 16@@p@@highline, 23@@e@@event, 11@@b@@trailhead, 15@@s@@same-01, 1@@s@@cause-01, 19@@p@@trail, 23@@n@@_NAME_, 7@@b@@here, 10@@p@@loop, 22@@s@@do-02]
sentence=1	Consider	consider	consider	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
7	save	_	save	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
9	strengthening	_	strengthen	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
10	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	investments	_	investment	NNS	O	(d<root> / --LEX--)	invest-01	()	9	APP_o	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	sustain	_	sustain	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
14	peace	_	peace	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	13	MOD_mod	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@d@@life, 15@@b@@around, 1@@y@@you, 14@@d@@peace, 17@@d@@world, 9@@l@@strengthen-01, 13@@s@@sustain-01, 6@@s@@possible-01, 7@@s@@save-01, 11@@d@@invest-01, 1@@explicitanon0@@imperative, 5@@d@@we, 1@@b@@consider-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	footage	_	footage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
5	gonna	_	gonna	VBP	O	_	i	_	0	IGNORE	true
6	put	_	put	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
7	in	_	in	RP	O	_	be-located-at-91	_	0	IGNORE	true
8	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	honestly	_	honestly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	looks	_	look	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	fake	_	fake	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	11	APP_o	true
16	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[14@@s@@bit, 8@@b@@here, 9@@t@@honestly, 15@@d@@fake-02, 11@@s@@look-02, 6@@s@@put-01, 2@@d@@footage, 13@@p@@little]
sentence=1	Byron	_name_	Byron	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	finally	_	finally	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	final	(mod())	3	MOD_mod	true
3	returned	_	return	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	in	_	in	IN	O	_	-1	_	0	IGNORE	true
5	January_1804,	_name_	1804,	CD	O	_	$LEMMA$	_	0	IGNORE	true
6	[6]	_name_	[6]	XX	O	_	mean-01	_	0	IGNORE	true
7	to	_	to	IN	O	_	and	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	settled	_	settled	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
12	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
13	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	formation	_	formation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	form-01	(s())	13	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	circle	_	circle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	emotional	_	emotional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	emotion	(mod())	21	MOD_mod	true
21	involvements	_	involvement	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
22	with	_	with	IN	O	_	-	_	0	IGNORE	true
23	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
24	Harrow	_name_	Harrow	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	21	MOD_mod	true
25	boys,	_	boys,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	3	MOD_mod	true
26	which	_	which	WDT	O	_	i	_	0	IGNORE	true
27	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	recalled	_	recall	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
29	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
31	vividness:	_	vividness:	NN	O	_	$LEMMA$	_	0	IGNORE	true
32	"My	"my	"my	NN	O	_	mean-01	_	0	IGNORE	true
33	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	friendships	_	friendship	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_dom	true
35	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_s	true
36	with	_	with	IN	O	_	i	_	0	IGNORE	true
37	me	_	I	PRP	O	_	and	_	0	IGNORE	true
38	passions	_	passion	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	35	APP_o	true
39	(for	_	(for	.	O	_	$LEMMA$	_	0	IGNORE	true
40	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
41	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
42	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
43	violent)."	_	violent)."	ADD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	3	MOD_s	true
44	[21	_	[21	XX	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_o	true
45	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 11@@n@@period, 43@@s@@and, 44@@d@@[21, 33@@p@@school, 2@@n@@final, 18@@d@@circle, 24@@c@@city, 25@@p@@name, 42@@n@@always, 35@@s@@person, 34@@d@@friendship, 23@@p@@other, 21@@p@@involvement-01, 30@@p@@great, 3@@s@@return-01, 38@@r@@passion, 24@@n@@_NAME_, 13@@s@@see-01, 9@@s@@more, 10@@s@@settled-02, 20@@p@@emotion, 28@@s@@recall-02, 15@@s@@form-01, 1@@p@@person]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	breakthrough	_	breakthrough	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
3	role	_	role	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	0	ROOT	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	romantic	_	romantic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	comedy,	_	comedy,	.	O	_	mean-01	_	0	IGNORE	true
9	Chasing_Liberty	_name_	Liberty	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
10	(2004),	_	(2004),	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true
11	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	which	_	which	WDT	O	_	i	_	0	IGNORE	true
13	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_poss	true
14	received	_	receive	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	nomination	_	nomination	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
17	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	Teen_Choice_Awards_for_Choice_Breakout_Movie_Star_-_Male	_name_	Male	NNP	O	(u<root> / url-entity  :value (explicitanon2 / --LEX--)  :location-of (v<mod>))	_NAME_	(mod())	16	MOD_mod	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@m@@role, 16@@s@@nomination-01, 9@@n@@_NAME_, 2@@p@@breakthrough-01, 13@@d@@he, 18@@explicitanon2@@_NAME_, 7@@p@@romantic, 18@@u@@url-entity]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	17	APP_s	true
2	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	believe	_	believe	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
4	in	_	in	IN	O	_	after	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	described	_	describe	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	hall	_	hall	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	3_years	_name_	year	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
16	ago,	_	ago,	DT	O	_	and	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
18	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
19	am	_	be	VBP	O	_	person	_	0	IGNORE	true
20	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	determined	_	determined	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
22	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	Nation	nation	nation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
25	shall	_	shall	MD	O	_	thing	_	0	IGNORE	true
26	continue	_	continue	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	APP_o	true
27	to	_	to	TO	O	_	thing	_	0	IGNORE	true
28	strive	_	strive	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	26	APP_o	true
29	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
30	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_o	true
31	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	32	MOD_mod	true
32	goals	_	goal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_o	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[32@@d@@goal, 20@@p@@still, 14@@b@@hall, 8@@n@@_NAME_, 17@@a@@and, 2@@p@@still, 1@@d@@i, 23@@p@@this, 28@@c@@strive-01, 21@@s@@determined-01, 24@@d@@nation, 3@@s@@believe-01, 30@@s@@meet-01, 15@@p@@year, 6@@d@@kind, 8@@c@@country, 26@@c@@continue-01, 11@@s@@describe-01, 31@@p@@that, 13@@p@@this]
sentence=1	For	for	for	IN	O	_	or	_	0	IGNORE	true
2	lymphoscintigraphies	_	lymphoscintigraphie	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	basically	_	basically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	basic	(mod())	5	MOD_mod	true
5	inject	_	inject	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	APP_op1	true
6	technetium	_	technetium	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	in	_	in	IN	O	_	or	_	0	IGNORE	true
8	skin	_	skin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
9	surrounding	_	surround	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	melanoma	_	melanoma	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	26	MOD_mod	true
14	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	inject	_	inject	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_op1	true
16	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	wait	_	wait	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_op1	true
18	about	_	about	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	17	APP_s	true
19	15-20	_	15-20	CD	O	(d<root> / --LEX--)	20	()	18	APP_op1	true
20	minutes,	_	minutes,	NNS	O	_	and	_	0	IGNORE	true
21	maybe	_	maybe	RB	O	_	$LEMMA$	_	0	IGNORE	true
22	up	_	up	RB	O	_	$LEMMA$	_	0	IGNORE	true
23	to	_	to	IN	O	_	up-$LEMMA$	_	0	IGNORE	true
24	an	_	an	DT	O	_	1	_	0	IGNORE	true
25	hour,	_	hour,	NNS	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_op2	true
27	wait	_	wait	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	26	APP_op2	true
28	for	_	for	IN	O	_	you	_	0	IGNORE	true
29	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
30	radio	_	radio	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	tracer	_	tracer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
32	to	_	to	TO	O	_	and	_	0	IGNORE	true
33	travel	_	travel	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	27	APP_s	true
34	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	closest	_	close	JJS	O	(m2<root> / most  :degree-of (g / --LEX--  :ARG1 (c<s>)))	close-13	(s())	38	MOD_s	true
37	lymph	_	lymph	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	node	_	node	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
39	which	_	which	WDT	O	_	i	_	0	IGNORE	true
40	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	would	_	would	MD	O	_	mean-01	_	0	IGNORE	true
42	call	_	call	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	38	MOD_s	true
43	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
44	sentinel	_	sentinel	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
45	lymph	_	lymph	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
46	node	_	node	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
47	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[29@@p@@that, 11@@d@@melanoma, 4@@p@@basic, 8@@d@@skin, 33@@g@@travel-01, 46@@d@@node, 30@@p@@radio, 45@@p@@lymph, 18@@o@@about, 44@@p@@sentinel, 19@@d@@20, 9@@s@@surround-01, 37@@p@@lymph, 12@@a@@and, 42@@s@@call-01, 17@@s@@wait-01, 2@@o@@lymphoscintigraphie, 6@@d@@technetium, 36@@g@@close-13, 3@@d@@we, 31@@d@@tracer, 27@@s@@wait-01, 15@@d@@inject-01, 5@@b@@inject-01, 26@@a@@and, 36@@m2@@most, 38@@d@@node, 13@@w@@after]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	started	_	start	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	basically,	_	basically,	NNP	O	_	cause-01	_	0	IGNORE	true
5	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
6	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	2	MOD_mod	true
7	wanted	_	want	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
12	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	2	MOD_o	true
13	work	_	work	VB	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	11	APP_s	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	Isabel	_name_	Isabel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
16	on	_	on	IN	O	_	thing	_	0	IGNORE	true
17	a	_	a	DT	O	_	thing	_	0	IGNORE	true
18	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	projects	_	project	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
24	going	_	go	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-on-15	(s())	20	MOD_s	true
25	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
26	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@want-01, 12@@s@@person, 5@@s@@cause-01, 24@@s@@go-on-15, 2@@s@@start-01, 3@@d@@it, 7@@d@@want-01, 18@@explicitanon0@@lot, 15@@p@@person, 1@@d@@We, 26@@p@@together, 13@@g@@work-01, 20@@d@@project, 6@@p@@i, 15@@n@@_NAME_]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
3	environmental	_	environmental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	environment	(mod())	4	MOD_mod	true
4	agency	_	agency	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	reports	_	report	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op1	true
7	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	8	MOD_mod	true
8	number	_	number	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	neighbors	_	neighbor	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	12	APP_s	true
12	report	_	report	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_op2	true
13	another	_	another	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
14	number,	_	number,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
16	course,	_	course,	NNP	O	_	and	_	0	IGNORE	true
17	you're	_	you're	PRP	O	_	person	_	0	IGNORE	true
18	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
19	to	_	to	TO	O	_	thing	_	0	IGNORE	true
20	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
24	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	participated	_	participate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	MOD_s	true
26	yourself,	_	yourself,	NNP	O	_	and	_	0	IGNORE	true
27	even	_	even	RB	O	_	$LEMMA$	_	0	IGNORE	true
28	though	_	though	IN	O	_	have-concession-91	_	0	IGNORE	true
29	it's	_	it's	PRP	O	_	-	_	0	IGNORE	true
30	a	_	a	DT	O	_	thing	_	0	IGNORE	true
31	lower	_	low	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	low-04	(s())	32	MOD_s	true
32	quality	_	quality	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	sensor	_	sensor	NN	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[31@@b@@low-04, 20@@s@@trust-02, 8@@d@@number, 11@@h@@have-rel-role-91, 32@@p@@quality, 13@@d@@another, 12@@s@@report-01, 7@@explicitanon0@@1, 31@@m@@more, 3@@p@@environment, 6@@s@@report-01, 5@@d@@group, 9@@a@@and, 4@@p@@agency, 11@@p@@person, 11@@f@@neighbor, 25@@s@@participate-01, 22@@d@@one, 33@@r@@sensor]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
3	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	Court	_name_	Court	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
8	ruled	_	rule	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	religious	_	religious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	religion	(mod())	13	MOD_mod	true
13	schools	_	school	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
14	Santo_Spirito	_name_	Spirito	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	15	MOD_mod	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
16	Immacolata	_name_	Immacolata	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_op2	true
17	in	_	in	IN	O	_	name	_	0	IGNORE	true
18	Livorno,	_name_	Livorno,	NNP	O	_	name	_	0	IGNORE	true
19	Tuscany,	tuscany,	tuscany,	NN	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	name	(mod())	0	ROOT	true
20	to	_	to	TO	O	_	and	_	0	IGNORE	true
21	pay	_	pay	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	19	APP_mod	true
22	over	_	over	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	21	APP_o	true
23	422,000	_	422,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	24	MOD_mod	true
24	euros	_	euro	NNS	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	22	APP_op1	true
25	in	_	in	IN	O	_	after	_	0	IGNORE	true
26	arrears	_	arrear	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o2	true
27	for	_	for	IN	O	_	and	_	0	IGNORE	true
28	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
29	period	_	period	NN	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	date-interval	(op2(), op1(), mod())	21	MOD_mod	true
30	from	_	from	IN	O	_	date-interval	_	0	IGNORE	true
31	2004	_name_	2004	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	29	APP_op1	true
32	to	_	to	IN	O	_	date-interval	_	0	IGNORE	true
33	2009	_name_	2009	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	29	APP_op2	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[31@@explicitanon0@@_NUMBER_, 33@@explicitanon0@@_NUMBER_, 12@@p@@religion, 13@@d@@school, 15@@a@@and, 24@@d2@@euro, 23@@explicitanon0@@_NUMBER_, 29@@d@@date-interval, 19@@c@@country, 21@@b@@pay-01, 16@@n@@_NAME_, 26@@d@@arrear, 16@@p@@person, 22@@o@@over, 8@@s@@rule-01, 2@@s@@case-03, 24@@m2@@monetary-quantity, 31@@d@@date-entity, 14@@n@@_NAME_, 33@@d@@date-entity, 19@@n@@name, 6@@d@@Court]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
4	saw	_	see	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
5	therein	_	therein	RB	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	lotos-faces	_	lotos-face	NNS	O	(d<root> / --LEX--)	_NAME_	()	4	APP_s	true
8	vanish,	_	vanish,	NNP	O	_	and	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	1	APP_op1	true
10	longed	_	long	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
11	for	_	for	IN	O	_	multi-sentence	_	0	IGNORE	true
12	nets	_	net	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	might	_	may	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	12	MOD_mod	true
16	capture	_	capture	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
17	them	_	they	PRP	O	_	person	_	0	IGNORE	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
19	learn	_	learn	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	them	_	they	PRP	O	_	person	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	secrets	_	secret	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
24	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	moon	_	moon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
27	had	_	have	VBD	O	_	person	_	0	IGNORE	true
28	brought	_	bring	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	23	MOD_o	true
29	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	night	_	night	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o2	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@a@@and, 4@@t@@see-01, 3@@d@@i, 9@@d@@i, 28@@b@@bring-01, 10@@s@@long-01, 1@@a@@and, 26@@d@@moon, 12@@d@@net, 31@@d@@night, 15@@i@@possible-01, 7@@d@@_NAME_, 16@@d@@capture-01, 23@@d@@secret, 19@@s@@learn-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	wearing	_	wear	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	yellow	_	yellow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	MOD_s	true
6	linen	_	linen	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	dress	_	dress	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
10	mother	_	mother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	12	APP_s	true
11	had	_	have	VBD	O	_	person	_	0	IGNORE	true
12	picked	_	pick	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	7	MOD_o	true
13	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	which	_	which	WDT	O	_	i	_	0	IGNORE	true
16	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
17	therefore	_	therefore	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_s	true
18	disliked	_	dislike	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
19	although	_	although	IN	O	_	have-concession-91	_	0	IGNORE	true
20	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
21	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_o	true
22	it	_	it	PRP	O	_	i	_	0	IGNORE	true
23	flattered	_	flatter	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
24	me	_	I	PRP	O	_	and	_	0	IGNORE	true
25	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@s@@know-01, 1@@d@@i, 17@@s@@cause-01, 10@@p@@person, 12@@s@@pick-out-03, 23@@d@@flatter-01, 5@@s@@yellow, 18@@s@@dislike-01, 6@@p@@linen, 7@@d@@dress, 3@@s@@wear-01, 10@@h@@have-rel-role-91, 10@@f@@mother]
sentence=1	Whenever	whenever	whenever	WRB	O	_	$LEMMA$	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	presented	_	present	VBN	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	18	MOD_mod	true
5	with	_	with	IN	O	_	-	_	0	IGNORE	true
6	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	don’t	_	don’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
11	to	_	to	TO	O	_	-	_	0	IGNORE	true
12	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
13	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
14	would	_	would	MD	O	_	possible-01	_	0	IGNORE	true
15	consider	_	consider	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	putting	_	put	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
17	off,	_	off,	NN	O	_	-	_	0	IGNORE	true
18	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	yourself,	_	yourself,	NNP	O	_	say-01	_	0	IGNORE	true
20	“will	_	“will	NFP	O	_	i	_	0	IGNORE	true
21	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	18	APP_o	true
23	me	_	I	PRP	O	_	i	_	0	IGNORE	true
24	less_than_two_minutes	_name_	minute	NNS	O	(d<root> / --LEX--)	_NAME_	()	22	APP_o	true
25	to	_	to	IN	O	_	cent	_	0	IGNORE	true
26	finish?	_	finish?	VB	O	_	cause-01	_	0	IGNORE	true
27	”	_	"	''	O	_	interrogative	_	0	IGNORE	true

nodealignment=[6@@d@@something, 15@@s@@consider-02, 16@@s@@put-01, 12@@s@@do-02, 9@@explicitanon0@@-, 21@@d@@this, 22@@s@@take-10, 4@@b@@present-01, 18@@s@@ask-01, 24@@d@@_NAME_, 10@@s@@want-01, 2@@d@@you]
sentence=1	Yet	yet	yet	RB	O	_	$LEMMA$	_	0	IGNORE	true
2	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	30	APP_s	true
4	saw	_	see	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	30	MOD_mod	true
5	afar	_	afar	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	out	_	out	RP	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	30	MOD_mod	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
9	sea	_	sea	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
10	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	12	MOD_s	true
12	condor	_	condor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	descend	_	descend	VBP	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	4	APP_o	true
14	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	sky	_	sky	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	to	_	to	TO	O	_	and	_	0	IGNORE	true
18	seek	_	seek	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	13	MOD_mod	true
19	rest	_	rest	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
22	vast	_	vast	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
23	reef,	_	reef,	NNP	O	_	and	_	0	IGNORE	true
24	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	30	APP_o	true
25	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
26	fain	_	fain	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	28	MOD_mod	true
27	have	_	have	VB	O	_	person	_	0	IGNORE	true
28	questioned	_	question	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	30	APP_op1	true
29	him,	_	him,	NNS	O	_	and	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
31	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	30	APP_op2	true
32	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	30	MOD_mod	true
35	whom	_	whom	WP	O	_	$LEMMA$	_	0	IGNORE	true
36	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
37	had	_	have	VBD	O	_	person	_	0	IGNORE	true
38	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
39	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
40	they	_	they	PRP	O	_	person	_	0	IGNORE	true
41	were	_	be	VBD	O	_	person	_	0	IGNORE	true
42	alive	_	alive	JJ	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	live-01	(mod(), s())	38	MOD_mod	true
43	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@s@@seek-01, 30@@a@@and, 19@@d@@rest-01, 13@@g@@descend-01, 5@@p@@afar, 34@@p@@that, 28@@s@@question-03, 42@@v@@live-01, 12@@d@@condor, 3@@d@@i, 26@@explicitanon0@@-, 38@@s@@know-01, 24@@d@@i, 31@@s@@ask-01, 9@@b@@sea, 22@@p@@vast, 11@@s@@black-05, 6@@b@@out, 16@@d@@sky, 4@@t@@see-01]
sentence=1	and	_	and	CC	O	_	$LEMMA$	_	14	IGNORE	true
2	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
3	virtue	_	virtue	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	14	MOD_o	true
6	authority	_	authority	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	thereby	_	thereby	RB	O	_	cause-01	_	0	IGNORE	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	me	_	I	PRP	O	_	i	_	0	IGNORE	true
10	vested,	_	vested,	NNS	O	_	and	_	0	IGNORE	true
11	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	14	MOD_s	true
12	hereby	_	hereby	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	order	_	order	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	direct	_	direct	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op2	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	representatives	_	representative	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	represent-01	(s())	14	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	21	MOD_s	true
21	States	states	state	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	17	APP_s	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	the	_	the	DT	O	_	person	_	0	IGNORE	true
24	Union	union	Union	NNP	O	(d<root> / --LEX--)	_NAME_	()	21	APP_poss	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	assemble	_	assemble	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	13	APP_o	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	Musical	musical	Musical	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	Hall,	hall,	Hall,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
32	city,	_	city,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	the_1st_day_of_Feb.	_name_	Feb.	NNP	O	_	_NAME_	_	0	IGNORE	true
35	next,	_	next,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
36	then	_	then	RB	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
37	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
38	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
39	to	_	to	TO	O	_	date-entity	_	0	IGNORE	true
40	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
41	such	_	such	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	alterations	_	alteration	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	modify-01	(s())	26	APP_s	true
43	in	_	in	IN	O	_	i	_	0	IGNORE	true
44	the	_	the	DT	O	_	person	_	0	IGNORE	true
45	existing	_	exist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	46	MOD_s	true
46	laws	_	law	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
47	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	Union	_name_	Union	NNP	O	_	$LEMMA$	_	0	IGNORE	true
50	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
51	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	42	MOD_s	true
52	ameliorate	_	ameliorate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	MOD_s	true
53	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
54	evils	_	evil	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_o	true
55	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
56	which	_	which	WDT	O	_	name	_	0	IGNORE	true
57	the	_	the	DT	O	_	name	_	0	IGNORE	true
58	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
59	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
60	laboring,	_	laboring,	NNS	O	_	and	_	0	IGNORE	true
61	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
62	thereby	_	thereby	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	52	MOD_s	true
63	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	62	APP_o	true
64	confidence	_	confidence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	confident-01	(s())	63	APP_o	true
65	to	_	to	IN	O	_	thing	_	0	IGNORE	true
66	exist,	_	exist,	NNS	O	_	and	_	0	IGNORE	true
67	both	_	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
68	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
69	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	70	APP_op1	true
70	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	63	APP_s	true
71	abroad,	_	abroad,	NNS	O	_	and	_	0	IGNORE	true
72	in	_	in	IN	O	_	i	_	0	IGNORE	true
73	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	64	APP_s	true
74	stability	_	stability	NN	O	(d<root> / --LEX--)	$LEMMA$	()	75	APP_op1	true
75	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	64	MOD_mod	true
76	integrity	_	integrity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	75	APP_op2	true
77	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[15@@s@@direct-01, 6@@d@@authority, 20@@s@@different, 54@@d@@evil, 73@@d@@our, 46@@d@@law, 75@@a@@and, 26@@s@@assemble-03, 63@@s@@cause-01, 45@@s@@exist-01, 69@@d@@home, 28@@p@@Musical, 62@@s@@cause-01, 13@@s@@order-01, 37@@d@@and, 17@@w@@represent-01, 70@@o@@and, 31@@p@@this, 76@@d@@integrity, 17@@p@@person, 42@@s@@modify-01, 74@@d@@stability, 14@@a@@and, 5@@s@@person, 24@@d@@_NAME_, 38@@b@@there, 41@@p@@such, 51@@s@@possible-01, 36@@d@@then, 21@@m@@state, 12@@p@@hereby, 52@@s@@ameliorate-01, 64@@s@@confident-01, 11@@s@@person, 58@@d@@country]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	when	_	when	WRB	O	_	he	_	0	IGNORE	true
3	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	moon	_	moon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	went	_	go	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
6	over	_	over	RP	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	west	_	west	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	and	_	and	CC	O	(d<root> / --LEX--  :op1 (c<op1>)  :op2 (g<op2>)  :time-of (e<mod>))	$LEMMA$	(op2(), op1(), mod())	20	MOD_mod	true
11	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	still	_	still	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	tide	_	tide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	ebbed	_	ebb	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
15	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	sullen	_	sullen	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	shore,	_	shore,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	20	APP_s	true
20	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
21	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
22	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	light	_	light	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	MOD_s	true
24	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	spires	_	spire	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op1	true
26	that	_	that	WDT	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	waves	_	wave	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
29	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
30	uncovered,	_	uncovered,	JJ	O	_	thing	_	0	IGNORE	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
32	white	_	white	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	33	MOD_s	true
33	columns	_	column	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_op2	true
34	gay	_	gay	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	33	MOD_s	true
35	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
36	festoons	_	festoon	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
37	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
38	green	_	green	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	39	MOD_s	true
39	seaweed	_	seaweed	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
40	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[39@@g@@seaweed, 26@@d@@that, 29@@p@@almost, 33@@d@@column, 17@@p@@sullen, 1@@s@@contrast-01, 24@@p@@old, 4@@d@@moon, 31@@a@@and, 10@@d@@and, 14@@s@@ebb-01, 22@@p@@that, 23@@s@@light, 34@@s@@gay-01, 25@@d@@spire, 20@@s@@see-01, 38@@s@@green-02, 13@@d@@tide, 19@@d@@i, 32@@s@@white-03, 12@@p@@still, 28@@p@@wave, 5@@g@@go-01, 3@@p@@that, 6@@a@@over, 9@@d@@west, 36@@d@@festoon]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
2	process,	_	process,	NNP	O	_	mean-01	_	0	IGNORE	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	you’ll	_	you’ll	NNS	O	_	mean-01	_	0	IGNORE	true
5	recall	_	recall	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	MOD_o	true
6	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
7	What	what	what	WP	O	_	amr-unknown	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
9	Anthropology?	anthropology?	anthropology?	NN	O	_	thing	_	0	IGNORE	true
10	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
11	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	enculturation	_	enculturation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@call-01, 5@@s@@recall-02, 12@@d@@enculturation, 1@@d@@this]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	term	_	term	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
3	Nexus	_name_	Nexus	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
5	applied	_	apply	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	to	_	to	IN	O	_	or	_	0	IGNORE	true
7	sentences,	_	sentences,	NNP	O	_	mean-01	_	0	IGNORE	true
8	structures	_	structure	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	similar	_	similar	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	8	MOD_s	true
10	to	_	to	IN	O	_	instead-of-91	_	0	IGNORE	true
11	sentences	_	sentence	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_o	true
13	sentences	_	sentence	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	in	_	in	IN	O	_	and	_	0	IGNORE	true
15	formation,	_	formation,	NNS	O	_	and	_	0	IGNORE	true
16	in	_	in	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	i	(s(), o())	5	MOD_o	true
17	which	_	which	WDT	O	_	name	_	0	IGNORE	true
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	19	MOD_mod	true
19	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	expressed	_	express	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	21	MOD_mod	true
24	unit;	_	unit;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
25	e.g.,	_	e.g.,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
26	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	rained,	_	rained,	VBZ	O	_	mean-01	_	0	IGNORE	true
28	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
29	ran	_	run	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-02	(mod(), s())	21	MOD_mod	true
30	indoors	_	indoors	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@i, 9@@s@@resemble-01, 18@@explicitanon0@@2, 29@@v@@run-02, 12@@a@@and, 2@@s@@term-01, 8@@d@@structure, 13@@d@@sentence, 30@@b@@indoors, 19@@d@@concept, 5@@s@@apply-02, 3@@d@@Nexus, 11@@d@@sentence, 23@@explicitanon0@@1, 28@@d@@he, 21@@s@@express-01]
sentence=1	Thus,	_name_	Thus,	NNP	O	_	and	_	0	IGNORE	true
2	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	determine	_	determine	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
6	level	_	level	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	APP_o	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	uncertainty	_	uncertainty	NN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	APP_mod	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	individuals	_	individual	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
12	are	_	be	VBP	O	_	possible-01	_	0	IGNORE	true
13	subject,	_	subject,	NNS	O	_	thing	_	0	IGNORE	true
14	stimulating	_	stimulate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	8	APP_mod	true
16	discouraging	_	discouraging	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_op2	true
17	transactions	_	transaction	NNS	O	(d<root> / --LEX--)	transact-01	()	15	APP_o	true
18	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[8@@explicitanon0@@-, 3@@p@@also, 11@@d@@individual, 16@@s@@discouraging-01, 15@@a@@or, 14@@s@@stimulate-01, 17@@d@@transact-01, 6@@s@@level, 4@@s@@determine-01, 2@@d@@institution]
sentence=1	For	for	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
2	instance,	_	instance,	NNP	O	_	and	_	0	IGNORE	true
3	those	_	those	DT	O	_	that	_	0	IGNORE	true
4	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
5	an	_	an	DT	O	_	person	_	0	IGNORE	true
6	interest	_	interest	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	17	MOD_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	deceiving	_	deceive	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	public	_	public	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	may	_	may	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
13	set	_	set	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-03	(s(), o())	12	APP_o	true
14	up	_	up	RP	O	_	cause-01	_	0	IGNORE	true
15	parallel	_	parallel	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	MOD_s	true
16	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	that	_	that	WDT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
18	ostensibly	_	ostensibly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	suppose-01	(mod())	19	MOD_mod	true
19	guarantee	_	guarantee	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
20	expertise,	_	expertise,	XX	O	_	and	_	0	IGNORE	true
21	taking	_	take	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	16	MOD_s	true
22	advantage	_	advantage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
23	of	_	of	IN	O	_	thing	_	0	IGNORE	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	21	APP_o2	true
26	in	_	in	IN	O	_	thing	_	0	IGNORE	true
27	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
28	these	_	these	DT	O	_	person	_	0	IGNORE	true
29	parallel	_	parallel	JJ	O	_	$LEMMA$	_	0	IGNORE	true
30	institutions	_	institution	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	mimic	_	mimic	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	APP_mod	true
32	legitimate	_	legitimate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	33	MOD_s	true
33	institutions	_	institution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
34	to	_	to	TO	O	_	thing	_	0	IGNORE	true
35	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	21	MOD_mod	true
36	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	39	APP_s	true
38	are	_	be	VBP	O	_	person	_	0	IGNORE	true
39	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-over-12	(s())	35	APP_o	true
40	in	_	in	RP	O	_	i	_	0	IGNORE	true
41	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[21@@b@@take-01, 25@@t@@way, 33@@d@@institution, 12@@f@@possible-01, 13@@s@@set-up-03, 17@@d@@that, 32@@s@@legitimate-02, 18@@p@@suppose-01, 6@@o@@interest-01, 11@@d@@public, 39@@s@@take-over-12, 15@@s@@parallel, 8@@s@@deceive-01, 19@@s@@guarantee-01, 16@@d@@institution, 37@@d@@person, 35@@s@@ensure-01, 22@@d@@advantage, 10@@s@@general-02, 31@@s@@mimic-01]
sentence=1	What	what	what	WP	O	_	have-org-role-91	_	0	IGNORE	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
3	do	_	do	VBP	O	_	$LEMMA$-02	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	mark	_	mark	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	11	APP_op1	true
7	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	cameras	_	camera	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
12	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
13	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
14	patient	_	patient	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	16	APP_s	true
15	will	_	will	MD	O	_	person	_	0	IGNORE	true
16	go	_	go	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-02	(s(), o())	11	APP_op2	true
17	up	_	up	RP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
18	to	_	to	IN	O	_	-	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	OR,	_name_	OR,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
21	have	_	have	VBP	O	(d<root> / --LEX--)	$LEMMA$-03	()	11	APP_op3	true
22	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
23	melanoma,	_	melanoma,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	wide	_	wide	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	excision	_	excision	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
27	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
28	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
29	melanoma,	_	melanoma,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
30	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
31	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
32	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
34	try	_	try	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_op1	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	43	APP_s	true
37	the	_	the	DT	O	_	thing	_	0	IGNORE	true
38	lymph	_	lymph	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	node	_	node	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
40	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
41	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	marked	_	mark	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
43	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	56	APP_o	true
44	take	_	take	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-11	(s())	43	APP_op2	true
45	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
46	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
47	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
48	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
49	well	_	well	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	44	MOD_mod	true
50	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
51	make	_	make	VB	O	_	cause-01	_	0	IGNORE	true
52	sure	_	sure	JJ	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	en$LEMMA$-01	(mod(), s())	44	MOD_mod	true
53	there's	_	there'	NNS	O	_	-	_	0	IGNORE	true
54	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	55	MOD_mod	true
55	metastasis	_	metastasis	NN	O	(d<root> / --LEX--)	$LEMMA$	()	52	APP_s	true
56	.	_	.	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	multi-sentence	(s(), o())	11	MOD_s	true

nodealignment=[2@@d@@we, 7@@d@@it, 55@@d@@metastasis, 31@@n@@then, 56@@s@@multi-sentence, 14@@p@@person, 25@@s@@wide-02, 26@@s@@excision-01, 12@@n@@then, 17@@d@@up, 36@@s@@find-01, 10@@d@@camera, 38@@p@@lymph, 49@@p@@as-well, 39@@d@@node, 34@@s@@try-01, 44@@s@@take-out-11, 16@@g@@go-02, 14@@f@@patient, 52@@i@@ensure-01, 14@@h@@have-rel-role-91, 43@@a@@and, 42@@s@@mark-01, 54@@explicitanon0@@-, 11@@a@@and, 21@@d@@have-03, 6@@b@@mark-01]
sentence=1	"However,	"however,	"However,	NFP	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	(d<root> / --LEX--)	person	()	23	APP_o	true
3	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	fuselage	_	fuselage	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	trainer,	_	trainer,	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	23	APP_s	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	astronaut	_	astronaut	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
9	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
10	[former	_	[former	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
11	Museum	museum	Museum	NNP	O	(d<root> / --LEX--)	_NAME_	()	9	APP_s	true
12	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
13	Flight	flight	Flight	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	fly-01	(mod())	11	MOD_mod	true
14	CEO]	ceo]	CEO]	NNP	O	_	have-org-role-91	_	0	IGNORE	true
15	Bonnie	bonnie	Bonnie	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	8	MOD_mod	true
16	Dunbar	dunbar	Dunbar	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
17	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
18	been	_	be	VBN	O	_	person	_	0	IGNORE	true
19	trained	_	train	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_mod	true
20	on,	_	on,	:	O	_	and	_	0	IGNORE	true
21	will	_	will	MD	O	_	thing	_	0	IGNORE	true
22	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	call	_	call	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
24	the_Museum_of_Flight	_name_	Flight	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	23	MOD_mod	true
25	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o2	true
26	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@_NAME_, 9@@s@@include-01, 19@@s@@train-01, 25@@d@@home, 10@@n@@_NAME_, 23@@b@@call-01, 15@@p@@_NAME_, 4@@p@@fuselage, 24@@p@@_NAME_, 3@@p@@full, 7@@p@@every, 16@@p@@person, 22@@n@@soon, 16@@n@@_NAME_, 5@@p@@and, 2@@d@@person, 13@@p@@fly-01, 8@@d@@astronaut]
sentence=1	Yet	yet	yet	CC	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	turning	_	turn	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
4	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
5	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	past,	_	past,	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	have-concession-91	(s())	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	begins	_	begin	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
11	anew	_	anew	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	us,	_	us,	JJ	O	_	mean-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	we	_	we	PRP	O	_	$LEMMA$	_	8	IGNORE	true
18	shall	_	shall	MD	O	_	person	_	0	IGNORE	true
19	live	_	live	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	act	_	act	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	MOD_s	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	others	_	other	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	will	_	will	MD	O	_	person	_	0	IGNORE	true
25	write	_	write	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
26	about	_	about	IN	O	_	name	_	0	IGNORE	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@d@@history, 10@@s@@begin-01, 5@@d@@point, 11@@t@@anew, 7@@s@@have-concession-91, 3@@s@@turn-01, 25@@s@@write-01, 8@@a@@and, 23@@d@@other, 21@@s@@act-02, 19@@s@@live-01, 9@@d@@history]
sentence=1	Future	future	future	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	studies	_	study	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
3	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	include	_	include	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	9	MOD_mod	true
8	age	_	age	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	range	_	range	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
12	to	_	to	TO	O	_	and	_	0	IGNORE	true
13	document	_	document	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	age	_	age	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	13	APP_o	true
16	at	_	at	IN	O	_	year	_	0	IGNORE	true
17	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
18	adult-like	_	adult-like	JJ	O	(d<root> / --LEX--)	bigfoot	()	19	APP_s	true
19	performance	_	performance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	perform-02	(s())	20	APP_s	true
20	emerges	_	emerge	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_mod	true
21	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[18@@d@@bigfoot, 15@@n@@age-01, 9@@s@@range-01, 2@@d@@study-01, 5@@s@@include-01, 11@@d@@child, 20@@s@@emerge-01, 3@@s@@recommend-01, 7@@m@@more, 19@@s@@perform-02, 7@@f2@@large, 8@@p@@age, 4@@p@@also, 1@@n@@future, 13@@s@@document-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	baptized	_	baptize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
6	about	_	about	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	5	APP_op1	true
7	360	_	360	CD	O	(d<root> / date-entity  :year (explicitanon0 / --LEX--))	_NUMBER_	()	6	APP_op1	true
8	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
9	366,	_	366,	CD	O	_	and	_	0	IGNORE	true
10	when	_	when	WRB	O	_	name	_	0	IGNORE	true
11	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	had	_	have	VBD	O	_	person	_	0	IGNORE	true
13	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (s<o>)  :ARG0 (y<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	4	MOD_mod	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	Rome	_name_	Rome	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	friend	_	friend	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	19	MOD_s	true
19	Bonosus	_name_	Bonosus	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
20	of	_	of	IN	O	_	name	_	0	IGNORE	true
21	Sardica	_name_	Sardica	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	18	MOD_mod	true
22	(who	_	(who	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	30	MOD_s	true
24	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
25	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	45	MOD_s	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
27	have	_	have	VB	O	_	person	_	0	IGNORE	true
28	been	_	be	VBN	O	_	person	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
31	Bonosus	_name_	Bonosus	NNP	O	_	$LEMMA$	_	0	IGNORE	true
32	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
33	Jerome	_name_	Jerome	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	identifies	_	identify	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	19	MOD_o	true
35	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
36	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
37	friend	_	friend	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	34	APP_o2	true
38	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
39	went	_	go	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	37	MOD_s	true
40	to	_	to	TO	O	_	person	_	0	IGNORE	true
41	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	APP_o	true
42	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
43	a	_	a	DT	O	_	1	_	0	IGNORE	true
44	hermit	_	hermit	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
45	on	_	on	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	cause-01	(mod())	4	MOD_mod	true
46	an	_	an	DT	O	_	1	_	0	IGNORE	true
47	island	_	island	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
48	in	_	in	IN	O	_	i	_	0	IGNORE	true
49	the	_	the	DT	O	_	person	_	0	IGNORE	true
50	Adriatic)	_name_	Adriatic)	NNP	O	_	_NAME_	_	0	IGNORE	true
51	to	_	to	TO	O	_	and	_	0	IGNORE	true
52	pursue	_	pursue	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	41	MOD_mod	true
53	rhetorical	_	rhetorical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
54	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	56	APP_s	true
55	philosophical	_	philosophical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	54	MOD_mod	true
56	studies	_	study	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	APP_o	true
57	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@n@@_NAME_, 7@@d@@date-entity, 18@@b@@friend, 23@@s@@possible-01, 3@@explicitanon0@@-, 53@@p@@rhetorical, 1@@d@@He, 15@@c@@city, 18@@h@@have-rel-role-91, 13@@g@@go-02, 45@@b@@cause-01, 25@@s@@possible-01, 37@@p@@person, 5@@w@@until, 30@@s@@same-01, 33@@p@@person, 26@@explicitanon0@@-, 21@@n@@_NAME_, 37@@h@@have-rel-role-91, 55@@p@@philosophical, 37@@f@@friend, 41@@s@@live-01, 19@@n@@_NAME_, 47@@b@@island, 52@@s@@pursue-01, 44@@p@@hermit, 39@@c@@go-02, 33@@n@@_NAME_, 4@@s@@baptize-01, 34@@b@@identify-01, 7@@explicitanon0@@_NUMBER_, 56@@s@@study-01, 54@@d@@and, 6@@o@@about]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
4	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	future	_	future	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	APP_o	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	the	_	the	DT	O	_	name	_	0	IGNORE	true
10	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	region	_	region	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_mod	true
15	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
16	in	_	in	IN	O	_	after	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	state	_	state	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	mutual	_	mutual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	respect	_	respect	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	15	APP_o	true
23	cooperation,	_	cooperation,	NNS	O	_	and	_	0	IGNORE	true
24	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
25	interference	_	interference	NN	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	interfere-01	(mod(), s())	15	MOD_mod	true
26	in	_	in	IN	O	_	i	_	0	IGNORE	true
27	each	_	each	DT	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
28	other’s	_	other’s	NN	O	_	_NAME_	_	0	IGNORE	true
29	affairs	_	affair	NNS	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	25	APP_s	true
30	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[24@@explicitanon0@@-, 10@@d@@country, 22@@a@@and, 27@@d@@each, 21@@d@@respect-01, 14@@s@@possible-01, 13@@b@@region, 2@@s@@hope-01, 20@@p@@mutual, 5@@n@@future, 1@@d@@i, 25@@b@@interfere-01, 29@@s@@affair-02, 15@@s@@live-01, 18@@t@@state, 8@@p@@all]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	tracks	_	track	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_mod	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
5	demo	_	demo	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	from	_	from	IN	O	_	be-$LEMMA$-91	_	0	IGNORE	true
8	submicron	_	submicron	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	carbonyl	_	carbonyl	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	iron	_	iron	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	particles	_	particle	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	0	ROOT	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	shot	_	shoot	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
15	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	aerogel	_	aerogel	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
18	a	_	a	DT	O	_	person	_	0	IGNORE	true
19	particle	_	particle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	accelerator	_	accelerator	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	modified	_	modify	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	20	MOD_s	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	accelerate	_	accelerate	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_o	true
24	dust	_	dust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
27	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	high	_	high	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	23	APP_o2	true
29	speeds,	_	speeds,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	simulate	_	simulate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
32	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
33	interstellar	_	interstellar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
34	dust	_	dust	NN	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
35	impacts	_	impact	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
36	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	we're	_	we're	NN	O	_	multi-sentence	_	0	IGNORE	true
38	looking	_	look	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	35	MOD_o	true
39	for	_	for	IN	O	_	name	_	0	IGNORE	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@use-01, 25@@d@@particle, 14@@s@@shoot-01, 16@@d@@aerogel, 9@@p@@carbonyl, 35@@s@@impact-01, 33@@p@@interstellar, 23@@b@@accelerate-01, 10@@p@@iron, 20@@d@@accelerator, 11@@a@@particle, 2@@d@@track, 38@@s@@look-01, 5@@b@@demo, 8@@p@@submicron, 34@@d@@dust, 21@@o@@modify-01, 27@@s@@very, 24@@p@@dust, 31@@i@@simulate-01, 28@@d@@high-02, 19@@p@@particle]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	remember	_	remember	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	6	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_s	true
5	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	ads	_	ad	NNS	O	(d<root> / --LEX--)	$LEMMA$vertise-01	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
9	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
10	put	_	put	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	said,	_	said,	NNP	O	_	and	_	0	IGNORE	true
13	"If	"if	"If	.	O	_	cause-01	_	0	IGNORE	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	think	_	think	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
16	nice	_	nice	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	girls	_	girl	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	MOD_o	true
20	S&M,"	s&m,"	S&M,"	NNP	O	_	-	_	0	IGNORE	true
21	--	_	--	:	O	_	cause-01	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	forgot	_	forget	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
24	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	rest	_	rest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
30	-	_	-	:	O	_	thing	_	0	IGNORE	true
31	-	_	-	:	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@s@@remember-01, 19@@s@@do-02, 10@@s@@put-01, 23@@s@@forget-01, 15@@s@@think-01, 14@@d@@you, 18@@explicitanon0@@-, 3@@explicitanon0@@1, 16@@s@@nice-01, 26@@d@@rest, 17@@d@@girl, 6@@d@@advertise-01, 29@@s@@say-01, 1@@d@@i, 4@@s@@include-91]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	would	_	would	MD	O	_	person	_	0	IGNORE	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
4	like,	_	like,	VB	O	_	person	_	0	IGNORE	true
5	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
6	behalf	_	behalf	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	Albania,	_name_	albania,	CD	O	_	_NAME_	_	0	IGNORE	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	convey	_	convey	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
11	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	Secretary-General	secretary-general	Secretary-General	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	secretary	()	10	APP_o2	true
14	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	highest	_	high	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	high-02	(s())	16	MOD_s	true
16	appreciation	_	appreciation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	understand-01	(s(), o())	10	APP_o	true
17	for	_	for	IN	O	_	thing	_	0	IGNORE	true
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	leading	_	lead	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	MOD_s	true
20	contribution	_	contribution	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	contribute-01	(s())	16	APP_o	true
21	to	_	to	IN	O	_	name	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	fulfilment	_	fulfilment	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	better-01	(s())	30	APP_op1	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	historical	_	historical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	history	(mod())	27	MOD_mod	true
27	mission	_	mission	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	23	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	the_United_Nations	_name_	Nations	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	27	APP_poss	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
31	to	_	to	IN	O	_	person	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	aspirations	_	aspiration	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	30	APP_op2	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	our	_	our	PRP$	O	_	$LEMMA$	_	10	IGNORE	true
36	peoples	_	people	NNS	O	(d<root> / --LEX--)	person	()	33	APP_poss	true
37	for	_	for	IN	O	_	name	_	0	IGNORE	true
38	a	_	a	DT	O	_	1	_	0	IGNORE	true
39	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	40	MOD_s	true
40	world	_	world	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
41	in	_	in	IN	O	_	i	_	0	IGNORE	true
42	which	_	which	WDT	O	_	name	_	0	IGNORE	true
43	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
44	peace,	_	peace,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
45	democracy	_	democracy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op1	true
46	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	49	APP_o	true
47	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	48	MOD_mod	true
48	prosperity	_	prosperity	NN	O	(d<root> / --LEX--)	prosper-01	()	46	APP_op2	true
49	reign	_	reign	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	MOD_s	true
50	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[40@@b@@world, 46@@a@@and, 36@@d@@person, 29@@o2@@organization, 13@@h@@have-org-role-91, 13@@e@@secretary, 33@@m@@aspiration, 14@@d@@our, 3@@p@@also, 48@@d@@prosper-01, 26@@p@@history, 13@@p@@person, 10@@b@@convey-01, 49@@s@@reign-01, 19@@s@@lead-01, 15@@b2@@high-02, 16@@s@@understand-01, 39@@m@@more, 27@@m@@mission, 43@@p@@only, 15@@m@@most, 1@@d@@i, 20@@s@@contribute-01, 45@@d@@democracy, 39@@b@@good-02, 47@@p@@economy, 29@@n@@_NAME_, 30@@a@@and, 23@@s@@better-01]
sentence=1	Discussing	discussing	discuss	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	14	MOD_s	true
2	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	concern	_	concern	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_o	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
7	statement,	_	statement,	NNP	O	_	_NAME_	_	0	IGNORE	true
8	Malaysia's	_name_	Malaysia's	NNP	O	_	_NAME_	_	0	IGNORE	true
9	Prime	prime	Prime	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	6	MOD_mod	true
10	Minister,_Najib_Razak_said,	_name_	said,	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	name	(mod())	14	MOD_mod	true
11	"We	"we	"we	CD	O	_	_NAME_	_	0	IGNORE	true
12	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
14	contact	_	contact	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
15	with	_	with	IN	O	_	-	_	0	IGNORE	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	relevant	_	relevant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
18	parties,	_	parties,	NNP	O	_	and	_	0	IGNORE	true
19	with	_	with	IN	O	_	person	_	0	IGNORE	true
20	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
22	share	_	share	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	MOD_s	true
23	the	_	the	DT	O	(d<root> / --LEX--)	person	()	14	APP_s	true
24	desire	_	desire	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	22	APP_o	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
27	a	_	a	DT	O	_	thing	_	0	IGNORE	true
28	solution	_	solution	NN	O	(d<root> / --LEX--)	solve-01	()	26	APP_o	true
29	to	_	to	IN	O	_	person	_	0	IGNORE	true
30	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
31	crisis"	_	crisis"	RB	O	_	and	_	0	IGNORE	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@c@@discuss-01, 9@@p@@prime, 10@@explicitanon0@@name, 21@@d@@we, 30@@p@@this, 6@@s@@public-02, 23@@d@@person, 16@@p@@all, 22@@c@@share-01, 26@@s@@find-01, 17@@s@@relevant-01, 3@@s@@concern-01, 14@@s@@contact-01, 24@@c@@desire-01, 28@@d@@solve-01]
sentence=1	Dalton’s	dalton’s	Dalton’s	NNP	O	_	_NAME_	_	0	IGNORE	true
2	atomic	_	atomic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	atom	(mod())	3	MOD_mod	true
3	theory	_	theory	NN	O	(d<root> / --LEX--)	$FORM$	()	4	APP_s	true
4	provides	_	provide	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	microscopic	_	microscopic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	explanation	_	explanation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	explain-01	(s())	4	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	macroscopic	_	macroscopic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	properties	_	property	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_s	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	matter	_	matter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	you’ve	_	you’ve	NNP	O	_	thing	_	0	IGNORE	true
17	learned	_	learn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
18	about	_	about	IN	O	_	thing	_	0	IGNORE	true
19	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[4@@s@@provide-01, 3@@d@@theory, 17@@s@@learn-01, 11@@p@@macroscopic, 2@@p@@atom, 7@@s@@explain-01, 10@@explicitanon0@@many, 6@@p@@microscopic, 12@@s@@property, 14@@d@@matter]
sentence=1	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	hardest	_	hard	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	hard-02	(s())	3	MOD_s	true
3	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	running	_	run	VBG	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
6	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	business,	_	business,	NNS	O	_	cause-01	_	0	IGNORE	true
8	which	_	which	WDT	O	_	i	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
10	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	17	MOD_s	true
11	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	13	APP_s	true
12	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	APP_o	true
14	it,	_	it,	NNP	O	_	thing	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	relationship	_	relationship	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	relation-03	(s(), o())	0	ROOT	true
18	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
19	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
20	wife	_	wife	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	21	APP_s	true
21	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	17	APP_s	true
22	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
23	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
24	gals	_	gal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op1	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_o	true
26	with	_	with	IN	O	_	-	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	customers	_	customer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
29	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[2@@m@@most, 3@@d@@thing, 20@@p@@person, 25@@a@@and, 5@@r@@run-01, 2@@b2@@hard-02, 28@@d@@customer, 6@@d@@this, 12@@explicitanon0@@-, 21@@s@@have-03, 20@@h@@have-rel-role-91, 24@@d@@gal, 20@@f@@wife, 17@@t@@relation-03, 11@@d@@person, 13@@s@@do-02, 10@@s@@cause-01]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
3	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
4	been	_	be	VBN	O	_	monetary-quantity	_	0	IGNORE	true
5	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	change	_	change	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_s	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	concept	_	concept	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	goals	_	goal	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
16	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	17	MOD_s	true
17	strive	_	strive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
18	for	_	for	IN	O	_	include-91	_	0	IGNORE	true
19	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	meet	_	meet	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
24	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
25	responsibilities	_	responsibility	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	responsible-03	(s())	23	APP_s	true
26	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	its	_	its	PRP$	O	_	i	_	0	IGNORE	true
28	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	29	APP_op1	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	25	APP_s	true
30	those	_	those	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
32	depend	_	depend	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	29	APP_op2	true
33	upon	_	upon	IN	O	_	-	_	0	IGNORE	true
34	it	_	it	PRP	O	_	i	_	0	IGNORE	true
35	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@o@@meet-01, 1@@s@@contrast-01, 14@@p@@this, 6@@s@@change-01, 15@@d@@country, 5@@explicitanon0@@-, 28@@d@@person, 16@@s@@obligate-01, 29@@a@@and, 25@@s@@responsible-03, 9@@d@@concept, 32@@d@@depend-01, 17@@s@@strive-01, 12@@p@@goal]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	talked	_	talk	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-of-91	(s())	2	MOD_s	true
4	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	kind	_	kind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	that	_	that	WDT	O	_	name	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
12	for	_	for	IN	O	_	member	_	0	IGNORE	true
13	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
14	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
16	for	_	for	IN	O	_	member	_	0	IGNORE	true
17	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_poss	true
18	family	_	family	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	15	APP_op2	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_o	true
20	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	those	_	those	DT	O	_	that	_	0	IGNORE	true
22	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
23	are	_	be	VBP	O	_	person	_	0	IGNORE	true
24	citizens	_	citizen	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	19	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_poss	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	30	MOD_mod	true
30	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
31	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
32	changing	_	change	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
33	years,	_	years,	NNS	O	_	mean-01	_	0	IGNORE	true
34	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
35	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	America	_name_	America	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
38	in	_	in	IN	O	_	i	_	0	IGNORE	true
39	which	_	which	WDT	O	_	name	_	0	IGNORE	true
40	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
41	believed,	_	believed,	VBZ	O	_	person	_	0	IGNORE	true
42	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	52	MOD_mod	true
43	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
44	a	_	a	DT	O	_	person	_	0	IGNORE	true
45	Democrat	_name_	Democrat	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op1	true
46	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	50	APP_o	true
47	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
48	a	_	a	DT	O	_	thing	_	0	IGNORE	true
49	candidate,	_	candidate,	NNP	O	_	and	_	0	IGNORE	true
50	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_s	true
51	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
52	a	_	a	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	MOD_o	true
53	citizen	_	citizen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_op2	true
54	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@o@@and, 8@@n@@_NAME_, 2@@s@@talk-01, 35@@p@@kind, 32@@s@@change-01, 53@@d@@citizen, 1@@d@@i, 20@@p@@all, 8@@c@@country, 11@@s@@want-01, 24@@m@@citizen, 6@@d@@kind, 26@@p@@this, 27@@d@@country, 50@@s@@contrast-01, 30@@p@@difficult, 14@@d@@family, 19@@a@@and, 29@@p@@this, 37@@b@@America, 42@@explicitanon0@@-, 46@@a@@or, 45@@d@@Democrat, 17@@d@@your, 52@@s@@contrast-01, 18@@m@@family, 3@@s@@instead-of-91]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	field	_	field	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	L2	l2	L2	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
6	research,	_	research,	NNP	O	_	have-condition-91	_	0	IGNORE	true
7	given	_	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	25	MOD_o	true
8	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
9	importance	_	importance	NN	O	(r<root> / --LEX--  :domain (q<dom>))	important	(dom())	12	APP_op1	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	50	_	50	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	15	MOD_mod	true
15	calls	_	call	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	12	APP_op2	true
16	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
18	in	_	in	IN	O	_	mass	_	0	IGNORE	true
19	L2	l2	L2	NNP	O	_	name	_	0	IGNORE	true
20	research	_	research	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$-01	(mod())	15	MOD_mod	true
21	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
22	we	_	we	PRP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
23	identified,	_	identified,	NNP	O	_	and	_	0	IGNORE	true
24	one	_	one	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
25	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
26	expect	_	expect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_s	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	substantial	_	substantial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
30	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
31	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
32	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_s	true
33	studies	_	study	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
34	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	26	MOD_mod	true
35	now	_	now	RB	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_op1	true
36	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@replication, 15@@s@@call-03, 14@@explicitanon0@@_NUMBER_, 24@@d@@one, 17@@d@@replication-01, 28@@p@@substantial, 34@@w@@by, 25@@s@@possible-01, 20@@b@@research-01, 12@@a@@and, 26@@s@@expect-01, 29@@explicitanon0@@number, 31@@s@@publish-01, 32@@d@@replication-01, 33@@s@@study-01, 22@@b@@we, 9@@r@@important, 7@@s@@give-01, 5@@p@@_NAME_, 3@@b@@field, 35@@d@@now]
sentence=1	Thailand	_name_	Thailand	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
3	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	4	MOD_mod	true
4	cracked	_	crack	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-down-06	(s(), o())	0	ROOT	true
5	down	_	down	RP	O	_	bulb	_	0	IGNORE	true
6	on	_	on	IN	O	_	-	_	0	IGNORE	true
7	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	trafficking,	_	trafficking,	NNS	O	_	and	_	0	IGNORE	true
9	which	_	which	WDT	O	_	name	_	0	IGNORE	true
10	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
11	affected	_	affect	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_s	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	routes	_	route	NNS	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	11	APP_o	true
14	by	_	by	IN	O	_	government-organization	_	0	IGNORE	true
15	which	_	which	WDT	O	_	country	_	0	IGNORE	true
16	people-smugglers	_	people-smuggler	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	smuggle-01	()	17	APP_s	true
17	transport	_	transport	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_mod	true
18	migrants	_	migrant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	migrate-01	()	17	APP_o	true
19	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[3@@n@@recent, 18@@p2@@person, 1@@c@@country, 11@@s@@affect-01, 13@@t@@route, 7@@d@@human, 18@@e2@@migrate-01, 4@@s@@crack-down-06, 16@@p2@@person, 16@@e2@@smuggle-01, 1@@n@@_NAME_, 17@@s@@transport-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	have	_	have	VBP	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-03	(mod(), s(), o())	11	MOD_mod	true
4	a	_	a	DT	O	_	-	_	0	IGNORE	true
5	spare	_	spare	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	bedroom	_	bedroom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	aren’t	_	aren’t	IN	O	_	-	_	0	IGNORE	true
10	using,	_	using,	NNP	O	_	-	_	0	IGNORE	true
11	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	amr-unknown	(s(), o())	0	ROOT	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
14	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	who	_	who	WP	O	_	amr-unknown	_	0	IGNORE	true
19	wants	_	want	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	space	_	space	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[3@@m@@have-03, 13@@s@@sell-01, 15@@d@@space, 5@@s@@spare-02, 12@@explicitanon0@@-, 11@@s@@amr-unknown, 19@@s@@want-01, 6@@d@@bedroom, 2@@d@@you, 21@@s@@need-01, 17@@d@@someone]
sentence=1	Separate	separate	separate	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	colors	_	color	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$	(s())	1	APP_o	true
4	of	_	of	IN	O	_	thing	_	0	IGNORE	true
5	Skittles	skittles	Skittles	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
8	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	flavor	_	flavor	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o2	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	vodka	_	vodka	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	with	_	with	IN	O	_	-	_	0	IGNORE	true
14	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@b@@flavor-01, 1@@explicitanon0@@imperative, 3@@c@@color, 12@@d@@vodka, 7@@d@@you, 8@@s@@want-01, 5@@d@@Skittles, 3@@t@@thing, 1@@h@@separate-01]
sentence=1	There's	there's	There's	NNP	O	_	contrast-01	_	0	IGNORE	true
2	supplies,	_	supplies,	NNP	O	_	shit	_	0	IGNORE	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
4	there's	_	there'	NNS	O	_	contrast-01	_	0	IGNORE	true
5	wear	_	wear	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_op1	true
7	tear	_	tear	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_op2	true
8	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
9	maintenance,	_	maintenance,	NNS	O	_	and	_	0	IGNORE	true
10	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op3	true
11	bookkeeping	_	bookkeeping	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_op4	true
13	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
14	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	13	MOD_s	true
15	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
18	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	20	MOD_o	true
19	to	_	to	TO	O	_	event	_	0	IGNORE	true
20	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	MOD_o	true
21	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@d@@tear-01, 8@@d@@and, 6@@a@@and, 10@@d@@and, 5@@d@@wear-01, 18@@s@@obligate-01, 12@@a@@and, 14@@s@@resemble-01, 13@@d@@thing, 17@@d@@you, 15@@d@@that, 11@@d@@bookkeeping, 3@@a@@and, 20@@s@@do-02]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	3	MOD_s	true
3	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
6	thought	_	think	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_o	true
7	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	bookstore	_	bookstore	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
11	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
12	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	mixed	_	mix	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	APP_o2	true
14	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	copies	_	copy	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	13	APP_o	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	books	_	book	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
21	copies	_	copy	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_o2	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@b@@think-01, 5@@d@@i, 21@@d@@copy-01, 2@@m@@most, 2@@b2@@good-02, 13@@b@@mix-01, 20@@s@@use-01, 9@@p@@bookstore, 3@@d@@thing, 12@@d@@they, 16@@c@@copy-01, 16@@t@@thing, 15@@s@@new-01, 18@@d@@book, 8@@p@@this]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	have	_	have	VBP	O	_	person	_	0	IGNORE	true
3	been	_	be	VBN	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	achievement	_	achievement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	which	_	which	WDT	O	_	and	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	proud,	_	proud,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	7	MOD_s	true
15	achievements	_	achievement	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	achieve-01	(s())	14	APP_o	true
16	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
17	represent	_	represent	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	shared	_	share	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	share-01	(s())	20	MOD_s	true
20	efforts	_	effort	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Administration,	administration,	administration,	CD	O	_	$LEMMA$	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	Congress,	_name_	congress,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	26	APP_op2	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@s@@possible-01, 17@@s@@represent-01, 20@@s@@effort-01, 28@@d@@person, 14@@s@@mean-01, 7@@s@@achievement, 15@@s@@achieve-01, 10@@d@@we, 12@@p@@all, 1@@d@@They, 25@@d@@congress,, 26@@a@@and, 19@@s@@share-01]
sentence=1	From	from	from	IN	O	_	cause-01	_	0	IGNORE	true
2	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	press	_	press	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	reports	_	report	VBZ	O	(r<root> / --LEX--  :ARG0 (y<s>)  :source-of (f<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
8	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
9	read,	_	read,	NNS	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	government-organization	_	0	IGNORE	true
11	Indian	_name_	indian	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
12	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	16	APP_s	true
13	appears	_	appear	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
14	to	_	to	TO	O	_	name	_	0	IGNORE	true
15	have	_	have	VB	O	_	person	_	0	IGNORE	true
16	taken	_	take	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-04	(o2(), s(), o())	13	APP_s	true
17	the	_	the	DT	O	_	name	_	0	IGNORE	true
18	threat	_	threat	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$en-01	(s())	16	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	Cyclone_Phailin	_name_	Phailin	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
21	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	seriously	_	seriously	RB	O	(d<root> / --LEX--)	serious-02	()	16	APP_o2	true
23	indeed	_	indeed	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[23@@p@@indeed, 11@@n@@_NAME_, 13@@s@@appear-02, 20@@p@@person, 5@@r@@report-01, 2@@p@@all, 11@@c@@country, 7@@d@@i, 16@@b@@take-04, 21@@s@@very, 12@@g@@government-organization, 18@@s@@threaten-01, 22@@d@@serious-02, 4@@p@@press, 20@@n@@_NAME_, 12@@g2@@govern-01]
sentence=1	One	one	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	thing	_	thing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
6	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
7	...	_	...	NFP	O	_	and	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
9	that	_	that	DT	O	_	resemble-01	_	0	IGNORE	true
10	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	22	MOD_s	true
11	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
12	research,	_	research,	NNS	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	outcome	_	outcome	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
17	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
19	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	14	MOD_o	true
20	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
21	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	22	MOD_mod	true
22	uncertain	_	uncertain	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	-	(s())	2	APP_dom	true
23	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[22@@explicitanon0@@-, 22@@p@@-, 17@@d@@we, 21@@s@@high, 10@@s@@resemble-01, 11@@d@@all, 1@@explicitanon0@@1, 6@@s@@say-01, 14@@d@@outcome, 5@@s@@recommend-01, 4@@d@@i, 19@@s@@do-02, 2@@r@@thing]
sentence=1	Okay,	_name_	Okay,	NNP	O	_	expressive	_	0	IGNORE	true
2	so	_	so	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
3	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
4	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	basis	_	basis	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	base-02	(s(), o())	2	APP_s	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
9	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
10	shortly	_	shortly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	short-07	(s())	11	MOD_s	true
11	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	the_Soviet_Union	_name_	Union	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	collapsed	_	collapse	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
14	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[10@@s@@short-07, 11@@n@@after, 9@@n@@then, 6@@s@@base-02, 2@@s@@so, 12@@n@@_NAME_, 12@@c@@country, 3@@d@@that, 13@@s@@collapse-01]
sentence=1	Byron	_name_	Byron	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	fell	_	fall	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-07	(o(s()))	14	APP_op1	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	love	_	love	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	with	_	with	IN	O	_	have-rel-role-91	_	0	IGNORE	true
6	Mary_Chaworth,	_name_	chaworth,	CD	O	(d<root> / --LEX--)	_NAME_	()	14	APP_op3	true
7	whom	_	whom	WP	O	_	name	_	0	IGNORE	true
8	he	_	he	PRP	O	_	person	_	0	IGNORE	true
9	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
10	while	_	while	IN	O	_	i	_	0	IGNORE	true
11	at	_	at	IN	O	_	be-located-at-91	_	0	IGNORE	true
12	school,	_	school,	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	[6]	_name_	[6]	XX	O	_	mean-01	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
15	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	14	APP_op2	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	refused	_	refuse	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
22	return	_	return	VB	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-01	(s())	20	APP_s	true
23	to	_	to	IN	O	_	person	_	0	IGNORE	true
24	Harrow	_name_	Harrow	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	September_1803	_name_	1803	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	22	MOD_mod	true
27	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@c@@city, 6@@d@@_NAME_, 14@@a@@and, 20@@s@@refuse-01, 26@@d@@date-entity, 1@@n@@_NAME_, 26@@explicitanon2@@_NUMBER_, 9@@s@@meet-02, 4@@s@@love-01, 18@@s@@cause-01, 12@@n@@school,, 2@@o@@fall-07, 24@@n@@_NAME_, 1@@p@@person, 22@@p@@return-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	22	APP_s	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	2	APP_o	true
5	these	_	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_o	true
6	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
7	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	you	_	you	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
11	you	_	you	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
12	guys	_	guy	NNS	O	_	$LEMMA$	_	0	IGNORE	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	been	_	be	VBN	O	_	person	_	0	IGNORE	true
15	asking	_	ask	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	APP_s	true
16	for	_	for	IN	O	_	thing	_	0	IGNORE	true
17	styling	_	styling	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
18	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	since	_	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
20	the	_	the	DT	O	_	and	_	0	IGNORE	true
21	beginning,	_	beginning,	NNS	O	(d<root> / --LEX--)	and	()	19	APP_op1	true
22	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
23	I'm	i'm	i'm	PRP	O	_	cause-01	_	0	IGNORE	true
24	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	glad	_	glad	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	22	APP_o	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	28	MOD_mod	true
28	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	25	APP_s	true
29	actual	_	actual	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	31	MOD_s	true
30	styling	_	styling	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	31	MOD_mod	true
31	products	_	product	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
32	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
33	I	i	I	PRP	O	_	1	_	0	IGNORE	true
34	can,	_	can,	VBP	O	_	and	_	0	IGNORE	true
35	um,	_	um,	VBP	O	_	mean-01	_	0	IGNORE	true
36	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	know,	_	know,	CD	O	_	mean-01	_	0	IGNORE	true
38	present	_	present	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
39	to	_	to	IN	O	_	and	_	0	IGNORE	true
40	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	guys	_	guy	NNS	O	_	$LEMMA$	_	0	IGNORE	true
42	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[28@@s@@have-03, 15@@s@@ask-02, 31@@d@@product, 29@@s@@actual-02, 27@@p@@final, 24@@s@@so, 8@@p@@you, 21@@d@@and, 4@@s@@get-05, 10@@s@@cause-01, 5@@d@@this, 30@@p@@styling-01, 17@@p@@styling-01, 25@@s@@glad-02, 19@@w@@since, 11@@p@@you, 38@@s@@present-01, 2@@c@@want-01, 18@@d@@product, 1@@d@@i, 9@@p@@guy, 22@@s@@cause-01]
sentence=1	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	person	_	0	IGNORE	true
4	transmedia	_	transmedia	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	system	_	system	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	in	_	in	IN	O	_	resemble-01	_	0	IGNORE	true
7	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
8	sense	_	sense	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	first	_	first	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	1	(mod())	10	MOD_mod	true
10	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
12	Marsha_Kinder	_name_	Kinder	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
13	(1991)	_	(1991)	NNP	O	_	mean-01	_	0	IGNORE	true
14	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
15	popularized	_	popularize	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
16	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
17	Henry_Jenkins	_name_	Jenkins	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
18	(2006),	_	(2006),	NN	O	_	have-org-role-91	_	0	IGNORE	true
19	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
20	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
21	media-hopping	_	media-hopping	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
22	networks	_	network	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
23	of	_	of	IN	O	_	person	_	0	IGNORE	true
24	intertextualities	_	intertextualitie	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
25	extend	_	extend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	APP_o	true
26	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
27	“storyworld”	_	“storyworld”	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	5	MOD_s	true
28	of	_	of	IN	O	_	thing	_	0	IGNORE	true
29	an	_	an	DT	O	_	thing	_	0	IGNORE	true
30	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	production	_	production	NN	O	(d<root> / --LEX--)	produce-01	()	25	APP_o	true
32	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@s@@media-hopping-01, 12@@n@@_NAME_, 31@@d@@produce-01, 24@@g@@intertextualitie, 5@@r@@system, 1@@d@@it, 4@@p@@transmedia, 15@@s@@popularize-01, 8@@t@@sense, 17@@n@@_NAME_, 10@@s@@use-01, 25@@s@@extend-01, 9@@p@@1, 22@@d@@network, 17@@p@@person, 27@@s@@and, 12@@p@@person, 30@@p@@original]
sentence=1	Such	such	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	formal	_	formal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	orientation	_	orientation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	typifies	_	typify	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	structural	_	structural	JJ	O	(d<root> / --LEX--)	structure	()	11	APP_s	true
11	equivalence	_	equivalence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	equal-01	(s())	6	APP_o	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	"gloss	_	"gloss	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	APP_o	true
16	translation"	_	translation"	NFP	O	_	mean-01	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
19	the	_	the	DT	O	_	company	_	0	IGNORE	true
20	translator	_	translator	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	translate-01	()	21	APP_s	true
21	aims	_	aim	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	15	APP_mod	true
22	at	_	at	IN	O	_	thing	_	0	IGNORE	true
23	reproducing	_	reproduce	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_o	true
24	as	_	as	IN	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal	(mod())	25	MOD_mod	true
25	literally	_	literally	RB	O	(d<root> / --LEX--)	literal	()	26	APP_op1	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
27	meaningfully	_	meaningfully	RB	O	(d<root> / --LEX--)	deceive-01	()	26	APP_op2	true
28	as	_	as	IN	O	_	equal	_	0	IGNORE	true
29	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
30	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
31	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
33	content	_	content	NN	O	(d<root> / --LEX--)	contain-01	()	32	APP_op2	true
34	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[20@@e2@@translate-01, 4@@d@@orientation, 27@@d@@deceive-01, 1@@p@@such, 20@@p2@@person, 6@@s@@typify-01, 32@@a@@and, 24@@s@@equal, 10@@d@@structure, 33@@d@@contain-01, 13@@s@@call-01, 21@@c@@aim-01, 8@@p@@type, 29@@s@@possible-01, 36@@p@@original, 11@@s@@equal-01, 26@@a@@and, 15@@p@@"gloss, 23@@s@@reproduce-01, 7@@p@@this, 31@@d@@form, 25@@d@@literal, 3@@p@@formal]
sentence=1	Apparently,_however,_Galois	_name_	Galois	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	did	_	do	VBD	O	_	person	_	0	IGNORE	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	ignore	_	ignore	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	Poisson's	_name_	Poisson's	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	4	MOD_s	true
6	advice,	_	advice,	NNP	O	_	and	_	0	IGNORE	true
7	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	began	_	begin	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op1	true
10	collecting	_	collect	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
13	mathematical	_	mathematical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	manuscripts	_	manuscript	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
16	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
17	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
18	prison,	_	prison,	NNS	O	_	and	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
20	continued	_	continue	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_op2	true
21	polishing	_	polish	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_s	true
22	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
23	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
25	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
26	release	_	release	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_op1	true
27	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
28	29_April_1832,	_name_	1832,	CD	O	_	$LEMMA$	_	0	IGNORE	true
29	[12]	_name_	[12]	XX	O	_	mean-01	_	0	IGNORE	true
30	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	26	MOD_mod	true
31	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	was	_	be	VBD	O	_	person	_	0	IGNORE	true
34	somehow	_	somehow	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	talked	_	talk	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	30	APP_op1	true
36	into	_	into	IN	O	_	-	_	0	IGNORE	true
37	a	_	a	DT	O	_	1	_	0	IGNORE	true
38	duel.	_	duel.	NN	O	_	$LEMMA$	_	0	IGNORE	true
39	[8	_	[8	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
40	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@p@@mathematical, 34@@t@@somehow, 16@@p@@still, 26@@d@@release-01, 39@@p@@[8, 11@@p@@all, 10@@s@@collect-01, 1@@n@@_NAME_, 19@@a@@and, 4@@s@@ignore-01, 14@@d@@manuscript, 9@@s@@begin-01, 30@@w@@after, 23@@d@@idea, 24@@w@@until, 3@@explicitanon0@@-, 1@@p@@person, 5@@s@@_NAME_, 35@@d@@talk-01, 7@@s@@cause-01, 21@@s@@polish-01, 20@@s@@continue-01]
sentence=1	It's	it's	it's	PRP	O	_	$LEMMA$-01	_	0	IGNORE	true
2	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	soft	_	soft	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	stone	_	stone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
7	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
8	easily	_	easily	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	easy-05	(s())	9	MOD_s	true
9	carve	_	carve	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[8@@s@@easy-05, 9@@s@@carve-01, 4@@d@@stone, 6@@d@@you, 2@@s@@very, 7@@s@@possible-01, 3@@s@@soft-02]
sentence=1	Padalecki	_name_	Padalecki	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
4	uncredited	_	uncredited	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	MOD_s	true
5	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	high	_	high	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	9	MOD_mod	true
9	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	bully	_	bully	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	2003's	_	2003'	NNS	O	_	_NAME_	_	0	IGNORE	true
13	comedy	_	comedy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
14	Cheaper	_name_	cheap	JJR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	cheap-02	(mod())	13	MOD_mod	true
15	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Dozen,	dozen,	dozen,	NN	O	_	_NAME_	_	0	IGNORE	true
18	which	_	which	WDT	O	_	and	_	0	IGNORE	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	played	_	play	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
21	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
22	being	_	be	VBG	O	_	person	_	0	IGNORE	true
23	asked	_	ask	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
24	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
25	fellow	_	fellow	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	actor	_	actor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_op2	true
27	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
28	friend	_	friend	NN	O	(b<root> / --LEX--  :ARG2-of (h / have-rel-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	1	MOD_s	true
29	Tom_Welling,	_name_	Welling,	NNP	O	_	mean-01	_	0	IGNORE	true
30	who	_	who	WP	O	_	person	_	0	IGNORE	true
31	played	_	play	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
32	Charlie_Baker,	_name_	baker,	NN	O	_	person	_	0	IGNORE	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	23	APP_s	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	director	_	director	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	1	MOD_s	true
36	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	movie,	_	movie,	NNS	O	_	_NAME_	_	0	IGNORE	true
39	who	_	who	WP	O	_	person	_	0	IGNORE	true
40	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
41	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
42	larger	_	large	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	large	(mod())	41	MOD_mod	true
43	than	_	than	IN	O	_	more	_	0	IGNORE	true
44	Charlie	_name_	Charlie	NNP	O	_	_NAME_	_	0	IGNORE	true
45	to	_	to	TO	O	_	person	_	0	IGNORE	true
46	pick	_	pick	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	40	APP_s	true
47	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
48	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
49	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 35@@o@@director, 28@@h@@have-rel-role-91, 14@@m@@more, 10@@p@@bully, 31@@s@@play-01, 40@@s@@want-01, 5@@d@@role, 14@@e@@cheap-02, 33@@a@@and, 28@@b@@friend, 35@@h@@have-org-role-91, 23@@s@@ask-01, 8@@p@@high-02, 26@@d@@actor, 35@@p@@person, 13@@p@@comedy, 9@@p@@school, 21@@w@@after, 2@@s@@have-03, 1@@p@@person, 20@@s@@play-01, 42@@m@@more, 46@@s@@pick-01, 42@@f2@@large, 41@@d@@someone, 25@@p@@fellow, 4@@s@@uncredited]
sentence=1	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
2	particular,	_	particular,	NNP	O	_	and	_	0	IGNORE	true
3	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	thing	_	0	IGNORE	true
6	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	about	_	about	IN	O	_	concern-02	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	relationship	_	relationship	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	relation-03	(s(), o())	6	APP_o	true
10	between	_	between	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	speed	_	speed	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	APP_s	true
13	at	_	at	IN	O	_	thing	_	0	IGNORE	true
14	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
15	blood	_	blood	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	flows	_	flow	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
19	pressure	_	pressure	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
20	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[12@@t@@speed, 4@@c@@want-01, 3@@d@@they, 6@@s@@know-01, 19@@d@@pressure, 15@@d@@blood, 9@@s@@relation-03, 16@@s@@flow-01]
sentence=1	Once	once	once	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	again,	_	again,	NNP	O	_	thing	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	8	MOD_mod	true
5	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
6	fundamental	_	fundamental	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
7	questions,	_	questions,	NNS	O	_	thing	_	0	IGNORE	true
8	disputed	_	dispute	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op1	true
9	in	_	in	IN	O	_	after	_	0	IGNORE	true
10	fifteen	_	fifteen	CD	O	(d<root> / --LEX--)	_NAME_	()	12	APP_op1	true
11	sixteen,	_	sixteen,	NNS	O	_	include-91	_	0	IGNORE	true
12	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
13	fifteen	_	fifteen	CD	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	seventeen,	_	seventeen,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	33	MOD_mod	true
16	again	_	again	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	in	_	in	IN	O	_	date-entity	_	0	IGNORE	true
18	Heidelberg,	heidelberg,	heidelberg,	CD	O	_	_NAME_	_	0	IGNORE	true
19	in	_	in	IN	O	_	12	_	0	IGNORE	true
20	April_of_fifteen	_name_	fifteen	CD	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	33	APP_s	true
21	eighteen,	_	eighteen,	NNP	O	_	and	_	0	IGNORE	true
22	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
23	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
24	Luther	_name_	Luther	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
25	had	_	have	VBD	O	_	person	_	0	IGNORE	true
26	opened	_	open	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_mod	true
27	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
28	assault	_	assault	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_o	true
29	on	_	on	IN	O	_	crime-02	_	0	IGNORE	true
30	scholastic	_	scholastic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
31	theology,	_	theology,	NNS	O	_	thing	_	0	IGNORE	true
32	were	_	be	VBD	O	_	person	_	0	IGNORE	true
33	debated	_	debate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
34	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@d@@fundamental, 26@@s@@open-01, 13@@d@@fifteen, 10@@d@@_NAME_, 30@@d@@scholastic, 16@@p@@again, 20@@n@@_NAME_, 24@@p@@person, 15@@b@@and, 24@@n@@_NAME_, 4@@o@@ordinal-entity, 12@@b@@and, 8@@d@@dispute-01, 20@@c@@city, 1@@p@@once, 28@@s@@assault-01, 4@@explicitanon0@@1, 33@@s@@debate-01]
sentence=1	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	citizen	_	citizen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
6	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	protection	_	protection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	protect-01	(s())	4	APP_o	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
11	property	_	property	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	entitled	_	entitle	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
16	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@d@@property, 4@@s@@have-03, 5@@explicitanon0@@-, 15@@s@@entitle-01, 7@@s@@protect-01, 3@@d@@citizen, 6@@p@@that, 10@@a@@and, 9@@d@@person]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	shows	_	show	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op1	true
4	what	_	what	WP	O	_	thing	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
6	can	_	can	MD	O	(d<root> / --LEX--)	possible-01	()	3	APP_o	true
7	achieve,	_	achieve,	VB	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	thing	(op2(), op1(), mod())	1	MOD_mod	true
8	what	_	what	WP	O	_	thing	_	0	IGNORE	true
9	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op2	true
10	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
12	discover,	_	discover,	NNS	O	_	thing	_	0	IGNORE	true
13	not	_	not	RB	O	_	-	_	0	IGNORE	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
15	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	distant	_	distant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
17	places,	_	places,	NNS	O	_	and	_	0	IGNORE	true
18	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	1	APP_op3	true
19	about	_	about	IN	O	_	contrast-01	_	0	IGNORE	true
20	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
22	own	_	own	JJ	O	_	person	_	0	IGNORE	true
23	planet	_	planet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
25	climate,	_	climate,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
26	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
27	NASA’s_Earth_System_Observatory	_name_	observatory	NN	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	24	APP_op2	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
30	launched	_	launch	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_o	true
31	last_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
32	.	_	.	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	multi-sentence	(mod())	1	MOD_mod	true

nodealignment=[29@@d@@we, 5@@d@@we, 27@@n@@_NAME_, 31@@n@@year, 24@@a@@and, 11@@s@@possible-01, 27@@o2@@organization, 2@@d@@it, 32@@p@@multi-sentence, 7@@a@@thing, 3@@s@@show-01, 14@@p@@just, 23@@d@@planet, 1@@a@@and, 16@@p@@distant, 6@@d@@possible-01, 18@@s@@contrast-01, 9@@d@@more, 30@@s@@launch-01, 21@@s@@very]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
3	did	_	do	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-02	(o(poss_UNIFY_s()))	6	APP_op1	true
4	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
5	job	_	job	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
7	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_op2	true
8	so	_	so	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	solemnity	_	solemnity	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	required	_	require	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
13	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
14	undertaking	_	undertake	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	process	_	process	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_s	true
17	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
18	impeachment,	_	impeachment,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	i	_	0	IGNORE	true
20	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
21	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	seek	_	seek	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
24	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	6	MOD_s	true
25	accepted	_	accept	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
26	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
27	our	_	our	PRP$	O	_	cause-01	_	0	IGNORE	true
28	responsibility	_	responsibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	responsible-03	(s())	25	APP_s	true
29	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
31	Constitution	_name_	Constitution	NNP	O	(l<root> / law  :name (n / --LEX--))	_NAME_	()	28	APP_s	true
32	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@l@@do-02, 14@@s@@undertake-01, 5@@m@@job, 16@@d@@process-02, 28@@s@@responsible-03, 2@@g@@government-organization, 8@@t@@so, 24@@s@@contrast-01, 20@@d@@we, 31@@l@@law, 12@@s@@require-01, 2@@n@@_NAME_, 31@@n@@_NAME_, 22@@explicitanon0@@-, 25@@s@@accept-01, 6@@a@@and, 11@@t@@solemnity, 23@@s@@seek-01, 7@@s@@do-02]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	reaction	_	reaction	NN	O	(d<root> / --LEX--)	react-01	()	11	APP_s	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
5	luminol	_	luminol	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
7	hydrogen	_	hydrogen	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	peroxide	_	peroxide	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	creates	_	create	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
10	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	last	_	last	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-04	(s(), o())	0	ROOT	true
12	long	_	long	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	MOD_s	true
13	at	_	at	RB	O	_	have-concession-91	_	0	IGNORE	true
14	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	11	MOD_mod	true
15	--	_	--	:	O	_	contrast-01	_	0	IGNORE	true
16	maybe	_	maybe	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
17	a_couple_of_minutes	_name_	minute	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_o	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@last-04, 16@@s@@maybe-01, 12@@s@@long-03, 14@@p@@at-all, 17@@d@@minute-02, 10@@explicitanon0@@-, 9@@s@@create-01, 5@@p@@luminol, 2@@d@@react-01, 8@@d@@peroxide, 6@@d@@and, 7@@p@@hydrogen]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	arrogant	_	arrogant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
5	a	_	a	DT	O	_	-	_	0	IGNORE	true
6	false	_	false	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	charm	_	charm	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	no	_	no	DT	O	_	-	_	0	IGNORE	true
10	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	13	APP_s	true
11	seems	_	seem	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
14	through	_	through	RP	O	_	$LEMMA$	_	0	IGNORE	true
15	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@d@@charm-01, 2@@p@@arrogant, 1@@explicitanon0@@many, 13@@s@@see-01, 10@@d@@no-one, 3@@d@@person, 4@@s@@have-03, 11@@s@@seem-01, 6@@p@@false]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	denying	_	deny	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	that	_	that	IN	O	_	have-mod-91	_	0	IGNORE	true
6	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
7	are	_	be	VBP	O	_	exist-01	_	0	IGNORE	true
8	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
9	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
12	instinctively	_	instinctively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	11	MOD_mod	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	be	_	be	VB	O	_	person	_	0	IGNORE	true
15	adequate	_	adequate	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	suffice-01	(s())	4	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	express	_	express	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	stand	_	stand	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
22	for.	_	for.	FW	O	_	-	_	0	IGNORE	true
23	”	_	"	''	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@-, 21@@s@@stand-01, 19@@d@@idea, 4@@s@@deny-01, 8@@d@@word, 10@@d@@we, 15@@s@@suffice-01, 12@@t@@automatic, 17@@s@@express-01, 11@@s@@feel-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	exciting	_	exciting	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	excite-01	(s())	6	MOD_s	true
6	moment	_	moment	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	join	_	join	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
10	for	_	for	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	unveiling	_	unveiling	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	8	MOD_mod	true
13	of	_	of	IN	O	_	1	_	0	IGNORE	true
14	the	_	the	DT	O	_	1	_	0	IGNORE	true
15	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_s	true
16	that	_	that	WDT	O	_	1	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	have	_	have	VBP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	6	MOD_mod	true
19	been	_	be	VBN	O	_	person	_	0	IGNORE	true
20	laboring	_	labor	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	on	_	on	RP	O	_	thing	_	0	IGNORE	true
22	for	_	for	IN	O	_	decade	_	0	IGNORE	true
23	decades	_name_	decade	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	20	MOD_mod	true
24	.	_	.	.	O	_	decade	_	0	IGNORE	true

nodealignment=[23@@m@@decade, 15@@d@@work-01, 23@@m2@@multiple, 8@@i@@join-01, 4@@s@@very, 6@@r@@moment, 5@@s@@excite-01, 18@@explicitanon0@@1, 9@@d@@you, 1@@d@@this, 23@@t2@@temporal-quantity, 20@@s@@labor-01, 12@@i@@unveiling-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	technology	_	technology	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_dom	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	Frank	_name_	Frank	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	9	APP_s	true
6	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	colleagues	_	colleague	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	5	APP_op2	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	using	_	use	VBG	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	2	MOD_o	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	explore	_	explore	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o2	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	ice	_	ice	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	important	_	important	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
17	because,	_	because,	NNS	O	_	cause-01	_	0	IGNORE	true
18	given	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
19	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	MOD_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	data,	_	data,	NNS	O	_	-	_	0	IGNORE	true
23	we	_	we	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
24	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
25	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
26	reasonable	_	reasonable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	expectation	_	expectation	NN	O	(f<root> / --LEX--  :ARG1 (p<o>))	expect-01	(o(s()))	16	MOD_s	true
28	of	_	of	IN	O	_	thing	_	0	IGNORE	true
29	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	34	APP_op1	true
32	be	_	be	VB	O	_	thing	_	0	IGNORE	true
33	like,	_	like,	VBN	O	_	thing	_	0	IGNORE	true
34	or	_	or	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	27	APP_o	true
35	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
36	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	shouldn't	_	shouldn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	39	MOD_mod	true
38	be	_	be	VB	O	_	thing	_	0	IGNORE	true
39	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	34	APP_op2	true
40	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[37@@explicitanon0@@-, 13@@d@@ice, 2@@d@@technology, 25@@explicitanon0@@-, 16@@r@@important, 5@@a@@and, 11@@s@@explore-01, 7@@f@@colleague, 7@@h@@have-rel-role-91, 39@@s@@resemble-01, 9@@i@@use-01, 15@@s@@so, 26@@s@@reasonable-02, 20@@s@@lack-01, 23@@p@@we, 31@@s@@recommend-01, 34@@a@@or, 4@@n@@_NAME_, 4@@p@@person, 7@@p@@person, 27@@f@@expect-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
3	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
4	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
5	mysteries	_	mystery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	house	_	house	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	I'm	i'm	i'm	PRP	O	_	contrast-01	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
12	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	realize-01	(s())	5	MOD_s	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@explicitanon0@@-, 7@@p@@this, 5@@d@@mystery, 12@@p@@even, 8@@b@@house, 13@@s@@realize-01]
sentence=1	One	one	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	29	MOD_s	true
3	Gordon's	_name_	Gordon's	NNP	O	_	_NAME_	_	0	IGNORE	true
4	greatest	_	great	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	great	(mod())	5	MOD_mod	true
5	achievements	_	achievement	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	achieve-01	()	2	APP_o	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	securing	_	secure	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_op1	true
8	permission	_	permission	NN	O	(h<root> / --LEX--  :ARG2 (m<o>))	permit-01	(o(s()))	7	APP_s	true
9	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Tsars	tsars	Tsars	NNPS	O	(d<root> / --LEX--)	_NAME_	()	8	APP_s	true
12	to	_	to	TO	O	_	person	_	0	IGNORE	true
13	establish	_	establish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	18	MOD_mod	true
16	Roman_Catholic	_name_	catholic	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	18	MOD_mod	true
17	church	_	church	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
19	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	Muscovy,	_name_	muscovy,	CD	O	_	_NAME_	_	0	IGNORE	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	which	_	which	WDT	O	_	i	_	0	IGNORE	true
24	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	remained	_	remain	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	benefactor,	_	benefactor,	NNS	O	_	include-91	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
30	headed	_	head	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	APP_op2	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	Catholic	_name_	catholic	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	33	MOD_mod	true
33	community	_	community	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
34	in	_	in	IN	O	_	person	_	0	IGNORE	true
35	Russia	_name_	Russia	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	33	MOD_mod	true
36	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	30	MOD_mod	true
37	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
38	death	_	death	NN	O	(d<root> / --LEX--)	die-01	()	36	APP_op1	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@secure-01, 35@@n@@_NAME_, 30@@s@@head-01, 4@@m@@most, 32@@n@@_NAME_, 16@@r@@religious-group, 25@@s@@remain-01, 29@@a@@and, 32@@r@@religious-group, 15@@o@@ordinal-entity, 38@@d@@die-01, 8@@h@@permit-01, 35@@c@@country, 33@@d@@community, 13@@s@@establish-01, 2@@s@@include-91, 19@@d@@school, 36@@w@@until, 5@@t@@thing, 4@@t@@great, 16@@n@@_NAME_, 18@@a@@and, 15@@explicitanon0@@1, 27@@p@@main, 5@@d@@achieve-01, 17@@d@@church, 11@@d@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	congratulate	_	congratulate	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	School_of_Open	_name_	open	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	4	MOD_s	true
4	teams	_	team	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
6	Africa	_name_	Africa	NNP	O	(c<root> / continent  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
7	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	innovative	_	innovative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	innovate-01	(s())	12	MOD_s	true
10	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
11	transformative	_	transformative	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	12	MOD_s	true
12	mode	_	mode	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	APP_o2	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	teaching	_	teaching	NN	O	(d<root> / --LEX--)	teach-01	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_mod	true
16	learning	_	learn	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op2	true
17	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	are	_	be	VBP	O	_	person	_	0	IGNORE	true
20	launching	_	launch	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
21	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@launch-01, 15@@a@@and, 14@@d@@teach-01, 6@@n@@_NAME_, 11@@s@@transformative, 16@@d@@learn-01, 1@@d@@i, 21@@n@@today, 5@@b@@across, 9@@s@@innovate-01, 6@@c@@continent, 2@@b@@congratulate-01, 4@@d@@team, 3@@s@@_NAME_, 18@@d@@we, 12@@p@@mode]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
3	cry	_	cry	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
5	frustration	_	frustration	NN	O	(d<root> / --LEX--)	frustrate-01	()	3	APP_o	true
6	when	_	when	WRB	O	_	he	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	older	_	old	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	old	(mod())	9	MOD_mod	true
9	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	possible-01	(mod(), s())	3	MOD_mod	true
11	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	10	APP_s	true
12	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	couldn't	_	couldn't	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
16	—	_	—	VBD	O	_	-	_	0	IGNORE	true
17	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_s	true
18	tie	_	tie	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op1	true
19	knots,	_	knots,	NNS	O	_	and	_	0	IGNORE	true
20	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_o	true
21	catch	_	catch	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
22	a	_	a	DT	O	_	-	_	0	IGNORE	true
23	chicken	_	chicken	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@cry-02, 20@@a@@or, 23@@d@@chicken, 11@@s@@do-02, 12@@d@@something, 1@@d@@She, 18@@d@@tie-01, 8@@p@@old, 10@@s@@possible-01, 21@@s@@catch-01, 15@@explicitanon0@@-, 17@@s@@resemble-01, 5@@d@@frustrate-01, 9@@d@@child]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
4	two_years	_name_	year	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
5	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
6	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	9	MOD_mod	true
7	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	limit	_	limit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
10	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
11	I've	i've	i've	NN	O	_	-	_	0	IGNORE	true
12	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
13	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	far	_	far	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	so-$LEMMA$	(mod())	12	MOD_mod	true
15	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[2@@s@@feel-02, 1@@d@@i, 4@@d@@year, 9@@s@@limit-01, 14@@n@@so-far, 6@@s@@kind-of, 12@@s@@see-01]
sentence=1	His	his	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
2	mother	_	mother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (s / --LEX--)  :ARG1 (v<s>)))	$LEMMA$	(s())	5	MOD_s	true
3	wrote,	_	wrote,	NNP	O	_	and	_	0	IGNORE	true
4	"He	"he	"He	NNP	O	(d<root> / --LEX--)	she	()	5	APP_s	true
5	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	12	APP_s	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
7	indisposition	_	indisposition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	23	APP_snt1	true
13	love,	_	love,	NNP	O	_	mean-01	_	0	IGNORE	true
14	desperate	_	desperate	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	MOD_s	true
15	love,	_	love,	NNP	O	_	mean-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-04	(s())	12	APP_o	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	maladies	_	malady	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
23	opinion.	_	opinion.	NN	O	(m<root> / --LEX--  :snt2 (i<snt2>)  :snt1 (n<snt1>))	multi-sentence	(snt2(), snt1())	0	ROOT	true
24	In	in	in	IN	O	_	i	_	0	IGNORE	true
25	short,	_	short,	NNS	O	_	and	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	boy	_	boy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
28	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
29	distractedly	_	distractedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	repute-01	(s())	31	MOD_s	true
30	in	_	in	IN	O	_	i	_	0	IGNORE	true
31	love	_	love	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_snt2	true
32	with	_	with	IN	O	_	-	_	0	IGNORE	true
33	Miss	miss	Miss	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
34	Chaworth."	_name_	Chaworth."	NNP	O	_	hyperlink-91	_	0	IGNORE	true
35	[6	_	[6	XX	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	31	MOD_mod	true
36	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@m@@most, 10@@s@@know-01, 35@@p@@_NAME_, 27@@d@@boy, 29@@s@@repute-01, 23@@m@@multi-sentence, 2@@p@@person, 12@@s@@contrast-01, 6@@explicitanon0@@-, 5@@s@@have-03, 9@@d@@i, 17@@b2@@bad-04, 2@@s@@mother, 2@@h@@have-rel-role-91, 4@@d@@she, 19@@p@@all, 7@@d@@indisposition, 33@@d@@Miss, 31@@s@@love-01, 20@@d@@malady, 14@@s@@desperate-02]
sentence=1	As	as	as	RB	O	_	cause-01	_	0	IGNORE	true
2	far	_	far	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$-as	(mod())	8	MOD_mod	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
6	tell,	_	tell,	.	O	_	and	_	0	IGNORE	true
7	podiobooks.com	_	podiobooks.com	ADD	O	(explicitanon2<root> / --LEX--  :value-of (u / url-entity  :source-of (p<mod>)))	_NAME_	(mod())	8	MOD_mod	true
8	features	_	feature	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	"free	_	"free	XX	O	_	$LEMMA$	_	0	IGNORE	true
10	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
11	in	_	in	IN	O	_	and	_	0	IGNORE	true
12	beer"	_	beer"	NN	O	_	and	_	0	IGNORE	true
13	content	_	content	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	—	_	—	:	O	_	mean-01	_	0	IGNORE	true
15	material	_	material	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
16	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
19	download,	_	download,	NNP	O	_	-	_	0	IGNORE	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	8	MOD_s	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	isn't	_	isn't	VBZ	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	27	MOD_mod	true
23	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	a	_	a	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	8	MOD_o	true
25	free	_	free	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	26	MOD_s	true
26	content	_	content	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	license	_	license	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
28	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@s@@feature-01, 22@@explicitanon0@@-, 17@@d@@you, 7@@explicitanon2@@_NAME_, 26@@p@@content, 24@@s@@thing, 7@@u@@url-entity, 13@@p@@content, 2@@p@@as-far-as, 5@@s@@possible-01, 15@@d@@material, 20@@s@@contrast-01, 27@@d@@license, 4@@d@@i, 18@@s@@possible-01, 25@@s@@free-03]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	enduring	_	enduring	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	3	MOD_s	true
5	those	_	those	DT	O	(d<root> / --LEX--)	that	()	3	APP_s	true
6	was	_	be	VBD	O	(d<root> / --LEX--)	person	()	3	APP_o	true
7	with	_	with	IN	O	_	include-91	_	0	IGNORE	true
8	John_FitzGibbon,	_name_	FitzGibbon,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
9	2nd	_name_	2nd	NNP	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	10	MOD_mod	true
10	Earl	earl	Earl	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	6	MOD_s	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Clare	clare	Clare	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_o	true
13	—	_	—	HYPH	O	_	and	_	0	IGNORE	true
14	four	_	four	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	4	(mod())	15	MOD_mod	true
15	years	_	year	NNS	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	Byron's	_name_	Byron's	NNP	O	_	year	_	0	IGNORE	true
17	junior	_	junior	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	young	(mod())	6	MOD_mod	true
18	—	_	—	VBD	O	_	person	_	0	IGNORE	true
19	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
20	he	_	he	PRP	O	_	person	_	0	IGNORE	true
21	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	3	MOD_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	MOD_s	true
24	unexpectedly	_	unexpectedly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	sudden	(mod())	23	MOD_mod	true
25	many_years_later	_name_	later	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	_NAME_	(mod())	23	MOD_mod	true
26	in	_	in	IN	O	_	name	_	0	IGNORE	true
27	Italy	_name_	Italy	NNP	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	23	MOD_mod	true
28	(1821).	_	(1821).	NNP	O	_	hyperlink-91	_	0	IGNORE	true
29	[22	_	[22	XX	O	(d<root> / --LEX--)	_NUMBER_	()	21	APP_o	true
30	]	_	]	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[12@@n@@_NAME_, 15@@y@@year, 9@@o@@ordinal-entity, 5@@d@@that, 10@@g@@earl, 21@@s@@person, 10@@h@@have-org-role-91, 29@@d@@_NUMBER_, 12@@p@@person, 24@@t@@sudden, 2@@s@@most, 17@@p@@young, 4@@s@@include-91, 25@@t@@_NAME_, 27@@c@@country, 3@@s@@enduring-01, 6@@d@@person, 15@@t@@temporal-quantity, 14@@explicitanon0@@4, 23@@s@@meet-03, 9@@explicitanon0@@2, 27@@n@@_NAME_]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	APP_op1	true
3	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	ideas,	_	ideas,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	7	MOD_s	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op2 (p<op2>)  :op3 (g<op3>)  :op1 (c<op1>))	$LEMMA$	(op2(s()), op1(s()), op3(s()))	0	ROOT	true
6	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	used	_	use	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	5	APP_op2	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	draw	_	draw	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	sketchbook,	_	sketchbook,	NNS	O	_	and	_	0	IGNORE	true
15	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	used	_	use	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
17	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
18	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	MOD_s	true
19	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
20	thick	_	thick	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	21	MOD_s	true
21	sketchbook	_	sketchbook	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
25	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
26	carry	_	carry	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
27	around	_	around	RP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
28	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	everywhere,	_	everywhere,	NNPS	O	_	and	_	0	IGNORE	true
31	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
32	she'd	_	she'd	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	5	APP_op3	true
33	draw	_	draw	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_o	true
34	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	36	MOD_mod	true
35	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	36	MOD_s	true
36	characters	_	character	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op1	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	33	APP_s	true
38	whatnot	_	whatnot	RB	O	(d<root> / --LEX--)	$LEMMA$	()	37	APP_op2	true
39	;	_	;	.	O	_	and	_	0	IGNORE	true

nodealignment=[33@@s@@draw-01, 26@@s@@carry-01, 32@@s@@thing, 9@@s@@draw-01, 20@@s@@thick-03, 34@@p@@this, 24@@s@@use-01, 37@@a@@and, 4@@s@@and, 11@@explicitanon0@@lot, 35@@s@@differ-02, 27@@b@@around, 36@@d@@character, 38@@d@@whatnot, 3@@explicitanon0@@several, 21@@d@@sketchbook, 18@@s@@have-03, 7@@c@@use-02, 2@@s@@have-03, 1@@d@@She, 5@@a@@and]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	start	_	start	VBP	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
4	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
5	widely	_	widely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	wide	(s())	6	MOD_s	true
6	agreed	_	agree	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	premise	_	premise	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
8	that	_	that	IN	O	_	mean-01	_	0	IGNORE	true
9	testing	_	test	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_dom	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	reproducibility	_	reproducibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	accurate	(s())	9	APP_s	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	findings	_	finding	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	find-01	()	11	APP_s	true
14	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	7	APP_o	true
15	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
16	an	_	an	DT	O	_	thing	_	0	IGNORE	true
17	essential	_	essential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	role	_	role	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	14	APP_s	true
19	in	_	in	IN	O	_	thing	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	testing	_	testing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	test-01	(s())	22	APP_op1	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	18	MOD_s	true
23	refinement	_	refinement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	22	APP_op2	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	theory,	_	theory,	NNS	O	_	and	_	0	IGNORE	true
26	at	_	at	IN	O	_	instead-of-91	_	0	IGNORE	true
27	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	30	MOD_mod	true
28	for	_	for	IN	O	_	have-purpose-91	_	0	IGNORE	true
29	hypothesis-testing	_	hypothesis-teste	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	30	MOD_s	true
30	epistemologies	_	epistemology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op1	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	seek	_	seek	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	30	MOD_s	true
33	to	_	to	TO	O	_	person	_	0	IGNORE	true
34	ascertain	_	ascertain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_o	true
35	generalizability	_	generalizability	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
37	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	epistemologies	_	epistemology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_op2	true
40	in	_	in	IN	O	_	i	_	0	IGNORE	true
41	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
42	constructs	_	construct	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
43	are	_	be	VBP	O	_	person	_	0	IGNORE	true
44	deemed	_	deem	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	39	MOD_s	true
45	to	_	to	TO	O	_	thing	_	0	IGNORE	true
46	be	_	be	VB	O	_	person	_	0	IGNORE	true
47	definable	_	definable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	tax-01	(s())	48	APP_op1	true
48	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	44	APP_o	true
49	observable	_	observable	JJ	O	(p<root> / possible-01  :ARG1 (p2 / --LEX--  :ARG1 (b<s>)))	observe-01	(s())	48	APP_op2	true
50	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[32@@c@@seek-01, 39@@d@@epistemology, 2@@t@@start-01, 48@@a@@and, 38@@p@@other, 6@@s@@agree-01, 5@@s@@wide, 1@@d@@We, 34@@s@@ascertain-01, 35@@d@@generalizability, 36@@a@@and, 49@@p@@possible-01, 27@@p@@at-least, 17@@p@@essential, 23@@s@@develop-02, 13@@t@@thing, 49@@p2@@observe-01, 47@@s@@tax-01, 42@@d@@construct, 30@@d@@epistemology, 21@@s@@test-01, 13@@d@@find-01, 44@@s@@deem-01, 14@@s@@recommend-01, 11@@s@@accurate, 9@@s@@test-01, 22@@a@@and, 29@@s@@hypothesis-teste-01, 18@@r@@role, 7@@s@@premise-01]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	perennial	_	perennial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	basils	_	basil	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	39	MOD_s	true
5	which	_	which	WDT	O	_	date-interval	_	0	IGNORE	true
6	come	_	come	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	year	_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
9	after	_	after	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	year,	_	year,	NNP	O	_	and	_	0	IGNORE	true
11	like	_	like	IN	O	_	1	_	0	IGNORE	true
12	African	_name_	african	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	14	MOD_mod	true
13	Blue	blue	Blue	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	Basil	basil	Basil	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
15	(which	_	(which	-LRB-	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	26	APP_s	true
17	pretty	_	pretty	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	blue	_	blue	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	veins	_	vein	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	leaves)	_	leaves)	NNS	O	_	mean-01	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
24	Thai	_name_	Thai	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_op2	true
25	Basil,	basil,	basil,	NN	O	_	include-91	_	0	IGNORE	true
26	while	_	while	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
27	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	varieties	_	variety	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
30	are	_	be	VBP	O	_	person	_	0	IGNORE	true
31	annuals,	_	annuals,	NNS	O	(d<root> / --LEX--)	include-91	()	26	APP_o	true
32	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
33	you'll	_	you'll	PRP	O	_	inside	_	0	IGNORE	true
34	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	31	MOD_s	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	plant	_	plant	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	34	APP_o	true
37	year	_	year	NN	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
38	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	36	MOD_mod	true
39	year	_	year	NN	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
40	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@Basil, 18@@p@@blue, 39@@d@@year, 15@@p@@(which, 13@@p@@Blue, 12@@c@@continent, 23@@a@@and, 17@@p@@pretty, 29@@d@@variety, 34@@s@@obligate-01, 26@@s@@contrast-01, 36@@s@@plant-01, 12@@n2@@_NAME_, 16@@s@@have-03, 24@@n@@_NAME_, 38@@w@@after, 9@@p@@after, 4@@s@@basil, 28@@p@@other, 3@@p@@perennial, 8@@n@@year, 37@@o@@year, 6@@s@@come-01, 19@@d@@vein, 24@@c@@country, 31@@d@@include-91, 27@@explicitanon0@@most, 7@@a@@back]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	electronic	_	electronic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	units	_	unit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	sold	_	sell	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	that	_	that	WDT	O	_	capable-01	_	0	IGNORE	true
7	emit	_	emit	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_s	true
8	an	_	an	DT	O	_	thing	_	0	IGNORE	true
9	ultrasonic	_	ultrasonic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	beeping	_	beeping	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	sound	_	sound	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	rodents	_	rodent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	hate	_	hate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[11@@d@@sound, 5@@s@@sell-01, 4@@d@@unit, 3@@p@@electronic, 14@@s@@hate-01, 10@@s@@beeping-01, 13@@d@@rodent, 7@@s@@emit-01, 9@@p@@ultrasonic]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
4	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	rich	_	rich	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	MOD_s	true
6	green	_	green	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	1	_	0	IGNORE	true
8	one	_	one	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	sees	_	see	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
11	forest	_	forest	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	moss	_	moss	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
13	or	_	or	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	9	MOD_mod	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
16	lichen	_	lichen	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op2	true
17	in	_	in	IN	O	_	mean-01	_	0	IGNORE	true
18	caves:	_	caves:	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	plants	_	plant	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
21	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	19	MOD_s	true
22	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	19	MOD_mod	true
23	grow	_	grow	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
24	in	_	in	IN	O	_	after	_	0	IGNORE	true
25	a	_	a	DT	O	_	-	_	0	IGNORE	true
26	perpetual	_	perpetual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	twilight	_	twilight	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
28	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@d@@It, 9@@s@@see-01, 11@@p@@forest, 6@@r@@green, 12@@d@@moss, 18@@p@@caves:, 22@@p@@this, 5@@s@@rich, 13@@b@@or, 27@@b@@twilight, 19@@b@@plant, 23@@s@@grow-03, 4@@s@@same-01, 21@@s@@resemble-01, 26@@p@@perpetual, 16@@d@@lichen, 8@@d@@one]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	discussed	_	discuss	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
3	earlier,	_	earlier,	NNP	O	_	-	_	0	IGNORE	true
4	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	nondemocratic	_	nondemocratic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	form	_	form	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	government	_	government	NN	O	(g<root> / government-organization  :mod-of (p<mod>)  :ARG0-of (g2 / --LEX--))	govern-01	(mod())	6	MOD_mod	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	oligarchy,	_	oligarchy,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	6	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	which	_	which	WDT	O	_	contrast-01	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	handful	_	handful	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	elite	_	elite	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	members	_	member	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	society,	_	society,	NNS	O	_	include-91	_	0	IGNORE	true
20	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
21	those	_	those	DT	O	_	person	_	0	IGNORE	true
22	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
23	belong	_	belong	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
24	to	_	to	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	a	_	a	DT	O	_	person	_	0	IGNORE	true
26	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	political	_	political	JJ	O	(d<root> / --LEX--)	politics	()	23	APP_o	true
28	party,	_	party,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
29	hold	_	hold	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_dom	true
30	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	political	_	political	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	politics	(mod())	32	MOD_mod	true
32	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
33	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[32@@d@@power, 31@@p@@politics, 8@@g@@government-organization, 29@@s@@hold-01, 2@@s@@discuss-01, 14@@explicitanon0@@handful, 16@@p@@elite, 30@@p@@all, 17@@d@@member, 5@@p@@nondemocratic, 8@@g2@@govern-01, 10@@p@@and, 20@@o@@often, 4@@p@@another, 6@@r@@form, 23@@s@@belong-01, 26@@p@@particular, 27@@d@@politics]
sentence=1	Uh	uh	uh	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
4	emphasize	_	emphasize	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	24	APP_snt1	true
5	that	_	that	IN	O	_	and	_	0	IGNORE	true
6	I'm	i'm	I'm	NNS	O	_	say-01	_	0	IGNORE	true
7	reading	_	read	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_o	true
8	it,	_	it,	XX	O	_	and	_	0	IGNORE	true
9	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
10	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
11	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
12	evidence,	_	evidence,	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	24	APP_snt3	true
13	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
14	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
15	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	y-	_	y-	XX	O	_	mean-01	_	0	IGNORE	true
17	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	story,	_	story,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_snt2	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	you've	_	you've	UH	O	(d<root> / --LEX--)	thing	()	24	APP_snt4	true
21	told	_	tell	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	18	MOD_s	true
22	Mr.	mr.	Mr.	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	Roberts	_name_	Roberts	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
24	.	_	.	.	O	(m<root> / --LEX--  :snt4 (l4<snt4>)  :snt2 (f<snt2>)  :snt3 (l3<snt3>)  :snt1 (l<snt1>))	multi-sentence	(snt2(), snt1(), snt4(), snt3())	0	ROOT	true

nodealignment=[2@@d@@i, 24@@m@@multi-sentence, 9@@d@@this, 7@@s@@read-01, 23@@p@@person, 11@@explicitanon0@@-, 18@@d@@story,, 23@@n@@_NAME_, 20@@d@@thing, 21@@t@@tell-01, 1@@p@@uh, 15@@p@@only, 13@@p@@this, 4@@c@@emphasize-01, 12@@s@@and]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	magician	_	magician	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
3	behind	_	behind	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	counter	_	counter	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
6	was	_	be	VBD	O	_	person	_	0	IGNORE	true
7	wise	_	wise	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_s	true
8	enough	_	enough	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
10	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
11	sell	_	sell	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
12	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
13	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
14	me,	_	me,	NN	O	_	and	_	0	IGNORE	true
15	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
16	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	17	MOD_o	true
17	sold	_	sell	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	me	_	I	PRP	O	_	and	_	0	IGNORE	true
19	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	20	MOD_mod	true
20	books	_	book	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
23	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	own	_	own	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
25	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
26	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
27	"Scarne	"scarne	"scarne	CD	O	(d<root> / --LEX--)	_NAME_	()	30	APP_op1	true
28	on	_	on	IN	O	_	mean-01	_	0	IGNORE	true
29	Card_Tricks"	_name_	Tricks"	NNP	O	_	mean-01	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	APP_o	true
31	"Scarne	"scarne	"scarne	CD	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
32	on	_	on	IN	O	_	mean-01	_	0	IGNORE	true
33	Magic_Tricks"	_name_	Tricks"	NNP	O	_	mean-01	_	0	IGNORE	true
34	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[19@@explicitanon0@@2, 17@@s@@sell-01, 30@@a@@and, 15@@s@@contrast-01, 16@@s@@instead-of-91, 23@@p@@still, 3@@b@@behind, 20@@d@@book, 24@@s@@own-01, 27@@d@@_NAME_, 9@@explicitanon0@@-, 7@@r@@wise, 12@@d@@it, 8@@p@@enough, 25@@n@@today, 31@@d@@"scarne, 11@@s@@sell-01, 2@@d@@magician, 5@@d@@counter]
sentence=1	Instead	instead	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	8	MOD_s	true
2	of	_	of	IN	O	_	-	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
5	description,	_	description,	NNS	O	_	and	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	wrote	_	write	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
9	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o2	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	poem,	_	poem,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	prayer,	_	prayer,	CD	O	_	$LEMMA$	_	0	IGNORE	true
14	which	_	which	WDT	O	_	i	_	0	IGNORE	true
15	I'm	i'm	I'm	VBD	O	_	i	_	0	IGNORE	true
16	going	_	go	VBG	O	_	i	_	0	IGNORE	true
17	to	_	to	TO	O	_	person	_	0	IGNORE	true
18	read	_	read	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
19	to	_	to	IN	O	_	and	_	0	IGNORE	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	conclusion	_	conclusion	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	conclude-01	(mod())	18	MOD_mod	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@p@@just, 8@@b@@write-01, 1@@s@@instead-of-91, 11@@d@@poem,, 23@@t@@conclude-01, 9@@d@@they, 18@@s@@read-01, 20@@d@@you, 4@@d@@job, 6@@d@@i]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	effervescent	_	effervescent	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	tablets	_	tablet	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	turned	_	turn	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	4	MOD_s	true
7	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	he	(s(), o())	2	MOD_s	true
8	canteen	_	canteen	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	drinking	_	drinking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	into	_	into	IN	O	_	-	_	0	IGNORE	true
12	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
15	pink	_	pink	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	16	MOD_s	true
16	mixture	_	mixture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
17	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	dentist	_	dentist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	rinse	_	rinse	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	16	MOD_mod	true
24	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	mouth	_	mouth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
27	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
28	scraping	_	scrape	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	27	APP_op1	true
29	around	_	around	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	inside,	_	inside,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
31	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
32	guaranteed	_	guarantee	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
33	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
34	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	32	APP_s	true
35	the	_	the	DT	O	_	he	_	0	IGNORE	true
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	kids	_	kid	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
38	splutter	_	splutter	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	34	APP_o	true
40	spit	_	spit	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	39	APP_op2	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
43	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	taste	_	taste	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	47	APP_s	true
46	slowly	_	slowly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	slow-05	(s())	47	MOD_s	true
47	percolated	_	percolate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_op1	true
48	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	34	APP_s	true
50	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	49	APP_op2	true
51	the	_	the	DT	O	_	he	_	0	IGNORE	true
52	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_s	true
53	of	_	of	IN	O	_	-1	_	0	IGNORE	true
54	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
55	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
56	checkup	_	checkup	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
57	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[7@@s@@he, 49@@a@@and, 8@@p@@canteen, 21@@d@@you, 14@@s@@same-01, 46@@s@@slow-05, 28@@d@@scrape-01, 55@@p@@last, 32@@s@@guarantee-01, 34@@s@@make-02, 13@@p@@exact, 50@@s@@meet-01, 38@@s@@splutter-01, 9@@p@@drinking-01, 56@@p@@checkup, 4@@d@@tablet, 3@@p@@effervescent, 6@@b@@turn-02, 20@@s@@give-01, 25@@d@@mouth, 1@@d@@He, 15@@s@@pink-03, 10@@d@@water, 52@@d@@memory, 16@@d@@mixture, 36@@p@@other, 39@@a@@and, 40@@s@@spit-01, 37@@d@@kid, 19@@d@@dentist, 27@@w@@after, 23@@s@@rinse-01, 45@@d@@taste-01, 2@@s@@have-03, 47@@s@@percolate-01]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	eventually	_	eventually	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	eventual	(mod())	4	MOD_mod	true
4	sent	_	send	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	to	_	to	IN	O	_	have-rel-role-91	_	0	IGNORE	true
6	Rehabilitation_Project_Force	_name_	Force	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
7	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
8	Sydney,	sydney,	sydney,	CD	O	_	_NAME_	_	0	IGNORE	true
9	which	_	which	WDT	O	_	and	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Church	_name_	Church	NNP	O	(d<root> / --LEX--)	_NAME_	()	12	APP_s	true
12	describes	_	describe	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	MOD_o	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	religious	_	religious	JJ	O	(d<root> / --LEX--)	religion	()	12	APP_o2	true
16	retreat,	_	retreat,	NNS	O	_	have-concession-91	_	0	IGNORE	true
17	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
18	critics	_	critic	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$ize-01	()	19	APP_s	true
19	charge	_	charge	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	forced	_	force	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
23	work	_	work	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
24	camp	_	camp	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
25	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@o2@@organization, 3@@n@@eventual, 15@@d@@religion, 1@@d@@She, 12@@b@@describe-01, 24@@d@@camp, 18@@p2@@person, 4@@s@@send-01, 11@@d@@_NAME_, 19@@s@@charge-01, 18@@e2@@criticize-01, 23@@p@@work-01, 22@@s@@force-01, 6@@n@@_NAME_, 17@@s@@contrast-01]
sentence=1	List	list	list	NN	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	everything,	_	everything,	NNP	O	_	thing	_	0	IGNORE	true
3	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
5	small,	_	small,	NNS	O	_	and	_	0	IGNORE	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	obligate-01	(s(), o())	10	MOD_s	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	MOD_o	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	entire	_	entire	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	day;	_	day;	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
15	break	_	break	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	14	MOD_s	true
16	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	activities	_	activity	NNS	O	(d<root> / --LEX--)	$LEMMA$-06	()	15	APP_o	true
18	into	_	into	IN	O	_	-	_	0	IGNORE	true
19	smaller	_	small	JJR	O	(m<root> / more  :degree-of (o / --LEX--  :mod-of (g2<mod>)))	small	(mod())	20	MOD_mod	true
20	bits	_	bit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o2	true
21	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
22	necessary	_	necessary	JJ	O	(r<root> / --LEX--  :condition-of (c<mod>))	need-01	(mod())	15	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[14@@d@@day;, 1@@explicitanon0@@imperative, 17@@d@@activity-06, 15@@b@@break-01, 10@@s@@do-02, 19@@o@@small, 16@@p@@big, 1@@h@@list-01, 7@@d@@you, 19@@m@@more, 3@@p@@big, 22@@r@@need-01, 8@@s@@obligate-01, 20@@d@@bit, 13@@p@@entire, 4@@d@@and]
sentence=1	Uh,	uh,	Uh,	NNP	O	_	expressive	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	went	_	go	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	receive	_	receive	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	my	_	my	PRP$	O	_	schedule-01	_	0	IGNORE	true
7	check,	_	check,	NNP	O	_	contrast-01	_	0	IGNORE	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	which,	_	which,	NNP	O	_	expressive	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
11	had	_	have	VBD	O	_	person	_	0	IGNORE	true
12	agreed	_	agree	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
13	that	_	that	IN	O	_	1	_	0	IGNORE	true
14	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
15	would	_	would	MD	O	_	thing	_	0	IGNORE	true
16	deduct	_	deduct	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
17	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
18	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	APP_o	true
19	of	_	of	IN	O	_	monetary-quantity	_	0	IGNORE	true
20	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
21	hourly	_name_	hourly	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_mod	true
22	wage,	_	wage,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
23	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	was	_	be	VBD	O	_	person	_	0	IGNORE	true
26	—	_	—	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@i, 5@@s@@receive-01, 14@@d@@he, 3@@c@@go-02, 12@@s@@agree-01, 21@@d@@hourly, 18@@explicitanon0@@amount, 10@@d@@we, 16@@s@@deduct-01]
sentence=1	Scientists	scientists	scientist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
3	study	_	study	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
4	cognition	_	cognition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	searching	_	search	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	for	_	for	IN	O	_	say-01	_	0	IGNORE	true
8	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_mod	true
11	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
13	integrate,	_	integrate,	NNP	O	_	thing	_	0	IGNORE	true
14	organize,	_	organize,	NNP	O	_	thing	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	APP_s	true
16	utilize	_	utilize	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op3	true
17	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	conscious	_	conscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	cognitive	_	cognitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	experiences	_	experience	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_op2	true
21	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
22	being	_	be	VBG	O	_	have-manner-91	_	0	IGNORE	true
23	aware	_	aware	JJ	O	(d<root> / --LEX--  :ARG0 (h<s>)  :manner-of (a<mod>))	realize-01	(mod(), s())	6	MOD_mod	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	unconscious	_	unconscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_s	true
30	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
31	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	brains	_	brain	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_s	true
33	are	_	be	VBP	O	_	person	_	0	IGNORE	true
34	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
35	(for	_	(for	JJ	O	_	$LEMMA$	_	0	IGNORE	true
36	example,	_	example,	NNP	O	_	say-01	_	0	IGNORE	true
37	Kahneman,	kahneman,	Kahneman,	NNP	O	_	_NAME_	_	0	IGNORE	true
38	2011)	_	2011)	NNP	O	_	mean-01	_	0	IGNORE	true
39	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@p@@all, 15@@a@@and, 6@@s@@search-01, 16@@d@@utilize-01, 28@@p@@unconscious, 4@@d@@cognition, 20@@d@@experience-01, 12@@d@@we, 29@@s@@work-01, 8@@t@@way, 1@@d@@scientist, 32@@d@@brain, 23@@d@@realize-01, 19@@p@@cognitive, 3@@s@@study-01, 18@@p@@conscious, 21@@explicitanon0@@-, 10@@s@@understand-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	expropriation	_	expropriation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	confiscate-01	(s())	7	APP_s	true
3	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	YPF	ypf	YPF	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	a	_	a	DT	O	_	thing	_	0	IGNORE	true
7	case	_	case	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	0	ROOT	true
8	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
9	which	_	which	WDT	O	_	name	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Argentine	_name_	Argentine	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	State	state	State	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	presents	_	present	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	7	MOD_mod	true
14	predatory	_	predatory	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	behavior,	_	behavior,	NNS	O	_	cause-01	_	0	IGNORE	true
16	encouraged	_	encourage	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
17	by	_	by	IN	O	_	confident-01	_	0	IGNORE	true
18	an	_	an	DT	O	_	1	_	0	IGNORE	true
19	extractive	_	extractive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	institutional	_	institutional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	institution	(mod())	21	MOD_mod	true
21	framework	_	framework	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@c@@company, 16@@s@@encourage-01, 14@@d@@predatory, 21@@d@@framework, 13@@t@@present-01, 11@@c@@country, 4@@n@@_NAME_, 11@@n@@_NAME_, 19@@p@@extractive, 2@@s@@confiscate-01, 7@@s@@case-04, 12@@d@@State, 20@@p@@institution]
sentence=1	Reflection	reflection	reflection	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	allows	_	allow	VBZ	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
3	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
4	to	_	to	TO	O	_	and	_	0	IGNORE	true
5	obtain	_	obtain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	classes	_	class	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	7	MOD_mod	true
11	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	SUT,	sut,	sut,	NN	O	_	_NAME_	_	0	IGNORE	true
15	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	user	_	user	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	use-01	()	19	APP_s	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	APP_o	true
19	decide	_	decide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_s	true
20	the	_	the	DT	O	_	and	_	0	IGNORE	true
21	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	to	_	to	TO	O	_	thing	_	0	IGNORE	true
23	wish	_	wish	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	operators	_	operator	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
26	will	_	will	MD	O	_	i	_	0	IGNORE	true
27	be	_	be	VB	O	_	person	_	0	IGNORE	true
28	applied	_	apply	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	APP_o	true
29	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@s@@wish-01, 25@@d@@operator, 17@@e2@@use-01, 11@@d@@method, 10@@a@@and, 17@@p2@@person, 15@@s@@cause-01, 3@@d@@us, 21@@d@@method, 5@@s@@obtain-01, 1@@d@@reflection, 18@@s@@possible-01, 28@@s@@apply-02, 7@@d@@list, 19@@s@@decide-01, 9@@d@@class, 2@@w@@allow-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	rocks	_	rock	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	about	_	about	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	were	_	be	VBD	O	_	person	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	a	_	a	DT	O	_	thing	_	0	IGNORE	true
8	harsh	_	harsh	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	reddish	_	reddish	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
10	colour,	_	colour,	NNS	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
12	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	trace	_	trace	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_dom	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
18	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_op3	true
19	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	MOD_s	true
20	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
21	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
22	first	_name_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	at-$LEMMA$	(mod())	20	MOD_mod	true
23	was	_	be	VBD	O	_	person	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	intensely	_	intensely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-04	(s())	26	MOD_s	true
26	green	_	green	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	vegetation	_	vegetation	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op2	true
28	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
29	covered	_	cover	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
30	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	projecting	_	project	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	MOD_s	true
32	point	_	point	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_o	true
33	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
35	south-eastern	_	south-eastern	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	36	MOD_mod	true
36	face	_	face	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	.	_	.	.	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[26@@s@@green-02, 16@@d@@life, 31@@s@@project-01, 20@@s@@see-01, 19@@s@@possible-01, 11@@a@@and, 29@@s@@cover-01, 36@@b@@face, 14@@s@@trace-01, 22@@n@@at-first, 9@@r@@reddish, 30@@p@@every, 2@@d@@rock, 8@@s@@harsh-02, 3@@b@@about, 25@@s@@open-04, 12@@p@@all, 32@@d@@point, 35@@p@@_NAME_, 27@@r@@vegetation, 18@@d@@i]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	bunch	_	bunch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
3	that	_	that	WDT	O	_	include-91	_	0	IGNORE	true
4	no	_	no	DT	O	_	-	_	0	IGNORE	true
5	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	6	APP_s	true
6	picked	_	pick	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	MOD_o	true
7	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
9	side	_	side	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o2	true
10	at	_	at	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	football	_	football	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	or	_	or	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
13	hockey,	_	hockey,	NNP	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
15	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	glue	_	glue	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	held	_	hold	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	18	MOD_s	true
21	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
22	together	_	together	RB	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o2	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@d@@glue, 2@@d@@bunch, 9@@d@@side, 21@@d@@us, 22@@d@@together, 11@@p@@football, 5@@d@@no-one, 6@@b@@pick-01, 20@@b@@hold-01, 12@@p@@or, 14@@a@@and]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
3	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	1	APP_op2	true
4	a,	_	a,	NN	O	_	and	_	0	IGNORE	true
5	eight-thousand-yard	_	eight-thousand-yard	JJ	O	(c<root> / --LEX--  :domain (i<dom>)  :compared-to-of (r<mod>))	_NAME_	(dom(), mod())	3	MOD_mod	true
6	job,	_	job,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
7	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_op1	true
10	this_summer	_name_	summer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[2@@d@@this, 8@@d@@we, 5@@c@@_NAME_, 10@@d@@summer, 3@@d@@person, 1@@a@@and, 9@@s@@do-02]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
2	visa,	_	visa,	NNP	O	_	and	_	0	IGNORE	true
3	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
5	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	7	MOD_s	true
6	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	than	_	than	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	a	_	a	DT	O	_	except-01	_	0	IGNORE	true
10	piece	_	piece	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
11	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
12	paper	_	paper	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	on	_	on	IN	O	_	thing	_	0	IGNORE	true
14	which	_	which	WDT	O	_	cause-01	_	0	IGNORE	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	list	_	list	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
17	your	_	your	PRP$	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	20	MOD_o	true
18	vital	_	vital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
19	statistics,	_	statistics,	NNP	O	_	-	_	0	IGNORE	true
20	costs	_	cost	NNS	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
21	between	_	between	IN	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_o	true
22	15	_	15	CD	O	(t<root> / temporal-quantity  :quant (explicitanon0 / --LEX--))	_NUMBER_	()	21	APP_op1	true
23	-	_	-	SYM	O	_	year	_	0	IGNORE	true
24	25	_	25	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	21	MOD_mod	true
25	CUC	cuc	CUC	NNP	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	$LEMMA$	()	21	APP_op2	true
26	(or	_	(or	-LRB-	O	_	pound	_	0	IGNORE	true
27	€	_	€	$	O	(m2<root> / monetary-quantity  :unit (d2 / --LEX--))	dollar	()	20	APP_s	true
28	15	_	15	CD	O	_	_NUMBER_	_	0	IGNORE	true
29	-	_	-	HYPH	O	_	year	_	0	IGNORE	true
30	25),	_	25),	CD	O	_	and	_	0	IGNORE	true
31	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
32	on	_	on	IN	O	_	monetary-quantity	_	0	IGNORE	true
33	where	_	where	WRB	O	(b<root> / --LEX--  :location-of (h<mod>))	amr-unknown	(mod())	20	APP_o2	true
34	purchased	_	purchase	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_mod	true
35	.	_	.	.	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[5@@s@@real-04, 27@@d2@@dollar, 34@@d@@purchase-01, 25@@m2@@monetary-quantity, 27@@m2@@monetary-quantity, 25@@d2@@CUC, 1@@p@@this, 12@@p@@paper, 17@@s@@your, 18@@p@@vital, 10@@p@@piece, 16@@s@@list-01, 31@@s@@depend-01, 24@@explicitanon0@@_NUMBER_, 33@@b@@amr-unknown, 6@@p@@little, 20@@c@@cost-01, 7@@p@@more, 22@@explicitanon0@@_NUMBER_, 22@@t@@temporal-quantity, 21@@a@@between, 15@@d@@you]
sentence=1	One	one	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	0	ROOT	true
3	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	channels	_	channel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
7	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
8	NBC	_name_	NBC	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	17	APP_s	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
11	broadcasting	_	broadcasting	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	broadcast-01	(s())	12	MOD_s	true
12	rights	_	right	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	right-05	(mod())	13	MOD_mod	true
13	owner	_	owner	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	own-01	(s(), o())	8	MOD_s	true
14	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
15	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
16	will	_	will	MD	O	_	i	_	0	IGNORE	true
17	use	_	use	VB	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	6	MOD_o	true
18	to	_	to	TO	O	_	name	_	0	IGNORE	true
19	air	_	air	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o2	true
20	the_Paralympic_Games	_name_	Games	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
21	on	_	on	RB	O	_	thing	_	0	IGNORE	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[15@@c@@country, 12@@p@@right-05, 15@@n@@_NAME_, 8@@n@@_NAME_, 6@@d@@channel, 2@@s@@include-91, 8@@c@@company, 13@@s@@own-01, 19@@s@@air-01, 20@@d@@Games, 11@@s@@broadcast-01, 17@@i@@use-01]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	4	MOD_mod	true
4	product	_	product	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	I'm	i'm	i'm	PRP	O	_	_NAME_	_	0	IGNORE	true
7	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
8	to	_	to	TO	O	_	person	_	0	IGNORE	true
9	show	_	show	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
11	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	the	_	the	DT	O	_	and	_	0	IGNORE	true
14	Nourished	_name_	Nourished	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	Shawnta_Curl_Defining	_name_	defining	NN	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
18	Soft	soft	Soft	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	Hold	hold	Hold	NNP	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_op2	true
20	Styler,	styler,	styler,	CD	O	_	and	_	0	IGNORE	true
21	which	_	which	WDT	O	_	i	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	enriched	_	enrich	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	sesame	_	sesame	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	seed	_	seed	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	oil	_	oil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op1	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_o	true
29	rose	_	rise	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	essence	_	essence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op2	true
31	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[19@@d@@Hold-01, 9@@s@@show-01, 30@@d@@essence, 4@@d@@product, 28@@a@@and, 3@@o@@ordinal-entity, 25@@p@@sesame, 16@@p@@product, 23@@s@@enrich-01, 17@@a@@and, 2@@p@@this, 3@@explicitanon0@@1, 1@@s@@cause-01, 14@@s@@Nourished-01, 29@@p@@rise, 18@@s@@Soft-02, 11@@p@@guy, 27@@d@@oil, 16@@n@@_NAME_, 10@@d@@you, 26@@p@@seed]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
2	know,	_	know,	CD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	say-01	(s(), o())	13	MOD_s	true
3	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_s	true
5	that	_	that	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	request-confirmation-91	(s(), o())	13	MOD_s	true
6	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	would	_	would	MD	O	_	request-confirmation-91	_	0	IGNORE	true
8	get	_	get	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-22	(o(s()))	5	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	trim	_	trim	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	8	APP_o	true
11	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	horse	_	horse	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
13	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	0	ROOT	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	time	_	time	NN	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
18	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[1@@d@@You, 5@@s@@request-confirmation-91, 8@@c@@get-22, 13@@d@@do-02, 4@@d@@person, 10@@l@@trim-01, 12@@m@@horse, 3@@explicitanon0@@most, 2@@s@@say-01, 17@@o@@time, 15@@p@@all]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
2	required	_	require	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
4	to,	_	to,	XX	O	_	and	_	0	IGNORE	true
5	employ,	_	employ,	NNP	O	_	expressive	_	0	IGNORE	true
6	oh	_	oh	UH	O	(m<root> / --LEX--  :unit-of (a<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	five	_	five	CD	O	(d<root> / --LEX--)	5	()	8	APP_op1	true
8	or	_	or	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	12	MOD_mod	true
9	six	_	six	CD	O	(d<root> / --LEX--)	6	()	8	APP_op2	true
10	crews,	_	crews,	NNS	O	(d<root> / --LEX--)	expressive	()	2	APP_s	true
11	uh	_	uh	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	Mitchell_Roberts	_name_	Roberts	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
13	was	_	be	VBD	O	_	person	_	0	IGNORE	true
14	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
15	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	MOD_o	true
16	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	that	_	that	IN	O	_	name	_	0	IGNORE	true
18	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	used,	_	used,	VBZ	O	_	multi-sentence	_	0	IGNORE	true
20	on	_	on	IN	O	_	thing	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	job	_	job	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
23	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@6, 22@@b@@job, 1@@d@@It, 15@@s@@include-91, 3@@d@@us, 12@@c@@company, 10@@d@@expressive, 6@@m@@oh, 7@@d@@5, 8@@b2@@or, 2@@b@@require-01, 12@@n@@_NAME_, 11@@p@@uh]
sentence=1	If	if	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	14	MOD_o	true
2	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o2	true
3	“big	_	“big	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	project”	_	project”	NN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	-	(mod(), s())	14	MOD_mod	true
5	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
6	something	_	something	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	can’t	_	can’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	be	_	be	VB	O	_	person	_	0	IGNORE	true
10	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
11	in	_	in	IN	O	_	after	_	0	IGNORE	true
12	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	10	MOD_mod	true
13	sitting,	_	sitting,	NNPS	O	_	and	_	0	IGNORE	true
14	make	_	make	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	parts	_	part	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
24	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	25	MOD_s	true
25	accomplish	_	accomplish	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
26	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
27	.	_	.	.	O	_	today	_	0	IGNORE	true

nodealignment=[24@@s@@possible-01, 25@@s@@accomplish-01, 10@@s@@do-02, 23@@d@@you, 1@@s@@have-condition-91, 26@@n@@today, 16@@s@@list-01, 8@@explicitanon0@@-, 12@@explicitanon0@@1, 14@@b@@make-01, 6@@p@@something, 2@@d@@your, 19@@d@@part, 4@@o@@-, 3@@d@@“big, 18@@p@@small]
sentence=1	Acquired	acquired	acquire	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
2	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	behaviors—that	_	behaviors—that	NNP	O	_	i	_	0	IGNORE	true
4	is,	_	is,	FW	O	_	-	_	0	IGNORE	true
5	behaviors	_	behavior	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	behave-01	(s())	9	APP_s	true
6	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	10	APP_dom	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	taught—are	_	taught—are	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
10	cultural	_	cultural	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	culture	(dom())	5	APP_s	true
11	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@r@@culture, 5@@s@@behave-01, 7@@d@@person, 2@@p@@human, 9@@s@@taught—are-01, 1@@s@@acquire-01]
sentence=1	Because	because	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>))	cause-01	(s())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	run	_	run	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-07	(s(), o())	1	APP_s	true
5	into	_	into	IN	O	_	-	_	0	IGNORE	true
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[8@@d@@we, 4@@s@@run-07, 10@@s@@know-01, 6@@d@@thing, 3@@d@@you, 2@@n@@then, 1@@s@@cause-01, 9@@n@@already]
sentence=1	What	what	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	have-purpose-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	aspect	_	aspect	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	0	ROOT	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_poss	true
9	background	_	background	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	6	APP_poss	true
10	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	voters	_	voter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	vote-01	()	13	APP_s	true
12	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	13	MOD_s	true
13	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
14	about	_	about	IN	O	_	thing	_	0	IGNORE	true
15	?	_	?	.	O	_	member	_	0	IGNORE	true

nodealignment=[6@@c@@aspect, 13@@s@@know-01, 5@@p@@important, 11@@p2@@person, 12@@s@@recommend-01, 1@@d@@amr-unknown, 8@@d@@your, 4@@s@@most, 9@@m@@background, 11@@e2@@vote-01]
sentence=1	To	to	to	TO	O	_	cause-01	_	0	IGNORE	true
2	investigate	_	investigate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
3	this,_Daniel	_name_	Daniel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
4	experimented	_	experiment	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op1	true
5	by	_	by	IN	O	_	thing	_	0	IGNORE	true
6	puncturing	_	puncture	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	wall	_	wall	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	6	APP_s	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	pipe	_	pipe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_poss	true
12	with	_	with	IN	O	_	-	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	open	_	open	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	ended	_	ended	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	straw	_	straw	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
19	noted	_	note	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	APP_op2	true
20	that	_	that	IN	O	_	1	_	0	IGNORE	true
21	the	_	the	DT	O	_	and	_	0	IGNORE	true
22	height	_	height	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	32	APP_s	true
23	to	_	to	TO	O	_	thing	_	0	IGNORE	true
24	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	fluid	_	fluid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	rose	_	rise	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_s	true
28	up	_	up	IN	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
29	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
30	straw	_	straw	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	was	_	be	VBD	O	_	person	_	0	IGNORE	true
32	related	_	relate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	APP_o	true
33	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
34	fluid's	_	fluid's	NN	O	(d<root> / --LEX--)	_NAME_	()	35	APP_poss	true
35	pressure	_	pressure	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	32	APP_o	true
36	in	_	in	IN	O	_	i	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	pipe	_	pipe	NN	O	_	$LEMMA$	_	0	IGNORE	true
39	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[34@@d@@_NAME_, 19@@s@@note-01, 8@@h@@wall, 26@@d@@fluid, 27@@s@@rise-01, 28@@a@@up, 4@@s@@experiment-01, 3@@n@@_NAME_, 2@@i@@investigate-01, 17@@d@@straw, 35@@m@@pressure, 15@@s@@open-01, 14@@p@@small, 32@@s@@relate-01, 16@@s@@ended-01, 11@@d@@pipe, 3@@p@@person, 6@@s@@puncture-01, 22@@s@@height, 18@@a@@and]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	what	_	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	5	APP_dom	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
5	verse	_	verse	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	1	APP_op2	true
6	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	MOD_o	true
9	?	_	?	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[8@@s@@have-03, 2@@d@@amr-unknown, 1@@a@@and, 5@@r@@verse, 7@@d@@we]
sentence=1	Regardless	regardless	regardless	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-91	(s(), o())	7	MOD_s	true
2	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
3	method,	_	method,	NNS	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	winning	_	win	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	seeker	_	seeker	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	provide-01	()	7	APP_s	true
7	wins	_	win	VBZ	O	(t<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (c<o>)  :ARG3 (h<o2>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
8	30	_	30	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	9	MOD_mod	true
9	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	for	_	for	IN	O	_	and	_	0	IGNORE	true
11	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
12	or	_	or	CC	O	_	$LEMMA$	_	7	IGNORE	true
13	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
14	team,	_	team,	CD	O	_	resemble-01	_	0	IGNORE	true
15	unlike	_	unlike	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	7	MOD_s	true
16	the	_	the	DT	O	_	resemble-01	_	0	IGNORE	true
17	books,	_	books,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	13	MOD_mod	true
18	in	_	in	IN	O	_	-	_	0	IGNORE	true
19	which	_	which	WDT	O	_	name	_	0	IGNORE	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	snitch	_	snitch	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	equal-01	(s(), o())	7	MOD_s	true
23	worth	_	worth	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	APP_o	true
24	150	_	150	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	25	MOD_mod	true
25	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[15@@s@@resemble-01, 8@@explicitanon0@@_NUMBER_, 7@@t@@win-01, 21@@d@@snitch, 13@@d@@she, 23@@s@@worth-01, 6@@e2@@provide-01, 22@@s@@equal-01, 1@@s@@regardless-91, 6@@p2@@person, 24@@explicitanon0@@_NUMBER_, 9@@d@@point, 5@@s@@win-01, 17@@p@@thing, 25@@d@@point]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	wounded	_	wound	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
4	soldiers,	_	soldiers,	NNS	O	_	and	_	0	IGNORE	true
5	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_o	true
7	love,	_	love,	VBP	O	_	and	_	0	IGNORE	true
8	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
9	love	_	love	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
10	—	_	—	:	O	_	and	_	0	IGNORE	true
11	they're	_	they're	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_s	true
12	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	—	_	—	:	O	(s<root> / --LEX--  :degree-of (t<mod>))	cause-01	(mod())	2	MOD_mod	true
14	all	_	all	RB	O	_	$LEMMA$	_	0	IGNORE	true
15	over	_	over	IN	O	(d<root> / --LEX--)	all-$LEMMA$	()	11	APP_o	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	place,	_	place,	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	and	(mod())	12	MOD_mod	true
18	thousands	_	thousand	NNS	O	_	1000	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	2	APP_o	true
20	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	23	MOD_mod	true
21	of	_	of	IN	O	_	person	_	0	IGNORE	true
22	wounded	_	wound	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	soldiers	_	soldier	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[22@@s@@wound-01, 3@@s@@wound-01, 12@@p@@great, 6@@d@@i, 9@@s@@love-01, 11@@s@@and, 15@@d@@all-over, 13@@s@@cause-01, 19@@a@@and, 17@@b@@and, 20@@explicitanon0@@1000, 1@@d@@We, 20@@m@@multiple, 23@@d@@soldier, 2@@s@@have-03]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	3	MOD_mod	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	9	MOD_s	true
4	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
5	trainers,	_	trainers,	NNS	O	_	include-91	_	0	IGNORE	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	addition	_	addition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	will	_	will	MD	O	_	thing	_	0	IGNORE	true
9	allow	_	allow	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	visitors	_	visitor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	visit-01	()	17	APP_s	true
11	to	_	to	TO	O	_	and	_	0	IGNORE	true
12	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	13	MOD_s	true
13	climb	_	climb	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	17	APP_op1	true
14	aboard	_	aboard	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	trainer	_	trainer	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_o	true
18	experience	_	experience	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	hands-on	_	hands-on	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	training	_	training	NN	O	(d<root> / --LEX--)	train-01	()	18	APP_o	true
22	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
23	astronauts	_	astronaut	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
25	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[23@@d@@astronaut, 12@@s@@actual-02, 18@@s@@experience-01, 9@@s@@allow-01, 7@@d@@addition, 2@@m@@most, 20@@p@@hands-on, 10@@p2@@person, 6@@p@@this, 21@@d@@train-01, 2@@t@@large, 3@@s@@include-91, 17@@a@@and, 24@@s@@get-01, 13@@s@@climb-03, 10@@e2@@visit-01]
sentence=1	Innate	innate	innate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	human	_	human	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	behaviors—that	_	behaviors—that	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	cause-01	(mod())	4	MOD_mod	true
4	is,	_	is,	FW	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	0	ROOT	true
5	behaviors	_	behavior	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	behave-01	(s())	10	APP_s	true
6	that	_	that	IN	O	_	interrogative	_	0	IGNORE	true
7	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
10	with—are	_	with—are	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_mod	true
11	biological,	_	biological,	NNP	O	_	mean-01	_	0	IGNORE	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	10	APP_o	true
14	.	_	.	.	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@cause-01, 4@@explicitanon0@@-, 10@@s@@with—are-01, 13@@d@@culture, 12@@explicitanon0@@-, 1@@p@@innate, 9@@s@@bear-02, 7@@d@@person, 5@@s@@behave-01, 2@@d@@human]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	21	APP_op1	true
2	there's	_	there'	VBZ	O	_	contrast-01	_	0	IGNORE	true
3	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	have,	_	have,	NNP	O	_	multi-sentence	_	0	IGNORE	true
10	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
11	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
12	coffee,	_	coffee,	NNP	O	_	and	_	0	IGNORE	true
13	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	21	MOD_mod	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	know	_	know	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	MOD_s	true
16	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
17	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
18	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	want	_	want	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
20	that,	_	that,	NNS	O	_	cause-01	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
22	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	I	i	I	PRP	O	_	mean-01	_	0	IGNORE	true
24	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	beige	_	beige	JJ	O	(d<root> / --LEX--)	_NAME_	()	24	APP_s	true
27	:	_	:	:	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@s@@like-01, 6@@explicitanon0@@-, 18@@explicitanon0@@-, 7@@s@@want-01, 5@@d@@i, 21@@a@@and, 19@@s@@want-01, 15@@c@@know-01, 14@@p@@just, 26@@d@@_NAME_, 22@@p@@all, 3@@d@@thing, 24@@s@@want-01, 1@@h@@contrast-01, 13@@p@@i]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	3	MOD_mod	true
3	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
4	who	_	who	WP	O	_	-	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_o	true
6	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	7	MOD_mod	true
7	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_s	true
8	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
9	a	_	a	DT	O	_	-	_	0	IGNORE	true
10	picture	_	picture	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_o	true
11	of	_	of	IN	O	_	person	_	0	IGNORE	true
12	me	_	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
14	sent	_	send	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
15	it	_	it	PRP	O	_	i	_	0	IGNORE	true
16	to	_	to	IN	O	_	-	_	0	IGNORE	true
17	me	_	I	PRP	O	_	i	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	an	_	an	DT	O	_	1	_	0	IGNORE	true
20	e-mail	_	e-mail	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
21	.	_	.	.	O	_	name	_	0	IGNORE	true

nodealignment=[13@@a@@and, 7@@s@@meet-02, 1@@p@@this, 2@@explicitanon0@@1, 5@@d@@i, 10@@d@@picture-01, 3@@d@@person, 8@@s@@take-01, 14@@s@@send-01, 20@@l@@e-mail, 6@@n@@ever]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	18	MOD_mod	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
3	lost	_	lose	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_op1	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	lawsuit	_	lawsuit	NN	O	(d<root> / --LEX--)	sue-02	()	3	APP_s	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	which	_	which	WDT	O	_	and	_	0	IGNORE	true
8	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	tried	_	try	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	MOD_s	true
10	to	_	to	TO	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	thing	(mod())	18	MOD_mod	true
11	void	_	void	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	his	_	he	PRP$	O	_	person	_	0	IGNORE	true
13	rice	_	rice	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	contract,	_	contract,	NNS	O	_	and	_	0	IGNORE	true
15	Norton's	_name_	Norton's	NNP	O	_	name	_	0	IGNORE	true
16	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	17	MOD_s	true
17	prominence	_	prominence	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
18	faded	_	fade	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	.	_	.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@w@@after, 2@@d@@he, 17@@d@@prominence, 18@@s@@fade-01, 3@@s@@lose-03, 13@@p@@rice, 10@@explicitanon0@@thing, 9@@c@@try-01, 5@@d@@sue-02, 11@@s@@void-01, 16@@s@@public-02]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	study	_	study	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	5	MOD_mod	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	eye-tracking	_	eye-tracking	NN	O	(d<root> / --LEX--)	_NAME_	()	5	APP_o	true
7	in	_	in	IN	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	10	MOD_mod	true
10	stage	_	stage	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	exploring	_	explore	VBG	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
13	audience	_	audience	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
15	of	_	of	IN	O	_	name	_	0	IGNORE	true
16	the	_	the	DT	O	_	name	_	0	IGNORE	true
17	extensive	_	extensive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	20	MOD_s	true
18	Spanish	_name_	spanish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	country	(mod())	20	MOD_mod	true
19	art	_	art	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	collections	_	collection	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	County	county	County	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
23	Durham,	durham,	durham,	CD	O	_	include-91	_	0	IGNORE	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
26	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
27	13	_	13	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
28	Zurbarán	_name_	Zurbarán	NNP	O	_	$LEMMA$	_	0	IGNORE	true
29	artworks	_	artwork	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	63	APP_s	true
30	(there	_	(there	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	5	MOD_o	true
31	are	_	be	VBP	O	_	temporal-quantity	_	0	IGNORE	true
32	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	42	MOD_s	true
33	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
34	12	_	12	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
35	Zurbarán	_name_	Zurbarán	NNP	O	_	mean-01	_	0	IGNORE	true
36	artworks,	_	artworks,	NNP	O	_	mean-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
38	13th	_name_	13th	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	13	(mod())	42	MOD_mod	true
39	Benjamin,	_name_	benjamin,	CD	O	_	_NAME_	_	0	IGNORE	true
40	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
41	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
42	copy	_	copy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
43	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
44	Arthur_Pond)	_name_	pond)	CD	O	_	_NAME_	_	0	IGNORE	true
45	are	_	be	VBP	O	_	person	_	0	IGNORE	true
46	a	_	a	DT	O	_	1	_	0	IGNORE	true
47	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	48	MOD_s	true
48	part	_	part	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
49	of,	_	of,	XX	O	_	$LEMMA$	_	0	IGNORE	true
50	to	_	to	TO	O	_	thing	_	0	IGNORE	true
51	investigate	_	investigate	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	48	MOD_mod	true
52	the	_	the	DT	O	_	thing	_	0	IGNORE	true
53	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	51	APP_s	true
54	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
55	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
56	audiences	_	audience	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	true
57	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	53	APP_mod	true
58	at	_	at	IN	O	_	name	_	0	IGNORE	true
59	Spanish	_name_	spanish	JJ	O	_	name	_	0	IGNORE	true
60	art,	_	art,	NN	O	_	thing	_	0	IGNORE	true
61	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
62	aesthetic	_	aesthetic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	63	MOD_mod	true
63	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	65	APP_s	true
64	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
65	evaluated	_	evaluate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	57	APP_o	true
66	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	51	MOD_op1	true
67	whether	_	whether	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	5	MOD_mod	true
68	audiences	_	audience	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	71	APP_s	true
69	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	66	APP_op2	true
70	be	_	be	VB	O	_	thing	_	0	IGNORE	true
71	encouraged	_	encourage	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	69	APP_s	true
72	to	_	to	TO	O	_	thing	_	0	IGNORE	true
73	approach	_	approach	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	71	APP_o	true
74	art	_	art	NN	O	(d<root> / --LEX--)	$LEMMA$	()	73	APP_o	true
75	in	_	in	IN	O	_	i	_	0	IGNORE	true
76	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	77	MOD_s	true
77	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
78	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[38@@explicitanon0@@13, 9@@explicitanon0@@1, 67@@explicitanon0@@interrogative, 22@@b@@County, 48@@d@@part, 18@@p@@country, 69@@s@@possible-01, 19@@p@@art, 56@@d@@audience, 68@@d@@audience, 6@@d@@_NAME_, 76@@s@@differ-02, 51@@i@@investigate-01, 10@@n@@stage, 2@@p@@this, 53@@t@@way, 12@@s@@explore-01, 74@@d@@art, 63@@s@@experience-01, 13@@d@@audience, 4@@d@@we, 42@@s@@copy-01, 30@@s@@(there, 77@@t@@way, 66@@a@@and, 34@@explicitanon0@@_NUMBER_, 47@@s@@key-02, 29@@d@@artwork, 57@@s@@look-01, 14@@s@@experience-01, 20@@d@@collection, 71@@o@@encourage-01, 62@@p@@aesthetic, 17@@s@@extensive-03, 5@@s@@use-01, 38@@o@@ordinal-entity, 33@@p@@only, 32@@s@@actual-02, 9@@o@@ordinal-entity, 27@@explicitanon0@@_NUMBER_, 65@@s@@evaluate-01, 73@@s@@approach-02, 3@@n@@study-01]
sentence=1	Both	both	both	CC	O	_	$LEMMA$	_	0	IGNORE	true
2	the_Irving_Independent_School_District	_name_	District	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
4	the_Irving_Police_Department	_name_	Department	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	3	APP_op2	true
5	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
6	asserted	_	assert	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	that	_	that	IN	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	boy's	_	boy's	JJ	O	_	_NAME_	_	0	IGNORE	true
10	religion	_	religion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_dom	true
12	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
13	were	_	be	VBD	O	_	person	_	0	IGNORE	true
14	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	factor	_	factor	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
17	in	_	in	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	manner	_	manner	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_o2	true
20	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
21	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
22	they	_	they	PRP	O	_	person	_	0	IGNORE	true
23	approached	_	approach	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	APP_mod	true
24	the	_	the	DT	O	_	thing	_	0	IGNORE	true
25	situation	_	situation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@a@@and, 3@@a@@and, 14@@explicitanon0@@-, 2@@g@@government-organization, 19@@t@@manner, 10@@d@@religion, 2@@n@@_NAME_, 25@@d@@situation, 4@@g@@government-organization, 6@@b@@assert-01, 12@@d@@name, 23@@s@@approach-02, 4@@n@@_NAME_, 16@@r@@factor]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
5	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
6	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	time	_	time	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
9	-	_	-	:	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
11	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	APP_dom	true
12	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	projects	_	project	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	queue	_	queue	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	that	_	that	WDT	O	_	and	_	0	IGNORE	true
18	I	i	I	PRP	O	_	1	_	0	IGNORE	true
19	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	finish	_	finish	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
22	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[10@@d@@i, 1@@explicitanon0@@some, 3@@p@@that, 21@@s@@finish-01, 11@@s@@have-03, 16@@b@@queue, 13@@d@@project, 6@@p@@just, 19@@s@@need-01, 12@@p@@other, 8@@r@@time, 7@@s@@lose-02, 4@@n@@time]
sentence=1	Second,	second,	second,	XX	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	stylistic	_	stylistic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	effects	_	effect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	enjambment	_	enjambment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	permits	_	permit	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	an	_	an	DT	O	_	thing	_	0	IGNORE	true
11	object	_	object	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	0	ROOT	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	current	_	current	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	research	_	research	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
15	(Martínez	(martínez	(Martínez	.	O	_	hyperlink-91	_	0	IGNORE	true
16	Fernández,_2010)	_name_	2010)	CD	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--)  :medium-of (r<mod>))	http://news.cnet.com/8301-1035_$LEMMA$	(mod())	7	MOD_mod	true
17	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@u@@url-entity, 4@@d@@effect, 6@@d@@enjambment, 14@@d@@research-01, 3@@p@@stylistic, 9@@p@@also, 13@@n@@current, 7@@s@@permit-01, 16@@explicitanon0@@http://news.cnet.com/8301-1035_2010), 11@@s@@object]
sentence=1	A	a	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
2	mutant	_	mutant	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
5	copy	_	copy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
8	system	_	system	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	APP_s	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	change	_	change	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
13	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
14	been	_	be	VBN	O	_	thing	_	0	IGNORE	true
15	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
16	that,	_	that,	NNP	O	_	-	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	cases,	_	cases,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	will	_	will	MD	O	_	thing	_	0	IGNORE	true
21	lead	_	lead	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-03	(s(), o())	8	APP_mod	true
22	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
23	a	_	a	DT	O	_	thing	_	0	IGNORE	true
24	behaviour	_	behaviour	NN	O	(d<root> / --LEX--)	behave-01	()	21	APP_o	true
25	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	differ-02	(s(), o())	24	MOD_s	true
26	than	_	than	IN	O	_	thing	_	0	IGNORE	true
27	expected	_	expect	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	25	APP_o	true
28	.	_	.	.	O	_	have-quant-91	_	0	IGNORE	true

nodealignment=[24@@d@@behave-01, 21@@t@@lead-03, 8@@b@@system, 25@@s@@differ-02, 27@@d@@expect-01, 12@@d@@change-01, 15@@s@@do-02, 5@@s@@copy-01, 2@@d@@mutant, 18@@p@@most]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Government	government	Government	NNP	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	9	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
5	Republic	republic	Republic	NNP	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	Albania	albania	Albania	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
8	will	_	will	MD	O	_	and	_	0	IGNORE	true
9	continue	_	continue	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
10	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
11	constantly	_	constantly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	constant	(mod())	12	MOD_mod	true
12	demonstrate	_	demonstrate	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	9	APP_o	true
13	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	commitment	_	commitment	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	commit-01	(s(), o())	12	APP_o	true
15	to	_	to	IN	O	_	and	_	0	IGNORE	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	implementation	_	implementation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	implement-01	(s())	14	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	standards	_	standard	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	enshrined	_	enshrine	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	21	MOD_s	true
23	in	_	in	IN	O	_	conform-01	_	0	IGNORE	true
24	the_United_Nations_and_Council_of_Europe	_name_	Europe	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	22	APP_o	true
25	conventions,	_	conventions,	NNP	O	_	and	_	0	IGNORE	true
26	as	_	as	RB	O	_	and	_	0	IGNORE	true
27	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
28	as	_	as	IN	O	_	and	_	0	IGNORE	true
29	the	_	the	DT	O	_	and	_	0	IGNORE	true
30	relevant	_	relevant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	MOD_s	true
31	documents	_	document	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	regional	_	regional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	region	(mod())	31	MOD_mod	true
34	organizations,	_	organizations,	NNS	O	_	and	_	0	IGNORE	true
35	such	_	such	JJ	O	_	cause-01	_	0	IGNORE	true
36	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	the_Organization_for_Security_and_Cooperation_in_Europe,	_name_	europe,	NN	O	(g<root> / --LEX--  :example-of (a<mod>))	_NAME_	(mod())	9	MOD_mod	true
38	in	_	in	IN	O	_	i	_	0	IGNORE	true
39	which	_	which	WDT	O	_	name	_	0	IGNORE	true
40	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_s	true
41	are	_	be	VBP	O	_	person	_	0	IGNORE	true
42	playing	_	play	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	37	MOD_o2	true
43	a	_	a	DT	O	_	thing	_	0	IGNORE	true
44	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	active	_	active	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	activity-06	(s())	46	MOD_s	true
46	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	42	APP_o	true
47	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@o2@@organization, 11@@t@@constant, 21@@d@@standard, 46@@d@@role, 42@@b@@play-01, 22@@s@@enshrine-01, 17@@p@@full, 7@@c@@country, 33@@p@@region, 7@@n@@_NAME_, 2@@g@@government-organization, 9@@c@@continue-01, 2@@g2@@govern-01, 45@@s@@activity-06, 24@@n@@_NAME_, 40@@d@@we, 12@@c@@demonstrate-01, 30@@s@@relevant-01, 37@@g@@_NAME_, 31@@p@@document, 18@@s@@implement-01, 44@@s@@very, 14@@s@@commit-01]
sentence=1	From	from	from	IN	O	_	cause-01	_	0	IGNORE	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	reports	_	report	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_o2	true
6	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
7	seen,	_	seen,	NNS	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	govern-01	_	0	IGNORE	true
9	government	_	government	NN	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	12	APP_s	true
10	was	_	be	VBD	O	_	person	_	0	IGNORE	true
11	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	12	MOD_s	true
12	prepared	_	prepared	JJ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
13	for	_	for	IN	O	_	thing	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	cyclone	_	cyclone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	.	_	.	.	O	_	cause-01	_	0	IGNORE	true

nodealignment=[9@@g@@government-organization, 9@@g2@@govern-01, 14@@p@@this, 5@@d@@i, 12@@b@@prepared-02, 3@@s@@report-01, 15@@d@@cyclone, 11@@s@@well-09, 2@@p@@all]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
3	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_s	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
5	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-09	(s(), o())	10	APP_op1	true
6	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	a	_	a	DT	O	_	multi-sentence	_	0	IGNORE	true
9	cream	_	cream	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	3	APP_s	true
11	tell	_	tell	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	APP_op2	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
13	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	–	_	–	:	O	_	thing	_	0	IGNORE	true
16	"You	"you	"You	''	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	11	APP_o	true
18	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
19	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
20	on	_	on	IN	O	_	and	_	0	IGNORE	true
21	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	wash-n-go's"	_	wash-n-go's"	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
24	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
25	would	_	would	MD	O	_	thing	_	0	IGNORE	true
26	kinda	_	kinda	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	kind-of	(mod())	27	MOD_mod	true
27	go	_	go	VB	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
28	against	_	against	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
29	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
31	I've	i've	i've	NN	O	_	-	_	0	IGNORE	true
32	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	said	_	say	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
34	on	_	on	IN	O	_	thing	_	0	IGNORE	true
35	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
36	channel,	_	channel,	NNS	O	_	thing	_	0	IGNORE	true
37	which	_	which	WDT	O	_	i	_	0	IGNORE	true
38	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
39	"Gels	"gels	"Gels	``	O	_	mean-01	_	0	IGNORE	true
40	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	43	MOD_s	true
41	are	_	be	VBP	O	_	person	_	0	IGNORE	true
42	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
43	make	_	make	VBP	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	$LEMMA$-02	(s())	33	MOD_s	true
44	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
45	wash-n-go	_name_	wash-n-go	``	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
46	stay.	_	stay.	JJ	O	_	$LEMMA$	_	0	IGNORE	true
47	"	_	"	''	O	_	mean-01	_	0	IGNORE	true

nodealignment=[14@@p@@just, 43@@t3@@thing, 12@@d@@you, 10@@a@@and, 28@@p@@against, 5@@s@@come-out-09, 1@@s@@cause-01, 9@@d@@cream-01, 13@@p@@guy, 3@@s@@possible-01, 17@@s@@possible-01, 2@@d@@i, 27@@t@@go-01, 18@@s@@use-01, 16@@d@@"You, 32@@n@@always, 19@@d@@it, 11@@b@@tell-01, 45@@d@@wash-n-go, 40@@s@@actual-02, 43@@t@@make-02, 29@@p@@all, 4@@explicitanon0@@-, 26@@p@@kind-of, 33@@s@@say-01]
sentence=1	Why	why	why	WRB	O	(a<root> / --LEX--  :ARG0-of (c / cause-01  :ARG1 (n<s>)))	amr-unknown	(s())	0	ROOT	true
2	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	run	_	run	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_s	true
4	for	_	for	IN	O	_	you	_	0	IGNORE	true
5	a	_	a	DT	O	_	person	_	0	IGNORE	true
6	lower	_	low	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	low-04	(s())	7	MOD_s	true
7	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
10	would	_	would	MD	O	_	name	_	0	IGNORE	true
11	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
12	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	win	_	win	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	MOD_s	true
16	and	_	and	CC	O	_	$LEMMA$	_	13	IGNORE	true
17	effect	_	effect	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
18	change	_	change	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_o	true
19	?	_	?	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[6@@b@@low-04, 1@@c@@cause-01, 17@@s@@effect-01, 13@@s@@likely-01, 6@@m@@more, 7@@d@@office, 2@@explicitanon0@@-, 18@@d@@change-01, 1@@a@@amr-unknown, 12@@s@@more, 15@@s@@win-01, 3@@s@@run-02, 9@@d@@you]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	lead	_	lead	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	6	MOD_s	true
6	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	in	_	in	IN	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	critically	_	critically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	high	(mod())	10	MOD_mod	true
10	acclaimed	_	acclaim	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
11	British	_name_	british	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
12	mini-serial	_	mini-serial	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
13	Dancing	dancing	Dancing	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	12	MOD_mod	true
14	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Edge,	_name_	Edge,	NNP	O	_	and	_	0	IGNORE	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	music	_	music	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	journalist	_	journalist	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
20	Stanley_Mitchell,	_name_	Mitchell,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	3	MOD_s	true
21	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
22	which	_	which	WDT	O	_	i	_	0	IGNORE	true
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	earned	_	earn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	nomination	_	nomination	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
27	for	_	for	IN	O	_	2	_	0	IGNORE	true
28	Best_Actor_in_a_Miniseries_or_a_Television_Film_at_the_Satellite_Awards	_name_	Awards	NNPS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
29	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[18@@p@@music, 28@@n@@_NAME_, 26@@s@@nomination-01, 11@@p@@_NAME_, 12@@n@@_NAME_, 13@@p@@Dancing-01, 2@@p@@also, 10@@s@@acclaim-01, 20@@s@@_NAME_, 24@@s@@earn-01, 5@@s@@lead, 28@@o2@@organization, 19@@d@@journalist, 6@@d@@role, 3@@s@@have-03, 1@@d@@He, 9@@p@@high]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	shape	_	shape	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	that	_	that	IN	O	_	original	_	0	IGNORE	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	starts	_	start	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-out-05	(s(), o())	2	MOD_o	true
6	out	_	out	RP	O	_	cause-01	_	0	IGNORE	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[5@@s@@start-out-05, 2@@d@@shape, 4@@d@@it]
sentence=1	39._“The_Figures	_name_	figure	NNS	O	(d<root> / --LEX--)	_NAME_	()	10	APP_o	true
2	which	_	which	WDT	O	_	i	_	0	IGNORE	true
3	excite	_	excite	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_s	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o2	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Ideas	ideas	Ideas	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	Beauty,	beauty,	Beauty,	NNS	O	_	thing	_	0	IGNORE	true
10	seem	_	seem	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	be	_	be	VB	O	_	person	_	0	IGNORE	true
13	those	_	those	DT	O	_	that	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	which	_	which	WDT	O	_	name	_	0	IGNORE	true
16	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
17	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	10	APP_s	true
18	Uniformity	uniformity	uniformity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	amidst	_	amidst	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	Variety”	variety”	variety”	JJ	O	_	and	_	0	IGNORE	true
21	(§	_	(§	NNP	O	_	$LEMMA$	_	0	IGNORE	true
22	II,	ii,	ii,	CD	O	_	and	_	0	IGNORE	true
23	p.	_	p.	NN	O	_	cite-01	_	0	IGNORE	true
24	28)	_	28)	CD	O	_	mean-01	_	0	IGNORE	true
25	.	_	.	.	O	_	and	_	0	IGNORE	true

nodealignment=[3@@b@@excite-01, 1@@d@@_NAME_, 7@@d@@Ideas, 10@@s@@seem-01, 17@@s@@person, 18@@d@@uniformity, 5@@d@@us]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	number	_	number	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	4	MOD_mod	true
4	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
7	did	_	do	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	trip	_	trip	NN	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-03	(mod(), s())	14	MOD_mod	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
13	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	14	MOD_s	true
14	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (i<s>)  :ARG3 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
15	a_night	_name_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	Eugene,	eugene,	eugene,	CD	O	_	and	_	0	IGNORE	true
18	Oregon,	oregon,	oregon,	CD	O	_	_NAME_	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
20	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-26	(s())	29	APP_op1	true
22	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
23	at	_	at	IN	O	_	d$LEMMA$e-entity	_	0	IGNORE	true
24	like	_	like	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	21	MOD_mod	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	crack	_	crack	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$-01	(poss())	24	APP_op1	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	dawn	_	dawn	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_poss	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	19	APP_op2	true
30	drove	_	drive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	29	APP_op2	true
31	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	Crater_Lake	_name_	Lake	NNP	O	(n2<root> / --LEX--  :name-of (l / location  :location-of (s3<mod>)))	_NAME_	(mod())	30	MOD_mod	true
33	.	_	.	.	O	_	i	_	0	IGNORE	true

nodealignment=[14@@s@@stay-01, 24@@w@@like, 13@@s@@actual-02, 26@@h@@crack-01, 30@@s@@drive-01, 19@@a@@and, 10@@v@@trip-03, 21@@s@@get-up-26, 32@@l@@location, 6@@d@@we, 12@@d@@we, 3@@o@@ordinal-entity, 32@@n2@@_NAME_, 4@@p@@thing, 29@@a@@and, 15@@n@@night, 3@@explicitanon0@@1, 28@@d@@dawn]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	exist-01	_	0	IGNORE	true
3	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
7	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
8	truths	_	truth	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
10	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	ways	_	way	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
13	in	_	in	IN	O	_	i	_	0	IGNORE	true
14	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
15	evolution	_	evolution	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_o	true
16	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
17	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
18	“pushed”	_name_	“pushed"	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	9	MOD_s	true
19	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	21	MOD_s	true
21	beliefs	_	belief	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	believe-01	(s(), o())	18	APP_o	true
22	.	_	.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@s@@too, 11@@explicitanon0@@many, 20@@s@@moral-02, 15@@d@@evolution, 12@@d@@way, 5@@explicitanon0@@many, 6@@s@@possible-01, 18@@s@@-, 16@@s@@possible-01, 9@@a@@and, 19@@d@@our, 4@@s@@too, 3@@p@@just, 7@@s@@moral-02, 21@@s@@believe-01, 8@@d@@truth]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	APP_op2	true
5	the	_	the	DT	O	_	he	_	0	IGNORE	true
6	biggest	_	big	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	big	(mod())	7	MOD_mod	true
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	11	MOD_s	true
11	check	_	check	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-05	(s(), o())	7	MOD_o	true
12	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
13	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
14	you're	_	you're	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	there	_	there	EX	O	_	$LEMMA$	_	0	IGNORE	true
16	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
17	Powell's	_name_	powell's	NN	O	(f<root> / facility  :name (n2 / --LEX--))	_NAME_	()	4	APP_s	true
18	which	_	which	WDT	O	_	foot	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
21	bookstore	_	bookstore	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	.	_	.	.	O	_	mean-01	_	0	IGNORE	true

nodealignment=[21@@p@@bookstore, 2@@n@@then, 1@@a@@and, 6@@t@@big, 4@@s@@include-91, 17@@n2@@_NAME_, 7@@d@@thing, 9@@d@@you, 6@@m@@most, 17@@f@@facility, 10@@s@@recommend-01, 11@@s@@check-out-05]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	4	MOD_mod	true
4	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
5	that	_	that	WDT	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	1	MOD_s	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	recommend	_	recommend	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_o	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	5	MOD_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	Portland	_name_	Portland	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	is	_	be	VBZ	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	1	APP_s	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
14	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	Portland	_name_	Portland	NNP	O	_	_NAME_	_	0	IGNORE	true
17	at	_	at	RB	O	_	thing	_	0	IGNORE	true
18	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	12	MOD_mod	true
19	.	_	.	.	O	_	event	_	0	IGNORE	true

nodealignment=[8@@d@@you, 5@@s@@that, 18@@p@@at-all, 1@@s@@cause-01, 7@@b@@recommend-01, 6@@d@@i, 11@@c@@city, 14@@s@@actual-02, 13@@explicitanon0@@-, 3@@explicitanon0@@1, 11@@n@@_NAME_, 3@@o@@ordinal-entity, 9@@s@@do-02, 12@@d@@be-located-at-91, 4@@d@@thing]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	will	_	will	MD	O	_	and	_	0	IGNORE	true
4	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	1	APP_o	true
5	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
6	tremendous–take	_	tremendous–take	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	tremendous	_	tremendous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	step	_	step	NN	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_o	true
10	toward–or	_	toward–or	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	and-or	(s())	9	APP_o	true
11	to	_	to	TO	O	_	and	_	0	IGNORE	true
12	stop	_	stop	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	violence,	_	violence,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	stem	_	stem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	suffering	_	suffering	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	9	APP_s	true
19	start	_	start	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op3	true
20	to	_	to	TO	O	_	person	_	0	IGNORE	true
21	build	_	build	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_s	true
22	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	healthier,	_	healthier,	NNS	O	_	and	_	0	IGNORE	true
24	better	_	well	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	25	MOD_s	true
25	relationship	_	relationship	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	relation-03	(s(), o())	21	APP_s	true
26	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
27	law	_	law	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	enforcement	_	enforcement	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	enforce-01	(s())	25	APP_s	true
29	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
30	communities	_	community	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
31	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
32	they	_	they	PRP	O	_	person	_	0	IGNORE	true
33	respect	_	respect	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
34	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[19@@s@@start-01, 18@@a@@and, 33@@s@@respect-01, 8@@p@@tremendous, 28@@s@@enforce-01, 17@@d@@suffering-01, 9@@h@@step-01, 6@@d@@tremendous–take-01, 1@@s@@contrast-01, 24@@b@@good-02, 12@@d@@stop-01, 30@@d@@community, 25@@t@@relation-03, 24@@m@@more, 27@@d@@law, 15@@s@@stem-01, 21@@s@@build-01, 10@@s@@and-or, 2@@d@@it, 4@@s@@make-02]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	62nd	_name_	62nd	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	5	(mod())	4	MOD_mod	true
4	minute	_	minute	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	Kim_Min-Woo	_name_	Min-Woo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	conceded	_	concede	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	a	_	a	DT	O	_	person	_	0	IGNORE	true
8	penalty	_	penalty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	which	_	which	WDT	O	_	i	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	match	_	match	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
12	referee	_	referee	NN	O	(h<root> / have-org-role-91  :ARG1 (s<o>)  :ARG0 (h2<s>)  :ARG2 (j / --LEX--))	$LEMMA$	(s(), o())	13	MOD_s	true
13	Joel_Aguilar	_name_	Aguilar	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
14	awarded	_	award	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	MOD_o	true
15	Sweden	_name_	Sweden	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	14	APP_o2	true
16	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	14	MOD_mod	true
17	confirming	_	confirm	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
18	with	_	with	IN	O	_	person	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	video	_	video	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	assistant	_	assistant	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	assist-01	(mod())	22	MOD_mod	true
22	referee	_	referee	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
23	.	_	.	.	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[15@@c@@country, 13@@p@@person, 8@@d@@penalty, 4@@n@@minute, 3@@explicitanon0@@5, 3@@o@@ordinal-entity, 14@@b@@award-01, 11@@d@@match, 12@@h@@have-org-role-91, 22@@d@@referee-01, 5@@n@@_NAME_, 12@@j@@referee, 5@@p@@person, 17@@s@@confirm-01, 15@@n@@_NAME_, 13@@n@@_NAME_, 21@@p@@assist-01, 16@@w@@after, 20@@p@@video, 6@@s@@concede-01]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	3	MOD_mod	true
3	challenge	_	challenge	NN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_o	true
7	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
9	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
10	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
13	analysis	_	analysis	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	analyze-01	(s())	3	APP_s	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	18	MOD_mod	true
16	interstellar	_	interstellar	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	dust	_	dust	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	particles	_	particle	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
20	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	22	MOD_s	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	find	_	find	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
23	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@s@@simple-02, 10@@p@@any, 7@@n@@before, 5@@d@@we, 6@@s@@have-03, 15@@p@@this, 22@@s@@find-01, 18@@d@@particle, 16@@p@@interstellar, 11@@p@@kind, 17@@p@@dust, 13@@s@@analyze-01, 2@@explicitanon0@@1, 8@@s@@possible-01, 2@@o@@ordinal-entity, 3@@o@@challenge-01]
sentence=1	Johann_Bernoulli	_name_	Bernoulli	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	plagiarized	_	plagiarize	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
4	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	key	_	key	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	from	_	from	IN	O	_	describe-01	_	0	IGNORE	true
8	Daniel's	_name_	Daniel's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o2	true
9	book	_	book	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	Hydrodynamica	_name_	Hydrodynamica	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
13	own	_	own	JJ	O	_	person	_	0	IGNORE	true
14	book	_	book	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
15	Hydraulica	_name_	Hydraulica	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	14	MOD_mod	true
16	which	_	which	WDT	O	_	name	_	0	IGNORE	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	backdated	_	backdate	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
19	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
20	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
21	Hydrodynamica	_name_	Hydrodynamica	NNP	O	_	_NAME_	_	0	IGNORE	true
22	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[9@@s@@book, 20@@n@@before, 1@@n@@_NAME_, 10@@n@@_NAME_, 15@@n@@_NAME_, 18@@s@@backdate-01, 8@@n@@_NAME_, 8@@p@@person, 2@@p@@also, 1@@p@@person, 14@@b@@book, 5@@s@@key-02, 3@@b@@plagiarize-01, 6@@d@@idea, 4@@explicitanon0@@some]
sentence=1	I've	i've	I've	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	an	_	an	DT	O	_	thing	_	0	IGNORE	true
4	ironing	_	ironing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
5	board,	_	board,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
9	suitcases,	_	suitcases,	NNP	O	_	and	_	0	IGNORE	true
10	socks,	_	socks,	NNP	O	_	and	_	0	IGNORE	true
11	clothes	_	clothe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
12	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
14	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	wear	_	wear	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	often,	_	often,	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	multi-sentence	(op2(), op1())	2	MOD_op1	true
18	anything	_	anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
19	that	_	that	WDT	O	_	and	_	0	IGNORE	true
20	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
22	for	_	for	IN	O	_	and	_	0	IGNORE	true
23	fixing	_	fix	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	21	MOD_mod	true
24	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
25	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
26	like	_	like	IN	O	_	cause-01	_	0	IGNORE	true
27	screwdrivers,	_	screwdrivers,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	drills,	_	drills,	NNS	O	_	and	_	0	IGNORE	true
29	nails,	_	nails,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
31	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	32	MOD_mod	true
32	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_s	true
33	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
34	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
35	definitely	_	definitely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	definite	(mod())	37	MOD_mod	true
36	wouldn't	_	wouldn't	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	37	MOD_mod	true
37	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	MOD_s	true
38	to	_	to	TO	O	_	-	_	0	IGNORE	true
39	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_o	true
40	laid	_	lay	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	MOD_s	true
41	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
42	in	_	in	IN	O	_	i	_	0	IGNORE	true
43	my	_	my	PRP$	O	_	include-91	_	0	IGNORE	true
44	room,	_	room,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
45	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	2	APP_o	true
46	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
47	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_o	true
49	somewhere	_	somewhere	RB	O	(d<root> / --LEX--)	$LEMMA$	()	48	APP_s	true
50	in	_	in	IN	O	_	i	_	0	IGNORE	true
51	the	_	the	DT	O	_	person	_	0	IGNORE	true
52	house	_	house	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[36@@explicitanon0@@-, 52@@b@@house, 18@@d@@anything, 11@@d@@clothe, 49@@d@@somewhere, 40@@s@@lay-01, 37@@s@@want-01, 14@@explicitanon0@@-, 13@@d@@I, 25@@d@@house, 4@@s@@ironing-01, 48@@s@@need-01, 6@@p@@all, 31@@p@@this, 15@@s@@wear-01, 30@@p@@all, 35@@p@@definite, 2@@s@@get-01, 47@@p@@still, 39@@s@@have-03, 32@@d@@thing, 21@@s@@need-01, 17@@a@@multi-sentence, 23@@i@@fix-02, 45@@s@@contrast-01]
sentence=1	Although	although	although	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	0	ROOT	true
2	no	_	no	DT	O	_	-	_	0	IGNORE	true
3	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	4	APP_s	true
4	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	what	_	what	WP	O	_	thing	_	0	IGNORE	true
6	happened	_	happen	VBD	O	(d<root> / --LEX--)	event	()	1	APP_o	true
7	to	_	to	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	name	_	0	IGNORE	true
9	Olmec	_name_	Olmec	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	21	APP_o	true
10	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
11	about	_	about	RB	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_op1	true
12	400	_	400	CD	O	(d<root> / --LEX--)	_NUMBER_	()	11	APP_op1	true
13	BCE,	bce,	BCE,	NNS	O	_	thing	_	0	IGNORE	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	part	_	part	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	APP_o	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	jungle	_	jungle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	reclaimed	_	reclaim	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
20	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
21	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	1	MOD_s	true
22	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	cities,	_	cities,	NNS	O	_	name	_	0	IGNORE	true
24	their	_	they	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
25	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
26	was	_	be	VBD	O	_	person	_	0	IGNORE	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	base	_	base	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
29	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
30	which	_	which	WDT	O	_	name	_	0	IGNORE	true
31	the	_	the	DT	O	_	name	_	0	IGNORE	true
32	Maya	_name_	Maya	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	33	APP_op1	true
33	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_s	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	Aztec	_name_	Aztec	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	33	APP_op2	true
36	built	_	build	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
37	.	_	.	.	O	_	person	_	0	IGNORE	true

nodealignment=[20@@explicitanon0@@many, 21@@s@@include-91, 10@@w@@after, 33@@a@@and, 32@@e@@ethnic-group, 4@@s@@know-01, 36@@s@@build-01, 19@@s@@reclaim-01, 15@@s@@part, 6@@d@@event, 3@@d@@no-one, 35@@e@@ethnic-group, 12@@d@@_NUMBER_, 11@@o@@about, 16@@s@@cause-01, 18@@d@@jungle, 32@@n@@_NAME_, 25@@d@@culture, 9@@n@@_NAME_, 35@@n@@_NAME_, 28@@d@@base, 9@@e@@ethnic-group, 1@@s@@have-concession-91]
sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	severe	_	severe	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	concerns	_	concern	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
4	underpinning	_	underpin	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	alleged	_	allege	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	allege-01	(s())	7	MOD_s	true
7	crisis	_	crisis	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
9	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	dimensions	_	dimension	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	relating	_	relate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
12	to:	_	to:	NNP	O	_	$LEMMA$	_	0	IGNORE	true
13	(a)	_	(a)	NNP	O	_	mean-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	(small)	_	(small)	HYPH	O	_	mean-01	_	0	IGNORE	true
16	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	APP_op1	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_mod	true
20	research;	_	research;	NNP	O	_	and	_	0	IGNORE	true
21	(b)	_	(b)	NFP	O	_	mean-01	_	0	IGNORE	true
22	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
23	(poor)	_	(poor)	JJ	O	_	mean-01	_	0	IGNORE	true
24	quality	_	quality	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	28	APP_op2	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_poss	true
27	research;	_	research;	NNP	O	_	include-91	_	0	IGNORE	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	11	APP_o	true
29	(c)	_	(c)	-LRB-	O	_	mean-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
31	(lack	_	(lack	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_op3	true
32	of)	_	of)	NN	O	_	-	_	0	IGNORE	true
33	reproducibility,	_	reproducibility,	NNS	O	_	_NAME_	_	0	IGNORE	true
34	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
35	refers	_	refer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	31	MOD_s	true
36	to	_	to	IN	O	_	mean-01	_	0	IGNORE	true
37	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
38	extent	_	extent	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	to	_	to	TO	O	_	thing	_	0	IGNORE	true
40	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
41	findings	_	finding	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	45	APP_s	true
42	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	35	APP_o	true
43	(not)	_	(not)	RB	O	_	thing	_	0	IGNORE	true
44	be	_	be	VB	O	_	person	_	0	IGNORE	true
45	reproduced	_	reproduce	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	42	APP_s	true
46	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
47	replication	_	replication	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
48	attempts	_	attempt	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	APP_o	true
49	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
50	have	_	have	VBP	O	_	person	_	0	IGNORE	true
51	been	_	be	VBN	O	_	person	_	0	IGNORE	true
52	undertaken	_	undertake	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	MOD_s	true
53	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[35@@s@@refer-01, 6@@s@@allege-01, 38@@s@@extent, 41@@t@@thing, 3@@d@@concern-01, 11@@s@@relate-01, 47@@d@@replication-01, 45@@s@@reproduce-01, 48@@s@@attempt-01, 16@@explicitanon0@@amount, 42@@s@@possible-01, 2@@p@@severe, 41@@d@@finding-01, 31@@d@@(lack, 52@@s@@undertake-01, 8@@s@@have-03, 4@@s@@underpin-01, 18@@s@@publish-01, 24@@m@@quality, 10@@d@@dimension, 19@@d@@replication-01, 28@@a@@and, 7@@d@@crisis, 9@@explicitanon0@@several, 26@@d@@replication-01]
sentence=1	Over	over	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
5	wall,	_	wall,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	8	MOD_mod	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	posters	_	poster	NNS	O	(d<root> / --LEX--)	post-01	()	22	APP_op1	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
11	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
12	bought	_	buy	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
15	2013	_name_	2013	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	12	MOD_mod	true
16	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	my_first_year	_name_	year	NN	O	(p<root> / --LEX--  :poss (h<poss>)  :time-of (a<mod>))	$LEMMA$	(mod(), poss())	12	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	university	_	university	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	Toronto,	toronto,	toronto,	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	19	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
23	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
24	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
25	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	liked	_	like	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
27	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	22	MOD_s	true
29	I've	i've	i've	JJ	O	_	cause-01	_	0	IGNORE	true
30	kept	_	keep	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_o	true
31	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	around	_	around	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
33	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@s@@really, 2@@b@@here, 22@@a@@and, 32@@b@@around, 15@@explicitanon0@@_NUMBER_, 28@@s@@cause-01, 6@@p@@this, 11@@s@@actual-02, 21@@n@@_NAME_, 12@@s@@buy-01, 26@@d@@like-01, 17@@p@@year, 21@@c@@city, 10@@d@@i, 19@@d@@university, 24@@s@@really, 15@@d@@date-entity, 30@@d@@keep-01, 13@@p@@back, 8@@d@@post-01]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
4	tradition	_	tradition	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	honest,	_	honest,	NNS	O	_	center-01	_	0	IGNORE	true
7	progressive	_	progressive	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
8	democratic	_	democratic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	government	_	government	NN	O	(g<root> / government-organization  :mod-of (p<mod>)  :ARG0-of (g2 / --LEX--))	govern-01	(mod())	4	MOD_mod	true
10	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
11	Mayor	mayor	Mayor	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	12	MOD_s	true
12	Tate	_name_	Tate	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
13	carries	_	carry	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-on-02	(s(), o())	9	MOD_o	true
14	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
15	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[11@@p2@@mayor, 4@@r@@tradition, 12@@n@@_NAME_, 11@@h@@have-org-role-91, 9@@g@@government-organization, 1@@d@@that, 7@@s@@progressive-02, 8@@p@@_NAME_, 12@@p@@person, 13@@s@@carry-on-02, 9@@g2@@govern-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	profile	_	profile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	fill	_	fill	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	5	MOD_o	true
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	me,	_	me,	NN	O	_	and	_	0	IGNORE	true
11	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	mini-MMPI	mini-mmpi	mini-mmpi	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	_NAME_	(mod())	5	MOD_mod	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	developed,	_	developed,	VBZ	O	_	cause-01	_	0	IGNORE	true
16	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
17	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
18	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	have	_	have	VBP	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-03	(mod(), s())	26	MOD_mod	true
20	an	_	an	DT	O	_	thing	_	0	IGNORE	true
21	idea	_	idea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	--	_	--	:	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	i	(s(), o())	3	MOD_s	true
23	Rebecca	_name_	Rebecca	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	26	APP_s	true
25	I	i	I	PRP	O	_	1	_	0	IGNORE	true
26	put	_	put	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
27	it	_	it	PRP	O	_	i	_	0	IGNORE	true
28	togethe	_	togethe	DT	O	_	$LEMMA$	_	0	IGNORE	true
29	r	_	r	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[19@@i@@have-03, 6@@d@@they, 22@@s@@i, 5@@d@@profile, 3@@s@@have-03, 1@@d@@i, 7@@s@@fill-out-03, 2@@p@@also, 12@@o@@_NAME_, 23@@n@@_NAME_, 23@@p@@person, 24@@a@@and, 26@@s@@put-01, 21@@d@@idea]
sentence=1	By	by	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	4	MOD_mod	true
2	now	_	now	RB	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
3	I'm	i'm	i'm	PRP	O	_	now	_	0	IGNORE	true
4	sure	_	sure	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_s	true
5	you're	_	you're	PRP	O	_	you	_	0	IGNORE	true
6	wondering	_	wonder	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
7	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	10	MOD_s	true
10	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
13	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
14	on	_	on	IN	O	_	be-located-at-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
16	table	_	table	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
17	here,	_	here,	NNPS	O	_	and	_	0	IGNORE	true
18	but	_	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
19	first,	_	first,	NNS	O	_	and	_	0	IGNORE	true
20	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
21	would	_	would	MD	O	_	say-01	_	0	IGNORE	true
22	like	_	like	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	18	APP_o	true
23	to	_	to	TO	O	_	i	_	0	IGNORE	true
24	talk	_	talk	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	22	APP_o	true
25	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	30	MOD_mod	true
29	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	30	MOD_mod	true
30	items	_	item	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
31	.	_	.	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@s@@wonder-01, 28@@p@@this, 10@@d@@thing, 18@@h@@contrast-01, 24@@t@@talk-01, 9@@s@@differ-02, 16@@s@@table-01, 12@@d@@i, 1@@w@@by, 22@@c@@like-02, 4@@s@@sure-02, 29@@explicitanon0@@3, 2@@d@@now, 30@@d@@item]

