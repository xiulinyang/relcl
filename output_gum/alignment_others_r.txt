sentence=1	The	the	the	DT	O	_	cause-01	_	0	IGNORE	true
2	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_s	true
3	I'm	i'm	i'm	WP	O	_	$LEMMA$-01	_	0	IGNORE	true
4	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	4	MOD_s	true
7	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	early	_	early	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
11	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
12	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	10	APP_s	true
13	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
14	med	_	med	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	school	_	school	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	class	_	class	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
17	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	16	MOD_mod	true
19	to	_	to	TO	O	(s<root> / --LEX--  :ARG1 (p<s>))	between	(s())	10	APP_o	true
20	four	_	four	CD	O	(d<root> / --LEX--)	5	()	19	APP_s	true
21	thirty,	_	thirty,	NNS	O	_	and	_	0	IGNORE	true
22	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	12	MOD_s	true
23	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	22	APP_o	true
25	three_hours_45_minutes	_name_	minute	NNS	O	(d<root> / --LEX--)	_NAME_	()	24	APP_o	true
26	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
27	take	_	take	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	24	MOD_mod	true
28	it.	_	it.	NN	O	_	see-01	_	0	IGNORE	true

nodealignment=[27@@i@@take-01, 12@@s@@have-03, 7@@d@@this, 6@@s@@resemble-01, 15@@p@@school, 2@@s@@cause-01, 19@@s@@between, 18@@explicitanon0@@2, 8@@n@@early, 20@@d@@5, 25@@d@@_NAME_, 22@@s@@cause-01, 4@@s@@take-01, 14@@p@@med, 10@@s@@cause-01, 24@@s@@have-03, 5@@d@@it, 23@@d@@we, 16@@d@@class]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	felt	_	feel	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	horrible	_	horrible	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	doing	_	do	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	3	MOD_o	true
5	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	eye	_	eye	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
10	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
11	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_o	true
13	in	_	in	RB	O	_	be-located-at-91	_	0	IGNORE	true
14	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	week,	_	week,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	under	_	under	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o2	true
18	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	night	_	night	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	was.	_	was.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@d@@horrible, 12@@s@@have-03, 11@@d@@he, 18@@p@@whatever, 1@@d@@i, 2@@b@@feel-01, 5@@d@@that, 17@@o@@under, 7@@p@@that, 4@@b@@do-02, 14@@b@@here, 19@@d@@night, 8@@p@@eye, 15@@p@@last, 9@@d@@dog]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	4	APP_dom	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	things	_	thing	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_s	true
5	I've	i've	i've	JJ	O	_	thing	_	0	IGNORE	true
6	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
7	done,	_	done,	NNP	O	_	and	_	0	IGNORE	true
8	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_s	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	got	_	get	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	APP_o	true
11	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
12	done,	_	done,	NNP	O	_	and	_	0	IGNORE	true
13	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
14	done,	_	done,	NNP	O	_	and	_	0	IGNORE	true
15	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	done.	_	done.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@r@@thing, 11@@d@@this, 10@@s@@get-04, 8@@s@@cause-01, 6@@s@@cause-01, 1@@d@@this]
sentence=1	Pack	pack	pack	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	separate	_	separate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
4	box	_	box	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	essentials	_	essential	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	MOD_s	true
9	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
10	for	_	for	IN	O	_	and	_	0	IGNORE	true
11	the_first_night	_name_	night	NN	O	(f<root> / festival  :name (n / --LEX--)  :time-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	at	_	at	IN	O	_	i	_	0	IGNORE	true
13	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
14	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	house.	_	house.	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true

nodealignment=[1@@explicitanon0@@imperative, 11@@n@@_NAME_, 4@@d@@box, 15@@p@@house., 14@@s@@new-01, 8@@s@@possible-01, 6@@g@@essential, 1@@h@@pack-01, 9@@s@@need-01, 11@@f@@festival, 3@@s@@separate-02, 7@@d@@you]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
2	also,	_	also,	NNS	O	_	and	_	0	IGNORE	true
3	I'm	i'm	i'm	PRP	O	_	_NAME_	_	0	IGNORE	true
4	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	proud	_	proud	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	pride-01	(o(s()))	1	APP_op1	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	say	_	say	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	5	APP_o	true
8	that	_	that	IN	O	_	and	_	0	IGNORE	true
9	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
10	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
11	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	12	MOD_s	true
12	gone	_	go	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-back-19	(s())	7	APP_o	true
13	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	therapy,	_	therapy,	NNS	O	_	and	_	0	IGNORE	true
16	which	_	which	WDT	O	_	i	_	0	IGNORE	true
17	is	_	be	VBZ	O	_	event	_	0	IGNORE	true
18	something	_	something	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	haven't	_	haven't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	done	_	do	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	APP_op2	true
23	since	_	since	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	—	_	—	:	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	1	MOD_mod	true
25	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
26	mean	_	mean	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
28	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
29	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
30	I	i	I	PRP	O	_	1	_	0	IGNORE	true
31	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
32	in	_	in	IN	O	_	i	_	0	IGNORE	true
33	therapy,	_	therapy,	.	O	_	$LEMMA$	_	0	IGNORE	true
34	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
35	I	i	I	PRP	O	_	1	_	0	IGNORE	true
36	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-temporally-at-91	(s())	1	APP_s	true
37	like	_	like	UH	O	(d<root> / --LEX--)	1	()	36	APP_s	true
38	20.	_	20.	CD	O	_	year	_	0	IGNORE	true

nodealignment=[7@@c@@say-01, 24@@explicitanon0@@-, 37@@d@@1, 4@@s@@very, 21@@explicitanon0@@-, 28@@p@@last, 1@@a@@and, 36@@s@@be-temporally-at-91, 22@@s@@do-02, 12@@s@@go-back-19, 26@@s@@mean-01, 11@@s@@actual-02, 5@@c@@pride-01, 23@@n@@since, 34@@p@@almost]
sentence=1	These	these	these	DT	O	(d<root> / --LEX--)	this	()	2	APP_s	true
2	work	_	work	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	0	ROOT	true
3	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
4	on	_	on	IN	O	_	thing	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	line	_	line	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
9	sight,	_	sight,	NNS	O	_	cause-01	_	0	IGNORE	true
10	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_s	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
13	to	_	to	TO	O	_	say-01	_	0	IGNORE	true
14	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	path	_	path	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	mice	_	mouse	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	taking.	_	taking.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[1@@d@@this, 3@@p@@only, 17@@d@@path, 11@@d@@you, 2@@s@@work-09, 12@@s@@need-01, 16@@p@@exact, 14@@s@@know-01, 19@@d@@mouse, 10@@s@@cause-01, 6@@s@@single-02, 7@@t@@line]
sentence=1	I'm	i'm	I'm	NNS	O	_	i	_	0	IGNORE	true
2	going	_	go	VBG	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-02	(s())	0	ROOT	true
3	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
4	Saxby's	_name_	Saxby's	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
5	right	_	right	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	to	_	to	TO	O	_	and	_	0	IGNORE	true
8	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	2	MOD_mod	true
10	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
13	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
17	for	_	for	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	day,	_	day,	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
21	yeah.	_	yeah.	UH	O	_	expressive	_	0	IGNORE	true

nodealignment=[14@@s@@need-01, 12@@d@@work-01, 9@@s@@do-02, 2@@p@@go-02, 5@@p@@right, 8@@p@@just, 4@@c@@company, 10@@p@@all, 6@@n@@after, 4@@n@@_NAME_]
sentence=1	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	fine	_	fine	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
3	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	farm	_	farm	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	houses	_	house	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o2	true
6	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	-	_	0	IGNORE	true
8	remaining	_	remain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
9	population	_	population	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	does	_	do	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
11	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
12	commendable	_	commendable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	13	MOD_s	true
13	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
14	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
15	to	_	to	IN	O	_	thing	_	0	IGNORE	true
16	maintain,	_	maintain,	NNP	O	_	cause-01	_	0	IGNORE	true
17	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
18	many	_	many	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
19	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	18	MOD_s	true
20	them	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	are	_	be	VBP	O	_	person	_	0	IGNORE	true
22	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	empty	_	empty	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	17	APP_s	true
25	the	_	the	DT	O	_	and	_	0	IGNORE	true
26	rest	_	rest	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	used	_	use	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	24	APP_op2	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	vacation	_	vacation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	30	MOD_mod	true
30	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_o	true
31	for	_	for	IN	O	_	person	_	0	IGNORE	true
32	"Danish	"danish	"danish	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	33	MOD_mod	true
33	foreigners".	_	foreigners".	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true

nodealignment=[3@@p@@old, 4@@p@@farm, 12@@s@@commendable, 33@@p@@_NAME_, 29@@p@@vacation-01, 30@@d@@home, 14@@s@@try-01, 1@@explicitanon0@@some, 2@@s@@fine-02, 32@@p@@name, 10@@b@@do-02, 18@@d@@many, 13@@d@@job, 24@@a@@and, 22@@n@@now, 27@@s@@use-01, 23@@s@@empty-02, 26@@d@@rest, 9@@d@@population, 5@@d@@house, 8@@s@@remain-01, 19@@s@@include-91, 17@@s@@cause-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	3	MOD_mod	true
3	aspect	_	aspect	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
5	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	mean-01	(mod())	3	APP_dom	true
6	parts	_	part	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op1	true
7	or	_	or	CC	O	(o<root> / --LEX--  :op1 (d<op1>)  :op2 (o2<op2>)  :prep-with-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
8	hours	_name_	hour	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_op2	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	the	_	the	DT	O	_	day	_	0	IGNORE	true
11	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	Paralympics	_name_	Paralympics	NNP	O	(g<root> / game  :name (n / --LEX--))	_NAME_	()	5	APP_mod	true
14	will	_	will	MD	O	_	i	_	0	IGNORE	true
15	be	_	be	VB	O	_	person	_	0	IGNORE	true
16	shown.	_	shown.	NN	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[3@@r@@aspect, 5@@p@@mean-01, 2@@explicitanon0@@2, 11@@n@@day, 13@@n@@_NAME_, 2@@o@@ordinal-entity, 8@@d@@hour, 13@@g@@game, 6@@d@@part, 7@@o@@or]
sentence=1	Make	make	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
2	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	0	ROOT	true
3	it’s	_	it’s	JJ	O	_	person	_	0	IGNORE	true
4	a	_	a	DT	O	_	person	_	0	IGNORE	true
5	target	_	target	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_s	true
6	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_poss	true
7	audience	_	audience	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_s	true
8	will	_	will	MD	O	_	thing	_	0	IGNORE	true
9	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	interest-01	(s(), o())	5	MOD_o	true
11	in	_	in	IN	O	_	thing	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
13	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	they’re	_	they’re	NFP	O	_	name	_	0	IGNORE	true
15	likely	_	likely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
16	willing	_	willing	JJ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	will-02	(o(s()))	13	MOD_s	true
17	to	_	to	TO	O	_	will-02	_	0	IGNORE	true
18	laugh	_	laugh	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	at.	_	at.	NN	O	_	-	_	0	IGNORE	true
20	[2]	_	[2]	XX	O	_	cause-01	_	0	IGNORE	true

nodealignment=[12@@a@@and, 10@@s@@interest-01, 16@@c@@will-02, 2@@s@@ensure-01, 15@@s@@likely-01, 18@@s@@laugh-01, 7@@m@@audience, 5@@d@@target-01, 13@@d@@something, 6@@d@@your]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	are	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
3	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	in	_	in	IN	O	_	after	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	10	MOD_mod	true
7	medium	_	medium	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	9	MOD_s	true
8	term	_	term	NN	O	_	$LEMMA$	_	0	IGNORE	true
9	plan	_	plan	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
10	cycle	_	cycle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
11	(2013	_	(2013	NNP	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
12	-	_	-	HYPH	O	_	date-interval	_	0	IGNORE	true
13	2017)	_	2017)	NNP	O	_	and	_	0	IGNORE	true
14	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
15	theme	_	theme	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	10	MOD_s	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	“Transforming	“transforming	“transforme	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	Kenya:	kenya:	Kenya:	NNP	O	_	mean-01	_	0	IGNORE	true
19	Pathways	pathways	Pathways	NNP	O	(t<root> / --LEX--  :path-of (d<mod>))	$LEMMA$	(mod())	17	APP_s	true
20	to	_	to	IN	O	_	thing	_	0	IGNORE	true
21	Devolution,	devolution,	devolution,	CD	O	_	name	_	0	IGNORE	true
22	Socio-economic	socio-economic	Socio-economic	NNP	O	(d<root> / --LEX--)	economy	()	25	APP_op1	true
23	Development,	development,	development,	CD	O	_	and	_	0	IGNORE	true
24	Equity	equity	Equity	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	19	APP_mod	true
26	National	national	National	NNP	O	(d<root> / --LEX--)	nation	()	25	APP_op3	true
27	Unity”.	unity”.	Unity”.	NNS	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@p@@plan-01, 10@@d@@cycle, 1@@d@@We, 26@@d@@nation, 7@@s@@medium-03, 3@@n@@now, 2@@s@@be-located-at-91, 6@@o@@ordinal-entity, 15@@s@@theme, 11@@explicitanon0@@_NUMBER_, 6@@explicitanon0@@2, 17@@s@@“transforme-01, 25@@a@@and, 19@@t@@Pathways, 22@@d@@economy, 24@@d@@Equity]
sentence=1	Well,	_name_	Well,	NNP	O	_	and	_	0	IGNORE	true
2	well,	_	well,	NNP	O	_	and	_	0	IGNORE	true
3	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	6	APP_op1	true
6	—	_	—	:	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	-	(op2(), op1())	0	ROOT	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
8	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_op2	true
10	that,	_	that,	NNP	O	_	cause-01	_	0	IGNORE	true
11	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	MOD_o	true
12	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
13	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	did	_	do	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
15	was,	_	was,	VB	O	_	thing	_	0	IGNORE	true
16	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
17	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	6	MOD_s	true
18	in	_	in	RB	O	_	i	_	0	IGNORE	true
19	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
21	put	_	put	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	bandage	_	bandage	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	on.	_	on.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@s@@be-located-at-91, 14@@s@@do-02, 5@@s@@do-02, 4@@d@@we, 12@@d@@all, 9@@s@@do-02, 8@@explicitanon0@@-, 6@@a@@-, 20@@a@@and, 11@@s@@cause-01, 7@@d@@i, 21@@s@@put-01, 3@@p@@all, 23@@d@@bandage, 19@@d@@here]
sentence=1	Although	although	although	IN	O	(s<root> / --LEX--  :ARG2 (g<s>))	have-concession-91	(s())	41	APP_op1	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	am	_	be	VBP	O	_	have-concession-91	_	0	IGNORE	true
4	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	22	MOD_o	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	being	_	be	VBG	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	22	APP_s	true
7	there	_	there	EX	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
8	would	_	would	MD	O	_	thing	_	0	IGNORE	true
9	enhance	_	enhance	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	22	APP_op1	true
10	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
11	understanding	_	understanding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	understand-01	(s())	9	APP_o	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	animals	_	animal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
20	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	live,	_	live,	NNP	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_s	true
23	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
24	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op2	true
25	me	_	I	PRP	O	_	i	_	0	IGNORE	true
26	formulate	_	formulate	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_o	true
27	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
28	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
29	better	_	well	JJR	O	(s<root> / --LEX--  :ARG1 (p<s>))	good-02	(s())	30	MOD_s	true
30	questions	_	question	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
31	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	anemones,	_	anemones,	NNP	O	_	_NAME_	_	0	IGNORE	true
34	ship	_	ship	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_s	true
36	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
37	expensive,	_	expensive,	NNP	O	_	mean-01	_	0	IGNORE	true
38	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
39	in	_	in	IN	O	_	i	_	0	IGNORE	true
40	Antarctica,	_name_	antarctica,	CD	O	(b<root> / --LEX--  :location-of (h<mod>))	and	(mod())	41	MOD_mod	true
41	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
42	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
43	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
44	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
45	biologists	_	biologist	NNS	O	(r<root> / --LEX--  :condition-of (c<mod>))	$LEMMA$	(mod())	56	MOD_mod	true
46	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
47	contribution	_	contribution	NN	O	(d<root> / --LEX--)	contribute-01	()	49	APP_o	true
48	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
49	predicated	_	predicate	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	45	MOD_s	true
50	on	_	on	IN	O	_	mean-01	_	0	IGNORE	true
51	being	_	be	VBG	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
52	there,	_	there,	XX	O	_	and	_	0	IGNORE	true
53	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
54	should	_	should	MD	O	(d<root> / --LEX--)	recommend-01	()	41	APP_op2	true
55	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	41	APP_op3	true
56	priority	_	priority	NN	O	(d<root> / --LEX--)	prioritize-01	()	55	APP_s	true
57	to	_	to	TO	O	_	and	_	0	IGNORE	true
58	be	_	be	VB	O	_	person	_	0	IGNORE	true
59	there.	_	there.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[29@@s@@good-02, 6@@d@@be-located-at-91, 54@@d@@recommend-01, 30@@s@@question-01, 45@@r@@biologist, 49@@s@@predicate-01, 7@@d@@there, 27@@s@@more, 17@@d@@system, 35@@d@@time, 56@@d@@prioritize-01, 38@@p@@especially, 41@@a@@and, 40@@b@@and, 34@@a@@ship, 9@@b@@enhance-01, 14@@d@@animal, 47@@d@@contribute-01, 55@@s@@have-03, 11@@s@@understand-01, 26@@s@@formulate-01, 24@@s@@help-01, 22@@a@@and, 1@@s@@have-concession-91, 4@@s@@sure-02, 2@@d@@i, 15@@a@@and]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	actual	_	actual	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	3	MOD_s	true
3	author	_	author	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$-01	()	0	ROOT	true
4	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
5	Johann_Valentin_Andreae,	_name_	andreae,	NN	O	_	_NAME_	_	0	IGNORE	true
6	whose	_	whose	WP$	O	_	name	_	0	IGNORE	true
7	name	_	name	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$-01	(poss())	3	MOD_poss	true
8	didn’t	_	didn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
9	appear	_	appear	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	on	_	on	IN	O	_	describe-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	book	_	book	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	originally,	_	originally,	NNP	O	_	thing	_	0	IGNORE	true
14	thus	_	thus	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	9	MOD_s	true
15	ensuring	_	ensure	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	confusion.	_	confusion.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true

nodealignment=[9@@s@@appear-01, 17@@d@@confusion., 3@@e2@@author-01, 7@@m@@name-01, 3@@p2@@person, 12@@b@@book, 15@@s@@ensure-01, 2@@s@@actual-02, 8@@explicitanon0@@-, 14@@s@@cause-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	mean	_	mean	VBP	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that's	_	that's	PRP	O	_	now	_	0	IGNORE	true
4	the	_	the	DT	O	_	i	_	0	IGNORE	true
5	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	too.	_	too.	UH	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@d@@i, 5@@d@@thing, 2@@t@@mean-01, 1@@d@@i, 7@@s@@think-01]
sentence=1	Things	things	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	You'll	you'll	You'll	MD	O	_	i	_	0	IGNORE	true
3	Need	need	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true

nodealignment=[3@@s@@need-01, 1@@d@@thing]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	compared	_	compare	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
6	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
9	'scopes	_	'scope	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	to	_	to	IN	O	_	thing	_	0	IGNORE	true
11	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
12	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
13	been	_	be	VBN	O	_	thing	_	0	IGNORE	true
14	published	_	publish	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o2	true
15	on	_	on	IN	O	_	thing	_	0	IGNORE	true
16	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	species	_	specie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	group.	_	group.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@s@@publish-01, 1@@d@@i, 17@@d@@specie, 6@@s@@see-01, 16@@p@@other, 19@@p@@this, 9@@b@@'scope, 2@@b@@compare-01, 4@@d@@thing]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	try	_	try	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	and	_	0	IGNORE	true
4	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	4	MOD_mod	true
7	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	as	_	as	IN	O	_	1	_	0	IGNORE	true
9	if	_	if	IN	O	_	1	_	0	IGNORE	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	16	MOD_mod	true
14	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	I	i	I	PRP	O	_	1	_	0	IGNORE	true
16	said	_	say	VBD	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$-01	(mod())	2	MOD_mod	true
17	it.	_	it.	JJ	O	_	thing	_	0	IGNORE	true

nodealignment=[5@@d@@it, 16@@n@@say-01, 13@@o@@ordinal-entity, 6@@r@@rate-entity-91, 4@@s@@say-01, 2@@c@@try-01, 1@@d@@i, 13@@explicitanon0@@1]
sentence=1	Zenghelis	zenghelis	Zenghelis	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	described	_	describe	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	as	_	as	IN	O	_	i	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	outstanding	_	outstanding	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	8	MOD_mod	true
8	pupil	_	pupil	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	2	APP_o2	true
9	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
11	taught.	_	taught.	ADD	O	_	person	_	0	IGNORE	true

nodealignment=[1@@p@@person, 8@@e2@@pupil, 8@@p2@@person, 2@@b@@describe-01, 3@@d@@she, 10@@n@@ever, 6@@s@@most, 7@@p@@outstanding-02, 1@@n@@_NAME_]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op1	true
5	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
6	it's	_	it's	PRP	O	_	-	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
9	meant	_	mean	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	to	_	to	IN	O	_	thing	_	0	IGNORE	true
11	like,	_	like,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	oppress	_	oppress	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
13	people,	_	people,	NNP	O	_	and	_	0	IGNORE	true
14	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	12	MOD_mod	true
15	women,	_	women,	.	O	_	and	_	0	IGNORE	true
16	but	_	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	1	APP_op2	true
17	I've	i've	I've	NNP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
18	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
19	been	_	be	VBN	O	_	person	_	0	IGNORE	true
20	having	_	have	VBG	O	_	$LEMMA$-03	_	0	IGNORE	true
21	a	_	a	DT	O	_	-	_	0	IGNORE	true
22	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
24	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
25	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
26	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
27	I	i	I	PRP	O	_	thing	_	0	IGNORE	true
28	look.	_	look.	RB	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@s@@mean-01, 8@@d@@word, 12@@d@@oppress-01, 2@@p@@also, 22@@s@@hard-02, 23@@d@@time, 16@@s@@contrast-01, 14@@p@@particular, 4@@s@@feel-01, 18@@p@@just, 3@@d@@i, 1@@a@@and]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	Tyler’s	tyler’s	Tyler’s	NNP	O	_	_NAME_	_	0	IGNORE	true
3	mind	_	mind	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_op1	true
6	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
7	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	face	_	face	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	grow	_	grow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
10	taut,	_	taut,	NNP	O	_	and	_	0	IGNORE	true
11	lose	_	lose	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	13	APP_op2	true
12	color,	_	color,	NNP	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
14	then,	_	then,	NNS	O	_	cause-01	_	0	IGNORE	true
15	for	_	for	IN	O	_	resemble-01	_	0	IGNORE	true
16	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
17	only	_	only	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
18	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
19	he	_	he	PRP	O	_	1	_	0	IGNORE	true
20	could	_	could	MD	O	(d<root> / --LEX--)	possible-01	()	23	APP_s	true
21	remember,	_	remember,	NNP	O	_	thing	_	0	IGNORE	true
22	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	began	_	begin	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op3	true
24	to	_	to	TO	O	_	and	_	0	IGNORE	true
25	cry.	_	cry.	VB	O	_	and	_	0	IGNORE	true

nodealignment=[23@@s@@begin-01, 20@@d@@possible-01, 11@@d@@lose-02, 17@@p@@only, 13@@a@@and, 3@@b@@mind, 8@@d@@face, 9@@s@@grow-01, 6@@s@@see-01, 5@@s@@possible-01]
sentence=1	Virtually	virtually	virtually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	virtual	(mod())	2	MOD_mod	true
2	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	combination	_	combination	NN	O	(d<root> / --LEX--)	combine-01	()	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
6	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	7	MOD_s	true
7	think	_	think	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	of!	_	of!	ADD	O	_	possible-01	_	0	IGNORE	true

nodealignment=[2@@p@@any, 7@@s@@think-01, 4@@d@@combine-01, 6@@s@@possible-01, 3@@p@@other, 5@@d@@you, 1@@p@@virtual]
sentence=1	On	on	on	IN	O	_	cause-01	_	0	IGNORE	true
2	2	_	2	CD	O	(explicitanon4<root> / --LEX--  :day-of (d<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
3	June,_Évariste_Galois	_name_	Galois	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	name	(mod())	2	MOD_mod	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	buried	_	bury	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
6	in	_	in	IN	O	_	person	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	share-01	(mod())	9	MOD_mod	true
9	grave	_	grave	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_s	true
10	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	the_Montparnasse_Cemetery	_name_	Cemetery	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
12	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
13	exact	_	exact	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	location	_	location	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	unknown.	_	unknown.	NN	O	_	$LEMMA$	_	0	IGNORE	true
17	[17]	_	[17]	.	O	_	$LEMMA$	_	0	IGNORE	true
18	[15]	_	[15]	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@b@@location, 11@@c@@company, 5@@s@@bury-01, 13@@p@@exact, 11@@n@@_NAME_, 8@@p@@share-01, 2@@explicitanon4@@_NUMBER_, 3@@n@@name, 9@@m@@grave]
sentence=1	When	when	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
2	NASA	_name_	NASA	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	launched	_	launch	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
4	the_Hubble_Space_Telescope	_name_	Telescope	NNP	O	(p<root> / product  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
5	in	_	in	IN	O	_	and	_	0	IGNORE	true
6	1990,	_	1990,	NNP	O	_	and	_	0	IGNORE	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
8	were	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
9	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
10	to	_	to	TO	O	_	and	_	0	IGNORE	true
11	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	stars	_	star	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	unobstructed	_	unobstructe	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Earth’s	earth’s	Earth’s	NNP	O	(d<root> / --LEX--)	_NAME_	()	18	APP_poss	true
18	atmosphere	_	atmosphere	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	14	APP_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	9	APP_s	true
20	understand	_	understand	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op2	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	universe	_	universe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
25	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	29	MOD_s	true
27	have	_	have	VB	O	_	thing	_	0	IGNORE	true
28	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	29	MOD_mod	true
29	imagined	_	imagine	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
30	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	a_few_decades	_name_	decade	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	29	MOD_mod	true
32	earlier.	_	earlier.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[18@@m@@atmosphere, 19@@a@@and, 3@@t@@launch-01, 7@@d@@we, 2@@n@@_NAME_, 2@@g@@government-organization, 24@@t@@way, 31@@p@@_NAME_, 14@@s@@unobstructe-01, 22@@d@@universe, 11@@s@@see-01, 30@@p@@even, 4@@p@@product, 20@@s@@understand-01, 29@@s@@imagine-01, 26@@s@@possible-01, 28@@n@@ever, 4@@n@@_NAME_, 17@@d@@_NAME_, 13@@d@@star, 9@@s@@possible-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
4	heard	_	hear	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
5	him,	_	him,	NNS	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	night	_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	4	APP_o	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_mod	true
10	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	emergency	_	emergency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
14	room.	_	room.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@s@@recommend-01, 13@@d@@emergency, 8@@d@@we, 7@@d@@date-entity, 7@@m@@night, 4@@s@@hear-01, 1@@d@@You, 9@@s@@take-01]
sentence=1	Objects	objects	object	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_op1	true
2	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_s	true
3	donations	_	donation	NNS	O	(d<root> / --LEX--)	donate-01	()	2	APP_op2	true
4	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
5	be	_	be	VB	O	_	monetary-quantity	_	0	IGNORE	true
6	placed	_	place	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	APP_s	true
7	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	front	_	front	NN	O	(o<root> / --LEX--  :op1 (b<op1>))	in-$LEMMA$-of	(op1())	6	APP_o	true
9	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	a	_	a	DT	O	_	person	_	0	IGNORE	true
11	monk	_	monk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
12	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	can	_	can	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	6	MOD_mod	true
15	pick	_	pick	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_op1	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	up,	_	up,	NN	O	_	and	_	0	IGNORE	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_s	true
19	place	_	place	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	it	_	it	PRP	O	_	i	_	0	IGNORE	true
21	on	_	on	IN	O	_	thing	_	0	IGNORE	true
22	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
23	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	24	MOD_s	true
24	cloth	_	cloth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	carries	_	carry	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	him.	_	him.	NNS	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[23@@s@@special-02, 24@@d@@cloth, 26@@s@@carry-01, 19@@s@@place-01, 18@@a@@or, 3@@d@@donate-01, 4@@s@@recommend-01, 15@@d@@pick-01, 14@@i@@possible-01, 8@@o@@in-front-of, 1@@d@@object, 6@@s@@place-01, 2@@a@@or, 11@@d@@monk]
sentence=1	So	so	so	CC	O	_	infer-01	_	0	IGNORE	true
2	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	go	_	go	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	20	APP_op1	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	pregnant	_	pregnant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	woman,	_	woman,	NNS	O	_	-	_	0	IGNORE	true
9	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
12	enough	_	enough	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	iodine,	_	iodine,	NNS	O	_	and	_	0	IGNORE	true
14	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	won't	_	won't	UH	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	make	_	make	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op2	true
17	enough	_	enough	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	thyroid	_	thyroid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
19	hormone,	_	hormone,	NNS	O	_	contrast-01	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	40	APP_s	true
21	the	_	the	DT	O	_	-	_	0	IGNORE	true
22	foetus	_	foetus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	won't	_	won't	NNS	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_op3	true
25	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
26	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	24	APP_o	true
27	of	_	of	IN	O	_	monetary-quantity	_	0	IGNORE	true
28	thyroid	_	thyroid	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	hormone	_	hormone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_mod	true
30	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
32	for	_	for	IN	O	_	thing	_	0	IGNORE	true
33	adequate	_	adequate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
34	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
35	proper	_	proper	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	development	_	development	NN	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	develop-02	(mod(), s())	31	MOD_mod	true
37	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	brain,	_	brain,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
40	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
41	you'll	_	you'll	PRP	O	_	person	_	0	IGNORE	true
42	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	see	_	see	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_o	true
44	consequences	_	consequence	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	43	APP_s	true
45	being	_	be	VBG	O	_	monetary-quantity	_	0	IGNORE	true
46	loss	_	loss	NN	O	(d<root> / --LEX--)	lose-02	()	53	APP_op1	true
47	of	_	of	IN	O	_	and	_	0	IGNORE	true
48	IQ,	_name_	IQ,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
49	learning	_	learn	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	53	APP_op2	true
50	difficulties,	_	difficulties,	NNP	O	_	and	_	0	IGNORE	true
51	hearing	_	hear	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	52	MOD_mod	true
52	difficulties	_	difficulty	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_op3	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	44	APP_s	true
54	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
55	neurological	_	neurological	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	57	MOD_mod	true
56	problems,"	_	problems,"	NNP	O	_	cause-01	_	0	IGNORE	true
57	Professor	professor	Professor	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	58	MOD_s	true
58	Eastman	_name_	Eastman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	53	APP_op4	true
59	said.	_	said.	NN	O	_	resemble-01	_	0	IGNORE	true

nodealignment=[52@@d@@difficulty, 57@@h@@have-org-role-91, 33@@p@@adequate, 55@@p@@neurological, 23@@explicitanon0@@-, 54@@p@@other, 53@@a@@and, 26@@explicitanon0@@amount, 10@@explicitanon0@@-, 44@@s@@consequence, 20@@a@@and, 43@@s@@see-01, 29@@d@@hormone, 12@@explicitanon0@@enough, 31@@s@@need-01, 18@@d@@thyroid, 49@@d@@learn-01, 51@@p@@hear-01, 16@@s@@make-01, 46@@d@@lose-02, 24@@s@@get-01, 22@@d@@foetus, 57@@p2@@professor, 3@@d@@we, 4@@s@@go-02, 40@@s@@cause-01, 7@@d@@pregnant, 15@@explicitanon0@@-, 17@@explicitanon0@@enough, 58@@p@@person, 36@@i@@develop-02, 42@@n@@then, 11@@s@@get-01, 58@@n@@_NAME_, 35@@p@@proper]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	law	_	0	IGNORE	true
6	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-07	(s())	7	MOD_s	true
7	World_Cups	_name_	Cups	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	we've	_	we've	NN	O	_	multi-sentence	_	0	IGNORE	true
9	played	_	play	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	actually.	_	actually.	RB	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[9@@s@@play-01, 7@@d@@Cups, 1@@d@@It, 6@@m@@most, 6@@b2@@bad-07, 4@@s@@include-91]
sentence=1	When	when	when	WRB	O	(n<root> / --LEX--  :time-of (p<mod>))	amr-unknown	(mod())	7	MOD_mod	true
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	-1	_	0	IGNORE	true
4	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	Chevrolet	_name_	Chevrolet	NNP	O	(c<root> / car-make  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	Tokyo?	_name_	tokyo?	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@p@@last, 9@@c@@car-make, 7@@s@@see-01, 6@@d@@you, 1@@n@@amr-unknown, 9@@n@@_NAME_]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	individuals	_	individual	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	reported	_	report	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that	_	that	IN	O	_	and	_	0	IGNORE	true
5	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
6	they	_	they	PRP	O	_	person	_	0	IGNORE	true
7	are	_	be	VBP	O	_	person	_	0	IGNORE	true
8	able	_	able	JJ	O	(p<root> / --LEX--  :ARG1 (s2<o>)  :time-of (s<mod>))	possible-01	(mod(), o(s()))	15	MOD_mod	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	reach	_	reach	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	site,	_	site,	NNP	O	_	and	_	0	IGNORE	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	get	_	get	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	message	_	message	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_s	true
19	stating,	_	stating,	.	O	_	thing	_	0	IGNORE	true
20	"The	"the	"the	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	word	_	word	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	scientology	_	scientology	NN	O	(d<root> / --LEX--)	_NAME_	()	23	APP_s	true
23	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	18	APP_s	true
24	search	_	search	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
25	for	_	for	IN	O	_	and	_	0	IGNORE	true
26	truth	_	truth	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	...".	_	...".	.	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@p@@all, 3@@s@@report-01, 2@@d@@individual, 8@@p@@possible-01, 10@@s@@reach-01, 24@@s@@search-01, 23@@s@@mean-01, 22@@d@@_NAME_, 15@@s@@get-01, 1@@explicitanon0@@some, 26@@d@@truth, 21@@p@@word, 18@@s@@message-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	decisions	_	decision	NNS	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	decide-01	(mod(), s())	15	MOD_mod	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	15	APP_s	true
6	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
7	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
10	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
11	life,	_	life,	NNS	O	_	and	_	0	IGNORE	true
12	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	tried	_	try	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	APP_o	true
18	what	_	what	WP	O	_	thing	_	0	IGNORE	true
19	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
20	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-04	(s())	17	APP_o	true
21	for	_	for	IN	O	_	thing	_	0	IGNORE	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	Nation.	_name_	Nation.	NNP	O	(d<root> / --LEX--)	_NAME_	()	20	APP_s	true

nodealignment=[20@@b2@@good-04, 17@@s@@do-02, 15@@c@@try-01, 14@@n@@always, 10@@s@@public-02, 20@@m@@most, 5@@d@@i, 4@@v@@decide-01, 23@@d@@_NAME_, 2@@p@@all]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	maintains	_	maintain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	tourist	_	tourist	NN	O	(p<root> / person  :mod-of (y<mod>)  :ARG0-of (f / --LEX--))	tour-01	(mod())	6	MOD_mod	true
6	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	offices,	_	offices,	RB	O	_	and	_	0	IGNORE	true
8	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	3	MOD_s	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	MOD_s	true
12	offer	_	offer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
13	helpful	_	helpful	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-04	(s())	14	MOD_s	true
14	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	on	_	on	IN	O	_	thing	_	0	IGNORE	true
16	accommodation,	_	accommodation,	NNPS	O	_	and	_	0	IGNORE	true
17	free	_	free	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	19	APP_op1	true
18	maps,	_	maps,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (d<op2>)  :op1 (a2<op1>)  :consist (l2<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
20	bus	_	bus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	connections.	_	connections.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@p@@all, 9@@s@@include-91, 3@@s@@maintain-01, 5@@p@@person, 19@@a@@and, 13@@s@@helpful-04, 6@@d@@information, 12@@s@@offer-01, 5@@f@@tour-01, 2@@d@@city, 14@@d@@information, 17@@d@@free-03, 20@@d@@bus, 4@@explicitanon0@@several, 11@@s@@possible-01]
sentence=1	Ozone	_name_	ozone	NN	O	(d<root> / --LEX--)	$REPL$	()	3	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	something	_	something	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	that	_	that	WDT	O	_	cause-01	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	understand	_	understand	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	MOD_o	true
7	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
8	causes	_	cause	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
9	of,	_	of,	RB	O	_	thing	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o2	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	steps	_	step	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_op2	true
13	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
14	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	to	_	to	TO	O	_	-	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
18	to	_	to	TO	O	_	and	_	0	IGNORE	true
19	improve	_	improve	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
20	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
21	quality."	_	quality."	NNP	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[6@@b@@understand-01, 3@@r@@something, 19@@s@@improve-01, 8@@d@@cause-01, 5@@d@@we, 20@@d@@air, 10@@a@@and, 12@@s@@step-01, 14@@s@@need-01, 1@@d@@_name_, 17@@s@@take-01]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
2	ultimately	_	ultimately	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ultimate	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	decided	_	decide	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	eHow's	ehow's	ehow's	NN	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	model	_	model	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	would	_	would	MD	O	_	thing	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	build	_	build	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	resource	_	resource	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
14	envisioned.	_	envisioned.	VBD	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@p@@ultimate, 1@@s@@cause-01, 7@@d@@model, 4@@s@@decide-01, 3@@d@@i, 6@@n@@_NAME_, 10@@s@@build-01, 12@@d@@resource, 9@@explicitanon0@@-]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	13	MOD_s	true
3	us,	_	us,	FW	O	_	say-01	_	0	IGNORE	true
4	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
5	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	religion	_	religion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
7	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
9	belong,	_	belong,	NNS	O	_	and	_	0	IGNORE	true
10	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	13	APP_s	true
11	equally	_	equally	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	equal-01	(mod())	13	MOD_mod	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	children	_	child	NNS	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	0	ROOT	true
14	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	13	MOD_s	true
15	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	13	APP_o	true
16	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
17	equal	_	equal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
18	rights,	_	rights,	NNP	O	_	and	_	0	IGNORE	true
19	privileges	_	privilege	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	20	APP_op2	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	MOD_op1	true
21	obligations.	_	obligations.	ADD	O	_	and	_	0	IGNORE	true

nodealignment=[13@@g@@child, 2@@s@@include-91, 13@@h@@have-org-role-91, 15@@n@@_NAME_, 1@@p@@all, 20@@a@@and, 17@@s@@equal-01, 15@@c@@country, 19@@d@@privilege-01, 10@@d@@person, 6@@d@@religion, 11@@s@@equal-01, 5@@p@@whatever, 14@@s@@include-91, 8@@s@@possible-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
2	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	39	APP_o	true
4	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_op2	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
7	reef	_	reef	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_dom	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	but	_	but	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	black	_	black	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	13	MOD_s	true
12	basalt	_	basalt	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	crown	_	crown	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	27	APP_o	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
16	shocking	_	shocking	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
17	eikon	_	eikon	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	13	APP_poss	true
18	whose	_	whose	WP$	O	_	name	_	0	IGNORE	true
19	monstrous	_	monstrous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	monster	(mod())	20	MOD_mod	true
20	forehead	_	forehead	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
21	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	shown	_	show	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_o	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	dim	_	dim	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	26	MOD_s	true
26	moonlight	_	moonlight	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	and	_	and	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	1	APP_op1	true
28	whose	_	whose	WP$	O	_	i	_	0	IGNORE	true
29	vile	_	vile	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	hooves	_	hoof	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_s	true
31	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	32	MOD_s	true
32	paw	_	paw	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_mod	true
33	the	_	the	DT	O	_	he	_	0	IGNORE	true
34	hellish	_	hellish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
35	ooze	_	ooze	NN	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_o	true
36	miles	_	mile	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	below,	_	below,	.	O	_	and	_	0	IGNORE	true
38	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	1	MOD_mod	true
39	shrieked	_	shriek	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	40	APP_op1	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_op2	true
41	shrieked	_	shriek	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
42	lest	_	lest	IN	O	_	cause-01	_	0	IGNORE	true
43	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
44	hidden	_	hide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	45	MOD_s	true
45	face	_	face	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
46	rise	_	rise	NN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	50	APP_op1	true
47	above	_	above	IN	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
48	the	_	the	DT	O	_	he	_	0	IGNORE	true
49	waters,	_	waters,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_o	true
50	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
51	lest	_	lest	IN	O	_	cause-01	_	0	IGNORE	true
52	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
53	hidden	_	hide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	54	MOD_s	true
54	eyes	_	eye	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	55	APP_s	true
55	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	50	APP_op2	true
56	at	_	at	IN	O	_	have-concession-91	_	0	IGNORE	true
57	me	_	I	PRP	O	_	i	_	0	IGNORE	true
58	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	55	MOD_mod	true
59	the	_	the	DT	O	_	person	_	0	IGNORE	true
60	slinking	_	slinking	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	58	APP_op1	true
61	away	_	away	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	60	MOD_mod	true
62	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
63	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
64	leering	_	leering	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	67	MOD_s	true
65	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
66	treacherous	_	treacherous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	67	MOD_mod	true
67	yellow	_	yellow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	68	MOD_s	true
68	moon.	_	moon.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true

nodealignment=[7@@d@@reef, 19@@p@@monster, 12@@g@@basalt, 38@@p@@i, 27@@s@@and, 39@@s@@shriek-01, 9@@p@@but, 63@@p@@that, 40@@a@@and, 16@@s@@shocking-01, 11@@s@@black-04, 21@@n@@now, 3@@d@@i, 68@@p@@moon., 29@@p@@vile, 67@@s@@yellow, 60@@d@@slinking-01, 30@@d@@hoof, 25@@s@@dim, 26@@m@@moonlight, 47@@a@@above, 55@@s@@look-01, 22@@s@@show-01, 58@@w@@after, 50@@a@@and, 17@@p@@_NAME_, 4@@s@@see-01, 20@@d@@forehead, 45@@d@@face, 13@@c@@crown, 64@@s@@leering-01, 54@@d@@eye, 53@@s@@hide-01, 46@@g@@rise-01, 36@@p@@mile, 1@@a@@and, 66@@p@@treacherous, 34@@p@@hellish, 35@@d@@ooze, 49@@d@@waters,, 32@@s@@paw-01, 26@@d@@date-entity, 61@@a@@away, 31@@s@@obligate-01, 44@@s@@hide-01]
sentence=1	Imagine	imagine	imagine	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	having	_	have	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	1	APP_s	true
3	detailed	_	detail	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	detail-01	(s())	5	MOD_s	true
4	step-by-step	_	step-by-step	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	instructions	_	instruction	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	instruct-01	(s(), o())	2	APP_s	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
8	to	_	to	TO	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	1	MOD_mod	true
9	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_o	true
10	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	activity	_	activity	NN	O	(d<root> / --LEX--)	$LEMMA$-06	()	9	APP_s	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
13	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	8	MOD_s	true
14	imagine.	_	imagine.	VB	O	_	possible-01	_	0	IGNORE	true

nodealignment=[3@@s@@detail-01, 4@@p@@step-by-step, 10@@p@@any, 1@@s@@imagine-01, 8@@t@@thing, 11@@d@@activity-06, 2@@s@@have-03, 13@@s@@possible-01, 9@@s@@do-02, 12@@d@@you, 5@@s@@instruct-01]
sentence=1	In	in	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
2	FrameNet,	_name_	FrameNet,	NNP	O	_	and	_	0	IGNORE	true
3	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
5	described	_	describe	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	in	_	in	IN	O	_	concern-02	_	0	IGNORE	true
7	terms	_	term	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	of	_	of	IN	O	_	thing	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	frames	_	frame	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
11	they	_	they	PRP	O	_	person	_	0	IGNORE	true
12	evoke.	_	evoke.	VBP	O	_	-	_	0	IGNORE	true

nodealignment=[3@@d@@word, 5@@s@@describe-01, 10@@d@@frame]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	i	_	0	IGNORE	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	get	_	get	VBP	O	(d<root> / --LEX--  :ARG2 (s<s>)  :time-of (l<mod>))	$LEMMA$-05	(mod(), s())	10	MOD_mod	true
6	to	_	to	IN	O	_	-	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	car,	_	car,	JJ	O	_	_NAME_	_	0	IGNORE	true
9	though,	_	though,	NN	O	_	and	_	0	IGNORE	true
10	Cara’s	cara’s	cara’s	CD	O	(d<root> / --LEX--)	_NAME_	()	0	ROOT	true
11	wheezing.	_	wheezing.	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@d@@_NAME_, 5@@d@@get-05, 4@@d@@we]
sentence=1	They	they	They	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	literally	_	literally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	literal	(mod())	3	MOD_mod	true
3	arrived	_	arrive	VBD	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	21	APP_op1	true
4	on	_	on	IN	O	_	1	_	0	IGNORE	true
5	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
6	doorstep	_	doorstep	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	the_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	3	MOD_mod	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	left	_	leave	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-15	(s(), o())	8	APP_op1	true
11	for	_	for	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	trip	_	trip	NN	O	(d<root> / --LEX--)	$LEMMA$-03	()	10	APP_o	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	3	MOD_o	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	hiking	_	hiking	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	shoes,	_	shoes,	NNP	O	_	and	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
22	these	_	these	DT	O	_	this	_	0	IGNORE	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	been	_	be	VBN	O	_	person	_	0	IGNORE	true
25	absolutely	_	absolutely	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	absolute	(mod())	29	MOD_mod	true
26	the	_	the	DT	O	_	most	_	0	IGNORE	true
27	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	29	MOD_s	true
28	hiking	_	hiking	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	shoes	_	shoe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
30	I've	i've	i've	JJ	O	_	-	_	0	IGNORE	true
31	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
32	owned.	_	owned.	RB	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@d@@we, 14@@s@@cause-01, 18@@s@@new-01, 7@@n@@day, 27@@m@@most, 29@@d@@shoe, 25@@p@@absolute, 3@@g@@arrive-01, 27@@b2@@good-02, 28@@p@@hiking, 2@@p@@literal, 6@@d@@doorstep, 16@@s@@need-01, 19@@d@@hiking, 8@@w@@before, 31@@n@@ever, 17@@explicitanon0@@some, 13@@d@@trip-03, 21@@a@@and, 1@@d@@They, 10@@s@@leave-15]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
2	is	_	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	ordinal-entity	_	0	IGNORE	true
4	37th	_name_	37th	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	_NUMBER_	(mod())	8	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	have	_	have	VBP	O	(n<root> / --LEX--  :time-of (p<mod>))	person	(mod())	8	MOD_mod	true
8	spoken	_	speak	VBN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
11	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
13	office,	_	office,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
14	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
15	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	decisions	_	decision	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	decide-01	(s())	7	MOD_s	true
18	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
19	been	_	be	VBN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	made	_	make	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
21	that	_	that	IN	O	_	and	_	0	IGNORE	true
22	shaped	_	shape	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	MOD_s	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
25	of	_	of	IN	O	_	thing	_	0	IGNORE	true
26	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
27	Nation.	_name_	Nation.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@_NUMBER_, 24@@d@@history, 6@@d@@i, 7@@n@@person, 15@@s@@so, 4@@o@@ordinal-entity, 16@@explicitanon0@@many, 17@@s@@decide-01, 10@@d@@you, 8@@t@@speak-01, 22@@s@@shape-01, 1@@p@@this]
sentence=1	Thus,	_name_	Thus,	NNP	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	and	_	0	IGNORE	true
3	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
4	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
5	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-10	(s())	3	MOD_s	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_s	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	6	APP_op2	true
9	of	_	of	IN	O	_	thing	_	0	IGNORE	true
10	visually	_	visually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	physical	(mod())	11	MOD_mod	true
11	exploring	_	explore	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_mod	true
12	an	_	an	DT	O	_	thing	_	0	IGNORE	true
13	artwork	_	artwork	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
15	inform	_	inform	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_s	true
16	about	_	about	IN	O	_	thing	_	0	IGNORE	true
17	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
18	relevance,	_	relevance,	NNP	O	_	and	_	0	IGNORE	true
19	interestingness,	_	interestingness,	NNS	O	_	and	_	0	IGNORE	true
20	and	_	and	CC	O	_	$LEMMA$	_	15	IGNORE	true
21	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	aesthetic	_	aesthetic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	appeal.	_	appeal.	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	14	MOD_o	true

nodealignment=[3@@d@@time, 21@@p@@even, 15@@s@@inform-01, 6@@a@@and, 13@@d@@artwork, 10@@t@@physical, 8@@t@@way, 5@@s@@take-10, 23@@p@@aesthetic, 24@@s@@appeal., 11@@s@@explore-01, 14@@s@@possible-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	push	_	push	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
5	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	buttons	_	button	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	reach	_	reach	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
11	the	_	the	DT	O	_	he	_	0	IGNORE	true
12	floor	_	floor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
13	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	are	_	be	VBP	O	_	person	_	0	IGNORE	true
15	getting	_	get	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	12	MOD_s	true
16	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
17	at.	_	at.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@p@@all, 4@@s@@push-01, 7@@d@@button, 3@@p@@also, 15@@s@@get-05, 12@@d@@floor, 1@@d@@You, 2@@s@@possible-01, 10@@t@@reach-01]
sentence=1	So	so	so	RB	O	_	cause-01	_	0	IGNORE	true
2	the_first_couple_days	_name_	day	NNS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_o	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	Portland,	portland,	portland,	CD	O	_	_NAME_	_	0	IGNORE	true
7	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	went	_	go	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	2	MOD_s	true
9	hiking	_	hike	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_o	true
10	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
11	Forest_Park	_name_	Park	NNP	O	(p<root> / park  :name (n / --LEX--)  :location-of (b<mod>))	_NAME_	(mod())	9	MOD_mod	true
12	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-05	(s(), o())	11	MOD_o	true
16	to	_	to	IN	O	_	and	_	0	IGNORE	true
17	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
19	transit	_	transit	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	city.	_	city.	NN	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	15	MOD_mod	true

nodealignment=[2@@p@@person, 15@@s@@get-05, 3@@d@@we, 14@@s@@possible-01, 4@@s@@be-located-at-91, 18@@s@@public-02, 13@@d@@you, 22@@n@@_NAME_, 2@@n@@_NAME_, 11@@p@@park, 9@@s@@hike-01, 11@@n@@_NAME_, 22@@c@@country, 19@@t@@transit, 8@@c@@go-02]
sentence=1	Water	water	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
2	landings:	_	landings:	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	say-01	(s(), o())	14	MOD_s	true
3	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	14	MOD_o	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
5	have	_	have	VBP	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
6	successfully	_	successfully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	7	MOD_s	true
7	attached	_	attach	VBN	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	21	MOD_mod	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	companion	_	companion	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	whose	_	whose	WP$	O	_	i	_	0	IGNORE	true
12	chute	_	chute	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
13	opens,	_	opens,	NNP	O	_	multi-sentence	_	0	IGNORE	true
14	keep	_	keep	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
15	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
16	mind	_	mind	NN	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	remember-01	(s())	3	APP_s	true
17	that	_	that	IN	O	_	and	_	0	IGNORE	true
18	both	_	both	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
19	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	arms	_	arm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
21	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	APP_op1	true
22	be	_	be	VB	O	_	cause-01	_	0	IGNORE	true
23	broken	_	break	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_op2	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
25	dislocated,	_	dislocated,	NNS	O	_	and	_	0	IGNORE	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
27	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	26	APP_op2	true
29	be	_	be	VB	O	_	possible-01	_	0	IGNORE	true
30	unable	_	unable	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	possible-01	(s())	28	APP_s	true
31	to	_	to	TO	O	_	-	_	0	IGNORE	true
32	swim	_	swim	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	33	APP_op1	true
33	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	30	APP_s	true
34	tread	_	tread	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_op2	true
35	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
36	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	33	MOD_mod	true
37	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
38	chute	_	chute	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
39	fills	_	fill	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	40	APP_op1	true
40	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	36	APP_op1	true
41	drags	_	drag	VBZ	O	(d<root> / --LEX--)	$LEMMA$-01	()	40	APP_op2	true
42	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
43	under.	_	under.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[35@@d@@water, 21@@s@@possible-01, 10@@d@@companion, 30@@p@@possible-01, 20@@d@@arm, 6@@s@@succeed-01, 2@@s@@say-01, 12@@d@@chute, 1@@d@@water, 14@@s@@keep-01, 7@@m@@attach-01, 32@@d@@swim-01, 34@@s@@tread-01, 28@@s@@possible-01, 36@@w@@before, 4@@d@@you, 40@@a@@and, 41@@d@@drag-01, 24@@a@@or, 16@@b@@remember-01, 38@@d@@chute, 26@@a@@and, 18@@p@@both, 16@@explicitanon0@@imperative, 3@@s@@have-condition-91, 33@@a@@or, 30@@explicitanon0@@-, 39@@d@@fill-01, 16@@y@@you, 23@@d@@break-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	cannot	_	cannot	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	encourage	_	encourage	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	communalism	_	communalism	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
6	narrow	_	narrow	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	5	APP_op2	true
7	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
8	mindedness,	_	mindedness,	NNS	O	_	and	_	0	IGNORE	true
9	for	_	for	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
10	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
11	nation	_	nation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	9	APP_s	true
13	be	_	be	VB	O	_	person	_	0	IGNORE	true
14	great	_	great	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	12	APP_s	true
15	whose	_	whose	WP$	O	_	have-03	_	0	IGNORE	true
16	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	14	APP_dom	true
17	are	_	be	VBP	O	_	person	_	0	IGNORE	true
18	narrow	_	narrow	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	16	MOD_s	true
19	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
20	thought	_	thought	NN	O	(d<root> / --LEX--)	think-01	()	21	APP_op1	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
22	in	_	in	IN	O	_	except-01	_	0	IGNORE	true
23	action.	_	action.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true

nodealignment=[11@@p@@nation, 18@@s@@narrow-02, 20@@d@@think-01, 5@@a@@or, 2@@s@@possible-01, 10@@explicitanon0@@-, 4@@d@@communalism, 6@@d@@narrow-02, 16@@d@@person, 9@@s@@cause-01, 1@@d@@We, 14@@r@@great, 12@@s@@possible-01, 3@@s@@encourage-01, 21@@a@@or, 23@@d@@action.]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	stayed	_	stay	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
3	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	held	_	hold	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
6	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	looking	_	look	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	5	MOD_mod	true
10	at	_	at	IN	O	_	i	_	0	IGNORE	true
11	her,	_	her,	NN	O	_	i	_	0	IGNORE	true
12	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_s	true
13	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
14	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
15	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	12	APP_o	true
16	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	will	_	will	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_s	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	dog	_	dog	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	into	_	into	IN	O	_	-	_	0	IGNORE	true
21	submission.	_	submission.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[15@@s@@possible-01, 12@@s@@resemble-01, 17@@s@@will-01, 7@@d@@there, 3@@s@@cause-01, 2@@s@@stay-01, 19@@d@@dog, 1@@d@@She, 9@@l@@look-01, 16@@o@@sometimes, 4@@d@@i, 14@@d@@you, 5@@s@@hold-01]
sentence=1	They're,	they're,	They're,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	-	(s(), o())	0	ROOT	true
2	like,	_	like,	NNP	O	_	include-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	most	_	most	JJS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	Italian	_name_	italian	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
7	you've	_	you've	FW	O	_	person	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	met.	_	met.	NN	O	(d<root> / --LEX--)	interrogative	()	1	APP_o	true

nodealignment=[5@@n@@_NAME_, 8@@n@@ever, 1@@s@@-, 4@@s@@most, 5@@c@@country, 6@@d@@woman, 9@@d@@interrogative]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
3	outside	_	outside	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	2	APP_o	true
4	the	_	the	DT	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
5	building	_	building	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op1	true
6	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	gardens,	_	gardens,	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	waiting	_	wait	VBG	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	photographer	_	photographer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
13	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	had	_	have	VBD	O	_	person	_	0	IGNORE	true
15	arranged	_	arrange	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	12	MOD_s	true
16	to	_	to	TO	O	_	name	_	0	IGNORE	true
17	shoot	_	shoot	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
18	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
20	Epic_Mickey	_name_	Mickey	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
21	costumed	_	costume	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	22	MOD_mod	true
22	character-style	_	character-style	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
23	outfit.	_	outfit.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true

nodealignment=[17@@s@@shoot-01, 8@@b@@gardens,, 12@@d@@photographer, 15@@c@@arrange-01, 9@@b@@wait-01, 5@@d@@building, 1@@d@@She, 3@@o@@outside, 23@@p@@_NAME_, 19@@s@@new-01, 20@@p@@_NAME_, 2@@s@@be-located-at-91, 21@@p@@costume-01, 22@@p@@_NAME_]
sentence=1	However,	_name_	However,	LS	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	thing	_	0	IGNORE	true
3	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	of	_	of	IN	O	_	thing	_	0	IGNORE	true
6	CFL	_name_	CFL	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
7	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	mercury	_	mercury	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
10	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	contain.	_	contain.	VBP	O	_	-	_	0	IGNORE	true

nodealignment=[3@@p@@main, 4@@r@@problem, 9@@d@@mercury, 6@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
2	is	_	be	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	0	ROOT	true
3	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
4	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
5	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	8	MOD_mod	true
6	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	deadly	_	deadly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	stampedes	_	stampede	NNS	O	(d<root> / --LEX--)	fight-01	()	2	APP_o	true
9	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
10	taken	_	take	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
11	place	_	place	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	during	_	during	IN	O	_	and	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	Hajj,	hajj,	Hajj,	NNP	O	_	_NAME_	_	0	IGNORE	true
15	with	_	with	IN	O	_	and	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	deadliest	_	deadly	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	18	MOD_mod	true
18	stampede	_	stampede	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
19	during	_	during	IN	O	_	i	_	0	IGNORE	true
20	the	_	the	DT	O	_	date-interval	_	0	IGNORE	true
21	1991	_name_	1991	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	18	MOD_mod	true
22	Hajj,	hajj,	Hajj,	NNP	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	_NAME_	(mod(), s())	2	APP_s	true
23	in	_	in	IN	O	_	12	_	0	IGNORE	true
24	which	_	which	WDT	O	_	name	_	0	IGNORE	true
25	1,426	_	1,426	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	26	MOD_mod	true
26	pilgrims	_	pilgrim	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	tour-01	()	22	APP_mod	true
27	were	_	be	VBD	O	_	person	_	0	IGNORE	true
28	trampled.	_	trampled.	ADD	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@explicitanon0@@_NUMBER_, 1@@p@@this, 5@@explicitanon0@@1, 2@@s@@person, 22@@s@@_NAME_, 25@@explicitanon0@@_NUMBER_, 8@@d@@fight-01, 26@@p2@@person, 17@@t@@large, 18@@d@@stampede, 3@@explicitanon0@@-, 26@@e2@@tour-01, 7@@p@@deadly, 17@@m@@most, 21@@d@@date-entity, 5@@o@@ordinal-entity]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	possibilities	_	possibility	NNS	O	(d<root> / --LEX--)	possible-01	()	3	APP_o	true
5	no	_	no	DT	O	_	-	_	0	IGNORE	true
6	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	9	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	before.	_	before.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[1@@d@@We, 2@@s@@possible-01, 9@@s@@see-01, 4@@d@@possible-01, 6@@d@@no-one, 8@@n@@ever, 3@@s@@see-01]
sentence=1	Besides	besides	besides	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	except-01	(s(), o())	15	MOD_o	true
2	works	_	work	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	whose	_	whose	WP$	O	_	have-03	_	0	IGNORE	true
4	copyright	_	copyright	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_o	true
6	expired,	_	expired,	VBN	O	_	have-concession-91	_	0	IGNORE	true
7	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	an	_	an	DT	O	_	1	_	0	IGNORE	true
10	increasing	_	increase	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	modern	_	modern	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	books	_	book	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	available	_	available	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	0	ROOT	true
16	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	Creative_Commons	_name_	Commons	NNPS	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	18	APP_op2	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	MOD_op1	true
19	similar	_	similar	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	5	MOD_s	true
20	licenses.	_	licenses.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[18@@a@@and, 1@@s@@except-01, 17@@o2@@organization, 14@@d@@book, 17@@n@@_NAME_, 19@@s@@resemble-01, 13@@s@@modern-02, 4@@s@@copyright-01, 10@@s@@increase-01, 5@@s@@cause-01, 15@@s@@available-02, 11@@explicitanon0@@number, 2@@d@@work]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	outfit	_	outfit	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	APP_s	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
4	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
5	chosen,	_	chosen,	NNP	O	_	and	_	0	IGNORE	true
6	khaki	_	khaki	VBN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	pants	_	pant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	blue	_	blue	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	button-down	_	button-down	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	shirt	_	shirt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
13	--	_	--	:	O	_	have-03	_	0	IGNORE	true
14	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
15	tie	_	tie	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
16	--	_	--	:	O	_	and	_	0	IGNORE	true
17	lay	_	lie	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
18	neatly	_	neatly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	neat	(mod())	19	MOD_mod	true
19	folded	_	fold	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	bed.	_	bed.	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	19	MOD_mod	true

nodealignment=[22@@b@@_NAME_, 17@@s@@lie-01, 12@@d@@shirt, 11@@p@@button-down, 15@@p@@tie, 6@@p@@khaki, 10@@p@@blue, 7@@d@@pant, 19@@s@@fold-01, 2@@s@@outfit, 14@@explicitanon0@@-, 3@@d@@he, 8@@a@@and, 18@@t@@neat]
sentence=1	Or	or	or	CC	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o2	true
2	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
3	cloud,	_	cloud,	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	or	_	or	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	10	APP_o	true
5	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
6	air	_	air	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op2	true
7	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
8	breathe,	_	breathe,	NNS	O	_	and	_	0	IGNORE	true
9	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	call	_	call	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	a?	_	a?	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@a@@or, 10@@b@@call-01, 7@@d@@we, 1@@d@@or, 6@@d@@air]
sentence=1	What	what	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	4	APP_o	true
2	are	_	be	VBP	O	_	say-01	_	0	IGNORE	true
3	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	thoughts	_	thought	NNS	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	think-01	(o2(), s(), o())	0	ROOT	true
5	on	_	on	IN	O	_	c$LEMMA$trast-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
8	Barack_Obama	_name_	Obama	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
9	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
10	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	MOD_o	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	president?	_	president?	JJ	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@d@@job, 1@@d@@amr-unknown, 3@@d@@your, 8@@n@@_NAME_, 8@@p@@person, 4@@b@@think-01, 10@@s@@do-02]
sentence=1	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	agents	_	agent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	satisfy	_	satisfy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	epistemic	_	epistemic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	conditions	_	condition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	on	_	on	IN	O	_	thing	_	0	IGNORE	true
10	responsibility,	_	responsibility,	NNP	O	_	and	_	0	IGNORE	true
11	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	must	_	must	MD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	0	ROOT	true
13	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_o	true
14	what	_	what	WDT	O	_	amr-unknown	_	0	IGNORE	true
15	kinds	_	kind	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	APP_o	true
16	of	_	of	IN	O	_	thing	_	0	IGNORE	true
17	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_mod	true
18	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	obligate-01	(s())	20	MOD_s	true
20	utilize	_	utilize	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	guide	_	guide	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	20	MOD_mod	true
23	their	_	they	PRP$	O	_	thing	_	0	IGNORE	true
24	selection	_	selection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	select-01	(s())	22	APP_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	sources	_	source	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	(on	_	(on	ADD	O	_	$LEMMA$	_	0	IGNORE	true
28	pain	_	pain	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	infinite	_	infinite	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
31	regress).	_	regress).	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@satisfy-01, 2@@d@@agent, 30@@p@@infinite, 28@@s@@pain-01, 8@@d@@condition, 19@@s@@obligate-01, 12@@h@@obligate-01, 24@@s@@select-01, 22@@i@@guide-01, 20@@s@@utilize-01, 7@@p@@epistemic, 26@@d@@source, 15@@p@@kind, 13@@s@@know-01, 17@@d@@knowledge]
sentence=1	Write	write	write	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
3	a	_	a	DT	O	_	thing	_	0	IGNORE	true
4	list	_	list	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	packing,	_	packing,	NNP	O	_	and	_	0	IGNORE	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	particular	_	particular	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
12	if	_	if	IN	O	_	i	_	0	IGNORE	true
13	it's	_	it's	PRP$	O	_	thing	_	0	IGNORE	true
14	valuable.	_	valuable.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@s@@list-01, 7@@d@@you, 1@@h@@write-01, 6@@d@@everything, 11@@p@@particular, 1@@explicitanon0@@imperative]
sentence=1	An	an	an	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	empire	_	empire	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	whose	_	whose	WP$	O	_	have-03	_	0	IGNORE	true
4	costly	_	costly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	mistakes	_	mistake	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	10	MOD_s	true
6	would	_	would	MD	O	_	cause-01	_	0	IGNORE	true
7	for	_	for	IN	O	_	and	_	0	IGNORE	true
8	many_years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	5	MOD_mod	true
9	to	_	to	TO	O	_	multiple	_	0	IGNORE	true
10	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
11	echo	_	echo	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	10	MOD_mod	true
12	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	corner	_	corner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
18	galaxy.	_	galaxy.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[17@@s@@know-01, 5@@s@@mistake-02, 2@@d@@empire, 11@@p@@echo-01, 4@@p@@costly, 10@@s@@come-01, 14@@d@@corner, 8@@t2@@temporal-quantity, 13@@p@@every, 8@@explicitanon0@@_NAME_]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	remembered	_	remember	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
6	“yellow	_	“yellow	NFP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	3	MOD_mod	true
7	man”	_	man”	NNP	O	_	slash	_	0	IGNORE	true
8	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	3	MOD_mod	true
9	had	_	have	VBD	O	_	person	_	0	IGNORE	true
10	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
11	seen,	_	seen,	NNS	O	_	and	_	0	IGNORE	true
12	an	_	an	DT	O	_	n$LEMMA$me	_	0	IGNORE	true
13	Olondrian	_name_	olondrian	JJ	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	15	MOD_mod	true
14	wizard	_	wizard	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
16	doctor	_	doctor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	who	_	who	WP	O	_	name	_	0	IGNORE	true
18	had	_	have	VBD	O	_	person	_	0	IGNORE	true
19	visited	_	visit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
20	Tyom	_name_	Tyom	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	19	APP_o	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	my	_	my	PRP$	O	_	name	_	0	IGNORE	true
23	childhood,	_name_	childhood,	NNS	O	_	and	_	0	IGNORE	true
24	who	_	who	WP	O	_	name	_	0	IGNORE	true
25	wore	_	wear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
26	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	27	MOD_mod	true
27	pieces	_	piece	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	glass	_	glass	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
30	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	eyes,	_	eyes,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
33	attached	_	attach	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	27	MOD_s	true
34	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	ears	_	ear	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
37	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
38	wires,	_	wires,	NNS	O	_	cause-01	_	0	IGNORE	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
40	roamed	_	roam	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op2	true
41	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
42	hills	_	hill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_s	true
43	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
44	Tinimavet,	_name_	tinimavet,	NN	O	_	and	_	0	IGNORE	true
45	cutting	_	cut	VBG	O	(g<root> / --LEX--  :ARG2 (o<o2>)  :ARG1 (i<o>)  :ARG0 (y<s>)  :purpose-of (a<mod>))	$LEMMA$-03	(mod(), o2(), s(), o())	40	MOD_mod	true
46	bits	_	bit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_o	true
47	off	_	off	IN	O	_	$LEMMA$	_	0	IGNORE	true
48	the	_	the	DT	O	_	person	_	0	IGNORE	true
49	trees.	_	trees.	NN	O	(d<root> / --LEX--)	_NAME_	()	45	APP_o2	true

nodealignment=[39@@a@@and, 40@@s@@roam-01, 42@@d@@hill, 3@@s@@remember-01, 36@@d@@ear, 15@@a@@and, 26@@explicitanon0@@2, 16@@d@@doctor, 13@@e@@ethnic-group, 45@@g@@cut-03, 33@@s@@attach-01, 8@@p@@i, 29@@g@@glass, 10@@n@@ever, 1@@n@@then, 6@@p@@_NAME_, 2@@d@@i, 13@@n@@_NAME_, 5@@p@@only, 27@@d@@piece, 14@@d@@wizard, 25@@s@@wear-01, 19@@s@@visit-01, 20@@p@@person, 46@@d@@bit, 20@@n@@_NAME_, 49@@d@@_NAME_]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG2 (g<s>))	contrast-01	(s())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	4	MOD_s	true
4	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	when	_	when	WRB	O	_	he	_	0	IGNORE	true
6	it's	_	it's	PRP$	O	_	thing	_	0	IGNORE	true
7	gloomy	_	gloomy	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	for	_	for	IN	O	_	thing	_	0	IGNORE	true
9	studying	_	study	VBG	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$-01	(mod())	7	MOD_mod	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	4	MOD_o	true
11	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	feel	_	feel	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	10	APP_s	true
14	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
15	there's	_	there's	.	O	_	-	_	0	IGNORE	true
16	nothing	_	nothing	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_s	true
17	else	_	else	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_dom	true
19	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	13	APP_o	true
20	be	_	be	VB	O	_	person	_	0	IGNORE	true
21	doing,	_	doing,	NNP	O	_	-	_	0	IGNORE	true
22	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	13	MOD_s	true
23	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	22	APP_o	true
25	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
26	well	_	well	RB	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	stay	_	stay	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	APP_op2	true
29	inside	_	inside	RB	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	24	MOD_op1	true
31	work.	_	work.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@s@@possible-01, 4@@s@@like-01, 13@@c@@feel-01, 26@@d@@well, 7@@d@@gloomy, 10@@s@@cause-01, 11@@n@@then, 3@@s@@actual-02, 9@@o@@study-01, 30@@a@@and, 17@@p@@else, 19@@s@@possible-01, 29@@d@@inside, 18@@d@@you, 1@@s@@contrast-01, 27@@p@@just, 22@@s@@cause-01, 2@@d@@i, 16@@r@@nothing, 28@@s@@stay-01]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	oath	_	oath	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	Senators	senators	senator	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	6	APP_s	true
6	swore	_	swear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
8	January	_name_	January	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	1	(mod())	6	MOD_mod	true
9	16.	_	16.	CD	O	_	1	_	0	IGNORE	true

nodealignment=[5@@p@@person, 8@@explicitanon0@@1, 4@@r@@oath, 6@@s@@swear-01, 1@@d@@that, 5@@e@@senator, 5@@h@@have-org-role-91, 8@@d@@date-entity]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	way,	_	way,	NN	O	_	and	_	0	IGNORE	true
4	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	touch	_	touch	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
6	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	aspect	_	aspect	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_poss	true
10	lives,	_	lives,	NNS	O	_	and	_	0	IGNORE	true
11	from	_	from	IN	O	_	and	_	0	IGNORE	true
12	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	daily	_name_	daily	JJ	O	(t<root> / temporal-quantity  :unit (d / --LEX--)  :ARG3-of (r / rate-entity-91  :frequency-of (p<mod>)))	day	(mod())	15	MOD_mod	true
15	routines	_	routine	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_o	true
16	to	_	to	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	5	MOD_s	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	guiding	_	guide	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	MOD_s	true
19	principles	_	principle	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	5	APP_o2	true
20	behind	_	behind	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	19	APP_s	true
23	governments	_	government	NNS	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--))	govern-01	()	22	APP_mod	true
24	function.	_	function.	VBP	O	_	thing	_	0	IGNORE	true

nodealignment=[23@@g@@government-organization, 14@@d@@day, 23@@g2@@govern-01, 18@@s@@guide-01, 15@@m@@routine, 9@@d@@our, 6@@p@@every, 2@@p@@this, 4@@d@@concept, 14@@r@@rate-entity-91, 16@@s@@and, 13@@explicitanon0@@many, 19@@s@@principle, 5@@b@@touch-01, 14@@t@@temporal-quantity, 7@@d@@aspect, 22@@t@@way]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	note	_	note	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	pleasure	_	pleasure	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	the	_	the	DT	O	_	and	_	0	IGNORE	true
7	freedom	_	freedom	NN	O	(l<root> / --LEX--  :ARG3 (b<s>))	free-04	(s())	2	APP_o	true
8	to	_	to	IN	O	_	thing	_	0	IGNORE	true
9	re-purpose	_	re-purpose	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_s	true
10	offered	_	offer	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	openly	_	openly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-04	(s())	13	MOD_s	true
13	licensed	_	license	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	license-01	(s())	14	MOD_s	true
14	educational	_	educational	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
15	resources,	_	resources,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	convenience	_	convenience	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	online	_	online	JJ	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	access	_	access	NN	O	(r<root> / --LEX--  :ARG1 (w<s>)  :topic-of (a<mod>))	$LEMMA$-01	(mod(), s())	17	MOD_mod	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	learners	_	learner	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	use-01	()	19	APP_s	true
22	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
23	alternative	_	alternative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	courses	_	course	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	delivery	_	delivery	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	deliver-01	(s())	26	APP_op1	true
26	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	19	MOD_mod	true
27	certification	_	certification	NN	O	(d<root> / --LEX--)	certify-01	()	26	APP_op2	true
28	methods.	_	methods.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	company	(mod())	2	MOD_mod	true

nodealignment=[12@@s@@open-04, 24@@d@@course, 10@@s@@offer-01, 5@@t@@pleasure, 7@@l@@free-04, 25@@s@@deliver-01, 18@@l@@online, 27@@d@@certify-01, 14@@d@@educational, 28@@p@@company, 21@@p2@@person, 21@@e2@@use-01, 2@@b@@note-01, 17@@p@@convenience, 15@@d@@resources,, 19@@r@@access-01, 1@@d@@i, 23@@p@@alternative, 4@@p@@great, 26@@s@@and, 9@@d@@re-purpose-01, 13@@s@@license-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	remember	_	remember	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	pf-	_	pf-	JJ	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	cartoon	_	cartoon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
8	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
9	w-,	_name_	w-,	NNP	O	_	mean-01	_	0	IGNORE	true
10	of,	_	of,	RB	O	_	$LEMMA$	_	0	IGNORE	true
11	of,	_	of,	RB	O	_	mean-01	_	0	IGNORE	true
12	it	_	it	PRP	O	_	i	_	0	IGNORE	true
13	was	_	be	VBD	O	(d<root> / --LEX--)	i	()	1	APP_op1	true
14	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
15	The_Scientist.	_name_	Scientist.	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@s@@see-01, 13@@d@@i, 6@@d@@cartoon, 5@@n@@_NAME_, 4@@p@@this, 3@@s@@remember-01, 1@@a@@and, 2@@d@@i, 14@@s@@call-01]
sentence=1	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	2	MOD_s	true
2	Joe_Biden	_name_	Biden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_op2	true
5	talk	_	talk	VBP	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	0	ROOT	true
6	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	about	_	about	IN	O	_	and	_	0	IGNORE	true
8	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	mutual	_	mutual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	passion	_	passion	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	5	APP_o	true
11	for	_	for	IN	O	_	thing	_	0	IGNORE	true
12	everything	_	everything	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
13	you	_	you	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	do.	_	do.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@a@@and, 1@@h@@have-org-role-91, 5@@l@@talk-01, 10@@m@@passion, 2@@n@@_NAME_, 6@@o@@often, 2@@p@@person, 14@@p@@all, 13@@p@@you, 9@@p@@mutual, 1@@p2@@president, 12@@a@@everything, 4@@d@@i]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	macroscopic	_	macroscopic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	sample	_	sample	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	an	_	an	DT	O	_	thing	_	0	IGNORE	true
6	element	_	element	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	contains	_	contain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	an	_	an	DT	O	_	1	_	0	IGNORE	true
9	incredibly	_	incredibly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	incredible	(mod())	10	MOD_mod	true
10	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	atoms,	_	atoms,	NNS	O	_	include-91	_	0	IGNORE	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	7	MOD_o	true
16	which	_	which	WDT	O	(d<root> / --LEX--)	amr-unknown	()	7	APP_o	true
17	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	15	MOD_s	true
18	identical	_	identical	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
19	chemical	_	chemical	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
20	properties.	_	properties.	NNS	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@p@@macroscopic, 9@@s@@incredible, 18@@s@@identical-01, 17@@s@@have-03, 19@@p@@chemical, 3@@s@@sample-01, 15@@s@@include-91, 7@@s@@contain-01, 10@@p@@large, 6@@d@@element, 11@@explicitanon0@@number, 16@@d@@amr-unknown, 14@@p@@all]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	started	_	start	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	in	_	in	IN	O	_	multi-sentence	_	0	IGNORE	true
6	1993,	_	1993,	NNP	O	_	mean-01	_	0	IGNORE	true
7	Spoken	spoken	Spoken	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
8	Motion,	_name_	motion,	CD	O	_	mean-01	_	0	IGNORE	true
9	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
10	a	_	a	DT	O	_	1	_	0	IGNORE	true
11	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
13	recognition	_	recognition	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	recognize-02	(s(), o())	0	ROOT	true
14	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	spoken	_	spoken	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
17	word	_	word	NN	O	_	$LEMMA$	_	0	IGNORE	true
18	band	_	band	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
19	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
20	out	_	out	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	of	_	of	IN	O	_	name	_	0	IGNORE	true
22	the	_	the	DT	O	_	name	_	0	IGNORE	true
23	New_York	_name_	York	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	16	MOD_mod	true
24	spoken	_	speak	VBN	O	_	$LEMMA$-01	_	0	IGNORE	true
25	word	_	word	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	scene.	_	scene.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[23@@c@@city, 18@@d@@band, 3@@d@@i, 9@@s@@receive-01, 16@@p@@spoken-01, 13@@s@@recognize-02, 4@@s@@start-01, 2@@d@@band, 7@@p@@Spoken-01, 23@@n@@_NAME_, 11@@explicitanon0@@lot, 19@@s@@bear-02]
sentence=1	Like	like	like	IN	O	_	resemble-01	_	0	IGNORE	true
2	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
3	face	_	face	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_s	true
5	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
6	hair,	_	hair,	NFP	O	_	mean-01	_	0	IGNORE	true
7	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
8	features,	_	features,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	mean-01	(s(), o())	0	ROOT	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	APP_op2	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	body	_	body	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	hair	_	hair	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	random	_	random	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	places	_	place	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_o	true
20	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
21	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	8	APP_o	true
22	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
23	hormones,	_	hormones,	UH	O	_	$LEMMA$	_	0	IGNORE	true
24	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
25	weight	_	weight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
26	especially.	_	especially.	NN	O	_	contrast-01	_	0	IGNORE	true

nodealignment=[17@@p@@random, 19@@s@@cause-01, 3@@d@@face, 8@@s@@mean-01, 15@@s@@have-03, 12@@p@@body, 13@@d@@hair, 10@@explicitanon0@@amount, 4@@a@@and, 18@@b@@place, 21@@s@@resemble-01, 25@@d@@weight]
sentence=1	Previous	previous	previous	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	eye	_	eye	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	tracking	_	tracking	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
4	research	_	research	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	MOD_o	true
5	has	_	have	VBZ	O	_	thing	_	0	IGNORE	true
6	highlighted	_	highlight	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	APP_op1	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	potential	_	potential	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	transform	_	transform	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	understand	_	understand	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o2	true
15	visual	_	visual	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	processing	_	processing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	process-01	(s())	14	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	arts	_	art	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
20	(see	_	(see	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	for	_	for	IN	O	_	or	_	0	IGNORE	true
22	example	_	example	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	exemplify-01	(s())	29	MOD_s	true
23	Brieber	_name_	Brieber	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_op1	true
24	2014;	_	2014;	NN	O	_	describe-01	_	0	IGNORE	true
25	Binderman	binderman	Binderman	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_op2	true
26	et	_	et	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	29	APP_s	true
27	al.,	_	al.,	NNP	O	_	and	_	0	IGNORE	true
28	2005)	_name_	2005)	NNP	O	_	mean-01	_	0	IGNORE	true
29	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
30	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	person	_	0	IGNORE	true
32	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	MOD_s	true
33	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	offers	_	offer	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	APP_op2	true
35	a	_	a	DT	O	_	1	_	0	IGNORE	true
36	direct	_	direct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	37	MOD_s	true
37	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	34	APP_o	true
38	of	_	of	IN	O	_	thing	_	0	IGNORE	true
39	studying	_	study	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_mod	true
40	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
41	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	42	MOD_mod	true
42	factors	_	factor	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
43	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	29	MOD_o	true
44	a	_	a	DT	O	_	thing	_	0	IGNORE	true
45	museum	_	museum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
46	visit	_	visit	NN	O	(i<root> / --LEX--  :ARG1 (i2<s>)  :mod-of (m<mod>))	$LEMMA$-01	(mod(), s())	42	MOD_mod	true
47	(Filippini	(filippini	(Filippini	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	46	MOD_mod	true
48	Fantoni_et_al.,_2013;_Heidenreich	_name_	Heidenreich	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	49	APP_op2	true
49	&	_	&	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	29	MOD_op1	true
50	Turano	turano	Turano	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	43	APP_s	true
51	2011;	_	2011;	CD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	29	MOD_o	true
52	Milekic	_name_	Milekic	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	51	APP_s	true
53	2010).	_	2010).	CD	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[2@@d@@eye, 29@@a@@and, 47@@n@@_NAME_, 40@@explicitanon0@@several, 14@@b@@understand-01, 45@@d@@museum, 42@@d@@factor, 12@@t@@way, 49@@a@@and, 36@@s@@direct-02, 46@@i@@visit-01, 32@@s@@same-01, 48@@n@@_NAME_, 51@@s@@have-org-role-91, 25@@n@@_NAME_, 50@@n@@_NAME_, 52@@n@@_NAME_, 48@@p@@person, 10@@s@@transform-01, 52@@p@@person, 26@@a@@et, 43@@s@@include-91, 41@@p@@important, 34@@s@@offer-01, 33@@n@@time, 16@@s@@process-01, 39@@s@@study-01, 19@@d@@art, 37@@t@@way, 22@@s@@exemplify-01, 3@@s@@tracking-01, 13@@d@@we, 8@@d@@potential, 15@@t@@visual, 1@@n@@previous, 23@@p@@person, 50@@p@@person, 23@@n@@_NAME_, 25@@p@@person, 4@@s@@research-01, 6@@s@@highlight-01]
sentence=1	Water	water	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	burst	_	burst	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_op1	true
3	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	barrels	_	barrel	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
7	cans	_	can	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	standing	_	stand	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	under	_	under	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	8	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	eaves	_	eave	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
13	gutters,	_	gutters,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	flooding	_	flood	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	12	APP_op2	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	pathways,	_	pathways,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	carrying	_	carry	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op2	true
18	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
19	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	wasn’t	_	wasn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	22	MOD_mod	true
22	fixed	_	fix	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
23	solid	_	solid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
25	licking	_	licking	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	MOD_s	true
26	at	_	at	IN	O	(d<root> / --LEX--)	and	()	24	APP_op2	true
27	the	_	the	DT	O	_	and	_	0	IGNORE	true
28	stairs	_	stair	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
30	the	_	the	DT	O	_	person	_	0	IGNORE	true
31	back	_	back	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	porch	_	porch	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
33	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
34	climbing	_	climb	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op1	true
35	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
36	step	_	step	NN	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
37	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	33	APP_op1	true
38	lapping	_	lap	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	APP_op3	true
39	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
40	the	_	the	DT	O	_	and	_	0	IGNORE	true
41	planks	_	plank	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
42	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
43	were	_	be	VBD	O	_	person	_	0	IGNORE	true
44	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	41	MOD_o	true
45	on,	_	on,	:	O	_	cause-01	_	0	IGNORE	true
46	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
47	wooden	_	wooden	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	raft	_	raft	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
49	surrounded	_	surround	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	48	MOD_o	true
50	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
51	angry	_	angry	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	52	MOD_s	true
52	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_op1	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	49	APP_s	true
54	martial	_	martial	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	55	MOD_mod	true
55	beat	_	beat	VBD	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_op2	true
56	drum,	_	drum,	NNP	O	_	mean-01	_	0	IGNORE	true
57	drum,	_	drum,	NNS	O	_	mean-01	_	0	IGNORE	true
58	drumming	_	drum	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	53	APP_op3	true
59	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
60	the	_	the	DT	O	_	person	_	0	IGNORE	true
61	roof	_	roof	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	58	MOD_mod	true
62	above.	_	above.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@d@@can, 36@@d@@step, 61@@b@@roof, 5@@d@@barrel, 51@@s@@angry, 53@@a@@and, 26@@d@@and, 19@@d@@all, 55@@d@@beat, 35@@p@@each, 28@@d@@stair, 14@@d@@flood-01, 49@@s@@surround-01, 37@@a@@and, 24@@a@@and, 12@@a@@and, 8@@s@@stand-01, 34@@s@@climb-01, 54@@p@@martial, 11@@d@@eave, 21@@explicitanon0@@-, 33@@w@@before, 6@@a@@and, 32@@b@@porch, 1@@d@@water, 23@@s@@solid-02, 9@@o@@under, 44@@s@@sit-01, 31@@p@@back, 17@@s@@carry-01, 25@@s@@licking-01, 48@@b@@raft, 58@@d@@drum-01, 41@@d@@plank, 42@@d@@we, 52@@d@@water, 38@@s@@lap-01, 47@@p@@wooden, 22@@s@@fix-01, 2@@s@@burst-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	an	_	an	DT	O	_	thing	_	0	IGNORE	true
4	oath	_	oath	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	whose	_	whose	WP$	O	_	contrast-01	_	0	IGNORE	true
6	power	_	power	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	MOD_s	true
7	derives	_	derive	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
8	from	_	from	IN	O	_	cause-01	_	0	IGNORE	true
9	its	_	its	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	sense:	_	sense:	NNS	O	_	and	_	0	IGNORE	true
12	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	juror	_	juror	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	15	APP_s	true
15	must	_	must	MD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	7	APP_o	true
16	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	be	_	be	VB	O	_	person	_	0	IGNORE	true
18	impartial	_	impartial	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	$LEMMA$	(s())	15	APP_o	true
19	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	trial	_	trial	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	try-02	(mod())	18	MOD_mod	true
22	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
23	be	_	be	VB	O	_	person	_	0	IGNORE	true
24	fair.	_	fair.	JJ	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@p@@common, 7@@s@@derive-01, 16@@n@@always, 21@@o@@try-02, 18@@p@@impartial, 18@@explicitanon0@@-, 4@@r@@oath, 14@@p2@@person, 6@@s@@power, 1@@d@@It, 15@@h@@obligate-01, 14@@e2@@juror]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	doctor,	_	doctor,	NNS	O	_	-	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
6	don’t	_	don’t	XX	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
7	know,	_	know,	NNP	O	_	-	_	0	IGNORE	true
8	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
9	sitting	_	sit	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
10	in	_	in	IN	O	_	i	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
13	chair.	_	chair.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@d@@i, 4@@d@@woman, 12@@p@@other, 6@@explicitanon0@@-, 9@@s@@sit-01]
sentence=1	Disabled	disabled	disabled	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	disable-01	(s())	2	MOD_s	true
2	athletes	_	athlete	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	challenge	_	challenge	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	existing	_	exist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
6	relations	_	relation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	4	APP_o	true
7	of	_	of	IN	O	_	and	_	0	IGNORE	true
8	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
10	displaying	_	display	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	4	MOD_mod	true
11	dedication,	_	dedication,	NNS	O	_	and	_	0	IGNORE	true
12	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	MOD_s	true
13	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
15	perseverance	_	perseverance	NN	O	(d<root> / --LEX--)	persevere-01	()	14	APP_op2	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	18	MOD_s	true
18	contexts	_	context	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
19	than	_	than	IN	O	_	person	_	0	IGNORE	true
20	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	4	MOD_mod	true
21	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	sports	_	sport	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	fans	_	fan	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	are	_	be	VBP	O	_	person	_	0	IGNORE	true
25	accustomed	_	accustom	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	20	MOD_o	true
26	to.	_	to.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@l@@display-01, 13@@d@@work-01, 21@@p@@most, 25@@s@@accustom-02, 14@@a@@and, 18@@b@@context, 12@@s@@hard-02, 8@@d@@power, 3@@p@@also, 17@@s@@differ-02, 6@@s@@relation-03, 4@@s@@challenge-01, 20@@p@@that, 2@@d@@athlete, 5@@s@@exist-01, 22@@p@@sport, 23@@d@@fan, 1@@s@@disable-01, 15@@d@@persevere-01]
sentence=1	Basil	basil	Basil	NNP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	comes	_	come	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	in	_	in	IN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	i	(mod())	2	MOD_mod	true
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	2	MOD_s	true
6	varieties,	_	varieties,	NNS	O	_	and	_	0	IGNORE	true
7	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	3	MOD_s	true
11	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
12	unique	_	unique	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
13	flavor	_	flavor	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_o	true
15	smell.	_	smell.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@p@@each, 3@@explicitanon0@@i, 14@@a@@and, 2@@s@@come-01, 1@@d@@basil, 12@@d@@unique, 10@@s@@have-03, 4@@explicitanon0@@many, 5@@s@@differ-02, 13@@d@@flavor]
sentence=1	Ahmed	_name_	Ahmed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_o2	true
2	Mohamed,	mohamed,	Mohamed,	NNP	O	_	include-91	_	0	IGNORE	true
3	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	14	(mod())	10	MOD_mod	true
4	14-year-old	_	14-year-old	CD	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :age-of (p2<mod>))	year	(mod())	5	MOD_mod	true
5	boy	_	boy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
6	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	Irving,	irving,	Irving,	NNP	O	_	state	_	0	IGNORE	true
8	Texas,	texas,	texas,	CD	O	_	_NAME_	_	0	IGNORE	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	arrested	_	arrest	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
11	at	_	at	IN	O	_	1	_	0	IGNORE	true
12	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	school	_	school	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	by	_	by	IN	O	_	i	_	0	IGNORE	true
15	police	_	police	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
16	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	brought	_	bring	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_op1	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	clock	_	clock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
22	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	had	_	have	VBD	O	_	person	_	0	IGNORE	true
24	made	_	make	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
25	to	_	to	IN	O	_	thing	_	0	IGNORE	true
26	school.	_	school.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@b@@arrest-01, 16@@w@@after, 15@@d@@police, 4@@y@@year, 1@@n@@_NAME_, 1@@p@@person, 18@@s@@bring-01, 13@@b@@school, 20@@p@@digital, 24@@s@@make-01, 4@@t@@temporal-quantity, 21@@d@@clock, 3@@explicitanon0@@14, 5@@d@@boy]
sentence=1	Mohamed	_name_	Mohamed	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	brought	_	bring	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	digital	_	digital	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	clock	_	clock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	made	_	make	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	to	_	to	IN	O	_	person	_	0	IGNORE	true
9	school	_	school	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
10	on	_	on	IN	O	_	significant-other	_	0	IGNORE	true
11	September_14,	_name_	14,	NNP	O	_	cause-01	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	teacher	_	teacher	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	teach-01	()	16	APP_s	true
15	mistakenly	_	mistakenly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	mistake-01	(s())	16	MOD_s	true
16	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	resembled	_	resemble	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_o	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	bomb.	_	bomb.	NN	O	(d<root> / --LEX--)	_NAME_	()	18	APP_s	true

nodealignment=[20@@d@@_NAME_, 1@@p@@person, 1@@n@@_NAME_, 15@@s@@mistake-01, 4@@p@@digital, 16@@s@@think-01, 7@@s@@make-01, 12@@a@@and, 18@@s@@resemble-01, 14@@p2@@person, 9@@d@@school, 2@@b@@bring-01, 5@@d@@clock, 14@@e2@@teach-01]
sentence=1	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	evolutionary	_	evolutionary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	theorists	_	theorist	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	have	_	have	VBP	O	_	person	_	0	IGNORE	true
5	explored	_	explore	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	APP_o	true
9	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
10	in-group	_	in-group	VBP	O	(p<root> / --LEX--  :mod-of (s<mod>))	group	(mod())	13	MOD_mod	true
11	/	_	/	SYM	O	_	or	_	0	IGNORE	true
12	out-group	_	out-group	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	group	(mod())	13	MOD_mod	true
13	biases	_	bias	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	emerged	_	emerge	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_mod	true
15	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	1	MOD_mod	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	history	_	history	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	15	APP_op1	true
18	of	_	of	IN	O	_	name	_	0	IGNORE	true
19	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
20	species.	_	species.	NN	O	_	$LEMMA$	_	0	IGNORE	true
21	[10]	_	[10]	XX	O	_	and	_	0	IGNORE	true

nodealignment=[13@@d@@bias, 7@@p@@various, 2@@p@@evolutionary, 5@@s@@explore-01, 3@@d@@theorist, 19@@d@@our, 17@@m@@history, 10@@p@@group, 14@@s@@emerge-01, 1@@a@@and, 8@@t@@way, 15@@b@@across, 12@@p@@group]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	person	_	0	IGNORE	true
4	thank	_	thank	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_o	true
5	our	_	our	PRP$	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
6	DHBs,	dhbs,	dhbs,	JJ	O	_	have-org-role-91	_	0	IGNORE	true
7	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	8	MOD_s	true
8	health	_	health	NN	O	(d<root> / --LEX--)	$LEMMA$y	()	10	APP_op1	true
9	staff,	_	staff,	NNS	O	_	mean-01	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
11	primary	_	primary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	care	_	care	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	13	MOD_s	true
13	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
14	health	_	health	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	10	APP_op2	true
16	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	work	_	work	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o2	true
19	they	_	they	PRP	O	_	person	_	0	IGNORE	true
20	are	_	be	VBP	O	_	person	_	0	IGNORE	true
21	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
22	to	_	to	TO	O	_	person	_	0	IGNORE	true
23	protect	_	protect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	18	MOD_o	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	public.	_	public.	NN	O	(d<root> / --LEX--)	_NAME_	()	23	APP_s	true

nodealignment=[14@@p@@health, 2@@c@@want-01, 23@@s@@protect-01, 1@@d@@i, 7@@s@@public, 25@@d@@_NAME_, 8@@d@@healthy, 15@@h@@have-org-role-91, 13@@d@@and, 12@@s@@care-03, 5@@p@@our, 18@@d@@work-01, 11@@p@@primary, 10@@a@@and, 15@@o@@official, 4@@b@@thank-01, 15@@p@@person]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	fact	_	fact	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	in-$LEMMA$	(mod())	4	MOD_mod	true
3	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
4	variation	_	variation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	16	APP_s	true
5	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
6	form	_	form	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
7	in	_	in	IN	O	_	thing	_	0	IGNORE	true
8	unrelated	_	unrelated	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	relate-01	(s())	9	MOD_s	true
9	languages	_	language	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
10	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	9	MOD_mod	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	globe	_	globe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op1	true
13	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
14	about	_	about	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	same	_	same	JJ	O	(c<root> / --LEX--  :ARG3 (d<o2>)  :ARG1 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
17	as	_	as	IN	O	_	equal	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	variation	_	variation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
22	in	_	in	IN	O	_	thing	_	0	IGNORE	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	APP_o2	true
25	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	regular	_	regular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	27	MOD_s	true
27	word	_	word	NN	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_s	true
28	(e.g.,	_	(e.g.,	NNP	O	_	mean-01	_	0	IGNORE	true
29	dog)	_	dog)	NNP	O	_	mean-01	_	0	IGNORE	true
30	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
31	pronounced	_	pronounce	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_mod	true
32	across	_	across	IN	O	(a<root> / --LEX--  :op1 (t<op1>)  :path-of (r<mod>))	$LEMMA$	(op1(), mod())	16	MOD_mod	true
33	dialects	_	dialect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	32	APP_op1	true
34	of	_	of	IN	O	_	thing	_	0	IGNORE	true
35	English.	_name_	English.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@d@@variation, 33@@d@@dialect, 10@@b@@across, 14@@s@@about, 2@@p@@in-fact, 21@@s@@find-01, 8@@s@@relate-01, 32@@a@@across, 12@@d@@globe, 9@@b@@language, 25@@p@@any, 16@@c@@same-01, 26@@s@@regular-02, 27@@d@@word, 20@@d@@we, 6@@d@@form, 31@@s@@pronounce-01, 4@@s@@differ-02, 24@@t@@way]
sentence=1	Since	since	since	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	fall	_	fall	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	communism	_	communism	NN	O	(p<root> / political-movement  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	Poland,	poland,	poland,	CD	O	_	_NAME_	_	0	IGNORE	true
8	Łódź	_name_	Łódź	NNP	O	_	name	_	0	IGNORE	true
9	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
10	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	enjoyed	_	enjoy	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_op1	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	rapid	_	rapid	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	economic	_	economic	JJ	O	(d<root> / --LEX--)	economy	()	15	APP_s	true
15	growth	_	growth	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	grow-01	(s())	11	APP_o	true
16	cities	_	city	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
17	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
18	Kraków,	kraków,	Kraków,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	Warsaw	_name_	Warsaw	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	16	MOD_mod	true
21	Wrocław	_name_	Wrocław	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	20	APP_op2	true
22	have	_	have	VBP	O	_	person	_	0	IGNORE	true
23	experienced,	_	experienced,	NNP	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
25	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
26	had	_	have	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	24	APP_op2	true
27	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
28	endure	_	endure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_o	true
29	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
30	fall	_	fall	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_o	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
33	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
34	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
35	textile	_	textile	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
36	industry,	_	industry,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
37	rising	_	rise	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
38	unemployment	_	unemployment	NN	O	(p<root> / --LEX--  :polarity (explicitanon0 / -))	employ-01	()	39	APP_op2	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	30	APP_s	true
40	emigration	_	emigration	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op3	true
41	(within	_	(within	NNP	O	_	$LEMMA$	_	0	IGNORE	true
42	Poland	_name_	Poland	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	39	APP_op1	true
43	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	39	MOD_mod	true
44	abroad).	_	abroad).	CD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[39@@a@@and, 42@@c@@country, 40@@d@@emigration, 19@@c@@city, 19@@n@@_NAME_, 16@@d@@city, 3@@s@@fall-01, 11@@s@@enjoy-01, 21@@n@@_NAME_, 26@@o@@obligate-01, 38@@p@@employ-01, 5@@n@@_NAME_, 24@@a@@and, 15@@s@@grow-01, 20@@a@@and, 38@@explicitanon0@@-, 43@@b@@and, 21@@c@@city, 30@@s@@fall-01, 42@@n@@_NAME_, 35@@p@@textile, 13@@t@@rapid, 32@@explicitanon0@@much, 1@@w@@since, 37@@s@@rise-01, 14@@d@@economy, 28@@s@@endure-01, 5@@p@@political-movement, 10@@explicitanon0@@-]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	can't	_	can't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
3	understan-	_	understan-	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	2	MOD_s	true
4	–	_	–	.	O	_	and	_	0	IGNORE	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
6	–	_	–	.	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	APP_o	true
9	but,	_	but,	VB	O	_	and	_	0	IGNORE	true
10	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	can't,	_	can't,	XX	O	_	mean-01	_	0	IGNORE	true
13	sometimes,	_	sometimes,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	MOD_s	true
14	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	says.	_	says.	RB	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[3@@s@@-, 10@@n@@then, 1@@d@@You, 5@@d@@he, 14@@explicitanon0@@some, 2@@explicitanon0@@-, 8@@s@@possible-01, 7@@d@@you, 13@@s@@sometimes,, 17@@d@@thing, 6@@s@@–-01]
sentence=1	Oh	oh	oh	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	18	APP_s	true
3	PS,	ps,	PS,	NNP	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	usually	_	usually	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	usual	(mod())	6	MOD_mod	true
6	try	_	try	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_op2	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	avoid	_	avoid	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	6	APP_o	true
9	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_o	true
10	medicines	_	medicine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	_	person	_	0	IGNORE	true
13	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	read	_	read	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	14	APP_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
19	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	had	_	have	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	18	APP_o	true
21	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	APP_s	true
23	me	_	I	PRP	O	_	and	_	0	IGNORE	true
24	at	_	at	IN	O	_	i	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	pharmacy	_	pharmacy	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	he	_	0	IGNORE	true
29	airport.	_	airport.	NN	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	26	MOD_mod	true

nodealignment=[10@@d@@medicine, 1@@p@@oh, 13@@explicitanon0@@-, 20@@s@@have-04, 2@@a@@and, 29@@n@@_NAME_, 26@@b@@pharmacy, 3@@explicitanon0@@PS,, 29@@c@@city, 5@@p@@usual, 21@@d@@someone, 22@@s@@help-01, 16@@d@@name-01, 18@@s@@contrast-01, 14@@s@@read-01, 8@@c@@avoid-01, 9@@s@@take-01, 4@@d@@i, 6@@c@@try-01]
sentence=1	America	_name_	America	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	a	_	a	DT	O	_	-	_	0	IGNORE	true
4	full-time	_	full-time	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	5	MOD_s	true
5	President	president	President	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	6	APP_op2	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	full-time	_	full-time	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	Congress,	congress,	congress,	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
10	particularly	_	particularly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	particular	(mod())	13	MOD_mod	true
11	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
14	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
15	problems	_	problem	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	face	_	face	VBP	O	(d<root> / --LEX--  :ARG0 (t<s>)  :ARG1 (s2<o>)  :topic-of (s<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_o	true
18	at	_	at	IN	O	_	1	_	0	IGNORE	true
19	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
20	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_op1	true
21	abroad.	_	abroad.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[1@@c@@country, 13@@n@@time, 9@@d@@congress,, 2@@s@@need-01, 5@@e@@President, 16@@d@@we, 5@@h@@have-org-role-91, 1@@n@@_NAME_, 10@@p@@particular, 12@@p@@this, 19@@d@@home, 17@@d@@face-01, 6@@a@@and, 8@@n@@full-time, 5@@p@@person, 4@@s@@full-time, 20@@b@@and, 15@@a@@problem]
sentence=1	When	when	when	WRB	O	(n<root> / --LEX--  :time-of (p<mod>))	amr-unknown	(mod())	7	MOD_mod	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	7	MOD_s	true
3	the	_	the	DT	O	_	-1	_	0	IGNORE	true
4	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	anybody	_	anybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	saw	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	beating,	_	beating,	NNP	O	_	and	_	0	IGNORE	true
10	let's	_	let's	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	12	MOD_mod	true
11	say,	_	say,	NN	O	_	mean-01	_	0	IGNORE	true
12	China	_name_	China	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	2	APP_o	true
13	in	_	in	IN	O	_	after	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	trade	_	trade	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	16	MOD_mod	true
16	deal?	_	deal?	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	thing	(mod())	7	MOD_mod	true

nodealignment=[15@@p@@trade-01, 1@@n@@amr-unknown, 2@@s@@be-temporally-at-91, 12@@n@@_NAME_, 10@@p@@_NAME_, 4@@p@@last, 16@@p@@thing, 6@@d@@anybody, 7@@s@@see-01, 12@@c@@country, 8@@d@@us]
sentence=1	All	all	all	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	in	_	in	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	all,	_	all,	NN	O	_	and	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
5	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	APP_s	true
6	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	terrific	_	terrific	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	opportunity	_	opportunity	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_o	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	improve	_	improve	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	sports	_	sport	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	coverage	_	coverage	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cover-03	(s())	12	APP_s	true
15	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
16	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
17	multitude	_	multitude	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	aspects;	_name_	aspects;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	will	_	will	MD	O	_	cause-01	_	0	IGNORE	true
23	have	_	have	VB	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	20	APP_o	true
24	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
25	wait	_	wait	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_o	true
26	until	_	until	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	25	MOD_mod	true
27	after	_	after	IN	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	26	APP_op1	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	event	_	event	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_op1	true
30	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
31	assess	_	assess	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	25	MOD_mod	true
32	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
33	what	_	what	WDT	O	_	amr-unknown	_	0	IGNORE	true
34	extent	_	extent	NN	O	_	$LEMMA$	_	0	IGNORE	true
35	the	_	the	DT	O	_	thing	_	0	IGNORE	true
36	broadcasters	_	broadcaster	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	broadcast-01	()	38	APP_s	true
37	will	_	will	MD	O	_	thing	_	0	IGNORE	true
38	meet	_	meet	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	31	APP_s	true
39	these	_	these	DT	O	_	this	_	0	IGNORE	true
40	expectations.	_	expectations.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[13@@d@@sport, 26@@w@@until, 5@@s@@think-01, 38@@s@@meet-01, 14@@s@@cover-03, 29@@d@@event, 17@@explicitanon0@@multitude, 36@@e2@@broadcast-01, 6@@d@@this, 20@@s@@contrast-01, 36@@p2@@person, 27@@o@@after, 21@@d@@we, 9@@p@@terrific, 23@@h@@obligate-01, 10@@r@@opportunity, 31@@i@@assess-01, 25@@s@@wait-01, 12@@i@@improve-01, 4@@d@@i]
sentence=1	On	on	on	IN	O	_	name	_	0	IGNORE	true
2	Friday,	_name_	friday,	CD	O	_	name	_	0	IGNORE	true
3	fishermen	_	fisherman	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	$LEMMA$	()	4	APP_s	true
4	rescued	_	rescue	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op1	true
5	over	_	over	IN	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	8	MOD_mod	true
6	700	_	700	CD	O	(d<root> / --LEX--)	_NUMBER_	()	5	APP_op1	true
7	asylum	_	asylum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	seekers	_	seeker	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	seek-01	(s())	4	APP_o	true
9	whose	_	whose	WP$	O	_	cause-01	_	0	IGNORE	true
10	boat	_	boat	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	MOD_poss	true
11	sank,	_	sank,	NNP	O	_	person	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
13	the_Indonesian_Navy	_name_	Navy	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
14	reportedly	_	reportedly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	report-01	(s())	15	MOD_s	true
15	saved	_	save	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
16	200	_	200	CD	O	(d<root> / --LEX--)	_NUMBER_	()	15	APP_o	true
17	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
18	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
19	they	_	they	PRP	O	_	person	_	0	IGNORE	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	found	_	find	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op1	true
22	swimming	_	swim	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	21	APP_s	true
23	along	_	along	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	coast	_	coast	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
26	of	_	of	IN	O	_	person	_	0	IGNORE	true
27	Aceh,	aceh,	Aceh,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
28	Indonesia.	indonesia.	Indonesia.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[12@@a@@and, 13@@n@@_NAME_, 23@@b@@along, 5@@s@@over, 3@@p2@@person, 17@@p@@more, 16@@d@@_NUMBER_, 15@@s@@save-01, 25@@d@@coast, 7@@d@@asylum, 14@@s@@report-01, 8@@w@@seek-01, 21@@s@@find-01, 6@@d@@_NUMBER_, 22@@d@@swim-01, 10@@m@@boat, 13@@m@@military, 18@@w@@after, 8@@p@@person, 4@@s@@rescue-01, 3@@e2@@fisherman]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
2	would	_	would	MD	O	_	thing	_	0	IGNORE	true
3	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
4	preferred	_	prefer	VBN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	19	APP_op1	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	carry	_	carry	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-on-02	(s())	4	APP_o	true
7	through	_	through	RP	O	_	$LEMMA$	_	0	IGNORE	true
8	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	finish,	_	finish,	NNS	O	_	and	_	0	IGNORE	true
11	whatever	_	whatever	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	regardless-91	_	0	IGNORE	true
13	personal	_	personal	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	agony	_	agony	NN	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
15	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	would	_	would	MD	O	_	have-concession-91	_	0	IGNORE	true
17	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
18	involved,	_	involved,	NNP	O	_	cause-01	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
20	my	_	my	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
21	family	_	family	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	unanimously	_	unanimously	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	unanimous	(mod())	23	MOD_mod	true
23	urged	_	urge	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	19	APP_op2	true
24	me	_	I	PRP	O	_	and	_	0	IGNORE	true
25	to	_	to	TO	O	_	i	_	0	IGNORE	true
26	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
27	so.	_	so.	VB	O	_	i	_	0	IGNORE	true

nodealignment=[4@@c@@prefer-01, 21@@d@@family, 22@@t@@unanimous, 13@@s@@personal-02, 6@@s@@carry-on-02, 1@@d@@i, 19@@a@@and, 14@@r@@agony, 23@@s@@urge-01]
sentence=1	All	all	all	DT	O	_	$LEMMA$	_	0	IGNORE	true
2	of	_	of	RB	O	_	include-91	_	0	IGNORE	true
3	a	_	a	RB	O	_	$LEMMA$	_	0	IGNORE	true
4	sudden	_	sudden	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	terrible	_	terrible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	wind	_	wind	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	blew	_	blow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	APP_s	true
9	up,	_	up,	UH	O	_	so	_	0	IGNORE	true
10	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
12	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
13	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	25	APP_o	true
14	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
15	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
16	hill	_	hill	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
17	my	_	my	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
18	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	house	_	house	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	was	_	be	VBD	O	_	person	_	0	IGNORE	true
21	built	_	build	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
22	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
23	would	_	would	MD	O	_	thing	_	0	IGNORE	true
24	be	_	be	VB	O	_	person	_	0	IGNORE	true
25	blown	_	blow	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
26	apart	_	apart	RB	O	_	$LEMMA$	_	0	IGNORE	true
27	–	_	–	.	O	_	and	_	0	IGNORE	true
28	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
29	I’d	i’d	I’d	NNP	O	_	contrast-01	_	0	IGNORE	true
30	seen	_	see	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_o	true
31	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
32	Devil	devil	Devil	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
33	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	30	APP_s	true
34	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
35	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
36	bad	_	bad	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-07	(s())	34	MOD_s	true
37	as	_	as	IN	O	_	equal	_	0	IGNORE	true
38	this	_	this	DT	O	(g<root> / --LEX--  :example-of (a<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
39	before	_	before	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
40	(the	_	(the	ADD	O	_	$LEMMA$	_	0	IGNORE	true
41	Devil	_name_	Devil	NNP	O	_	$LEMMA$	_	0	IGNORE	true
42	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
43	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	tried	_	try	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	48	APP_s	true
45	to	_	to	TO	O	_	thing	_	0	IGNORE	true
46	harm	_	harm	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_s	true
47	me),	_	me),	NNS	O	_	-	_	0	IGNORE	true
48	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	28	APP_o	true
49	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
50	took	_	take	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	52	APP_op1	true
51	heart	_	heart	NN	O	(d<root> / --LEX--)	$LEMMA$	()	50	APP_s	true
52	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	48	APP_o	true
53	went	_	go	VBD	O	(d<root> / --LEX--)	$LEMMA$-on-25	()	52	APP_op2	true
54	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
55	meditating.	_	meditating.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[52@@a@@and, 48@@s@@cause-01, 4@@t@@sudden, 44@@s@@try-01, 8@@s@@blow-01, 46@@d@@harm-01, 33@@s@@do-02, 36@@s@@bad-07, 21@@s@@build-01, 34@@d@@thing, 10@@s@@so, 28@@s@@contrast-01, 16@@d@@hill, 51@@d@@heart, 7@@d@@wind, 18@@p@@little, 6@@s@@terrible-01, 11@@s@@strong-02, 50@@s@@take-01, 19@@d@@house, 30@@s@@see-01, 25@@s@@blow-01, 32@@d@@Devil, 43@@o@@often, 39@@n@@before, 13@@d@@i, 14@@s@@think-01, 38@@g@@this, 53@@d@@go-on-25]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	3	MOD_s	true
3	analogy	_	analogy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	0	ROOT	true
4	I’ve	_name_	I’ve	NNP	O	_	thing	_	0	IGNORE	true
5	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
6	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
7	when	_	when	WRB	O	_	thing	_	0	IGNORE	true
8	Rob_Siegel,	_name_	Siegel,	NNP	O	_	_NAME_	_	0	IGNORE	true
9	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	editor-in-chief,	_	editor-in-chief,	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
11	likened	_	liken	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	3	MOD_s	true
12	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
13	to	_	to	IN	O	_	thing	_	0	IGNORE	true
14	wine	_	wine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o2	true
15	tasting.	_	tasting.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@s@@analogy, 11@@b@@liken-01, 14@@d@@wine, 9@@n@@former, 2@@m@@most, 12@@d@@it, 5@@s@@hear-01, 10@@n@@_NAME_, 2@@b2@@good-02, 10@@p@@person]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Chemical	chemical	Chemical	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	Wedding	wedding	wedding	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$REPL$	(s())	10	APP_s	true
4	by	_	by	IN	O	_	publication-91	_	0	IGNORE	true
5	Christian_Rosencreutz	_name_	Rosencreutz	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
9	I’ve	_name_	I’ve	NNP	O	_	thing	_	0	IGNORE	true
10	decided	_	decide	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
11	to	_	to	TO	O	_	thing	_	0	IGNORE	true
12	present	_	present	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	title	_	title	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	12	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
17	book.	_	book.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@s@@wedding, 5@@p@@person, 16@@d@@this, 14@@c@@title-01, 14@@t@@thing, 2@@p@@Chemical, 10@@c@@decide-01, 12@@s@@present-01, 5@@n@@_NAME_]
sentence=1	Whether	whether	whether	IN	O	_	interrogative	_	0	IGNORE	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
4	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_o	true
5	or	_	or	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	11	MOD_s	true
6	not	_	not	RB	O	_	-	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	leave	_	leave	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
12	to	_	to	IN	O	_	-	_	0	IGNORE	true
13	the	_	the	DT	O	_	person	_	0	IGNORE	true
14	pros	_	pro	NNS	O	(d<root> / --LEX--)	_NAME_	()	11	APP_o2	true
15	to	_	to	IN	O	_	person	_	0	IGNORE	true
16	decide.	_	decide.	NN	O	_	have-concession-91	_	0	IGNORE	true

nodealignment=[10@@d@@we, 8@@p@@another, 11@@b@@leave-01, 14@@d@@_NAME_, 4@@s@@appropriate-02, 9@@d@@thing, 5@@s@@or, 2@@d@@it]
sentence=1	Above	above	above	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	all,	_	all,	IN	O	_	and	_	0	IGNORE	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	are	_	be	VBP	O	_	person	_	0	IGNORE	true
5	facing	_	face	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
7	alarming	_	alarming	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	appall-01	(s())	8	MOD_s	true
8	possibility	_	possibility	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	armed	_	armed	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	arm-01	(mod())	11	MOD_mod	true
11	conflict	_	conflict	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_s	true
12	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
14	Gulf,	_name_	Gulf,	NNP	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
16	consequences	_	consequence	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
21	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	MOD_s	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
23	afford.	_	afford.	ADD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	-	(s(), o())	5	MOD_o	true

nodealignment=[11@@d@@conflict-01, 8@@s@@possible-01, 5@@s@@face-01, 20@@d@@world, 3@@d@@we, 1@@p@@above, 21@@s@@possible-01, 16@@p@@consequence, 23@@s@@-, 10@@p@@arm-01, 7@@s@@appall-01, 22@@explicitanon0@@-]
sentence=1	Nor	nor	nor	CC	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
2	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
3	my	_	my	PRP$	O	_	contrast-01	_	0	IGNORE	true
4	flesh	_	flesh	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	trembled	_	tremble	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
6	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
7	cause,	_	cause,	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	have-concession-91	(mod())	5	MOD_mod	true
8	for	_	for	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	0	ROOT	true
9	when	_	when	WRB	O	_	he	_	0	IGNORE	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	raised	_	raise	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
12	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
13	eyes	_	eye	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	saw	_	see	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	8	MOD_mod	true
16	that	_	that	IN	O	_	and	_	0	IGNORE	true
17	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
18	waters	_	water	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
19	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
20	ebbed	_	ebb	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
21	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
22	low,	_	low,	RB	O	_	and	_	0	IGNORE	true
23	shewing	_	shew	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
24	much	_	much	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	vast	_	vast	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	reef	_	reef	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
29	whose	_	whose	WP$	O	_	mean-01	_	0	IGNORE	true
30	rim	_	rim	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	28	MOD_poss	true
31	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
32	had	_	have	VBD	O	_	person	_	0	IGNORE	true
33	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	30	MOD_s	true
34	before.	_	before.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[5@@s@@tremble-01, 11@@s@@raise-01, 1@@explicitanon0@@-, 23@@s@@shew-01, 15@@t@@see-01, 4@@d@@flesh, 20@@s@@ebb-01, 8@@s@@cause-01, 6@@explicitanon0@@-, 7@@explicitanon0@@have-concession-91, 13@@d@@eye, 30@@m@@rim, 24@@explicitanon0@@much, 21@@s@@very, 18@@d@@water, 27@@p@@vast, 33@@s@@see-01, 28@@d@@reef]
sentence=1	European	_name_	european	JJ	O	(c<root> / continent  :name (n2 / --LEX--)  :mod-of (n<mod>))	_NAME_	(mod())	2	MOD_mod	true
2	colonizers	_	colonizer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	viewed	_	view	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	lands	_	land	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	they	_	they	PRP	O	_	person	_	0	IGNORE	true
11	colonized	_	colonize	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	uncultured	_	uncultured	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	healthy	(s())	14	MOD_s	true
14	savages	_	savage	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
15	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
16	were	_	be	VBD	O	_	person	_	0	IGNORE	true
17	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
18	need	_	need	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
19	of	_	of	IN	O	_	name	_	0	IGNORE	true
20	European	_name_	european	JJ	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op2	true
21	governance,	_	governance,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
22	dress,	_	dress,	NNP	O	_	and	_	0	IGNORE	true
23	religion,	_	religion,	NNS	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	18	MOD_op1	true
25	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	cultural	_	cultural	JJ	O	(d<root> / --LEX--)	culture	()	24	APP_op3	true
27	practices.	_	practices.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[20@@d@@_NAME_, 18@@s@@need-01, 24@@a@@and, 25@@p@@other, 13@@explicitanon0@@-, 26@@d@@culture, 1@@c@@continent, 11@@s@@colonize-01, 9@@b@@land, 4@@b@@view-01, 1@@n2@@_NAME_, 14@@d@@savage, 2@@d@@colonizer, 3@@o@@often, 6@@d@@person, 13@@p@@healthy]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
3	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	21	MOD_o	true
6	is	_	be	VBZ	O	_	have-concession-91	_	0	IGNORE	true
7	place	_	place	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	21	APP_op1	true
8	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
9	favorite	_	favorite	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	combination	_	combination	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	Skittles	_name_	Skittles	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	candies	_	candy	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
14	into	_	into	IN	O	_	-	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	glass	_	glass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op1	true
17	or	_	or	CC	O	(o<root> / --LEX--  :op1 (d<op1>)  :op2 (o2<op2>)  :prep-with-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	7	APP_o2	true
18	bottle	_	bottle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_op2	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	vodka	_	vodka	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_mod	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
22	wait	_	wait	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	21	APP_op2	true
23	for	_	for	IN	O	_	you	_	0	IGNORE	true
24	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	to	_	to	IN	O	_	thing	_	0	IGNORE	true
26	infuse.	_	infuse.	ADD	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[10@@s@@combination, 1@@p@@all, 3@@s@@need-01, 22@@s@@wait-01, 20@@d@@vodka, 7@@b@@place-01, 18@@d@@bottle, 9@@p@@favorite, 17@@o@@or, 5@@s@@do-02, 2@@d@@you, 16@@d@@glass, 21@@a@@and, 12@@p@@Skittles, 13@@d@@candy]
sentence=1	Anything	anything	Anything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
4	to	_	to	TO	O	_	thing	_	0	IGNORE	true
5	explain	_	explain	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
6	about	_	about	IN	O	_	thing	_	0	IGNORE	true
7	morality	_	morality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
9	be	_	be	VB	O	_	thing	_	0	IGNORE	true
10	explained	_	explain	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
11	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	12	MOD_mod	true
12	mentioning	_	mention	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	10	MOD_mod	true
13	moral	_	moral	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	8	MOD_s	true
14	facts,	_	facts,	NNP	O	_	thing	_	0	IGNORE	true
15	or	_	or	CC	O	_	$LEMMA$	_	0	IGNORE	true
16	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	8	MOD_s	true
17	Ruse	ruse	ruse	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_o	true
18	argues.	_	argues.	ADD	O	_	cause-01	_	0	IGNORE	true

nodealignment=[13@@s@@moral-02, 5@@s@@explain-01, 8@@s@@possible-01, 1@@d@@Anything, 17@@d@@ruse-01, 16@@s@@so, 3@@s@@want-01, 2@@d@@we, 7@@d@@morality, 10@@s@@explain-01, 12@@b@@mention-01, 11@@explicitanon0@@-]
sentence=1	From	from	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	one-liners	_	one-liner	NNS	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
3	to	_	to	IN	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	and	(op2(), op1(), op3())	0	ROOT	true
4	classic	_	classic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	three-liners	_	three-liner	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	(d<root> / --LEX--)	person	()	3	APP_op3	true
8	one-minute	_	one-minute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	minute	(mod())	9	MOD_mod	true
9	gag	_	gag	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_op2	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	tell	_	tell	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_o	true
12	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	friends,	_	friends,	NN	O	_	and	_	0	IGNORE	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
16	joke	_	joke	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
17	pleases	_	please	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	11	APP_o2	true
18	everyone.	_	everyone.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[2@@p@@person, 17@@s@@please-01, 2@@n@@_NAME_, 16@@d@@joke-01, 8@@p@@minute, 15@@s@@good-02, 5@@p@@three-liner, 11@@b@@tell-01, 4@@p@@classic, 3@@a@@and, 7@@d@@person, 10@@d@@you, 9@@d@@gag]
sentence=1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	9	MOD_mod	true
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	elevator	_	elevator	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	reaches	_	reach	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_s	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	new	_	new	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
8	floor,	_	floor,	NNS	O	_	-	_	0	IGNORE	true
9	say	_	say	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
10	“ding!”	_	“ding!"	NFP	O	_	_NAME_	_	0	IGNORE	true
11	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	loudly.	_	loudly.	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true

nodealignment=[7@@d@@new-01, 5@@s@@reach-01, 12@@p@@_NAME_, 4@@d@@elevator, 9@@s@@say-01, 11@@s@@very, 1@@r@@rate-entity-91]
sentence=1	Throw	throw	throw	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-out-06	(s(), o())	3	APP_op1	true
2	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
3	or	_	or	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
4	donate	_	donate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_op2	true
5	junk	_	junk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
9	to	_	to	TO	O	_	-	_	0	IGNORE	true
10	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
11	to	_	to	IN	O	_	you	_	0	IGNORE	true
12	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	place.	_	place.	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true

nodealignment=[7@@explicitanon0@@-, 4@@s@@donate-01, 6@@d@@you, 10@@s@@take-01, 13@@s@@new-01, 8@@s@@want-01, 1@@h@@throw-out-06, 3@@a@@or, 1@@explicitanon0@@imperative, 14@@n@@place., 5@@d@@junk]
sentence=1	From	from	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	discussions	_	discussion	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	discuss-01	(s(), o())	16	MOD_s	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
5	have	_	have	VBP	O	_	person	_	0	IGNORE	true
6	had	_	have	VBN	O	_	$LEMMA$-03	_	0	IGNORE	true
7	with	_	with	IN	O	_	-	_	0	IGNORE	true
8	Congressional	_name_	congressional	JJ	O	(d<root> / --LEX--)	_NAME_	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
10	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op2	true
11	leaders,	_	leaders,	NNS	O	_	and	_	0	IGNORE	true
12	I	i	I	PRP	O	_	$REPL$	_	14	IGNORE	true
13	have	_	have	VBP	O	_	person	_	0	IGNORE	true
14	concluded	_	conclude	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
15	that	_	that	IN	O	_	thing	_	0	IGNORE	true
16	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	22	MOD_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Watergate	_name_	Watergate	NNP	O	(d<root> / --LEX--)	_NAME_	()	16	APP_s	true
20	matter,	_	matter,	NNP	O	_	and	_	0	IGNORE	true
21	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
22	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	14	APP_o	true
23	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	have	_	have	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	22	APP_s	true
25	the	_	the	DT	O	_	thing	_	0	IGNORE	true
26	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Congress	_name_	Congress	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	14	APP_o2	true
30	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
32	would	_	would	MD	O	_	contrast-01	_	0	IGNORE	true
33	consider	_	consider	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
34	necessary	_	necessary	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	need-01	(s(), o())	26	MOD_s	true
35	to	_	to	TO	O	_	thing	_	0	IGNORE	true
36	back	_	back	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	APP_op1	true
37	the	_	the	DT	O	_	thing	_	0	IGNORE	true
38	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
39	difficult	_	difficult	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	40	MOD_mod	true
40	decisions	_	decision	NNS	O	(d<root> / --LEX--)	decide-01	()	36	APP_s	true
41	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	34	APP_o	true
42	carry	_	carry	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-03	(s())	41	APP_op2	true
43	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
44	the	_	the	DT	O	_	thing	_	0	IGNORE	true
45	duties	_	duty	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	42	APP_s	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	48	MOD_mod	true
48	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_poss	true
49	in	_	in	IN	O	_	thing	_	0	IGNORE	true
50	the	_	the	DT	O	_	thing	_	0	IGNORE	true
51	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
52	the	_	the	DT	O	_	thing	_	0	IGNORE	true
53	interests	_	interest	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	58	APP_s	true
54	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
55	the	_	the	DT	O	_	person	_	0	IGNORE	true
56	Nation	_name_	Nation	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_poss	true
57	will	_	will	MD	O	_	person	_	0	IGNORE	true
58	require.	_	require.	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	14	MOD_o	true

nodealignment=[45@@m@@duty, 29@@g@@government-organization, 47@@p@@this, 29@@n@@_NAME_, 16@@s@@cause-01, 53@@m@@interest, 23@@explicitanon0@@-, 41@@a@@and, 26@@d@@support-01, 14@@b@@conclude-01, 3@@s@@discuss-01, 40@@d@@decide-01, 10@@d@@other, 33@@s@@consider-01, 38@@s@@very, 34@@s@@need-01, 39@@p@@difficult, 48@@d@@office, 4@@d@@i, 36@@s@@back-01, 19@@d@@_NAME_, 24@@s@@have-03, 22@@s@@possible-01, 42@@s@@carry-out-03, 8@@d@@_NAME_, 56@@d@@Nation, 9@@a@@and, 58@@s@@require.]
sentence=1	Eegimaa	_name_	Eegimaa	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_dom	true
2	is	_	be	VBZ	O	_	name	_	0	IGNORE	true
3	an	_	an	DT	O	_	name	_	0	IGNORE	true
4	endangered	_	endangered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	language	_	language	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	whose	_	whose	WP$	O	_	-	_	0	IGNORE	true
7	transmission	_	transmission	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	receive-01	(s(), o())	5	MOD_s	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
10	generations	_	generation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	been	_	be	VBN	O	_	person	_	0	IGNORE	true
13	declining	_	decline	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
14	significantly	_	significantly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	significant-02	(s())	13	MOD_s	true
15	in	_	in	IN	O	_	future	_	0	IGNORE	true
16	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
17	last	_	last	JJ	O	(b<root> / --LEX--  :op1 (n / now)  :time-of (t<mod>))	before	(mod())	13	MOD_mod	true
18	decades.	_	decades.	NN	O	_	1	_	0	IGNORE	true

nodealignment=[10@@d@@generation, 13@@s@@decline-01, 7@@s@@receive-01, 9@@s@@new-01, 17@@n@@now, 1@@p@@person, 1@@n@@_NAME_, 14@@s@@significant-02, 5@@r@@language, 4@@s@@endangered-01, 17@@b@@before]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	know,	_	know,	NFP	O	_	say-01	_	0	IGNORE	true
4	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
5	therapist,	_	therapist,	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	1	APP_op2	true
6	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	5	MOD_s	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	very	_	very	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	true
10	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
11	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
13	was,	_	was,	VB	O	_	thing	_	0	IGNORE	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	know,	_	know,	NFP	O	_	thing	_	0	IGNORE	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	19	APP_s	true
18	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	6	APP_o	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	lot	_	lot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
23	courage.	_	courage.	NN	O	(d<root> / --LEX--)	_NAME_	()	5	APP_o	true

nodealignment=[1@@a@@and, 2@@d@@you, 9@@explicitanon0@@1, 6@@s@@resemble-01, 16@@d@@you, 10@@d@@thing, 21@@d@@lot, 8@@p@@very, 23@@d@@_NAME_, 19@@s@@take-10, 18@@d@@this, 12@@s@@say-01, 9@@o@@ordinal-entity, 5@@s@@say-01, 17@@s@@do-02]
sentence=1	In	in	in	IN	O	_	elect-01	_	0	IGNORE	true
2	fact,	_	fact,	NNS	O	_	and	_	0	IGNORE	true
3	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	16	APP_s	true
5	Wikinews	_name_	Wikinews	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	6	APP_s	true
6	observed	_	observe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
7	took	_	take	VBD	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-out-11	(o(poss_UNIFY_s()))	16	APP_op1	true
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
10	mobiles	_	mobile	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_o	true
11	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
12	they	_	they	PRP	O	_	person	_	0	IGNORE	true
13	left	_	leave	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-11	(mod(), s())	7	MOD_mod	true
14	for	_	for	IN	O	_	request-confirmation-91	_	0	IGNORE	true
15	the_evening	_name_	evening	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	_NAME_	(mod())	13	MOD_mod	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
17	used	_	use	VBD	O	(i<root> / --LEX--  :ARG0 (t<s>)  :ARG2 (f<o2>)  :ARG1 (a<o>))	$LEMMA$-01	(o2(s()), o())	16	APP_op2	true
18	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
19	own	_	own	JJ	O	_	person	_	0	IGNORE	true
20	phone	_	phone	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	cameras	_	camera	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
22	to	_	to	TO	O	_	and	_	0	IGNORE	true
23	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
24	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	26	MOD_mod	true
25	further	_	further	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	record	_	record	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_o2	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	moment	_	moment	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
30	-	_	-	,	O	_	$LEMMA$	_	0	IGNORE	true
31	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
32	photo	_	photo	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
33	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
34	a	_	a	DT	O	_	thing	_	0	IGNORE	true
35	photo.	_	photo.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@a@@and, 3@@explicitanon0@@many, 25@@s@@further, 17@@i@@use-01, 24@@explicitanon0@@1, 4@@d@@person, 29@@d@@moment, 10@@m@@mobile, 26@@s@@record-01, 7@@l@@take-out-11, 13@@v@@leave-11, 15@@o@@_NAME_, 5@@n@@_NAME_, 20@@p@@phone, 32@@p@@photo, 5@@c@@company, 21@@d@@camera, 6@@s@@observe-01]
sentence=1	I’d	_name_	I’d	NNP	O	(d<root> / --LEX--)	date-entity	()	2	APP_s	true
2	said	_	say	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	my	_	my	PRP$	O	_	say-01	_	0	IGNORE	true
4	prayers,	_	prayers,	NNS	O	_	and	_	0	IGNORE	true
5	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op1	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
8	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	usual	_	usual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	as-$LEMMA$	(mod())	5	MOD_mod	true
11	with	_	with	IN	O	_	i	_	0	IGNORE	true
12	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
13	Maker	maker	Maker	NNP	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	make-01	()	5	APP_o	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
15	thinking	_	think	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_op2	true
16	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	mysteries	_	mystery	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	Father	father	Father	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
24	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
25	Lights	lights	Lights	NNPS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
26	had	_	have	VBD	O	_	person	_	0	IGNORE	true
27	revealed	_	reveal	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	MOD_o	true
28	to	_	to	IN	O	_	thing	_	0	IGNORE	true
29	me.	_	me.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[14@@a@@and, 23@@d@@Father, 20@@p@@great, 8@@b@@time, 15@@s@@think-01, 13@@p2@@person, 10@@p@@as-usual, 1@@d@@date-entity, 5@@s@@talk-01, 2@@c@@say-01, 21@@d@@mystery, 13@@e2@@make-01, 7@@s@@long-03, 17@@p@@some, 25@@p@@Lights, 27@@s@@reveal-01]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_s	true
4	at	_	at	IN	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	rooms,	_	rooms,	NNS	O	_	and	_	0	IGNORE	true
7	there's	_	there'	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	accouterments	_	accouterment	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
11	you'd	_	you'd	NN	O	_	thing	_	0	IGNORE	true
12	find	_	find	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
14	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	15	MOD_mod	true
15	types	_	type	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	places	_	place	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
18	--	_	--	:	O	_	contrast-01	_	0	IGNORE	true
19	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
20	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
21	than	_	than	IN	O	_	more-$LEMMA$	_	0	IGNORE	true
22	anything,	_	anything,	NNP	O	_	thing	_	0	IGNORE	true
23	there's	_	there'	VBZ	O	_	thing	_	0	IGNORE	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	28	MOD_s	true
28	feeling	_	feeling	NN	O	(d<root> / --LEX--)	feel-01	()	19	APP_o	true
29	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
30	here.	_	here.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[17@@b@@place, 8@@p@@all, 20@@s@@more, 10@@d@@accouterment, 15@@p@@type, 12@@s@@find-01, 14@@p@@this, 25@@explicitanon0@@lot, 3@@s@@look-01, 2@@d@@you, 28@@d@@feel-01, 27@@s@@good-02, 29@@b@@around, 19@@s@@contrast-01]
sentence=1	All	all	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
3	offworlders	_	offworlder	NNS	O	(d<root> / --LEX--)	_NAME_	()	9	APP_dom	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
5	had	_	have	VBD	O	_	person	_	0	IGNORE	true
6	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	met	_	meet	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_o	true
8	were	_	be	VBD	O	_	person	_	0	IGNORE	true
9	teachers.	_	teachers.	RB	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true

nodealignment=[6@@n@@ever, 1@@p@@all, 7@@s@@meet-02, 9@@r@@teachers., 4@@d@@i, 3@@d@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	face	_	face	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	great.	_	great.	JJ	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[2@@d@@challenge-01, 3@@d@@we, 4@@s@@face-01]
sentence=1	Things	things	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	You'll	you'll	You'll	MD	O	_	i	_	0	IGNORE	true
3	Need	need	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true

nodealignment=[1@@d@@thing, 3@@s@@need-01]
sentence=1	Jenna's	_name_	Jenna's	NNP	O	_	have-rel-role-91	_	0	IGNORE	true
2	mother	_	mother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	14	APP_s	true
3	was	_	be	VBD	O	_	person	_	0	IGNORE	true
4	unemployed	_	unemployed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	employ-01	(s())	14	APP_op1	true
5	at	_	at	IN	O	_	1	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	Jenna's	_name_	Jenna's	NNP	O	_	1	_	0	IGNORE	true
10	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	11	MOD_mod	true
11	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	went	_	go	VBD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	4	MOD_mod	true
13	viral,	_	viral,	NNS	O	_	and	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
15	was	_	be	VBD	O	_	person	_	0	IGNORE	true
16	concerned	_	concerned	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	concern-01	(s(), o())	14	APP_op2	true
17	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
18	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	content	_	content	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
20	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	16	APP_o	true
21	put	_	put	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-off-06	(s(), o())	20	APP_s	true
22	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
23	potential	_	potential	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	24	MOD_s	true
24	employers.	_	employers.	NN	O	(d<root> / --LEX--)	_NAME_	()	21	APP_o	true
25	[7]	_	[7]	XX	O	_	interrogative	_	0	IGNORE	true

nodealignment=[2@@f@@mother, 11@@d@@video, 24@@d@@_NAME_, 16@@s@@concern-01, 12@@s@@go-01, 2@@h@@have-rel-role-91, 19@@d@@content, 10@@o@@ordinal-entity, 21@@s@@put-off-06, 20@@s@@possible-01, 2@@p@@person, 14@@a@@and, 23@@s@@potential, 10@@explicitanon0@@1, 4@@s@@employ-01]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	attempts	_	attempt	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
3	to	_	to	TO	O	_	thing	_	0	IGNORE	true
4	explain	_	explain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
6	and	_	and	CC	O	_	$LEMMA$	_	2	IGNORE	true
7	why	_	why	WRB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	7	APP_s	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	we	_	we	PRP	O	_	thing	_	0	IGNORE	true
13	do	_	do	VBP	O	_	person	_	0	IGNORE	true
14	by	_	by	IN	O	_	thing	_	0	IGNORE	true
15	studying	_	study	VBG	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	interactions	_	interaction	NNS	O	(d<root> / --LEX--)	interact-01	()	15	APP_s	true
18	among	_	among	IN	O	_	thing	_	0	IGNORE	true
19	human	_	human	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
20	thinking,	_	thinking,	NNP	O	_	thing	_	0	IGNORE	true
21	emotion,	_	emotion,	NNP	O	_	and	_	0	IGNORE	true
22	creativity,	_	creativity,	NNP	O	_	and	_	0	IGNORE	true
23	language,	_	language,	NNS	O	_	and	_	0	IGNORE	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	17	MOD_op1	true
25	problem	_	problem	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op3	true
26	solving,	_	solving,	NNP	O	_	and	_	0	IGNORE	true
27	in	_	in	IN	O	_	and	_	0	IGNORE	true
28	addition	_	addition	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	add-02	(s(), o())	2	MOD_s	true
29	to	_	to	IN	O	_	and	_	0	IGNORE	true
30	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	cognitive	_	cognitive	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
32	processes.	_	processes.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@a@@and, 28@@s@@add-02, 7@@s@@cause-01, 1@@d@@It, 19@@d@@human, 25@@d@@problem, 15@@l@@study-01, 4@@s@@explain-01, 17@@d@@interact-01, 31@@p@@cognitive, 30@@p@@other, 2@@c@@attempt-01, 9@@s@@think-01, 8@@d@@we]
sentence=1	Another	another	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	technique	_	technique	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_dom	true
3	used	_	use	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
4	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
6	brain	_	brain	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	3	APP_s	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	organize	_	organize	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
9	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	identification	_	identification	NN	O	(i<root> / --LEX--  :domain (t<dom>)  :ARG1 (j<s>))	discover-01	(dom(), s())	0	ROOT	true
13	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
14	prototypes	_	prototype	NNS	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	$LEMMA$	(s())	12	APP_s	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	concepts	_	concept	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
20	developed.	_	developed.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[14@@t@@prototype, 17@@d@@concept, 12@@i@@discover-01, 6@@h@@brain, 1@@p@@another, 14@@t3@@thing, 5@@d@@your, 8@@s@@organize-01, 2@@d@@technique, 9@@d@@information, 3@@s@@use-01]
sentence=1	A	a	a	DT	O	_	8	_	0	IGNORE	true
2	pre-1982	_	pre-1982	JJ	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	4	MOD_mod	true
3	copper	_	copper	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	penny	_	penny	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	(left)	_	(left)	NN	O	_	mean-01	_	0	IGNORE	true
6	contains	_	contain	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	approximately	_	approximately	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	12	MOD_mod	true
8	3	_	3	CD	O	(d<root> / --LEX--)	_NUMBER_	()	7	APP_op1	true
9	××	_	××	CD	O	_	year	_	0	IGNORE	true
10	1022	_	1022	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	12	MOD_mod	true
11	copper	_	copper	NN	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	atoms	_	atom	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
13	(several	_	(several	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
14	dozen	_	dozen	NN	O	_	$LEMMA$	_	0	IGNORE	true
15	are	_	be	VBP	O	_	person	_	0	IGNORE	true
16	represented	_	represent	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	APP_o	true
17	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
18	brown	_	brown	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	19	MOD_s	true
19	spheres	_	sphere	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	at	_	at	IN	O	_	thing	_	0	IGNORE	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	right),	_	right),	NNP	O	_	include-91	_	0	IGNORE	true
23	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	6	MOD_o	true
25	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
26	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	19	MOD_s	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
29	chemical	_	chemical	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
30	properties.	_	properties.	NNS	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@explicitanon0@@_NUMBER_, 2@@explicitanon0@@_NUMBER_, 6@@s@@contain-01, 11@@g@@copper, 3@@g@@copper, 19@@d@@sphere, 2@@d@@date-entity, 12@@d@@atom, 28@@s@@same-01, 13@@p@@(several, 4@@d@@penny, 23@@p@@each, 7@@s@@approximately, 29@@d@@chemical, 18@@s@@brown, 16@@s@@represent-01, 26@@s@@have-03, 8@@d@@_NUMBER_, 24@@s@@include-91]
sentence=1	Cara	_name_	Cara	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	sits	_	sit	VBZ	O	(b<root> / --LEX--  :ARG2 (v<o>)  :ARG1 (t<s>))	$LEMMA$-01	(o(poss_UNIFY_s()))	22	APP_op1	true
3	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
4	her	_	she	PRP$	O	(d<root> / --LEX--)	be-located-at-91	()	22	APP_op3	true
5	booster	_	booster	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	seat	_	seat	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	2	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	back	_	back	NN	O	(h<root> / --LEX--  :part-of (y<poss>)  :location-of (d<mod>))	$LEMMA$	(mod(), poss())	6	MOD_mod	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	car,	_	car,	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	wheezing	_	wheeze	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	MOD_s	true
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	way	_	way	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	home,	_	home,	NNP	O	_	and	_	0	IGNORE	true
18	getting	_	get	VBG	O	_	$LEMMA$-03	_	0	IGNORE	true
19	worse	_	bad	JJR	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$n-01	(s())	20	MOD_s	true
20	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
21	worse,	_	worse,	NNS	O	_	shit	_	0	IGNORE	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
23	by	_	by	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	22	MOD_mod	true
24	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
25	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
26	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	pull	_	pull	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	23	APP_op1	true
28	in	_	in	IN	O	_	i	_	0	IGNORE	true
29	the	_	the	DT	O	_	he	_	0	IGNORE	true
30	driveway,	_	driveway,	NNS	O	_	ballistic	_	0	IGNORE	true
31	she’s	_	she’s	NNP	O	_	possible-01	_	0	IGNORE	true
32	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	27	MOD_s	true
33	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
34	white	_	white	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	35	MOD_s	true
35	look	_	look	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	32	APP_o	true
36	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
37	her	_	she	PRP	O	_	cause-01	_	0	IGNORE	true
38	mouth.	_	mouth.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@p@@person, 16@@n@@way, 23@@w@@by, 2@@b@@sit-01, 19@@s@@badn-01, 22@@a@@and, 36@@b@@around, 20@@d@@and, 33@@p@@that, 34@@s@@white-03, 9@@h@@back, 6@@h@@seat, 1@@n@@_NAME_, 13@@s@@wheeze-01, 4@@d@@be-located-at-91, 32@@s@@get-02, 26@@d@@we, 27@@s@@pull-01, 5@@p@@booster, 35@@d@@look-01, 14@@p@@all]
sentence=1	Is	is	be	VBZ	O	_	person	_	0	IGNORE	true
2	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
3	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	girls	_	girl	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
6	hire?	_	hire?	RB	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	4	MOD_mod	true

nodealignment=[5@@d@@you, 4@@r@@girl, 3@@p@@only, 6@@explicitanon0@@interrogative]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	1863	_	1863	CD	O	(explicitanon0<root> / --LEX--  :year-of (d / date-entity  :time-of (e<mod>)))	_NUMBER_	(mod())	4	MOD_mod	true
3	Emancipation	emancipation	Emancipation	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	Proclamation	proclamation	Proclamation	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	ended	_	end	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	doubts	_	doubt	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_o	true
8	the	_	the	DT	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	name	(op1(), mod())	5	MOD_mod	true
9	British	_name_	British	NNPS	O	(d<root> / --LEX--)	country	()	8	APP_op1	true
10	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
11	about	_	about	IN	O	_	name	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	goals	_	goal	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	7	APP_s	true
14	of	_	of	IN	O	_	person	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	Union	_name_	Union	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_poss	true
17	cause.	_	cause.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@p@@any, 7@@s@@doubt-01, 5@@s@@end-01, 16@@d@@_NAME_, 4@@d@@Proclamation, 8@@n@@name, 3@@n@@_NAME_, 13@@m@@goal, 2@@explicitanon0@@_NUMBER_, 2@@d@@date-entity, 9@@d@@country]
sentence=1	Every	every	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	9	MOD_mod	true
2	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
4	take	_	take	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-over-12	(mod(), s(), o())	9	MOD_mod	true
5	over	_	over	RP	O	_	$LEMMA$	_	0	IGNORE	true
6	a	_	a	DT	O	_	1	_	0	IGNORE	true
7	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	get	_	get	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
10	cards.	_	cards.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@t@@take-over-12, 3@@d@@you, 7@@d@@country, 9@@s@@get-01, 1@@r@@rate-entity-91]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	sat	_	sit	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
5	shadow	_	shadow	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
7	my	_	my	PRP$	O	_	have-rel-role-91	_	0	IGNORE	true
8	living	_	living	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	room	_	room	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	for	_	for	IN	O	_	and	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	while,	_	while,	NNS	O	_	and	_	0	IGNORE	true
13	looking	_	look	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
14	at	_	at	IN	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	amorphous	_	amorphous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	mass	_	mass	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	blanket	_	blanket	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_poss	true
21	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
22	had	_	have	VBD	O	_	person	_	0	IGNORE	true
23	been	_	be	VBN	O	_	person	_	0	IGNORE	true
24	crocheting.	_	crocheting.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[1@@d@@i, 5@@d@@shadow, 16@@p@@amorphous, 13@@t@@look-01, 17@@m@@mass, 8@@p@@living, 9@@b@@room, 20@@d@@blanket, 2@@s@@sit-01]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	stories	_	story	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	mature	_	mature	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	period	_	period	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	(1894	_	(1894	ADD	O	(explicitanon0<root> / --LEX--  :year-of (d<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
8	–	_	–	:	O	_	date-interval	_	0	IGNORE	true
9	96)	_	96)	CD	O	_	and	_	0	IGNORE	true
10	were	_	be	VBD	O	_	person	_	0	IGNORE	true
11	not	_	not	RB	O	_	-	_	0	IGNORE	true
12	only	_	only	RB	O	_	$LEMMA$	_	0	IGNORE	true
13	marked	_	mark	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
14	by	_	by	IN	O	_	and	_	0	IGNORE	true
15	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
17	living	_	live	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
18	near	_	near	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	17	MOD_s	true
19	the	_	the	DT	O	_	he	_	0	IGNORE	true
20	red-light	_	red-light	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	district	_	district	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_o	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	13	APP_s	true
23	greater	_	great	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	great	(mod())	24	MOD_mod	true
24	concern	_	concern	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op2	true
25	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	the	_	the	DT	O	_	person	_	0	IGNORE	true
27	plight	_	plight	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	women,	_	women,	NNP	O	_	_NAME_	_	0	IGNORE	true
30	but	_	but	CC	O	_	contrast-01	_	0	IGNORE	true
31	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
32	by	_	by	IN	O	_	person	_	0	IGNORE	true
33	the	_	the	DT	O	_	person	_	0	IGNORE	true
34	influence	_	influence	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_op3	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	Ihara_Saikaku,	_name_	Saikaku,	NNP	O	_	include-91	_	0	IGNORE	true
37	a	_	a	DT	O	_	1	_	0	IGNORE	true
38	17th-century	_	17th-century	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	34	MOD_mod	true
39	writer,	_	writer,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
40	whose	_	whose	WP$	O	_	name	_	0	IGNORE	true
41	stories	_	story	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_s	true
42	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
43	had	_	have	VBD	O	_	person	_	0	IGNORE	true
44	recently	_	recently	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	recent	(mod())	41	MOD_mod	true
45	discovered.	_	discovered.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[41@@d@@story, 31@@p@@also, 7@@explicitanon0@@_NUMBER_, 13@@s@@mark-01, 20@@p@@red-light, 21@@d@@district, 18@@s@@near-02, 34@@s@@influence-01, 27@@d@@plight, 5@@p@@mature, 17@@d@@live-01, 6@@n@@period, 24@@s@@concern-01, 23@@f2@@great, 38@@n@@_NAME_, 23@@m@@more, 16@@s@@experience-01, 22@@a@@and, 2@@d@@story, 44@@n@@recent]
sentence=1	When	when	when	WRB	O	_	say-01	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
3	discovered	_	discover	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	6	MOD_mod	true
4	Wikipedia,	wikipedia,	wikipedia,	UH	O	_	_NAME_	_	0	IGNORE	true
5	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
6	recognized	_	recognize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	wiki	_	wiki	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	model	_	model	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_dom	true
11	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	potential	_	potential	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	6	APP_o	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	build	_	build	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	13	MOD_mod	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	how-to	_	how-to	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	see-01	(mod())	18	MOD_mod	true
18	resource	_	resource	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	15	APP_s	true
19	the	_	the	DT	O	_	thing	_	0	IGNORE	true
20	world	_	world	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_poss	true
21	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	22	MOD_s	true
22	needs.	_	needs.	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	-	(s())	6	MOD_s	true

nodealignment=[15@@i@@build-01, 2@@d@@i, 9@@p@@wiki, 18@@m@@resource, 22@@s@@-, 6@@s@@recognize-01, 13@@r@@potential, 10@@d@@model, 3@@v@@discover-01, 17@@p@@see-01, 20@@d@@world, 21@@s@@real-04]
sentence=1	Determine	determine	determine	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
3	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	1	MOD_s	true
4	on	_	on	IN	O	_	and	_	0	IGNORE	true
5	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
6	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
7	personality	_	personality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	8	APP_op2	true
11	they're	_	they're	NNP	O	_	person	_	0	IGNORE	true
12	interacting	_	interact	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	MOD_s	true
13	with.	_	with.	NNS	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@d@@this, 6@@s@@general-02, 1@@y@@you, 7@@d@@personality, 8@@a@@and, 1@@explicitanon0@@imperative, 10@@d@@person, 1@@b@@determine-01, 3@@s@@base-02, 12@@s@@interact-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	am	_	be	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	0	ROOT	true
3	back	_	back	RB	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	2	MOD_mod	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	Philadelphia	_name_	Philadelphia	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	3	APP_op1	true
6	to	_	to	TO	O	_	and	_	0	IGNORE	true
7	express	_	express	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	13	APP_op1	true
8	my	_	my	PRP$	O	_	and	_	0	IGNORE	true
9	thanks	_	thank	NNS	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$	(s(), o())	7	APP_o	true
10	for	_	for	IN	O	_	thing	_	0	IGNORE	true
11	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	support	_	support	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_o	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	MOD_s	true
14	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
16	express	_	express	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
17	appreciation	_	appreciation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_o	true
18	for	_	for	IN	O	_	and	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	help	_	help	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
21	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	received	_	receive	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	20	MOD_o	true
23	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
24	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	2	MOD_mod	true
25	Democrats	_name_	Democrats	NNPS	O	(p2<root> / political-party  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
26	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
27	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	29	APP_op1	true
29	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	25	MOD_mod	true
30	State,	_name_	state,	NN	O	(d<root> / --LEX--)	_NAME_	()	29	APP_op2	true
31	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	2	APP_o	true
32	to	_	to	TO	O	_	person	_	0	IGNORE	true
33	report	_	report	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	31	APP_op2	true
34	to	_	to	IN	O	_	person	_	0	IGNORE	true
35	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_o	true
36	on	_	on	IN	O	_	person	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	progress	_	progress	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	33	APP_s	true
39	that	_	that	IN	O	_	name	_	0	IGNORE	true
40	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	country	_	country	NN	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
42	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
43	made	_	make	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
44	on	_	on	IN	O	_	thing	_	0	IGNORE	true
45	the	_	the	DT	O	_	person	_	0	IGNORE	true
46	goals	_	goal	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_s	true
47	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
48	were	_	be	VBD	O	_	person	_	0	IGNORE	true
49	outlined	_	outline	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	46	MOD_s	true
50	3_years	_name_	year	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
51	ago.	_	ago.	XX	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[13@@a@@and, 43@@s@@make-01, 29@@b@@and, 25@@p2@@political-party, 31@@a@@and, 46@@d@@goal, 5@@c@@city, 5@@n@@_NAME_, 28@@d@@city, 41@@d@@country, 14@@p@@also, 25@@n@@_NAME_, 40@@p@@this, 11@@p@@that, 33@@t@@report-01, 49@@s@@outline-01, 16@@s@@express-01, 2@@s@@be-located-at-91, 17@@s@@appreciation, 1@@d@@i, 9@@t@@thank, 12@@d@@support-01, 3@@w@@back, 50@@p@@year, 7@@c@@express-01, 35@@d@@you, 24@@p@@that, 22@@s@@receive-01, 27@@p@@this, 21@@d@@we, 20@@d@@help-01, 38@@s@@progress-01, 30@@d@@_NAME_]
sentence=1	Given	given	give	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
2	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
3	volume	_	volume	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	1	APP_s	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	content	_	content	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_mod	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	represents,	_	represents,	NN	O	_	cause-01	_	0	IGNORE	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	cause-01	_	0	IGNORE	true
10	easy	_	easy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	0	ROOT	true
11	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
12	forget	_	forget	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
13	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	television	_	television	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	series	_	series	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
17	itself	_	itself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
19	an	_	an	DT	O	_	thing	_	0	IGNORE	true
20	adaptation	_	adaptation	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	characterize-01	(s(), o())	12	APP_s	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	a	_	a	DT	O	_	thing	_	0	IGNORE	true
23	book	_	book	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	series	_	series	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
25	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
26	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
27	pre-existing	_	pre-existing	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	preexist-01	(s())	23	MOD_s	true
28	fandom.	_	fandom.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@d@@series, 20@@s@@characterize-01, 15@@p@@television, 5@@d@@content, 12@@s@@forget-01, 27@@s@@preexist-01, 16@@d@@series, 6@@p@@this, 1@@s@@give-01, 3@@explicitanon0@@volume, 23@@p@@book, 10@@s@@easy-05]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
2	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_op1	true
4	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
6	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_op2	true
7	me	_	I	PRP	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	10	MOD_s	true
10	news	_	news	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	5	MOD_mod	true
13	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	18	MOD_s	true
14	hadn’t	_	hadn’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
15	overslept;	_	overslept;	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	contrast-01	(mod())	5	MOD_mod	true
16	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
17	I’d	i’d	i’d	JJ	O	_	thing	_	0	IGNORE	true
18	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	15	MOD_o	true
19	was	_	be	VBD	O	_	contrast-01	_	0	IGNORE	true
20	miss	_	miss	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_s	true
21	breakfast:	_	breakfast:	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
22	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
23	hadn’t	_	hadn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	24	MOD_mod	true
24	wanted	_	want	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	APP_s	true
25	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	5	MOD_o	true
26	wake	_	wake	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
27	an	_	an	DT	O	_	1	_	0	IGNORE	true
28	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
30	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
31	needed	_	need	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
32	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
33	rest.	_	rest.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true

nodealignment=[23@@explicitanon0@@-, 12@@p@@i, 24@@c@@want-01, 28@@p@@old, 2@@n@@soon, 21@@s@@cause-01, 10@@d@@news, 33@@d@@rest., 5@@a@@and, 3@@s@@come-01, 9@@s@@good-02, 20@@s@@miss-02, 6@@s@@give-01, 25@@s@@cause-01, 16@@p@@all, 29@@d@@man, 13@@s@@actual-02, 26@@s@@wake-01, 31@@s@@need-01, 22@@d@@they, 14@@explicitanon0@@-, 15@@explicitanon0@@contrast-01, 4@@a@@back, 18@@s@@do-02, 1@@d@@He]
sentence=1	Here	here	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	will	_	will	MD	O	_	thing	_	0	IGNORE	true
4	explore	_	explore	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
6	much	_	much	JJ	O	_	thing	_	0	IGNORE	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	an	_	an	DT	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	4	APP_o	true
9	influence	_	influence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_mod	true
10	motivation	_	motivation	NN	O	(d<root> / --LEX--)	motivate-01	()	9	APP_s	true
11	has	_	have	VBZ	O	_	$LEMMA$-to-do-with-04	_	0	IGNORE	true
12	on	_	on	IN	O	_	thing	_	0	IGNORE	true
13	learning,	_	learning,	NNP	O	_	thing	_	0	IGNORE	true
14	as	_	as	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	4	MOD_o	true
15	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
16	as	_	as	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
18	to	_	to	TO	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	4	MOD_mod	true
19	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
20	motivation	_	motivation	NN	O	(d<root> / --LEX--)	motivate-01	()	19	APP_o	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	purposefully	_	purposefully	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	purposeful	(mod())	26	MOD_mod	true
23	take	_	take	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
24	an	_	an	DT	O	_	1	_	0	IGNORE	true
25	active	_	active	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	activity-06	(s())	26	MOD_s	true
26	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	learning	_	learning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	26	MOD_mod	true
30	activity.	_	activity.	ADD	O	_	thing	_	0	IGNORE	true

nodealignment=[22@@t@@purposeful, 8@@t@@thing, 4@@s@@explore-01, 19@@s@@use-01, 14@@s@@and, 10@@d@@motivate-01, 28@@p@@any, 18@@t@@thing, 29@@p@@learning-01, 20@@d@@motivate-01, 2@@d@@you, 25@@s@@activity-06, 26@@d@@role, 9@@s@@influence-01, 1@@b@@here]
sentence=1	A-	a-	a-	XX	O	_	$LEMMA$	_	0	IGNORE	true
2	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
4	supposed	_	suppose	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
5	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
6	trust	_	trust	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
8	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	6	MOD_mod	true
9	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	tell	_	tell	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_s	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	truth.	_	truth.	NN	O	(d<root> / --LEX--)	_NAME_	()	11	APP_s	true

nodealignment=[13@@d@@_NAME_, 2@@d@@and, 11@@s@@tell-01, 4@@o@@suppose-02, 7@@d@@you, 6@@s@@trust-01, 8@@r@@rate-entity-91]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	housed	_	house	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	ants	_	ant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
7	nests	_	nest	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	9	APP_s	true
9	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
10	using	_	use	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
11	Y-tong	y-tong	Y-tong	NNP	O	(d<root> / --LEX--)	_NAME_	()	10	APP_s	true
12	[aerated	_	[aerated	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	independent	(s())	11	MOD_s	true
13	concrete].	_	concrete].	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@b@@nest, 5@@d@@ant, 3@@s@@house-01, 11@@d@@_NAME_, 10@@s@@use-01, 8@@d@@i, 12@@s@@independent, 2@@n@@then, 9@@s@@make-01, 1@@d@@We]
sentence=1	Examining	examining	examine	VBG	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	4	MOD_mod	true
2	this,	_	this,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
5	tell	_	tell	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_s	true
6	that	_	that	IN	O	_	interrogative	_	0	IGNORE	true
7	it	_	it	PRP	O	_	$LEMMA$	_	4	IGNORE	true
8	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
9	been	_	be	VBN	O	_	person	_	0	IGNORE	true
10	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
11	from	_	from	IN	O	_	thing	_	0	IGNORE	true
12	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	14	MOD_mod	true
13	ancient	_	ancient	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	monuments	_	monument	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	I’d	i’d	I’d	,	O	_	thing	_	0	IGNORE	true
16	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	5	APP_o	true
18	put	_	put	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op2	true
19	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
21	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	special	_	special	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	MOD_s	true
23	reason.	_	reason.	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	4	MOD_o	true

nodealignment=[23@@s@@reason., 4@@s@@possible-01, 18@@s@@put-01, 13@@p@@ancient, 17@@a@@and, 1@@t@@examine-01, 22@@s@@special-02, 19@@b@@here, 10@@s@@take-01, 3@@d@@i, 12@@p@@that, 5@@c@@tell-01, 16@@s@@see-01, 14@@d@@monument, 21@@p@@some]
sentence=1	However,	_name_	However,	LS	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	company	_	0	IGNORE	true
3	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	problem	_	problem	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	CFLs	cfls	cfl	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	mercury	_	mercury	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
10	they	_	they	PRP	O	_	person	_	0	IGNORE	true
11	contain.	_	contain.	VBP	O	_	-	_	0	IGNORE	true

nodealignment=[3@@p@@main, 9@@d@@mercury, 4@@r@@problem, 6@@p@@cfl]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	must	_	must	MD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
3	congratulate	_	congratulate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_op1	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	students	_	student	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	study-01	()	3	APP_o	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
8	ask	_	ask	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	7	APP_op2	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	make	_	make	VB	O	_	$LEMMA$-01	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	14	MOD_s	true
14	use	_	use	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	copyright	_	copyright	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	18	MOD_mod	true
18	law	_	law	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
20	they	_	they	PRP	O	_	person	_	0	IGNORE	true
21	acquired	_	acquire	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
22	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
23	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	challenging	_	challenge	VBG	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	7	MOD_mod	true
25	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	universities	_	university	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	represented	_	represent	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
28	here	_	here	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
29	to	_	to	TO	O	_	thing	_	0	IGNORE	true
30	consider	_	consider	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	24	MOD_s	true
31	emulating	_	emulate	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	APP_o	true
32	the	_	the	DT	O	_	thing	_	0	IGNORE	true
33	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high-02	(mod())	34	MOD_mod	true
34	successfully	_	successfully	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	succeed-01	(s())	31	MOD_s	true
35	CopyrightX	copyrightx	copyrightx	JJ	O	(u<root> / url-entity  :value (explicitanon0 / --LEX--))	_NAME_	()	31	APP_o	true
36	initiative.	_	initiative.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@s@@congratulate-01, 2@@o@@obligate-01, 21@@s@@acquire-01, 19@@d@@knowledge, 14@@s@@use-01, 13@@b2@@good-02, 13@@m@@most, 33@@s@@high-02, 17@@p@@copyright-01, 5@@n@@former, 6@@e2@@study-01, 18@@p@@law, 24@@o@@challenge-01, 26@@d@@university, 6@@p2@@person, 25@@p@@all, 27@@s@@represent-01, 12@@s@@very, 35@@u@@url-entity, 1@@d@@i, 23@@p@@also, 8@@s@@ask-02, 30@@c@@consider-02, 34@@s@@succeed-01, 7@@a@@and, 31@@s@@emulate-01, 28@@b@@here, 35@@explicitanon0@@_NAME_]
sentence=1	Rathke	_name_	Rathke	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	asked	_	ask	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-02	(s(), o(s_UNIFY_o2()))	0	ROOT	true
4	the	_	the	DT	O	_	govern-01	_	0	IGNORE	true
5	governments	_	government	NNS	O	(g<root> / government-organization  :ARG0-of (g2 / --LEX--  :ARG1 (c<s>)))	govern-01	(s())	3	APP_o2	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	South_East_Asia	_name_	Asia	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	turn	_	turn	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-away-04	(s(), o())	3	APP_o	true
11	away	_	away	RB	O	_	$LEMMA$	_	0	IGNORE	true
12	boats	_	boat	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_poss	true
15	seeking	_	seek	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
16	asylum.	_	asylum.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@s@@turn-away-04, 5@@g@@government-organization, 1@@n@@_NAME_, 2@@p@@also, 5@@g2@@govern-01, 7@@n@@_NAME_, 12@@m@@boat, 8@@explicitanon0@@-, 15@@s@@seek-01, 1@@p@@person, 14@@d@@person, 7@@o2@@organization, 3@@w@@ask-02]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	rate-entity-91	(mod())	9	MOD_mod	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	give	_	give	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	1	APP_op2	true
6	Iraq	_name_	Iraq	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_o2	true
7	equipment,	_	equipment,	NNS	O	_	and	_	0	IGNORE	true
8	the	_	the	DT	O	_	he	_	0	IGNORE	true
9	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	13	MOD_mod	true
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	bullet	_	bullet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	goes	_	go	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-off-16	(s())	5	APP_o	true
14	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	air,	_	air,	NN	O	_	and	_	0	IGNORE	true
18	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
19	leave	_	leave	VBP	O	(d<root> / --LEX--)	$LEMMA$-15	()	1	APP_op3	true
20	it.	_	it.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@d@@we, 1@@a@@and, 9@@explicitanon0@@1, 2@@p@@rate-entity-91, 5@@b@@give-01, 12@@d@@bullet, 6@@c@@country, 13@@s@@go-off-16, 18@@d@@they, 19@@d@@leave-15, 9@@o@@ordinal-entity, 6@@n@@_NAME_]
sentence=1	One	one	one	CD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	day	_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	Tyler	_name_	Tyler	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	looked	_	look	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
5	through	_	through	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	an	_	an	DT	O	_	1	_	0	IGNORE	true
7	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	family	_	family	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	photo	_	photo	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
10	album,	_	album,	NNS	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	it	_	it	PRP	O	_	i	_	0	IGNORE	true
14	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	picture	_	picture	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	kitchen	_	kitchen	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	16	APP_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	house	_	house	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	19	APP_mod	true
23	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
24	used	_	use	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	26	MOD_o	true
25	to	_	to	TO	O	_	person	_	0	IGNORE	true
26	live	_	live	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_mod	true
27	in.	_	in.	IN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[23@@d@@they, 9@@d@@photo, 22@@b@@house, 26@@s@@live-01, 1@@p@@one, 8@@p@@family, 4@@s@@look-01, 2@@n@@day, 3@@p@@person, 16@@s@@picture-01, 3@@n@@_NAME_, 24@@s@@use-02, 19@@a@@kitchen, 7@@p@@old, 11@@a@@and]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	don’t	_	don’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	rules	_	rule	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_op1	true
6	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
7	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	lines	_	line	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
9	we	_	we	PRP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	3	MOD_mod	true
10	won’t	_	won’t	VBD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	9	MOD_mod	true
11	cross.	_	cross.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[9@@explicitanon0@@-, 5@@d@@rule-01, 4@@p@@any, 2@@explicitanon0@@-, 6@@a@@or, 7@@s@@know-01, 1@@d@@We, 8@@d@@line, 3@@s@@have-03, 10@@explicitanon0@@-]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	3	MOD_mod	true
3	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
4	papers,	_	papers,	NNS	O	_	-	_	0	IGNORE	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
6	outlined	_	outline	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	rough	_	rough	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	9	MOD_s	true
9	edges	_	edge	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	6	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	work	_	work	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_poss	true
13	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	had	_	have	VBD	O	_	person	_	0	IGNORE	true
15	been	_	be	VBN	O	_	person	_	0	IGNORE	true
16	doing	_	do	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	analysis	_	analysis	NN	O	(d<root> / --LEX--)	analyze-01	()	12	APP_s	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
20	annotated	_	annotate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op2	true
21	a	_	a	DT	O	_	thing	_	0	IGNORE	true
22	copy	_	copy	NN	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$-01	(s())	20	APP_o	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	manuscript	_	manuscript	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
26	submitted	_	submit	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	25	MOD_s	true
27	to	_	to	IN	O	_	thing	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Academy	_name_	Academy	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	26	APP_o	true
30	and	_	and	CC	O	_	$LEMMA$	_	26	IGNORE	true
31	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	papers.	_	papers.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true

nodealignment=[32@@p@@_NAME_, 20@@s@@annotate-01, 9@@h@@edge, 31@@p@@other, 12@@s@@work-01, 3@@p@@final, 29@@n@@_NAME_, 19@@a@@and, 2@@p@@this, 11@@explicitanon0@@some, 25@@d@@manuscript, 22@@c@@copy-01, 22@@t@@thing, 29@@o2@@organization, 26@@s@@submit-01, 18@@d@@analyze-01, 8@@s@@rough, 5@@d@@he, 6@@s@@outline-01]
sentence=1	"I	"i	"I	``	O	_	$REPL$	_	0	IGNORE	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	everybody	_	everybody	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	knows	_	know	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
5	Andy_Warhol's	_name_	Warhol's	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
6	name,	_	name,	NNS	O	_	and	_	0	IGNORE	true
7	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
8	non-art	_	non-art	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true
9	people,	_	people,	NNS	O	_	and	_	0	IGNORE	true
10	that's	_	that's	PRP	O	_	name	_	0	IGNORE	true
11	a	_	a	DT	O	(d<root> / --LEX--)	1	()	2	APP_s	true
12	name	_	name	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
13	they	_	they	PRP	O	_	person	_	0	IGNORE	true
14	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
15	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
16	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	15	MOD_o	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	such	_	such	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
20	a	_	a	DT	O	_	such	_	0	IGNORE	true
21	personality",	_	personality",	JJ	O	_	expressive	_	0	IGNORE	true
22	Water	water	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
23	said.	_	said.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@s@@cause-01, 22@@d@@water, 15@@s@@know-01, 4@@s@@know-01, 2@@s@@think-01, 5@@p@@_NAME_, 12@@d@@name-01, 3@@d@@everybody, 7@@p@@even, 8@@p@@_NAME_, 14@@s@@possible-01, 11@@d@@1, 19@@p@@such]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	parents	_	parent	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	5	APP_s	true
3	are	_	be	VBP	O	_	person	_	0	IGNORE	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	accused	_	accuse	VBN	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
6	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
7	putting	_	put	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	5	APP_o	true
8	their	_	they	PRP$	O	_	cause-01	_	0	IGNORE	true
9	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	life	_	life	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	ahead	_	ahead	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	of	_	of	IN	O	_	person	_	0	IGNORE	true
13	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
14	child,	_	child,	NNS	O	_	and	_	0	IGNORE	true
15	taking	_	take	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_op1	true
16	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	on	_	on	IN	O	_	and	_	0	IGNORE	true
18	a	_	a	DT	O	_	thing	_	0	IGNORE	true
19	trip	_	trip	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	APP_s	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	India	_name_	India	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_o2	true
23	leaving	_	leave	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-15	(s())	22	APP_op2	true
24	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	to	_	to	IN	O	_	person	_	0	IGNORE	true
26	servants	_	servant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
27	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
28	embarking	_	embark	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
29	on	_	on	IN	O	_	-	_	0	IGNORE	true
30	a	_	a	DT	O	_	1	_	0	IGNORE	true
31	busy	_	busy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	32	MOD_s	true
32	social	_	social	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
33	schedule,	_	schedule,	NNPS	O	_	and	_	0	IGNORE	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	MOD_op1	true
35	giving	_	give	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_op2	true
36	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
37	homeopathic	_	homeopathic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	drops	_	drop	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
39	instead	_	instead	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-of-91	(s(), o())	35	MOD_s	true
40	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
41	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_o	true
42	the	_	the	DT	O	_	thing	_	0	IGNORE	true
43	prescription	_	prescription	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
44	creams	_	cream	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
45	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
46	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
47	been	_	be	VBN	O	_	person	_	0	IGNORE	true
48	given.	_	given.	JJ	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[10@@d@@life, 38@@d@@drop, 15@@s@@take-01, 39@@s@@instead-of-91, 43@@p@@prescription, 44@@d@@cream, 31@@s@@busy-02, 19@@s@@trip-03, 28@@s@@embark-01, 37@@p@@homeopathic, 32@@d@@social, 35@@s@@give-01, 23@@s@@leave-15, 4@@p@@also, 9@@p@@social, 34@@a@@and, 11@@a@@ahead, 21@@n@@_NAME_, 2@@h@@have-rel-role-91, 2@@p@@person, 5@@o@@accuse-01, 22@@a@@and, 41@@s@@use-01, 21@@c@@country, 7@@b@@put-01, 2@@f@@parent, 26@@d@@servant]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	pilot	_	pilot	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	3	MOD_mod	true
3	project	_	project	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
4	primarily	_	primarily	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	primary	(mod())	5	MOD_mod	true
5	investigated	_	investigate	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
6	how	_	how	WRB	O	_	cause-01	_	0	IGNORE	true
7	participants	_	participant	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	participate-01	()	9	APP_s	true
8	visually	_	visually	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	physical	(mod())	9	MOD_mod	true
9	explore	_	explore	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
10	artworks	_	artwork	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	provides	_	provide	VBZ	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	11	APP_op2	true
13	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	insights	_	insight	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
15	into	_	into	IN	O	_	thing	_	0	IGNORE	true
16	the	_	the	DT	O	_	thing	_	0	IGNORE	true
17	potential	_	potential	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	eye-tracking	_	eye-tracking	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	32	APP_op1	true
19	has	_	have	VBZ	O	_	$LEMMA$-to-do-with-04	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	transform	_	transform	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	14	MOD_mod	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	ways	_	way	NNS	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	APP_s	true
24	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
25	understand	_	understand	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	APP_mod	true
26	visual	_	visual	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	processing	_	processing	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	process-01	(s())	25	APP_o	true
28	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
29	arts	_	art	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op1	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_s	true
31	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	30	APP_op2	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	11	MOD_s	true
33	at	_	at	IN	O	_	thing	_	0	IGNORE	true
34	the	_	the	DT	O	_	person	_	0	IGNORE	true
35	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	36	MOD_s	true
36	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
37	offer	_	offer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_op2	true
38	a	_	a	DT	O	_	1	_	0	IGNORE	true
39	direct	_	direct	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	40	MOD_s	true
40	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	37	APP_o	true
41	of	_	of	IN	O	_	thing	_	0	IGNORE	true
42	studying	_	study	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	40	APP_mod	true
43	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
44	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	factors	_	factor	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	42	APP_s	true
46	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
47	a	_	a	DT	O	_	thing	_	0	IGNORE	true
48	museum	_	museum	NN	O	(d<root> / --LEX--)	$LEMMA$	()	45	APP_poss	true
49	visit,	_	visit,	NNS	O	_	and	_	0	IGNORE	true
50	namely	_	namely	RB	O	_	cause-01	_	0	IGNORE	true
51	to	_	to	TO	O	_	thing	_	0	IGNORE	true
52	assess	_	assess	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	42	MOD_mod	true
53	the	_	the	DT	O	_	thing	_	0	IGNORE	true
54	effects	_	effect	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	52	APP_s	true
55	of	_	of	IN	O	_	thing	_	0	IGNORE	true
56	label	_	label	NN	O	(d<root> / --LEX--)	$LEMMA$	()	57	APP_s	true
57	characteristics	_	characteristic	NNS	O	(t<root> / thing  :ARG2-of (c / --LEX--  :ARG1 (w<s>)))	$LEMMA$	(s())	54	APP_s	true
58	on	_	on	IN	O	_	thing	_	0	IGNORE	true
59	visitor	_	visitor	NN	O	(p<root> / person  :mod-of (y<mod>)  :ARG0-of (f / --LEX--))	visit-01	(mod())	11	MOD_mod	true
60	visual	_	visual	JJ	O	_	$LEMMA$	_	0	IGNORE	true
61	behaviour.	_	behaviour.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[57@@t@@thing, 52@@i@@assess-01, 40@@t@@way, 12@@c@@provide-01, 7@@p2@@person, 43@@explicitanon0@@several, 8@@t@@physical, 5@@s@@investigate-01, 39@@s@@direct-02, 31@@d@@culture, 42@@s@@study-01, 21@@i@@transform-01, 14@@s@@insight-01, 59@@f@@visit-01, 3@@p@@project, 45@@m@@factor, 56@@d@@label, 7@@e2@@participate-01, 48@@d@@museum, 57@@c@@characteristic, 30@@a@@and, 54@@s@@effect, 59@@p@@person, 23@@t@@way, 10@@d@@artwork, 26@@t@@visual, 4@@p@@primary, 27@@s@@process-01, 29@@d@@art, 35@@s@@same-01, 11@@a@@and, 37@@s@@offer-01, 24@@d@@we, 18@@s@@_NAME_, 13@@s@@new-01, 32@@a@@and, 17@@p@@potential, 25@@s@@understand-01, 44@@p@@important, 36@@n@@time, 9@@s@@explore-01, 1@@p@@this, 2@@p@@pilot-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	1562,	_	1562,	JJ	O	_	_NAME_	_	0	IGNORE	true
3	Bishop_Diego_de_Landa,	_name_	Landa,	NNP	O	(d<root> / --LEX--)	_NAME_	()	17	APP_s	true
4	who	_	who	WP	O	_	cause-01	_	0	IGNORE	true
5	feared	_	fear	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	converted	_	convert	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
8	natives	_	native	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
9	had	_	have	VBD	O	_	person	_	0	IGNORE	true
10	reverted	_	revert	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
11	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
12	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
13	traditional	_	traditional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	religious	_	religious	JJ	O	(d<root> / --LEX--)	religion	()	10	APP_o	true
15	practices,	_	practices,	NNS	O	_	and	_	0	IGNORE	true
16	collected	_	collect	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
18	burned	_	burn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_op2	true
19	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	codex	_	codex	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
21	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	MOD_s	true
23	find.	_	find.	VB	O	_	possible-01	_	0	IGNORE	true

nodealignment=[22@@s@@possible-01, 13@@p@@traditional, 10@@s@@revert-01, 14@@d@@religion, 8@@d@@native, 7@@s@@convert-01, 17@@a@@and, 5@@s@@fear-01, 16@@s@@collect-01, 19@@p@@every, 3@@d@@_NAME_, 18@@s@@burn-01, 20@@d@@codex]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
3	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	get	_	get	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	obligate-01	(mod(), o(s()))	21	MOD_mod	true
6	to	_	to	TO	O	_	person	_	0	IGNORE	true
7	be	_	be	VB	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	expressive	_	0	IGNORE	true
9	writer	_	writer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	write-01	(s())	5	APP_o	true
10	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
11	The	the	the	DT	O	_	person	_	0	IGNORE	true
12	Onion,	_name_	onion,	CD	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
13	though,	_	though,	NFP	O	_	and	_	0	IGNORE	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	odds	_	odd	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	likely-01	(s())	0	ROOT	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	are	_	be	VBP	O	_	person	_	0	IGNORE	true
19	going	_	go	VBG	O	_	$LEMMA$	_	0	IGNORE	true
20	to	_	to	TO	O	_	thing	_	0	IGNORE	true
21	succeed	_	succeed	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	MOD_s	true
22	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
23	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	make	_	make	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	APP_s	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	challenging.	_	challenging.	XX	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true

nodealignment=[9@@s@@write-01, 26@@s@@pretty, 12@@c@@country, 23@@d@@we, 27@@d@@challenging., 15@@s@@likely-01, 24@@s@@make-02, 4@@d@@you, 21@@s@@succeed-01, 5@@d@@obligate-01, 22@@s@@cause-01, 12@@n@@_NAME_]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	tournament	_	tournament	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
5	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
7	wish	_	wish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
8	we'd	_	we'd	NNP	O	_	person	_	0	IGNORE	true
9	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	10	MOD_s	true
10	gone	_	go	VBN	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-back-19	(s(), o())	7	MOD_s	true
11	back	_	back	RB	O	_	$LEMMA$	_	0	IGNORE	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	often.	_	often.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@s@@wish-01, 6@@d@@i, 10@@g@@go-back-19, 4@@d@@tournament, 13@@s@@more, 9@@s@@actual-02]
sentence=1	Unique	unique	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	tree	_	tree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	carvings	_	carving	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	3	MOD_o	true
5	by	_	by	IN	O	_	$LEMMA$line-91	_	0	IGNORE	true
6	the	_	the	DT	O	_	name	_	0	IGNORE	true
7	peaceful	_	peaceful	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	Moriori	_name_	Moriori	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
10	hundreds_of_years	_name_	year	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NAME_	(mod())	4	MOD_mod	true
11	ago.	_	ago.	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@explicitanon0@@_NAME_, 2@@d@@tree, 3@@s@@carving-01, 1@@p@@unique, 8@@e@@ethnic-group, 7@@p@@peaceful, 4@@s@@do-02, 8@@n@@_NAME_, 9@@d@@person]
sentence=1	That's	that's	that's	PRP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
2	all	_	all	DT	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	1	APP_o	true
4	get?	_	get?	XX	O	_	thing	_	0	IGNORE	true

nodealignment=[2@@d@@all, 1@@s@@that's-01, 3@@d@@i]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
3	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	opponent	_	opponent	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	oppose-01	(s())	9	MOD_s	true
5	in	_	in	IN	O	_	i	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	duel,	_	duel,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
8	Alexandre_Dumas	_name_	Dumas	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_s	true
9	names	_	name	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
10	Pescheux	_name_	Pescheux	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	9	APP_o	true
11	d'Herbinville,	d'herbinville,	d'Herbinville,	NFP	O	_	$LEMMA$	_	0	IGNORE	true
12	[13]	_	[13]	XX	O	_	include-91	_	0	IGNORE	true
13	who	_	who	WP	O	_	name	_	0	IGNORE	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	25	MOD_s	true
16	one	_	one	CD	O	(d<root> / --LEX--)	1	()	9	APP_o2	true
17	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	16	MOD_s	true
18	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
19	nineteen	_	nineteen	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	12	(mod())	21	MOD_mod	true
20	artillery	_	artillery	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	officers	_	officer	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	17	APP_o	true
22	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
23	acquittal	_	acquittal	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
24	was	_	be	VBD	O	_	person	_	0	IGNORE	true
25	celebrated	_	celebrate	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
26	at	_	at	IN	O	_	i	_	0	IGNORE	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	banquet	_	banquet	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
30	occasioned	_	occasion	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	28	MOD_s	true
31	Galois'	galois'	galois'	NN	O	_	_NAME_	_	0	IGNORE	true
32	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	30	MOD_mod	true
33	arrest.	_	arrest.	NN	O	_	1	_	0	IGNORE	true
34	[20]	_name_	[20]	XX	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@p@@person, 4@@s@@oppose-01, 21@@p@@person, 8@@n@@_NAME_, 19@@explicitanon0@@12, 30@@s@@occasion-01, 9@@b@@name-01, 16@@d@@1, 15@@s@@actual-02, 28@@b@@banquet, 23@@s@@acquittal-01, 21@@h@@have-org-role-91, 25@@s@@celebrate-01, 21@@e@@officer, 20@@p@@artillery, 17@@s@@include-91, 32@@o@@ordinal-entity, 10@@p@@person, 10@@n@@_NAME_, 32@@explicitanon0@@1]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	know,	_	know,	NFP	O	_	resemble-01	_	0	IGNORE	true
5	that's	_	that's	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	thing	(s(), o())	8	MOD_o	true
6	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
8	talk	_	talk	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	0	ROOT	true
9	about	_	about	IN	O	_	thing	_	0	IGNORE	true
10	on	_	on	IN	O	_	thing	_	0	IGNORE	true
11	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
12	channel	_	channel	NN	O	(l<root> / --LEX--  :medium-of (a<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
13	most	_	most	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
14	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	time.	_	time.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[2@@d@@you, 7@@d@@i, 12@@l@@channel, 3@@p@@guy, 13@@p@@most, 5@@s@@thing, 6@@p@@all, 8@@s@@talk-01]
sentence=1	Gather	gather	gather	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	needed	_	need	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
4	materials	_	material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
6	players	_	player	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	play-01	()	5	APP_op2	true
7	(see	_	(see	ADD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	1	MOD_s	true
8	Things	things	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
9	You'll	you'll	You'll	MD	O	_	i	_	0	IGNORE	true
10	Need	need	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	section	_	section	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
12	below).	_	below).	ADD	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[3@@s@@need-01, 7@@s@@(see, 4@@d@@material, 11@@d@@section, 10@@s@@need-01, 1@@s@@gather-01, 8@@d@@thing, 2@@p@@all, 6@@e2@@play-01, 6@@p2@@person, 5@@a@@and]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Senate	_name_	Senate	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
3	will	_	will	MD	O	_	name	_	0	IGNORE	true
4	address	_	address	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	4	MOD_s	true
6	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
7	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_poss	true
8	country	_	country	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	9	APP_s	true
9	faces	_	face	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	head	_	head	VBP	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
14	delay,	_	delay,	NNP	O	_	-	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	timid	_	timid	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	solutions	_	solution	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
19	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
20	with	_	with	IN	O	_	except-01	_	0	IGNORE	true
21	boldness	_	boldness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
23	with	_	with	IN	O	_	thing	_	0	IGNORE	true
24	courage.	_	courage.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@s@@person, 15@@explicitanon0@@-, 22@@a@@and, 19@@s@@contrast-01, 4@@s@@address-01, 9@@s@@face-01, 21@@d@@boldness, 10@@t@@head, 7@@d@@our, 18@@d@@solution, 6@@d@@challenge-01, 13@@explicitanon0@@-, 8@@m@@country, 2@@g@@government-organization, 17@@p@@timid, 2@@n@@_NAME_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	like	_	like	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	APP_o	true
5	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	expressed	_	express	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	4	APP_mod	true
7	that.	_	that.	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	thing	(mod())	2	MOD_mod	true

nodealignment=[5@@d@@he, 6@@s@@express-01, 2@@s@@like-01, 4@@t@@way, 1@@d@@i, 7@@t@@thing]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
3	liquid	_	liquid	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	1	APP_op2	true
5	change	_	change	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	4	APP_s	true
6	its	_	its	PRP$	O	_	and	_	0	IGNORE	true
7	shape,	_	shape,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	to	_	to	TO	O	_	and	_	0	IGNORE	true
9	f-	_	f-	VB	O	_	mean-01	_	0	IGNORE	true
10	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	11	MOD_s	true
11	fill	_	fill	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
12	the	_	the	DT	O	_	he	_	0	IGNORE	true
13	bottom	_	bottom	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	11	APP_o	true
14	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	container	_	container	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_poss	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
18	put	_	put	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
19	it	_	it	PRP	O	_	i	_	0	IGNORE	true
20	in.	_	in.	RB	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@container, 10@@s@@complete-02, 4@@s@@possible-01, 15@@p@@whatever, 18@@s@@put-01, 1@@a@@and, 3@@d@@liquid, 5@@c@@change-01, 13@@h@@bottom, 17@@d@@you, 11@@s@@fill-01]
sentence=1	But,	but,	But,	NNP	O	_	expressive	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	that's	_	that's	IN	O	_	person	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	7	MOD_mod	true
7	size	_	size	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	3	APP_o	true
8	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
9	have.	_	have.	RB	O	_	interrogative	_	0	IGNORE	true

nodealignment=[2@@d@@i, 3@@s@@think-01, 7@@r@@size, 6@@t@@large, 8@@d@@they, 6@@m@@most]
sentence=1	Nick_Bos,	_name_	bos,	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	the_University_of_Helsinki,	_name_	helsinki,	CD	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	studies	_	study	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	"the	_	"the	DT	O	_	thing	_	0	IGNORE	true
6	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	7	MOD_s	true
7	adaptations	_	adaptation	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-03	(mod())	9	MOD_mod	true
9	insects	_	insect	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	have	_	have	VBP	O	_	person	_	0	IGNORE	true
11	evolved	_	evolve	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
12	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
13	order	_	order	NN	O	_	and	_	0	IGNORE	true
14	to	_	to	TO	O	_	thing	_	0	IGNORE	true
15	fight	_	fight	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	extreme	_	extreme	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	parasite	_	parasite	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	pressure	_	pressure	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	15	APP_o	true
20	they	_	they	PRP	O	_	person	_	0	IGNORE	true
21	experience".	_name_	experience".	XX	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[15@@s@@fight-01, 18@@d@@parasite, 11@@s@@evolve-01, 6@@s@@amaze-01, 3@@n@@_NAME_, 4@@s@@study-01, 9@@d@@insect, 7@@d@@adaptation, 17@@p@@extreme, 1@@p@@person, 19@@s@@pressure-01, 8@@p@@social-03, 1@@n@@_NAME_]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	1	_	0	IGNORE	true
3	previous	_	previous	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	step	_	step	NN	O	(g<root> / --LEX--  :ARG2 (a<o>)  :ARG4 (h<s>))	$LEMMA$-01	(s(), o())	22	MOD_s	true
5	to	_	to	IN	O	_	thing	_	0	IGNORE	true
6	designing	_	design	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_o	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	mutation	_	mutation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
9	operators,	_	operators,	NNS	O	_	and	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
11	analyzed	_	analyze	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op1	true
12	the	_	the	DT	O	_	and	_	0	IGNORE	true
13	main	_	main	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	technologies	_	technology	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
16	specifically	_	specifically	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	specific-02	(s())	15	MOD_s	true
17	in	_	in	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	development	_	development	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	develop-02	(s())	15	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	GIS,	_name_	GIS,	NNP	O	(d<root> / --LEX--)	_NAME_	()	19	APP_s	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
23	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	identified	_	identify	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	22	APP_op2	true
25	typical	_	typical	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	errors	_	error	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	programmer	_	programmer	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	write-01	()	30	APP_s	true
29	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	30	MOD_s	true
30	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	26	MOD_o	true
31	during	_	during	IN	O	_	thing	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	development.	_	development.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@d@@we, 6@@s@@design-01, 28@@p2@@person, 8@@d@@mutation, 28@@e2@@write-01, 26@@d@@error, 4@@g@@step-01, 14@@d@@technology, 29@@s@@possible-01, 3@@n@@previous, 16@@s@@specific-02, 13@@p@@main, 21@@d@@_NAME_, 19@@s@@develop-02, 24@@s@@identify-01, 11@@s@@analyze-01, 15@@s@@use-01, 22@@a@@and, 30@@s@@introduce-02, 25@@s@@typical-02]
sentence=1	Voters	voters	voter	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	vote-01	()	2	APP_s	true
2	see	_	see	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	two-party	_	two-party	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	5	MOD_mod	true
5	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	for	_	for	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	sham	_	sham	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
9	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
11	become.	_	become.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@d@@sham, 2@@b@@see-01, 1@@e2@@vote-01, 5@@d@@system, 1@@p2@@person, 4@@p@@_NAME_]
sentence=1	As	as	as	IN	O	_	cause-01	_	0	IGNORE	true
2	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
3	country,	_	country,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	privileged	_	privileged	JJ	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	0	ROOT	true
8	to	_	to	TO	O	_	-1	_	0	IGNORE	true
9	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	7	APP_o	true
10	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	National	national	National	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	13	MOD_mod	true
12	ICT	ict	ICT	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	Policy	policy	Policy	NNP	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	9	APP_o	true
14	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
15	goal	_	goal	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	MOD_o	true
16	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
17	to	_	to	TO	O	_	thing	_	0	IGNORE	true
18	create	_	create	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	prosperous	_	prosperous	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	prosper-01	(s())	23	MOD_s	true
21	ICT	ict	ICT	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
22	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
23	driven	_	drive	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	APP_s	true
24	Kenyan	_name_	kenyan	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	23	APP_s	true
25	society.	_	society.	NN	O	_	name	_	0	IGNORE	true

nodealignment=[13@@s@@Policy-01, 9@@s@@have-03, 24@@c@@country, 20@@s@@prosper-01, 15@@s@@goal, 12@@d@@ICT, 4@@d@@we, 6@@p@@also, 21@@d@@ICT, 23@@s@@drive-01, 24@@n@@_NAME_, 18@@i@@create-01, 11@@p@@nation, 7@@o@@privileged-02]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	for	_	for	IN	O	_	and	_	0	IGNORE	true
3	about_two_weeks	_name_	week	NNS	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	5	MOD_mod	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	count	_	count	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	every_day	_name_	day	NN	O	(t2<root> / temporal-quantity  :quant (explicitanon0 / --LEX--)  :duration-of (t3<mod>))	_NAME_	(mod())	5	MOD_mod	true
7	how	_	how	WRB	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	amr-unknown	(mod())	9	MOD_mod	true
8	many	_	many	JJ	O	_	cause-01	_	0	IGNORE	true
9	ants	_	ant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	died.	_	died.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@d@@we, 1@@n@@then, 3@@explicitanon0@@_NAME_, 3@@t2@@temporal-quantity, 7@@explicitanon0@@amr-unknown, 5@@s@@count-01, 6@@t2@@temporal-quantity, 9@@d@@ant, 6@@explicitanon0@@_NAME_]
sentence=1	The	the	the	DT	O	_	-	_	0	IGNORE	true
2	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	thing	_	thing	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	is	_	be	VBZ	O	_	contrast-01	_	0	IGNORE	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	substances	_	substance	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	interacting	_	interact	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
10	with	_	with	IN	O	_	-	_	0	IGNORE	true
11	the	_	the	DT	O	_	and	_	0	IGNORE	true
12	reactions	_	reaction	NNS	O	(d<root> / --LEX--)	react-01	()	9	APP_o	true
13	you're	_	you're	PRP$	O	_	$LEMMA$-01	_	0	IGNORE	true
14	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	on	_	on	IN	O	_	thing	_	0	IGNORE	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	make	_	make	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	14	MOD_mod	true
18	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
19	substances	_	substance	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	glow.	_	glow.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[12@@d@@react-01, 14@@s@@depend-01, 9@@s@@interact-01, 8@@d@@substance, 2@@p@@last, 5@@s@@want-01, 4@@d@@you, 17@@i@@make-02, 7@@p@@other]
sentence=1	Flourishing	flourishing	flourish	VBG	O	(a2<root> / --LEX--  :ARG0 (c<s>)  :concession-of (a<mod>))	$LEMMA$-01	(mod(), s())	18	MOD_mod	true
2	from	_	from	IN	O	_	date-interval	_	18	IGNORE	true
3	roughly	_	roughly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
4	2000	_	2000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	5	MOD_mod	true
5	BCE	bce	BCE	NNP	O	(explicitanon1<root> / --LEX--  :era-of (d<mod>))	BC	(mod())	18	MOD_mod	true
6	to	_	to	IN	O	_	AD	_	0	IGNORE	true
7	900	_	900	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	18	MOD_mod	true
8	CE	ce	CE	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
10	what	_	what	WP	O	_	thing	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
12	now	_	now	RB	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_op2	true
13	Mexico,_Belize,_Honduras,	_name_	honduras,	CD	O	(b<root> / --LEX--  :location-of (h<mod>))	_NAME_	(mod())	18	MOD_mod	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	MOD_op1	true
15	Guatemala,	_name_	Guatemala,	NNP	O	(n<root> / --LEX--  :op1 (explicitanon1<op1>)  :name-of (p<mod>))	_NAME_	(op1(), mod())	18	MOD_mod	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	Maya	_name_	Maya	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
18	perfected	_	perfect	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	calendar	_	calendar	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_o	true
22	written	_	write	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	write-01	(s())	23	MOD_s	true
23	language	_	language	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
24	the	_	the	DT	O	_	name	_	0	IGNORE	true
25	Olmec	_name_	Olmec	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	15	APP_op1	true
26	had	_	have	VBD	O	_	person	_	0	IGNORE	true
27	begun.	_	begun.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@_NUMBER_, 17@@e@@ethnic-group, 20@@d@@calendar, 23@@d@@language, 14@@a@@and, 3@@p@@roughly, 17@@n@@_NAME_, 15@@n@@_NAME_, 1@@a2@@flourish-01, 25@@p@@person, 21@@a@@and, 12@@d@@now, 5@@explicitanon1@@BC, 7@@d@@date-entity, 22@@s@@write-01, 7@@explicitanon2@@_NUMBER_, 18@@s@@perfect-01, 13@@b@@_NAME_, 25@@n@@_NAME_]
sentence=1	Actually	actually	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	3	MOD_s	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
4	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	connections	_	connection	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	connect-01	(s(), o())	3	APP_o	true
6	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	mathematics	_	mathematic	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
9	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
11	almost	_	almost	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
15	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
16	told	_	tell	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
17	about	_	about	IN	O	_	thing	_	0	IGNORE	true
18	mathematics	_	mathematic	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
19	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
20	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	APP_s	true
22	in	_	in	IN	O	_	thing	_	0	IGNORE	true
23	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
24	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	21	MOD_mod	true
25	in	_	in	IN	O	_	contrast-01	_	0	IGNORE	true
26	writing	_	writing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	24	APP_op2	true
27	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	10	MOD_o	true
28	when	_	when	WRB	O	_	cause-01	_	0	IGNORE	true
29	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
30	write	_	write	VBP	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	32	MOD_mod	true
31	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	37	MOD_s	true
33	describe	_	describe	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	32	APP_o	true
34	the	_	the	DT	O	_	thing	_	0	IGNORE	true
35	real	_	real	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	33	MOD_s	true
36	world,	_	world,	NNS	O	(d<root> / --LEX--)	mean-01	()	33	APP_o	true
37	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	10	MOD_s	true
38	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	37	APP_o	true
40	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	create	_	create	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_s	true
42	worlds	_	world	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_s	true
43	of	_	of	IN	O	_	thing	_	0	IGNORE	true
44	fiction.	_	fiction.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[12@@p@@all, 32@@f@@possible-01, 41@@s@@create-01, 42@@d@@world, 7@@d@@mathematic, 9@@d@@literature, 18@@a@@mathematic, 4@@explicitanon0@@many, 23@@d@@literature, 14@@d@@thing, 24@@b@@and, 26@@d@@writing-01, 39@@s@@possible-01, 35@@s@@real-04, 33@@s@@describe-01, 40@@p@@also, 36@@d@@mean-01, 5@@s@@connect-01, 37@@s@@contrast-01, 29@@d@@you, 2@@d@@i, 27@@s@@cause-01, 11@@p@@almost, 16@@s@@tell-01, 3@@s@@find-01, 10@@s@@cause-01, 20@@p@@also, 30@@v@@write-01, 21@@s@@see-01, 1@@s@@actual-02]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
3	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	belief	_	belief	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	believe-01	(s(), o())	0	ROOT	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	8	MOD_mod	true
7	international	_	international	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	mechanisms	_	mechanism	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	play	_	play	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	APP_o	true
10	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
11	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
12	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
13	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	role	_	role	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
15	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
16	guardians	_	guardian	NNS	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	9	MOD_mod	true
17	of	_	of	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	share-01	(mod())	21	MOD_mod	true
20	human	_	human	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
21	values	_	value	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	have	_	have	VBP	O	_	person	_	0	IGNORE	true
24	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	adopted.	_	adopted.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@s@@believe-01, 3@@d@@our, 20@@p@@human, 7@@p@@international, 11@@s@@significant-02, 14@@d@@role, 24@@p@@together, 16@@s@@guardian-01, 6@@p@@this, 19@@p@@share-01, 9@@s@@play-02, 21@@d@@value, 13@@p@@important, 8@@d@@mechanism]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_dom	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	a	_	a	DT	O	_	1	_	0	IGNORE	true
4	piece	_	piece	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	12	APP_s	true
5	that	_	that	WDT	O	_	name	_	0	IGNORE	true
6	the	_	the	DT	O	_	name	_	0	IGNORE	true
7	Times	_name_	Times	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	9	APP_s	true
8	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	quoted	_	quote	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	9	MOD_mod	true
11	stanza,	_	stanza,	NNPS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	12	APP_o	true
12	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
13	it's	_	it's	PRP	O	_	contrast-01	_	0	IGNORE	true
14	about	_	about	IN	O	_	and	_	0	IGNORE	true
15	preparation	_	preparation	NN	O	(d<root> / --LEX--)	prepare-02	()	19	APP_op1	true
16	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
17	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	battle,	_	battle,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_s	true
20	being	_	be	VBG	O	_	cause-01	_	0	IGNORE	true
21	prepared	_	prepared	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-02	(s())	19	APP_op2	true
22	to	_	to	TO	O	_	he	_	0	IGNORE	true
23	either	_	either	CC	O	_	$LEMMA$	_	0	IGNORE	true
24	rise	_	rise	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	28	APP_op1	true
25	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	occasion,	_	occasion,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
28	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	APP_s	true
29	go	_	go	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	28	APP_op2	true
30	down:	_	down:	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[7@@n@@newspaper, 4@@r@@piece, 9@@s@@quote-01, 28@@a@@or, 24@@d@@rise-01, 21@@s@@prepared-02, 29@@d@@go-02, 19@@a@@and, 10@@explicitanon0@@1, 15@@d@@prepare-02, 11@@s@@and, 7@@n2@@_NAME_, 12@@s@@contrast-01, 1@@d@@this, 8@@p@@only]
sentence=1	To	to	to	IN	O	_	say-01	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	people	_	people	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	13	MOD_mod	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	India,	_name_	india,	CD	O	_	_NAME_	_	0	IGNORE	true
6	whose	_	whose	WP$	O	_	thing	_	0	IGNORE	true
7	representatives	_	representative	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	represent-01	(s())	3	MOD_s	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
9	are,	_	are,	VBP	O	_	and	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o2	true
11	make	_	make	VBP	O	_	$LEMMA$-01	_	0	IGNORE	true
12	an	_	an	DT	O	_	$LEMMA$nd	_	0	IGNORE	true
13	appeal	_	appeal	NN	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-03	(s(), o(s_UNIFY_o2()))	0	ROOT	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	join	_	join	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_o	true
16	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	with	_	with	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	faith	_	faith	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
20	confidence	_	confidence	NN	O	(d<root> / --LEX--)	confident-01	()	19	APP_op2	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	adventure.	_	adventure.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true

nodealignment=[18@@d@@faith, 22@@p@@this, 3@@p@@person, 23@@p@@great, 24@@p@@adventure., 19@@a@@and, 20@@d@@confident-01, 8@@d@@we, 10@@d@@we, 15@@s@@join-01, 7@@s@@represent-01, 13@@w@@appeal-03]
sentence=1	What	what	what	WP	O	(d<root> / --LEX--)	amr-unknown	()	4	APP_o	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	thoughts	_	thought	NNS	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	think-01	(o2(), s(), o())	0	ROOT	true
5	on	_	on	IN	O	_	c$LEMMA$trast-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	job	_	job	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
8	Bob_McDonnell	_name_	McDonnell	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
9	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
10	done	_	do	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	4	MOD_o	true
11	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
12	Governor	governor	Governor	NNP	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (e / --LEX--)))	$LEMMA$	()	10	APP_o2	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	Virginia?	virginia?	Virginia?	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@n@@_NAME_, 4@@b@@think-01, 12@@p@@person, 7@@d@@job, 10@@b@@do-02, 12@@e@@Governor, 1@@d@@amr-unknown, 3@@d@@your, 12@@h@@have-org-role-91]
sentence=1	There	there	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	Jerome	_name_	Jerome	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	learned	_	learn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
4	Latin	_name_	Latin	NNP	O	(l<root> / language  :name (n / --LEX--))	_NAME_	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	APP_o	true
6	at	_	at	IN	O	_	describe-01	_	0	IGNORE	true
7	least	_	least	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	at-$LEMMA$	(mod())	8	MOD_mod	true
8	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
9	Greek,	greek,	greek,	JJ	O	_	1	_	0	IGNORE	true
10	[11]	_	[11]	XX	O	_	mean-01	_	0	IGNORE	true
11	though	_	though	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	0	ROOT	true
12	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	15	MOD_mod	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	15	MOD_mod	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	familiarity	_	familiarity	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	resemble-01	(s())	11	APP_o	true
16	with	_	with	IN	O	_	-	_	0	IGNORE	true
17	Greek	_name_	greek	JJ	O	_	$LEMMA$	_	0	IGNORE	true
18	literature	_	literature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	would	_	would	MD	O	_	person	_	0	IGNORE	true
21	later	_	later	RB	O	(m<root> / more  :degree-of (l / --LEX--  :time-of (s<mod>)))	late	(mod())	25	MOD_mod	true
22	claim	_	claim	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	25	MOD_s	true
23	to	_	to	TO	O	_	person	_	0	IGNORE	true
24	have	_	have	VB	O	_	person	_	0	IGNORE	true
25	acquired	_	acquire	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
26	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
27	a	_	a	DT	O	_	1	_	0	IGNORE	true
28	schoolboy.	_	schoolboy.	NN	O	_	$LEMMA$	_	0	IGNORE	true
29	[12]	_name_	[12]	XX	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@s@@have-concession-91, 2@@p@@person, 18@@d@@literature, 25@@s@@acquire-01, 7@@p@@at-least, 2@@n@@_NAME_, 15@@s@@resemble-01, 22@@s@@claim-01, 8@@d@@some, 21@@l@@late, 21@@m@@more, 13@@explicitanon0@@-, 4@@n@@_NAME_, 3@@s@@learn-01, 1@@b@@there, 4@@l@@language, 5@@a@@and, 12@@p@@probable]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	mention	_	mention	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	historic	_	historic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	nature	_	nature	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	Vice	vice	Vice	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	8	MOD_mod	true
8	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	10	MOD_s	true
9	HARRIS’	harris’	HARRIS’	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	_NAME_	(s(), o())	11	MOD_s	true
10	ascendance,	_	ascendance,	NNP	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	11	MOD_s	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	let’s	_	let’s	NNP	O	(d<root> / --LEX--)	we	()	14	APP_s	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	forget	_	forget	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	that	_	that	IN	O	_	name	_	0	IGNORE	true
16	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	successor,	_	successor,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
18	ALEX	_name_	ALEX	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
19	PADILLA,	padilla,	PADILLA,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
22	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	34	MOD_mod	true
23	Latino	_name_	latino	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	Senator	senator	Senator	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	9	APP_o	true
25	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
26	represent	_	represent	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
27	California;	_name_	california;	CD	O	_	$LEMMA$	_	0	IGNORE	true
28	that	_	that	DT	O	_	have-org-role-91	_	0	IGNORE	true
29	RAFAEL	_name_	RAFAEL	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
30	WARNOCK,	warnock,	WARNOCK,	NNP	O	_	person	_	0	IGNORE	true
31	born	_	bear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	34	APP_mod	true
32	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
33	Georgia	_name_	Georgia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	35	APP_o	true
34	was	_	be	VBD	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	person	(mod(), s(), o())	11	MOD_o	true
35	represented	_	represent	VBN	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	31	MOD_mod	true
36	in	_	in	IN	O	_	i	_	0	IGNORE	true
37	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
38	Chamber	chamber	Chamber	NNP	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
39	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
40	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	41	MOD_mod	true
41	staunch	_	staunch	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
42	segregationists,	_	segregationists,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
43	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
44	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	46	MOD_mod	true
45	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
46	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	48	MOD_mod	true
47	African-American	_name_	african-american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	24	MOD_mod	true
48	Senator	senator	Senator	NNP	O	(r<root> / --LEX--  :concession-of (c<mod>))	$LEMMA$	(mod())	78	MOD_mod	true
49	Georgia	_name_	Georgia	NNP	O	_	_NAME_	_	0	IGNORE	true
50	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
51	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
52	elected;	_	elected;	NNP	O	_	$LEMMA$	_	0	IGNORE	true
53	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	11	APP_o	true
54	that	_	that	IN	O	_	have-org-role-91	_	0	IGNORE	true
55	JOHN_OSSOFF	_name_	OSSOFF	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	53	APP_op2	true
56	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
57	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
58	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	60	MOD_mod	true
59	Jewish	_name_	jewish	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	60	MOD_mod	true
60	Senator	senator	Senator	NNP	O	(h2<root> / have-org-role-91  :ARG0 (h<s>)  :ARG2 (m / --LEX--))	$LEMMA$	(s())	84	MOD_s	true
61	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
62	his	_	he	PRP$	O	_	have-org-role-91	_	0	IGNORE	true
63	State,	_name_	state,	CD	O	_	$LEMMA$	_	0	IGNORE	true
64	sworn	_	swear	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-in-06	(s())	60	MOD_s	true
65	in	_	in	RP	O	_	cause-01	_	0	IGNORE	true
66	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	64	MOD_mod	true
67	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
68	a	_	a	DT	O	_	1	_	0	IGNORE	true
69	book	_	book	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	64	MOD_mod	true
70	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
71	Hebrew_Scripture	_name_	Scripture	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	69	MOD_mod	true
72	once	_	once	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	73	MOD_mod	true
73	owned	_	own	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	69	MOD_o	true
74	by	_	by	IN	O	_	have-org-role-91	_	0	IGNORE	true
75	the	_	the	DT	O	_	1	_	0	IGNORE	true
76	rabbi,	_	rabbi,	NNP	O	_	1	_	0	IGNORE	true
77	who,	_	who,	NN	O	_	1	_	0	IGNORE	true
78	decades	_name_	decade	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	73	APP_s	true
79	ago,	_	ago,	DT	O	_	expressive	_	0	IGNORE	true
80	formed	_	form	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	69	MOD_s	true
81	a	_	a	DT	O	_	1	_	0	IGNORE	true
82	bond	_	bond	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	80	APP_o	true
83	between	_	between	IN	O	_	$LEMMA$	_	0	IGNORE	true
84	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	11	MOD_mod	true
85	Jewish	_name_	jewish	JJ	O	_	_NAME_	_	0	IGNORE	true
86	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
87	African-American	_name_	african-american	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	88	MOD_mod	true
88	communities	_	community	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	82	APP_s	true
89	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
90	Georgia.	_name_	Georgia.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[59@@r@@religious-group, 60@@m@@Senator, 88@@d@@community, 2@@s@@mention-01, 58@@o@@ordinal-entity, 35@@t@@represent-01, 64@@s@@swear-in-06, 33@@c@@country, 48@@r@@Senator, 13@@explicitanon0@@-, 82@@s@@bond, 55@@p@@person, 46@@o@@ordinal-entity, 22@@o@@ordinal-entity, 58@@explicitanon0@@1, 87@@p@@_NAME_, 69@@b@@book, 40@@explicitanon0@@2, 29@@n@@_NAME_, 12@@d@@we, 47@@c@@country, 38@@b@@Chamber, 8@@h@@have-org-role-91, 5@@d@@nature, 24@@m@@Senator, 1@@d@@i, 55@@n@@_NAME_, 29@@p@@person, 26@@s@@represent-01, 11@@s@@contrast-01, 18@@d@@ALEX, 10@@s@@and, 53@@a@@and, 14@@s@@forget-01, 23@@p@@latino, 47@@n@@_NAME_, 4@@p@@historic, 7@@p@@vice, 41@@p@@staunch, 37@@p@@this, 33@@n@@_NAME_, 22@@explicitanon0@@1, 34@@b@@person, 9@@s@@_NAME_, 72@@p@@once, 24@@h2@@have-org-role-91, 46@@explicitanon0@@1, 44@@n@@now, 66@@n@@today, 73@@s@@own-01, 8@@p2@@president, 78@@m@@decade, 51@@n@@ever, 80@@s@@form-01, 59@@n@@_NAME_, 84@@p@@person, 78@@t@@temporal-quantity, 71@@p@@Scripture, 31@@s@@bear-02, 60@@h2@@have-org-role-91]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
3	want	_	want	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	10	MOD_mod	true
4	to	_	to	TO	O	_	event	_	0	IGNORE	true
5	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	step	_	step	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
9	further,	_	further,	NNPS	O	_	and	_	0	IGNORE	true
10	look	_	look	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	around	_	around	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	questioningly	_	questioningly	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	discriminate-01	(mod())	10	MOD_mod	true
13	at	_	at	IN	O	_	and	_	0	IGNORE	true
14	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	and	_	0	IGNORE	true
17	elevator	_	elevator	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
19	no	_	no	DT	O	_	-	_	0	IGNORE	true
20	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	21	APP_s	true
21	gets	_	get	VBZ	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-05	(mod(), s(), o())	10	MOD_mod	true
22	off	_	off	RP	O	_	$LEMMA$	_	0	IGNORE	true
23	at	_	at	IN	O	_	and	_	0	IGNORE	true
24	the	_	the	DT	O	_	and	_	0	IGNORE	true
25	floors	_	floor	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
26	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
27	pushed.	_	pushed.	VBP	O	_	mean-01	_	0	IGNORE	true
28	[1]	_	[1]	ADD	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[25@@b@@floor, 14@@d@@everyone, 3@@d@@want-01, 5@@s@@take-01, 12@@t@@discriminate-01, 21@@b@@get-05, 10@@s@@look-01, 6@@d@@it, 2@@d@@you, 20@@d@@no-one, 17@@b@@elevator, 11@@b@@around, 8@@t@@step]
sentence=1	Several	several	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	rental	_	rental	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	gives	_	give	VBZ	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o2	true
7	the	_	the	DT	O	_	and	_	0	IGNORE	true
8	option	_	option	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	opt-01	(s())	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	trained	_	train	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	guide,	_	guide,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	include-91	(mod())	5	MOD_mod	true
12	which	_	which	WDT	O	_	capable-01	_	0	IGNORE	true
13	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	MOD_s	true
14	both	_	both	DT	O	_	$LEMMA$	_	0	IGNORE	true
15	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
16	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	about	_	about	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	sights	_	sight	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	visit,	_	visit,	NNPS	O	_	and	_	0	IGNORE	true
22	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
23	make	_	make	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
24	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	en$LEMMA$-01	(s())	10	MOD_s	true
25	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	are	_	be	VBP	O	_	person	_	0	IGNORE	true
27	safe.	_	safe.	JJ	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@d@@you, 19@@a@@sight, 5@@w@@give-01, 11@@p@@include-91, 13@@s@@possible-01, 16@@d@@information, 10@@s@@train-01, 4@@p@@also, 8@@s@@opt-01, 1@@explicitanon0@@several, 2@@p@@rental, 3@@d@@place, 15@@s@@provide-01, 24@@s@@ensure-01]
sentence=1	Who	who	who	WP	O	(d<root> / --LEX--)	amr-unknown	()	2	APP_s	true
2	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-07	(s(), o())	0	ROOT	true
3	up	_	up	RP	O	_	decade	_	0	IGNORE	true
4	for	_	for	IN	O	_	and	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	values	_	value	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
7	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	Founders	founders	founder	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	found-01	(s())	9	APP_s	true
9	charged	_	charge	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
10	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
11	to	_	to	IN	O	_	person	_	0	IGNORE	true
12	keep?	_	keep?	XX	O	_	person	_	0	IGNORE	true

nodealignment=[6@@p@@value, 7@@d@@our, 1@@d@@amr-unknown, 10@@d@@us, 2@@s@@stand-up-07, 9@@s@@charge-01, 8@@s@@found-01]
sentence=1	With	with	with	IN	O	_	cause-01	_	0	IGNORE	true
2	Wikinews,	wikinews,	Wikinews,	NNP	O	_	_NAME_	_	0	IGNORE	true
3	Sarvis	_name_	Sarvis	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	discusses	_	discuss	VBZ	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	his	_	he	PRP$	O	_	thing	_	0	IGNORE	true
6	background,	_	background,	CD	O	_	and	_	0	IGNORE	true
7	views	_	view	NNS	O	(d<root> / --LEX--)	$LEMMA$-02	()	4	APP_o	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	McDonnell's	mcdonnell's	McDonnell's	NNP	O	_	_NAME_	_	0	IGNORE	true
10	tenure,	_	tenure,	NNP	O	_	and	_	0	IGNORE	true
11	keys	_	key	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	20	APP_op2	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	campaign	_	campaign	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	15	APP_s	true
14	success,	_	success,	NN	O	_	and	_	0	IGNORE	true
15	plan	_	plan	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	implement	_	implement	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	15	MOD_mod	true
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	agenda,	_	agenda,	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	4	MOD_o	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
21	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
22	former	_	former	JJ	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	Virginia	_name_	Virginia	NNP	O	(s<root> / state  :name (n / --LEX--))	_NAME_	()	24	APP_s	true
24	governor	_	governor	NN	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	19	APP_s	true
25	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	admires.	_	admires.	ADD	O	(d<root> / --LEX--)	have-org-role-91	()	4	APP_o2	true

nodealignment=[7@@d@@view-02, 24@@h@@have-org-role-91, 20@@a@@and, 23@@n@@_NAME_, 17@@i@@implement-01, 3@@n@@_NAME_, 27@@d@@have-org-role-91, 15@@s@@plan-01, 4@@b@@discuss-01, 24@@o@@governor, 23@@s@@state, 26@@s@@most, 22@@n@@former, 3@@p@@person, 13@@d@@campaign-01, 19@@s@@and, 11@@s@@key, 24@@p@@person]
sentence=1	But	but	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
6	visited	_	visit	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	10	MOD_mod	true
7	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
8	room	_	room	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_o	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
10	got	_	get	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-22	(o(s()))	1	APP_o	true
11	to	_	to	TO	O	_	person	_	0	IGNORE	true
12	marvel	_	marvel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	at	_	at	IN	O	_	i	_	0	IGNORE	true
14	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
15	toothy	_	toothy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	grins	_	grin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
17	labelled	_	label	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	MOD_op1	true
19	lined	_	line	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-02	(s())	16	MOD_s	true
20	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
21	on	_	on	IN	O	_	thing	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	shelf.	_	shelf.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@d@@grin, 3@@p@@next, 1@@s@@contrast-01, 9@@d@@we, 12@@s@@marvel-01, 15@@p@@toothy, 6@@t@@visit-01, 10@@c@@get-22, 19@@s@@line-up-02, 18@@a@@and, 17@@s@@label-01, 8@@d@@room, 5@@d@@we]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
5	calmest	_	calm	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	warm-07	(mod())	6	MOD_mod	true
6	water	_	water	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
8	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	5	MOD_s	true
9	have	_	have	VB	O	_	$LEMMA$-03	_	0	IGNORE	true
10	seen.	_	seen.	.	O	_	-	_	0	IGNORE	true

nodealignment=[5@@m@@most, 6@@d@@water, 8@@s@@possible-01, 1@@p@@this, 5@@t@@warm-07, 7@@d@@you, 3@@s@@resemble-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	past	_	past	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	clings	_	cling	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
4	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	measure	_	measure	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	have	_	have	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	11	APP_op2	true
14	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
15	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	13	APP_o	true
16	much	_	much	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	15	MOD_mod	true
18	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	redeem	_	redeem	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
20	the	_	the	DT	O	_	thing	_	0	IGNORE	true
21	pledges	_	pledge	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
24	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
26	taken.	_	taken.	JJ	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@d@@us, 7@@p@@still, 9@@p@@some, 24@@s@@so, 15@@s@@do-02, 12@@d@@we, 2@@d@@past, 11@@a@@and, 10@@t@@measure, 13@@o@@obligate-01, 19@@s@@redeem-01, 16@@d@@much, 21@@d@@pledge, 25@@o@@often, 3@@s@@cling-01, 17@@w@@before]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	facilities	_	facility	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
3	we've	_	we've	NN	O	_	person	_	0	IGNORE	true
4	chosen	_	choose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
5	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
6	a	_	a	DT	O	_	person	_	0	IGNORE	true
7	noteworthy	_	noteworthy	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	legacy	_	legacy	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	preserving	_	preserve	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op1	true
11	space	_	space	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	artifacts	_	artifact	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	and	_	and	CC	O	(s<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :purpose-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
14	providing	_	provide	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_op2	true
15	outstanding	_	outstanding	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	access	_	access	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
17	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
20	international	_	international	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	visitors."	_	visitors."	NNP	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@have-03, 16@@s@@access-01, 2@@d@@facility, 8@@d@@legacy, 14@@s@@provide-01, 18@@c@@country, 4@@s@@choose-01, 18@@n@@_NAME_, 12@@d@@artifact, 13@@s@@and, 15@@p@@outstanding, 20@@d@@international, 7@@p@@noteworthy, 10@@s@@preserve-01, 1@@p@@this, 11@@p@@space, 19@@a@@and]
sentence=1	How	how	how	WRB	O	(t<root> / --LEX--  :manner-of (h<mod>))	amr-unknown	(mod())	4	MOD_mod	true
2	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	grow	_	grow	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	$LEMMA$n	_	0	IGNORE	true
6	site	_	site	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	to	_	to	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	size	_	size	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
10	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
12	today?	_	today?	ADD	O	_	thing	_	0	IGNORE	true

nodealignment=[1@@t@@amr-unknown, 9@@d@@size, 6@@d@@site, 3@@d@@you, 4@@b@@grow-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	a	_	a	DT	O	_	thing	_	0	IGNORE	true
3	gas	_	gas	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	completely	_	completely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	complete-02	(s())	5	MOD_s	true
5	fills	_	fill	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_op2	true
6	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	shape	_	shape	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	container	_	container	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	put	_	put	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	in.	_	in.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@s@@put-01, 9@@d@@you, 8@@d@@container, 5@@s@@fill-01, 7@@p@@shape, 3@@d@@gas, 4@@s@@complete-02, 1@@a@@and, 6@@p@@whatever]
sentence=1	1	_	1	LS	O	(explicitanon0<root> / --LEX--  :li-of (d<mod>))	_NUMBER_	(mod())	2	MOD_mod	true
2	Choose	choose	choose	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	basil	_	basil	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
8	wish	_	wish	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
9	to	_	to	TO	O	_	person	_	0	IGNORE	true
10	grow.	_	grow.	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true

nodealignment=[2@@explicitanon0@@imperative, 7@@d@@you, 10@@s@@grow.-01, 8@@s@@wish-01, 2@@h@@choose-01, 1@@explicitanon0@@_NUMBER_, 6@@d@@basil, 4@@p@@kind]
sentence=1	When	when	when	WRB	O	_	i	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	became	_	become	VBD	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	14	MOD_mod	true
4	chairman	_	chairman	NN	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (p<s>)))	$LEMMA$	(s())	3	APP_o	true
5	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
8	committee,	_	committee,	RB	O	_	i	_	0	IGNORE	true
9	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
10	were	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	22	MOD_mod	true
11	300,000	_	300,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	10	MOD_mod	true
12	more	_	more	JJR	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	Republicans	_name_	Republicans	NNPS	O	(p<root> / political-party  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
14	registered	_	register	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	APP_op1	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	Philadelphia	_name_	Philadelphia	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	17	MOD_mod	true
20	than	_	than	IN	O	_	name	_	0	IGNORE	true
21	Democrats,	_name_	democrats,	NN	O	(p<root> / --LEX--  :compared-to-of (c<mod>))	_NAME_	(mod())	14	MOD_mod	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
23	it	_	it	PRP	O	_	i	_	0	IGNORE	true
24	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
25	a	_	a	DT	O	_	thing	_	0	IGNORE	true
26	source	_	source	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
27	of	_	of	IN	O	_	person	_	0	IGNORE	true
28	satisfaction	_	satisfaction	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	satisfy-01	(s())	26	MOD_s	true
29	to	_	to	IN	O	(d<root> / --LEX--)	and	()	22	APP_op3	true
30	me	_	I	PRP	O	_	and	_	0	IGNORE	true
31	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
32	tonight	_name_	tonight	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
33	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
34	are	_	be	VBP	O	_	person	_	0	IGNORE	true
35	260,000	_	260,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	29	MOD_mod	true
36	more	_	more	JJR	O	_	$LEMMA$	_	0	IGNORE	true
37	Democrats	_name_	Democrats	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
38	registered.	_	registered.	NN	O	_	have-org-role-91	_	0	IGNORE	true

nodealignment=[7@@d@@city, 28@@s@@satisfy-01, 29@@d@@and, 26@@d@@source-01, 14@@s@@register-02, 21@@p@@_NAME_, 4@@h@@have-org-role-91, 19@@n@@_NAME_, 13@@n@@_NAME_, 11@@explicitanon0@@_NUMBER_, 12@@explicitanon0@@more, 6@@p@@this, 10@@p@@person, 22@@a@@and, 32@@n@@tonight, 35@@explicitanon0@@_NUMBER_, 2@@d@@he, 3@@b@@become-01, 17@@b@@city, 4@@p2@@chairman, 13@@p@@political-party]
sentence=1	Last	last	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	week,	_	week,	NNS	O	_	rate-entity-91	_	0	IGNORE	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	read	_	read	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	2,300	_	2,300	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	6	MOD_mod	true
6	Humvees	humvees	Humvees	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	—	_	—	,	O	_	and	_	0	IGNORE	true
8	these	_	these	DT	O	(d<root> / --LEX--)	this	()	11	APP_dom	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	vehicles	_	vehicle	NNS	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	13	APP_s	true
12	—	_	—	:	O	_	and	_	0	IGNORE	true
13	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	person	(s(), o())	4	MOD_o	true
14	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
15	behind	_	behind	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	for	_	for	IN	O	_	have-org-role-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	enemy.	_	enemy.	NNS	O	(p2<root> / person  :name (n / --LEX--)  :beneficiary-of (p<mod>))	_NAME_	(mod())	14	MOD_mod	true

nodealignment=[5@@explicitanon0@@_NUMBER_, 3@@d@@i, 10@@p@@big, 15@@b@@behind, 6@@d@@Humvees, 18@@p2@@person, 1@@p@@last, 18@@n@@_NAME_, 4@@s@@read-01, 11@@r@@vehicle, 14@@s@@leave-01, 13@@s@@person, 8@@d@@this]
sentence=1	Everyone	everyone	Everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	expects	_	expect	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	APP_s	true
3	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	Presidents,	_name_	presidents,	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	2	MOD_mod	true
6	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
7	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
8	am	_	be	VBP	O	_	know-01	_	0	IGNORE	true
9	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	6	APP_o	true
11	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
12	they	_	they	PRP	O	_	person	_	0	IGNORE	true
13	realize	_	realize	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
14	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
15	much	_	much	JJ	O	_	$LEMMA$	_	0	IGNORE	true
16	depends	_	depend	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
17	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	Members	members	Members	NNPS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	23	APP_op1	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	the	_	the	DT	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	6	MOD_o	true
22	House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	16	APP_s	true
24	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
25	Members	members	Members	NNPS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	23	APP_op2	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
28	Senate	_name_	Senate	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	25	APP_s	true
29	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
30	must	_	must	MD	O	_	obligate-01	_	0	IGNORE	true
31	make	_	make	VB	O	_	obligate-01	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	34	MOD_mod	true
34	judgment	_	judgment	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	judge-01	(s(), o())	13	APP_o	true
35	on	_	on	IN	O	_	thing	_	0	IGNORE	true
36	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
37	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	39	MOD_mod	true
38	of	_	of	IN	O	_	thing	_	0	IGNORE	true
39	laws	_	law	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
40	a	_	a	DT	O	_	1	_	0	IGNORE	true
41	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	21	MOD_s	true
42	must	_	must	MD	O	(d<root> / --LEX--)	obligate-01	()	34	APP_s	true
43	execute.	_	execute.	VB	O	_	thing	_	0	IGNORE	true

nodealignment=[21@@s@@have-org-role-91, 19@@o@@Members, 16@@s@@depend-01, 41@@h@@have-org-role-91, 41@@p2@@President, 39@@d@@law, 7@@d@@i, 22@@n@@_NAME_, 6@@s@@contrast-01, 10@@s@@sure-02, 1@@d@@Everyone, 5@@p@@_NAME_, 22@@g@@government-organization, 19@@p@@person, 33@@p@@final, 19@@h@@have-org-role-91, 34@@s@@judge-01, 25@@h@@have-org-role-91, 28@@n@@_NAME_, 42@@d@@obligate-01, 28@@g@@government-organization, 25@@o@@Members, 37@@p@@kind, 2@@s@@expect-01, 3@@d@@thing, 23@@a@@and, 9@@explicitanon0@@-, 13@@s@@realize-01, 25@@p@@person]
sentence=1	Follow	follow	follow	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	0	ROOT	true
2	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	duty	_	duty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
5	what	_	what	WDT	O	_	amr-unknown	_	0	IGNORE	true
6	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	APP_o	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	player	_	player	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	play-01	()	6	APP_mod	true
9	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	are:	_	are:	RB	O	_	-	_	0	IGNORE	true

nodealignment=[8@@e2@@play-01, 4@@s@@depend-01, 3@@d@@duty, 6@@p@@type, 8@@p2@@person, 1@@s@@follow-02]
sentence=1	Our	our	Our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	art	_	art	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	develops	_	develop	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	from	_	from	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	interaction	_	interaction	NN	O	(l<root> / --LEX--  :ARG1 (p2<o>)  :ARG0 (t<s>)  :manner-of (d<mod>))	interact-01	(mod(), s(), o())	5	MOD_mod	true
9	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
10	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
11	cognitive	_	cognitive	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	5	APP_o	true
13	affective	_	affective	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	processes;	_	processes;	NNP	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	beginning	_	beginning	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	begin-01	(s())	8	APP_s	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	visual	_	visual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	scan	_	scan	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	APP_s	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	the	_	the	DT	O	_	person	_	0	IGNORE	true
25	artwork.	_	artwork.	NN	O	(d<root> / --LEX--)	_NAME_	()	22	APP_s	true

nodealignment=[5@@s@@develop-01, 21@@p@@visual, 25@@d@@_NAME_, 13@@d@@affective, 8@@l@@interact-01, 12@@a@@and, 11@@d@@cognitive, 10@@explicitanon0@@several, 22@@s@@scan-01, 16@@s@@begin-01, 1@@d@@Our, 2@@s@@experience-01, 4@@d@@art]
sentence=1	Galois'_cousin,_Gabriel_Demante,	_name_	demante,	CD	O	_	and	_	0	IGNORE	true
2	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
3	asked	_	ask	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
4	if	_	if	IN	O	_	interrogative	_	0	IGNORE	true
5	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
6	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	cause	_	cause	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
9	of	_	of	IN	O	_	name	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	duel,	_name_	duel,	NNP	O	_	_NAME_	_	0	IGNORE	true
12	mentioned	_	mention	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
13	that	_	that	IN	O	_	and	_	0	IGNORE	true
14	Galois	_name_	Galois	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	"found	_	"found	XX	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-00	(s())	12	APP_o	true
16	himself	_	himself	PRP	O	_	person	_	0	IGNORE	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	presence	_	presence	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	present-02	(s())	15	APP_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	a	_	a	DT	O	_	person	_	0	IGNORE	true
22	supposed	_	suppose	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
23	uncle	_	uncle	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_s	true
25	a	_	a	DT	O	_	1	_	0	IGNORE	true
26	supposed	_	supposed	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
27	fiancé,	_	fiancé,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
28	each	_	each	DT	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
29	of	_	of	IN	O	(d<root> / --LEX--)	include-91	()	12	APP_s	true
30	whom	_	whom	WP	O	_	amr-unknown	_	0	IGNORE	true
31	provoked	_	provoke	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	24	MOD_s	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	duel."	_	duel."	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[24@@a@@and, 31@@s@@provoke-01, 8@@d@@cause-01, 19@@s@@present-02, 26@@s@@supposed-01, 12@@s@@mention-01, 28@@d@@each, 6@@s@@know-01, 23@@p@@person, 23@@h@@have-rel-role-91, 29@@d@@include-91, 23@@f@@uncle, 22@@s@@suppose-01, 3@@t@@ask-01, 27@@p@@fiancé,, 15@@r@@"found-00]
sentence=1	So	so	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	did	_	do	VBD	O	_	cause-01	_	0	IGNORE	true
4	bring	_	bring	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_s	true
5	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
6	up,	_	up,	NNS	O	_	and	_	0	IGNORE	true
7	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
8	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
10	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
11	was	_	be	VBD	O	_	person	_	0	IGNORE	true
12	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	about	_	about	IN	O	_	thing	_	0	IGNORE	true
14	before	_	before	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
15	in	_	in	IN	O	_	i	_	0	IGNORE	true
16	therapy,	_	therapy,	NNS	O	_	thing	_	0	IGNORE	true
17	where	_	where	WRB	O	_	thing	_	0	IGNORE	true
18	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
19	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
20	a	_	a	DT	O	_	thing	_	0	IGNORE	true
21	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	hard	_	hard	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_o	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
26	appearance.	_	appearance.	NN	O	_	cause-01	_	0	IGNORE	true

nodealignment=[14@@n@@before, 9@@p@@thing, 21@@s@@really, 1@@s@@cause-01, 5@@d@@that, 23@@d@@time, 4@@s@@bring-01, 22@@s@@hard-02, 8@@p@@whole, 12@@s@@talk-01, 2@@d@@i]
sentence=1	Whatever	whatever	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
2	the	_	the	DT	O	_	regardless-91	_	0	IGNORE	true
3	reason,	_	reason,	NNS	O	_	and	_	0	IGNORE	true
4	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	6	APP_s	true
6	specialize	_	specialize	VBP	O	(d<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (g<o>)  :condition-of (h<mod>))	$LEMMA$-01	(mod(), o(s()))	19	MOD_mod	true
7	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	production	_	production	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	produce-01	(s())	6	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	what	_	what	WP	O	_	thing	_	0	IGNORE	true
12	they	_	they	PRP	O	_	thing	_	0	IGNORE	true
13	do	_	do	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
14	best,	_	best,	NNS	O	_	and	_	0	IGNORE	true
15	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	will	_	will	MD	O	_	thing	_	0	IGNORE	true
17	be	_	be	VB	O	_	thing	_	0	IGNORE	true
18	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	effective	_	effective	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-04	(s())	0	ROOT	true
20	than	_	than	IN	O	_	thing	_	0	IGNORE	true
21	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
22	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	produce	_	produce	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	19	MOD_mod	true
24	a	_	a	DT	O	_	thing	_	0	IGNORE	true
25	combination	_	combination	NN	O	(d<root> / --LEX--)	combine-01	()	23	APP_s	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	things,	_	things,	NNS	O	_	thing	_	0	IGNORE	true
28	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
31	they	_	they	PRP	O	_	person	_	0	IGNORE	true
32	are	_	be	VBP	O	(d<root> / --LEX--)	person	()	19	APP_s	true
33	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	32	MOD_s	true
34	at	_	at	IN	O	_	thing	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	MOD_op1	true
36	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_op2	true
37	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
38	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
39	they	_	they	PRP	O	_	person	_	0	IGNORE	true
40	are	_	be	VBP	O	_	person	_	0	IGNORE	true
41	not.	_	not.	JJ	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[32@@d@@person, 36@@d@@some, 23@@o@@produce-01, 1@@p@@whatever, 19@@s@@effective-04, 35@@a@@and, 5@@d@@person, 6@@d@@specialize-01, 28@@p@@some, 13@@s@@do-02, 9@@s@@produce-01, 18@@s@@more, 33@@s@@good-03, 25@@d@@combine-01]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
2	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
3	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	6	MOD_mod	true
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	did	_	do	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	3	APP_s	true
9	was	_	be	VBD	O	_	person	_	0	IGNORE	true
10	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
11	back	_	back	VB	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-up-04	(o(s()))	8	APP_o	true
12	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
13	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
14	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
15	promise	_	promise	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	18	MOD_mod	true
18	expanding	_	expand	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
19	NATO	_name_	NATO	NNP	O	(m<root> / military  :name (n / --LEX--))	_NAME_	()	18	APP_s	true
20	to	_	to	IN	O	_	thing	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	east.	_	east.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@n@@_NAME_, 5@@o@@ordinal-entity, 11@@f@@back-up-04, 19@@m@@military, 1@@p@@well, 15@@s@@promise-01, 18@@s@@expand-01, 8@@c@@do-02, 6@@d@@thing, 7@@d@@he, 5@@explicitanon0@@1, 17@@explicitanon0@@-, 3@@s@@include-91]
sentence=1	At	at	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	knew	_	know	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	vaguely	_	vaguely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	close-10	(mod())	5	MOD_mod	true
8	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	Hell	hell	Hell	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_dom	true
10	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
11	a	_	a	DT	O	_	1	_	0	IGNORE	true
12	place	_	place	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_o	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
14	did	_	do	VBD	O	_	person	_	0	IGNORE	true
15	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	16	MOD_mod	true
16	want	_	want	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
17	to	_	to	TO	O	_	contrast-01	_	0	IGNORE	true
18	go,	_	go,	VB	O	_	and	_	0	IGNORE	true
19	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	5	MOD_s	true
20	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
21	dark	_	dark	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	22	MOD_s	true
22	basement	_	basement	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	19	APP_o	true
24	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
25	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	darker	_	dark	JJR	O	(d<root> / --LEX--)	hard-02	()	23	APP_op2	true
27	attic.	_	attic.	NN	O	_	more	_	0	IGNORE	true

nodealignment=[13@@d@@you, 25@@p@@even, 3@@n@@time, 21@@s@@dark, 6@@p@@only, 2@@p@@that, 16@@s@@want-01, 19@@s@@resemble-01, 12@@r@@place, 5@@s@@know-01, 22@@d@@basement, 15@@explicitanon0@@-, 4@@d@@he, 9@@d@@Hell, 23@@a@@or, 7@@t@@close-10, 26@@d@@hard-02]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_dom	true
2	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	virtuous	_	virtuous	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	circle	_	circle	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
7	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
8	Wikipedia	_name_	Wikipedia	NNP	O	(p<root> / publication  :name (n / --LEX--)  :medium-of (u<mod>))	_NAME_	(mod())	6	MOD_mod	true
9	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
10	enjoyed.	_	enjoyed.	NN	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[5@@p@@virtuous, 6@@r@@circle, 8@@p@@publication, 8@@n@@_NAME_, 4@@s@@same-01, 1@@d@@It]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	need	_	need	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	your	_	your	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	signature	_	signature	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	3	APP_o	true
7	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
8	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
9	can	_	can	MD	O	(g<root> / --LEX--  :ARG1 (a<o>)  :purpose-of (f<mod>))	possible-01	(mod(), o(s()))	6	MOD_mod	true
10	play	_	play	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	volleyball.	_	volleyball.	NN	O	(d<root> / --LEX--)	_NAME_	()	10	APP_o	true

nodealignment=[1@@p@@all, 2@@d@@i, 5@@d@@your, 3@@s@@need-01, 6@@s@@signature, 12@@d@@_NAME_, 10@@t@@play-01, 9@@g@@possible-01]
sentence=1	Focus	focus	focus	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	list	_	list	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_o	true
4	on	_	on	IN	O	_	thing	_	0	IGNORE	true
5	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_o	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
9	typically	_	typically	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	normal-02	(s())	10	MOD_s	true
10	put	_	put	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
11	off,	_	off,	RB	O	_	contrast-01	_	0	IGNORE	true
12	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
13	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	1	MOD_s	true
14	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	1	MOD_s	true
20	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	regular	_	regular	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
23	basis.	_	basis.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@d@@thing, 1@@h@@focus-01, 9@@s@@normal-02, 7@@d@@thing, 1@@explicitanon0@@imperative, 13@@s@@contrast-01, 8@@d@@you, 3@@d@@list-01, 5@@s@@include-01, 10@@s@@put-01, 17@@s@@sure-02, 22@@s@@regular-02, 19@@s@@do-02, 12@@explicitanon0@@-]
sentence=1	Byron	_name_	Byron	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	fell	_	fall	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-07	(o(s()))	14	APP_op1	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	love	_	love	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
5	with	_	with	IN	O	_	have-rel-role-91	_	0	IGNORE	true
6	Mary_Chaworth,	_name_	chaworth,	CD	O	(d<root> / --LEX--)	_NAME_	()	14	APP_op2	true
7	whom	_	whom	WP	O	_	name	_	0	IGNORE	true
8	he	_	he	PRP	O	_	person	_	0	IGNORE	true
9	met	_	meet	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
10	while	_	while	IN	O	_	be-located-at-91	_	0	IGNORE	true
11	at	_	at	IN	O	_	be-located-at-91	_	0	IGNORE	true
12	school,	_	school,	NNP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	[6]	_name_	[6]	XX	O	_	mean-01	_	0	IGNORE	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
15	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	was	_	be	VBD	O	_	person	_	0	IGNORE	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	cause-01	(s())	14	APP_op3	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	refused	_	refuse	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_s	true
21	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
22	return	_	return	VB	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-01	(s())	20	APP_s	true
23	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
24	Harrow	_name_	Harrow	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
25	in	_	in	IN	O	_	i	_	0	IGNORE	true
26	September	_name_	September	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	9	(mod())	22	MOD_mod	true
27	1803.	_	1803.	CD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@c@@city, 9@@s@@meet-02, 26@@d@@date-entity, 6@@d@@_NAME_, 26@@explicitanon0@@9, 4@@s@@love-01, 14@@a@@and, 1@@n@@_NAME_, 22@@p@@return-01, 24@@n@@_NAME_, 2@@o@@fall-07, 1@@p@@person, 12@@n@@school,, 18@@s@@cause-01, 20@@s@@refuse-01]
sentence=1	These	these	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	2	MOD_mod	true
2	responses	_	response	NNS	O	(t<root> / thing  :ARG2-of (a / --LEX--))	respond-01	()	3	APP_s	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	added	_	add	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	6	MOD_s	true
6	benefit	_	benefit	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_s	true
7	of	_	of	IN	O	_	thing	_	0	IGNORE	true
8	being	_	be	VBG	O	_	person	_	0	IGNORE	true
9	natural	_	natural	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	MOD_s	true
10	launching	_	launch	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_mod	true
11	points	_	point	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	APP_o	true
12	for	_	for	IN	O	_	thing	_	0	IGNORE	true
13	conversations	_	conversation	NNS	O	(d<root> / --LEX--)	converse-01	()	10	APP_s	true
14	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
15	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
16	hobbies,	_	hobbies,	NNS	O	_	and	_	0	IGNORE	true
17	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
18	the	_	the	DT	O	_	and	_	0	IGNORE	true
19	writing	_	writing	NN	O	(d<root> / --LEX--)	write-01	()	25	APP_op1	true
20	you're	_	you're	PRP	O	_	thing	_	0	IGNORE	true
21	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	19	MOD_s	true
22	on	_	on	IN	O	_	thing	_	0	IGNORE	true
23	the	_	the	DT	O	_	thing	_	0	IGNORE	true
24	side	_	side	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
25	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	13	MOD_mod	true
26	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
27	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	bourbon	_	bourbon	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_op2	true
29	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	tasted	_	taste	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	28	MOD_s	true
31	the	_	the	DT	O	_	thing	_	0	IGNORE	true
32	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
33	day.	_	day.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@s@@benefit-01, 30@@s@@taste-01, 2@@a@@respond-01, 28@@d@@bourbon, 5@@s@@add-02, 10@@s@@launch-01, 32@@p@@other, 25@@a@@and, 21@@s@@do-02, 2@@t@@thing, 27@@p@@great, 11@@b@@point, 1@@p@@this, 9@@s@@natural-03, 24@@b@@side, 19@@d@@write-01, 13@@d@@converse-01, 3@@s@@have-03]
sentence=1	The	the	the	DT	O	_	thing	_	0	IGNORE	true
2	solutions	_	solution	NNS	O	(d<root> / --LEX--)	solve-01	()	5	APP_s	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	seek	_	seek	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	must	_	must	MD	O	(h<root> / --LEX--  :ARG2 (m<o>))	obligate-01	(o(s()))	0	ROOT	true
6	be	_	be	VB	O	_	person	_	0	IGNORE	true
7	equitable,	_	equitable,	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	opine-01	(s(), o())	5	APP_o	true
8	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
9	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
10	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	no-$LEMMA$	(mod())	11	MOD_mod	true
11	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	singled	_	single	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-01	(s())	7	APP_o	true
13	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
14	to	_	to	TO	O	_	and	_	0	IGNORE	true
15	pay	_	pay	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	higher	_	high	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	high-02	(s())	15	MOD_s	true
18	price.	_	price.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@d@@group, 5@@h@@obligate-01, 2@@d@@solve-01, 7@@s@@opine-01, 12@@s@@single-out-01, 17@@m@@more, 15@@i@@pay-01, 9@@explicitanon0@@-, 4@@s@@seek-01, 3@@d@@we, 10@@explicitanon0@@no-one, 17@@b@@high-02]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	samples	_	sample	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_dom	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	2	MOD_o	true
5	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
6	small	_	small	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	11	APP_op1	true
7	in	_	in	IN	O	_	cause-01	_	0	IGNORE	true
8	terms	_	term	NNS	O	_	$LEMMA$	_	0	IGNORE	true
9	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
10	numbers	_	number	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	are	_	be	VBP	O	_	person	_	0	IGNORE	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	preserved	_	preserve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	APP_op2	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	formalin	_	formalin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
18	(a	_	(a	CD	O	_	$LEMMA$	_	0	IGNORE	true
19	kind	_	kind	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	formaldehyde	_	formaldehyde	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
22	solution).	_	solution).	CD	O	_	oppose-01	_	0	IGNORE	true

nodealignment=[14@@p@@all, 21@@p@@formaldehyde, 11@@a@@and, 19@@p@@kind, 4@@s@@have-03, 15@@s@@preserve-01, 10@@a@@number, 6@@r@@small, 3@@d@@we, 2@@d@@sample-01, 17@@d@@formalin]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	12	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
7	had	_	have	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
8	been	_	be	VBN	O	(p<root> / --LEX--  :ARG4 (i<s>))	$LEMMA$-located-at-91	(s())	12	APP_op1	true
9	to	_	to	IN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
10	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	apartment,	_	apartment,	NNS	O	_	and	_	0	IGNORE	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
13	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	stood	_	stand	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	APP_op2	true
15	square	_	square	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
16	in	_	in	IN	O	_	relative-position	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	center	_	center	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
21	bedroom,	_	bedroom,	NN	O	_	and	_	0	IGNORE	true
22	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	arms	_	arm	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	folded	_	fold	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_op3	true
25	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	her	_	she	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	body	_	body	NN	O	(w2<root> / --LEX--  :destination-of (w<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
28	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
29	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
30	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
32	afraid	_	afraid	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	fear-01	(s())	14	APP_s	true
33	to	_	to	TO	O	_	thing	_	0	IGNORE	true
34	sit	_	sit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	32	APP_s	true
35	down,	_	down,	NNP	O	_	and	_	0	IGNORE	true
36	to	_	to	TO	O	_	thing	_	0	IGNORE	true
37	touch	_	touch	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_s	true
38	something.	_	something.	NNS	O	_	-	_	0	IGNORE	true

nodealignment=[6@@d@@she, 37@@d@@touch-01, 4@@o@@ordinal-entity, 4@@explicitanon0@@1, 8@@p@@be-located-at-91, 23@@d@@arm, 27@@w2@@body, 14@@s@@stand-01, 24@@s@@fold-01, 32@@s@@fear-01, 15@@p@@square, 34@@s@@sit-01, 12@@a@@and, 18@@d@@center]
sentence=1	For	for	for	IN	O	_	cause-01	_	0	IGNORE	true
2	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
3	visitors,	_	visitors,	NNS	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	6	MOD_mod	true
6	place	_	place	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	0	ROOT	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_mod	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	likely	_	likely	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	visit	_	visit	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
12	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
13	Downtown,	downtown,	downtown,	CD	O	_	and	_	0	IGNORE	true
14	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
15	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
16	they	_	they	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
17	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
18	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
19	town	_	town	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op1	true
20	on	_	on	IN	O	_	and	_	0	IGNORE	true
21	business,	_	business,	NNS	O	_	and	_	0	IGNORE	true
22	or	_	or	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	6	MOD_mod	true
23	simply	_	simply	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	simple-02	(mod())	26	MOD_mod	true
24	do	_	do	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	person	(s())	6	MOD_s	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	know	_	know	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	22	APP_op2	true
27	where	_	where	WRB	O	_	amr-unknown	_	0	IGNORE	true
28	to	_	to	TO	O	_	thing	_	0	IGNORE	true
29	start.	_	start.	VB	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@b@@place, 25@@explicitanon0@@-, 7@@d@@they, 24@@s@@person, 5@@explicitanon0@@1, 2@@explicitanon0@@many, 22@@a@@or, 26@@d@@know-01, 19@@d@@town, 5@@o@@ordinal-entity, 16@@p@@they, 23@@p@@simple-02, 14@@p@@especially, 11@@s@@visit-01, 9@@s@@likely-01]
sentence=1	The	the	the	DT	O	_	say-01	_	0	IGNORE	true
2	idea	_	idea	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
3	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	play	_	play	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_dom	true
6	fish	_	fish	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	except	_	except	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	MOD_o	true
8	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	15	MOD_mod	true
9	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
11	get	_	get	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	match	_	match	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
14	you’re	_	you’re	NNP	O	_	mean-01	_	0	IGNORE	true
15	supposed	_	suppose	VBD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-02	(o(s()))	7	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	15	APP_o	true
18	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	says.	_	says.	RB	O	_	thing	_	0	IGNORE	true

nodealignment=[6@@d@@fish, 11@@t@@get-01, 8@@r@@rate-entity-91, 5@@s@@play-01, 7@@s@@except-01, 17@@s@@do-02, 10@@d@@you, 13@@d@@match-01, 15@@o@@suppose-02, 2@@r@@idea]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	3	MOD_mod	true
3	attempt	_	attempt	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	at	_	at	IN	O	_	thing	_	0	IGNORE	true
5	building	_	build	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_o	true
6	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	resource	_	resource	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
8	was	_	be	VBD	O	_	person	_	0	IGNORE	true
9	a	_	a	DT	O	_	thing	_	0	IGNORE	true
10	website	_	website	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
11	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
12	used	_	use	VBD	O	_	$LEMMA$-02	_	0	IGNORE	true
13	to	_	to	TO	O	_	person	_	0	IGNORE	true
14	run	_	run	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
15	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
16	eHow.	ehow.	eHow.	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[2@@explicitanon0@@1, 14@@s@@run-01, 6@@p@@this, 10@@d@@website, 5@@s@@build-01, 3@@c@@attempt-01, 2@@o@@ordinal-entity, 7@@d@@resource, 15@@s@@call-01]
sentence=1	Yet	yet	yet	CC	O	_	$LEMMA$	_	0	IGNORE	true
2	in	_	in	IN	O	_	have-concession-91	_	0	IGNORE	true
3	spite	_	spite	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	somewhat	_	somewhat	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	unstable	_	unstable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	stable-03	(mod())	12	MOD_mod	true
8	shifting,	_	shifting,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	name	_	0	IGNORE	true
10	Koinonia	_name_	Koinonia	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
11	was	_	be	VBD	O	_	have-concession-91	_	0	IGNORE	true
12	ruled	_	rule	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
13	peacefully	_	peacefully	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	peaceful	(mod())	12	MOD_mod	true
14	for	_	for	IN	O	_	or	_	0	IGNORE	true
15	nearly	_	nearly	RB	O	(a<root> / --LEX--  :op1 (t<op1>)  :duration-of (r<mod>))	$LEMMA$	(op1(), mod())	12	MOD_mod	true
16	two	_	two	CD	O	(d<root> / --LEX--)	2	()	15	APP_op1	true
17	decades,	_	decades,	NNS	O	_	and	_	0	IGNORE	true
18	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
19	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	point	_	point	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	Theodorus	_name_	Theodorus	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	22	APP_s	true
22	predicted	_	predict	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
23	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	would	_	would	MD	O	_	person	_	0	IGNORE	true
25	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
26	die.	_	die.	VB	O	_	have-concession-91	_	0	IGNORE	true

nodealignment=[10@@n@@_NAME_, 7@@p@@stable-03, 10@@c@@country, 5@@p@@this, 16@@d@@2, 6@@s@@somewhat, 21@@p@@person, 25@@n@@soon, 12@@s@@rule-03, 22@@s@@predict-01, 15@@a@@nearly, 21@@n@@_NAME_, 20@@n@@point, 13@@t@@peaceful]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	means	_	mean	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	look	_	look	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	at	_	at	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	issue	_	issue	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	5	APP_o	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	raise	_	raise	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	10	MOD_mod	true
13	animals.	_	animals.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	10	MOD_mod	true

nodealignment=[1@@d@@this, 9@@d@@you, 3@@d@@we, 8@@d@@issue-02, 12@@p@@this, 4@@explicitanon0@@-, 13@@p@@_NAME_, 10@@s@@raise-01, 2@@s@@mean-01, 5@@s@@look-01]
sentence=1	nevertheless,	_	nevertheless,	CD	O	_	and	_	0	IGNORE	true
2	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
3	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
4	treated	_	treat	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op1	true
5	deferentially	_	deferentially	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	fair-01	(mod())	4	MOD_mod	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	San_Francisco,	_name_	francisco,	CD	O	(c<root> / country  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	4	MOD_mod	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	currency	_	currency	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
10	issued	_	issue	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
11	in	_	in	IN	O	_	i	_	0	IGNORE	true
12	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	name	_	name	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	honored	_	honor	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op2	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	he	_	0	IGNORE	true
18	establishments	_	establishment	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	frequented.	_	frequented.	VBD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@d@@currency, 4@@s@@treat-01, 10@@s@@issue-01, 7@@c@@country, 13@@p@@name, 15@@s@@honor-01, 5@@t@@fair-01, 2@@d@@he, 7@@n@@_NAME_, 8@@a@@and, 18@@b@@establishment]
sentence=1	Cause	cause	cause	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	that's	_	that's	PRP	O	_	thing	_	0	IGNORE	true
3	the	_	the	DT	O	_	thing	_	0	IGNORE	true
4	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
5	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	you're	_	you're	PRP$	O	_	cause-01	_	0	IGNORE	true
7	multiplying	_	multiply	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op1	true
8	there,	_	there,	NNS	O	_	thing	_	0	IGNORE	true
9	square	_	square	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	root	_	root	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
11	of	_	of	IN	O	_	thing	_	0	IGNORE	true
12	nine,	_	nine,	NNS	O	_	thing	_	0	IGNORE	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	—	_	—	:	O	_	mean-01	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
16	square	_	square	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	root	_	root	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	nine	_	nine	CD	O	_	$LEMMA$	_	0	IGNORE	true
20	equals	_	equal	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
21	three.	_	three.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@p@@square, 7@@s@@multiply-01, 4@@s@@same-01, 20@@s@@equal-01, 1@@s@@cause-01, 15@@a@@and, 10@@d@@root, 5@@t@@way, 9@@p@@square, 17@@d@@root]
sentence=1	“Just	“just	“Just	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	make	_	make	VB	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	cause-01	(s())	0	ROOT	true
3	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	en$LEMMA$-01	(s(), o())	13	APP_dom	true
4	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
5	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	pixies	_	pixie	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
8	in	_	in	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	thing	_	0	IGNORE	true
10	coffee	_	coffee	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	pot,	_	pot,	NN	O	_	$LEMMA$	_	0	IGNORE	true
12	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
13	all	_	all	DT	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_s	true
14	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
15	ask.”	_	ask.”	ADD	O	_	thing	_	0	IGNORE	true

nodealignment=[14@@d@@i, 2@@y@@you, 1@@p@@“Just, 3@@s@@ensure-01, 7@@d@@pixie, 10@@p@@coffee, 13@@r@@all, 2@@b@@cause-01, 6@@explicitanon0@@-, 2@@explicitanon0@@imperative]
sentence=1	At	at	at	IN	O	_	1	_	0	IGNORE	true
2	first	_	first	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	at-$LEMMA$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	thought	_	think	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	25	APP_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	meant	_	mean	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
8	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
9	father,	_	father,	NNS	O	_	and	_	0	IGNORE	true
10	whose	_	whose	WP$	O	_	name	_	0	IGNORE	true
11	golden	_	golden	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
12	skin,	_	skin,	NNS	O	_	mean-01	_	0	IGNORE	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	color	_	color	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_dom	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	night-monkey’s	_	night-monkey’s	NN	O	(d<root> / --LEX--)	_NAME_	()	14	APP_poss	true
18	pelt,	_	pelt,	NNP	O	_	original	_	0	IGNORE	true
19	was	_	be	VBD	O	_	person	_	0	IGNORE	true
20	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
21	rarity	_	rarity	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	7	APP_o	true
22	in	_	in	IN	O	_	i	_	0	IGNORE	true
23	the	_	the	DT	O	_	he	_	0	IGNORE	true
24	islands;	_	islands;	NNP	O	_	_NAME_	_	0	IGNORE	true
25	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
26	certainly	_	certainly	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	certain	(mod())	32	MOD_mod	true
27	the	_	the	DT	O	_	person	_	0	IGNORE	true
28	children	_	child	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	Tyom	_name_	Tyom	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	28	MOD_mod	true
31	were	_	be	VBD	O	_	person	_	0	IGNORE	true
32	familiar	_	familiar	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$ize-01	(s())	36	APP_op1	true
33	with	_	with	IN	O	_	-	_	0	IGNORE	true
34	my	_	my	PRP$	O	_	thing	_	0	IGNORE	true
35	father,	_	father,	NNS	O	_	and	_	0	IGNORE	true
36	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	25	APP_o	true
37	would	_	would	MD	O	_	name	_	0	IGNORE	true
38	never	_	never	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	ever	(mod())	40	MOD_mod	true
39	have	_	have	VB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
40	greeted	_	greet	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	36	APP_op2	true
41	a	_	a	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
42	council-member	_	council-member	NN	O	(d<root> / --LEX--)	$LEMMA$	()	40	APP_o	true
43	with	_	with	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
44	such	_	such	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	45	MOD_mod	true
45	ill-mannered	_	ill-mannered	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	type	(s())	40	MOD_s	true
46	yells.	_	yells.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@s@@think-01, 2@@n@@at-first, 43@@explicitanon0@@-, 32@@s@@familiarize-01, 7@@t@@mean-01, 3@@d@@i, 44@@s@@such, 26@@p@@certain, 25@@s@@contrast-01, 11@@s@@golden, 14@@m@@color, 30@@n@@_NAME_, 41@@explicitanon0@@-, 38@@n@@ever, 40@@s@@greet-01, 45@@s@@type, 6@@d@@child, 17@@d@@_NAME_, 21@@r@@rarity, 42@@d@@council-member, 39@@explicitanon0@@-, 28@@d@@child, 36@@a@@and]
sentence=1	In	in	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	time	_	time	NN	O	(b<root> / --LEX--  :duration-of (e<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
4	it	_	it	PRP	O	_	i	_	0	IGNORE	true
5	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	11	MOD_o	true
6	me	_	I	PRP	O	_	i	_	0	IGNORE	true
7	to	_	to	TO	O	_	person	_	0	IGNORE	true
8	explain	_	explain	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_s	true
9	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	grasps	_	grasps	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op1	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (g<op1>)  :op2 (r<op2>))	$LEMMA$	(op2(o(), s()), op1(o(), s()))	0	ROOT	true
12	loses	_	lose	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_op2	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	words,	_	words,	NNP	O	_	thing	_	0	IGNORE	true
15	grasps	_	grasps	JJ	O	_	$LEMMA$-01	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
17	loses	_	lose	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	APP_op2	true
18	phrases	_	phrase	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
19	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
20	they	_	they	PRP	O	_	person	_	0	IGNORE	true
21	go	_	go	VBP	O	(d<root> / --LEX--)	$LEMMA$-02	()	16	APP_op1	true
22	past.	_	past.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@s@@grasps-01, 18@@d@@phrase, 5@@s@@take-10, 16@@a@@and, 21@@d@@go-02, 11@@a@@and, 8@@d@@explain-01, 12@@s@@lose-02, 9@@d@@she, 3@@b@@time, 17@@s@@lose-02]
sentence=1	Exhibit	exhibit	exhibit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	goers	_	goer	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	protest-01	(s())	4	APP_s	true
3	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	became	_	become	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	part	_	part	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	have-$LEMMA$-91	(poss())	4	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	very	_	very	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	exhibit	_	exhibit	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_poss	true
10	they	_	they	PRP	O	_	person	_	0	IGNORE	true
11	had	_	have	VBD	O	_	person	_	0	IGNORE	true
12	wanted	_	want	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
13	to	_	to	IN	O	_	person	_	0	IGNORE	true
14	attend.	_	attend.	NNP	O	_	and	_	0	IGNORE	true

nodealignment=[1@@d@@exhibit, 4@@s@@become-01, 9@@d@@exhibit, 2@@s@@protest-01, 5@@h@@have-part-91, 3@@n@@then, 12@@s@@want-01, 8@@p@@very]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	were	_	be	VBD	O	_	person	_	0	IGNORE	true
3	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	42	APP_op1	true
4	with	_	with	IN	O	_	-	_	0	IGNORE	true
5	comics,	_	comics,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
6	like,	_	like,	NNP	O	_	mean-01	_	0	IGNORE	true
7	left	_	leave	VBD	O	(d<root> / --LEX--)	$LEMMA$-19	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	3	MOD_mod	true
9	right,	_	right,	NNP	O	_	and	_	0	IGNORE	true
10	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	were	_	be	VBD	O	_	person	_	0	IGNORE	true
12	coming	_	come	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-11	(s())	8	APP_op2	true
13	up	_	up	RP	O	_	thing	_	0	IGNORE	true
14	with	_	with	IN	O	_	-	_	0	IGNORE	true
15	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
16	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
17	Karis,	karis,	karis,	NN	O	_	_NAME_	_	0	IGNORE	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	high	_	high	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	school	_	school	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
21	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
22	came	_	come	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-11	(s(), o())	34	APP_o	true
23	up	_	up	RP	O	_	thing	_	0	IGNORE	true
24	with	_	with	IN	O	_	-	_	0	IGNORE	true
25	that	_	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
26	one,	_	one,	NN	O	_	multi-sentence	_	0	IGNORE	true
27	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
28	came	_	come	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-up-11	(s())	42	APP_op2	true
29	up	_	up	RP	O	_	thing	_	0	IGNORE	true
30	with	_	with	IN	O	_	-	_	0	IGNORE	true
31	an	_	an	DT	O	_	1	_	0	IGNORE	true
32	individual	_	individual	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
34	called	_	call	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	42	MOD_s	true
35	Thad's_World_Destruction	_name_	Destruction	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	33	MOD_mod	true
36	and,	_	and,	IN	O	_	mean-01	_	0	IGNORE	true
37	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
38	wanted	_	want	VBD	O	(s<root> / --LEX--  :ARG1 (r<s>)  :concession-of (c<mod>))	$LEMMA$-01	(mod(), s())	33	MOD_mod	true
39	to	_	to	TO	O	_	thing	_	0	IGNORE	true
40	illustrate	_	illustrate	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	38	APP_s	true
41	it,	_	it,	NNP	O	_	and	_	0	IGNORE	true
42	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
43	so,	_	so,	VB	O	_	and	_	0	IGNORE	true
44	that's	_	that's	PRP	O	_	person	_	0	IGNORE	true
45	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
46	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	42	APP_op3	true
47	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
48	ended	_	end	VBD	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-up-03	(s())	46	APP_mod	true
49	up	_	up	RP	O	_	thing	_	0	IGNORE	true
50	doing	_	do	VBG	O	(d<root> / --LEX--)	$LEMMA$-02	()	48	APP_s	true
51	it.	_	it.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[20@@b@@school, 7@@d@@leave-19, 50@@d@@do-02, 25@@d@@that, 21@@d@@she, 3@@s@@come-01, 8@@a@@and, 46@@t@@way, 32@@p@@individual, 42@@a@@and, 34@@s@@call-01, 12@@s@@come-up-11, 1@@d@@We, 35@@n@@_NAME_, 19@@p@@high, 28@@s@@come-up-11, 38@@s@@want-01, 48@@s@@end-up-03, 40@@d@@illustrate-01, 33@@d@@story, 22@@s@@come-up-11, 15@@d@@thing]
sentence=1	The	the	the	DT	O	_	name	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	5	APP_o2	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	Philadelphia	_name_	Philadelphia	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	gave	_	give	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	APP_op1	true
6	that	_	that	IN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	support,	_	support,	NNP	O	_	shit	_	0	IGNORE	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	support	_	support	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	8	APP_op2	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	received	_	receive	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	10	MOD_o	true
13	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
14	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	city	_	city	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	APP_o2	true
17	this	_	this	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	State	state	state	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
19	was,	_	was,	VBP	O	_	thing	_	0	IGNORE	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	was	_	be	VBD	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
25	1960	_name_	1960	CD	O	(d<root> / date-entity  :year (explicitanon2 / --LEX--)  :time-of (m<mod>))	_NUMBER_	(mod())	34	MOD_mod	true
26	convention,	_	convention,	NFP	O	_	and	_	0	IGNORE	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	key	_	key	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$	(s(), o())	8	MOD_s	true
29	to	_	to	IN	O	_	thing	_	0	IGNORE	true
30	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
31	victory	_	victory	NN	O	(d<root> / --LEX--)	win-01	()	28	APP_o	true
32	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	31	MOD_mod	true
33	the	_	the	DT	O	_	he	_	0	IGNORE	true
34	country.	_	country.	NN	O	(d<root> / --LEX--)	_NAME_	()	32	APP_op1	true

nodealignment=[25@@d@@date-entity, 5@@b@@give-01, 18@@d@@state, 14@@p@@this, 28@@s@@key, 11@@d@@i, 31@@d@@win-01, 15@@d@@city, 2@@d@@person, 10@@s@@support-01, 16@@a@@and, 12@@b@@receive-01, 30@@d@@our, 32@@b@@across, 4@@n@@_NAME_, 6@@d@@that, 4@@c@@city, 34@@d@@_NAME_, 25@@explicitanon2@@_NUMBER_, 8@@a@@and]
sentence=1	Cynthia_Thompson,	_name_	thompson,	CD	O	_	_NAME_	_	0	IGNORE	true
2	curator	_	curator	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	9	MOD_s	true
3	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
4	director	_	director	NN	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$LEMMA$	(s(), o())	9	MOD_s	true
5	of	_	of	IN	O	_	person	_	0	IGNORE	true
6	exhibits	_	exhibit	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
7	at	_	at	IN	O	_	thing	_	0	IGNORE	true
8	the_University_of_Arkansas,_Fayetteville,_said,_"These	_name_	"These	:	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	9	MOD_mod	true
9	images	_	image	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	serve	_	serve	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	as	_	as	IN	O	_	person	_	0	IGNORE	true
12	documentation	_	documentation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	document-01	(s())	10	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	12	APP_s	true
15	in	_	in	IN	O	_	after	_	0	IGNORE	true
16	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
17	every	_	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	day	_	day	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	life	_	life	NN	O	(d<root> / --LEX--)	live-01	()	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
21	art	_	art	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
22	-	_	-	HYPH	O	_	$LEMMA$	_	0	IGNORE	true
23	one	_	one	CD	O	_	1	_	0	IGNORE	true
24	which	_	which	WDT	O	_	i	_	0	IGNORE	true
25	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
26	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	10	MOD_o	true
27	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	enjoy	_	enjoy	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
29	a	_	a	DT	O	_	1	_	0	IGNORE	true
30	glimpse	_	glimpse	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	MOD_s	true
31	into."	_	into."	NNP	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[8@@p@@_NAME_, 28@@s@@enjoy-01, 6@@d@@exhibit-01, 4@@h@@have-org-role-91, 26@@s@@include-91, 3@@d@@and, 30@@s@@glimpse-01, 20@@a@@and, 17@@p@@every, 25@@explicitanon0@@many, 18@@p@@day, 9@@p@@image, 10@@s@@serve-01, 12@@s@@document-01, 2@@s@@curator, 27@@d@@us, 14@@d@@person, 19@@d@@live-01, 4@@g@@director, 21@@d@@art]
sentence=1	Any	any	any	DT	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
2	—	_	—	NN	O	_	multi-sentence	_	0	IGNORE	true
3	pretty	_	pretty	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	much	_	much	RB	O	_	$LEMMA$	_	0	IGNORE	true
5	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	possible-01	(mod(), s())	6	MOD_mod	true
9	—	_	—	.	O	(s<root> / --LEX--  :ARG1 (p<s>))	capable-01	(s())	1	MOD_s	true

nodealignment=[8@@s@@possible-01, 7@@d@@you, 9@@s@@capable-01, 5@@p@@any, 1@@d@@any, 3@@p@@pretty, 6@@n@@time]
sentence=1	Around	around	around	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
4	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	had	_	have	VBD	O	_	cause-01	_	0	IGNORE	true
6	copied	_	copy	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
7	for	_	for	IN	O	_	thing	_	0	IGNORE	true
8	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	Hebrew	_name_	hebrew	JJ	O	(r<root> / religious-group  :name (n / --LEX--))	_NAME_	()	6	APP_o	true
11	Gospel,	gospel,	gospel,	NN	O	_	include-91	_	0	IGNORE	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
14	fragments	_	fragment	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
15	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
16	preserved	_	preserve	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
19	notes,	_	notes,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	30	APP_op1	true
23	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
24	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	Gospel	gospel	Gospel	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	the	_	the	DT	O	_	person	_	0	IGNORE	true
29	Hebrews,	_name_	hebrews,	NN	O	_	_NAME_	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	APP_o2	true
31	which	_	which	WDT	O	_	i	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	Nazarenes	_name_	Nazarenes	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	34	APP_s	true
34	considered	_	consider	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	30	APP_op2	true
35	to	_	to	TO	O	_	person	_	0	IGNORE	true
36	be	_	be	VB	O	_	person	_	0	IGNORE	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	true	_	true	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	MOD_s	true
39	Gospel	gospel	Gospel	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
40	of	_	of	IN	O	_	thing	_	0	IGNORE	true
41	Matthew.	matthew.	Matthew.	NNP	O	_	_NAME_	_	0	IGNORE	true
42	[19]	_	[19]	XX	O	_	thing	_	0	IGNORE	true

nodealignment=[39@@d@@Gospel, 3@@d@@time, 33@@n@@_NAME_, 4@@d@@he, 6@@b@@copy-01, 16@@s@@preserve-01, 33@@o2@@organization, 14@@d@@fragment-01, 23@@n@@today, 34@@s@@consider-01, 26@@d@@Gospel, 1@@w@@around, 2@@p@@this, 10@@n@@_NAME_, 38@@s@@true-01, 30@@a@@and, 22@@s@@know-02, 10@@r@@religious-group]
sentence=1	Photos	photos	photo	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	released	_	release	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	1	MOD_s	true
3	of	_	of	IN	O	_	thing	_	0	IGNORE	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	scene	_	scene	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	showed	_	show	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	numerous	_	numerous	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	bloodied	_	bloodied	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	break-01	(s())	9	MOD_s	true
9	bodies	_	body	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_op2	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	6	MOD_op1	true
11	various	_	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	scattered	_	scatter	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
13	debris.	_	debris.	NN	O	(d<root> / --LEX--)	oppose-01	()	6	APP_o	true

nodealignment=[7@@explicitanon0@@numerous, 1@@d@@photo, 13@@d@@oppose-01, 2@@s@@release-01, 12@@s@@scatter-01, 6@@s@@show-01, 9@@d@@body, 5@@d@@scene, 11@@p@@various, 10@@a@@and, 8@@s@@break-01]
sentence=1	Throw	throw	throw	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_op1	true
2	on	_	on	RP	O	_	$LEMMA$	_	0	IGNORE	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	old	_	old	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	clothes	_	clothe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
6	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
7	put	_	put	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	APP_op2	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	smock	_	smock	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	over	_	over	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	6	MOD_mod	true
11	clothes	_	clothe	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o2	true
12	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
13	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
14	protected.	_	protected.	NN	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[11@@d@@clothe, 9@@d@@smock, 10@@b@@over, 1@@s@@throw-01, 6@@a@@or, 7@@b@@put-01, 4@@p@@old, 3@@explicitanon0@@some, 5@@d@@clothe, 13@@s@@want-01, 12@@d@@you]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	is	_	be	VBZ	O	_	possible-01	_	0	IGNORE	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	denying	_	deny	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
5	that	_	that	IN	O	_	oppose-01	_	0	IGNORE	true
6	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
7	are	_	be	VBP	O	_	exist-01	_	0	IGNORE	true
8	words	_	word	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
9	which	_	which	WDT	O	_	thing	_	0	IGNORE	true
10	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
11	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
12	instinctively	_	instinctively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	automatic	(mod())	11	MOD_mod	true
13	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
14	be	_	be	VB	O	_	deserve-01	_	0	IGNORE	true
15	adequate	_	adequate	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	suffice-01	(s())	4	APP_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	express	_	express	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	15	MOD_mod	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
20	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	stand	_	stand	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	19	MOD_s	true
22	for.”	_	for.”	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@explicitanon0@@-, 12@@t@@automatic, 17@@s@@express-01, 15@@s@@suffice-01, 8@@d@@word, 11@@s@@feel-01, 21@@s@@stand-03, 19@@d@@idea, 10@@d@@we, 4@@s@@deny-01]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	future	_	future	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
5	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
6	of	_	of	IN	O	_	concern-02	_	0	IGNORE	true
7	ease	_	ease	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
9	resting	_	rest	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	8	APP_op2	true
10	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
11	of	_	of	IN	O	_	except-01	_	0	IGNORE	true
12	incessant	_	incessant	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	striving	_	strive	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_o	true
14	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
15	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
16	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	may	_	may	MD	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	possible-01	(mod(), s())	13	MOD_mod	true
18	fulfill	_	fulfill	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	17	APP_s	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	pledges	_	pledge	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_op2	true
21	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
23	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	18	APP_o	true
27	the	_	the	DT	O	_	thing	_	0	IGNORE	true
28	one	_	one	NN	O	_	1	_	0	IGNORE	true
29	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
30	shall	_	shall	MD	O	_	person	_	0	IGNORE	true
31	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	MOD_s	true
32	today.	_	today.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[24@@o@@often, 20@@d@@pledge, 31@@s@@take-01, 2@@n@@future, 18@@s@@fulfill-01, 23@@s@@so, 26@@a@@and, 10@@s@@contrast-01, 12@@p@@incessant, 7@@d@@ease, 8@@a@@or, 9@@d@@rest-01, 17@@i@@possible-01, 16@@d@@we, 4@@explicitanon0@@-, 25@@s@@take-01, 13@@d@@strive-01, 1@@p@@that]
sentence=1	Um,_Jesus	_name_	Jesus	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	turned	_	turn	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-02	(o2(), s(), o())	0	ROOT	true
3	to	_	to	IN	O	_	person	_	0	IGNORE	true
4	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
5	disciples,	_	disciples,	NFP	O	_	and	_	0	IGNORE	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	remember,	_	remember,	NNPS	O	_	thing	_	0	IGNORE	true
8	when	_	when	WRB	O	_	he	_	0	IGNORE	true
9	some	_	some	DT	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
10	deserted	_	desert	VBD	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	12	MOD_mod	true
11	him,	_	him,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	and	_	and	CC	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o2	true
13	seemed,	_	seemed,	NNP	O	_	thing	_	0	IGNORE	true
14	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	2	MOD_o	true
15	they	_	they	PRP	O	_	person	_	0	IGNORE	true
16	were	_	be	VBD	O	_	person	_	0	IGNORE	true
17	disappointed	_	disappoint	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_s	true
18	in	_	in	IN	O	_	i	_	0	IGNORE	true
19	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
22	sayings,	_	sayings,	NNP	O	(d<root> / --LEX--)	and	()	17	APP_s	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
24	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	were	_	be	VBD	O	_	person	_	0	IGNORE	true
26	offended	_	offend	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_op2	true
27	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	the	_	the	DT	O	_	he	_	0	IGNORE	true
31	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
32	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
33	said,	_	said,	NNP	O	_	and	_	0	IGNORE	true
34	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
35	they	_	they	PRP	O	_	cause-01	_	0	IGNORE	true
36	walked	_	walk	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	34	APP_op2	true
37	no	_	no	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	36	MOD_mod	true
38	longer	_	longer	RBR	O	(n<root> / --LEX--  :time-of (p<mod>))	no-$LEMMA$	(mod())	36	MOD_mod	true
39	with	_	with	IN	O	_	-	_	0	IGNORE	true
40	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
41	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
42	said.	_	said.	ADD	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[12@@d@@and, 37@@explicitanon0@@-, 1@@n@@_NAME_, 34@@a@@and, 19@@explicitanon0@@some, 38@@n@@no-longer, 2@@b@@turn-02, 10@@v@@desert-01, 31@@d@@thing, 14@@s@@cause-01, 28@@explicitanon0@@some, 22@@d@@and, 1@@p@@person, 9@@d@@some, 26@@s@@offend-01, 6@@d@@you, 23@@a@@and, 36@@d@@walk-01, 17@@s@@disappoint-01]
sentence=1	Other	other	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	countries,	_	countries,	NNS	O	_	and	_	0	IGNORE	true
3	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
7	mention,	_	mention,	NNPS	O	_	say-01	_	0	IGNORE	true
8	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	MOD_o	true
9	stronger	_	strong	JJR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	strong-02	(s())	11	MOD_s	true
10	social	_	social	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	society	(mod())	11	MOD_mod	true
11	orientations	_	orientation	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	0	ROOT	true
12	in	_	in	IN	O	_	i	_	0	IGNORE	true
13	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	aspects	_	aspect	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	society.	_	society.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[9@@b@@strong-02, 11@@s@@orientation, 5@@d@@one, 13@@p@@all, 3@@s@@include-01, 8@@s@@have-03, 10@@p@@society, 6@@d@@you, 1@@p@@other, 9@@m@@more, 14@@p@@aspect]
sentence=1	Spiritually	spiritually	spiritually	RB	O	(d<root> / --LEX--)	objective	()	2	APP_op1	true
2	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	8	MOD_mod	true
3	culturally	_	culturally	RB	O	(d<root> / --LEX--)	culture	()	2	APP_op2	true
4	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	Moriori,	_name_	moriori,	CD	O	_	_NAME_	_	0	IGNORE	true
7	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	holds	_	hold	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	the	_	the	DT	O	_	-1	_	0	IGNORE	true
10	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
11	known	_	know	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	concentration	_	concentration	NN	O	(d<root> / --LEX--)	concentrate-02	()	8	APP_o	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	momori-rakau,	_	momori-rakau,	-RRB-	O	_	$LEMMA$	_	0	IGNORE	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	12	MOD_op1	true
16	tree	_	tree	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	carvings	_	carving	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	construct-01	(s())	15	APP_op2	true
18	done	_	do	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_o	true
19	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	ancestors	_	ancestor	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	18	APP_s	true
22	of	_	of	IN	O	_	person	_	0	IGNORE	true
23	today's	_	today'	NNS	O	_	_NAME_	_	0	IGNORE	true
24	Moriori.	moriori.	Moriori.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[3@@d@@culture, 1@@d@@objective, 8@@s@@hold-01, 18@@s@@do-02, 15@@a@@or, 7@@d@@it, 10@@p@@last, 11@@s@@know-02, 4@@p@@important, 17@@s@@construct-01, 21@@h@@have-rel-role-91, 16@@d@@tree, 12@@d@@concentrate-02, 2@@a@@and, 21@@f@@ancestor, 21@@p@@person]
sentence=1	The	the	the	DT	O	_	mean-01	_	0	IGNORE	true
2	area	_	area	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
3	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
4	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	encompasses	_	encompass	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
6	Phoenix	_name_	Phoenix	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
7	was	_	be	VBD	O	_	person	_	0	IGNORE	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	center	_	center	NN	O	(c<root> / --LEX--  :poss (a<poss>)  :domain (t<dom>))	$LEMMA$	(dom(), poss())	0	ROOT	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	name	_	0	IGNORE	true
12	Hohokam	_name_	Hohokam	NNP	O	(e<root> / ethnic-group  :name (n / --LEX--))	_NAME_	()	9	APP_poss	true
13	culture,	_	culture,	NNP	O	_	name	_	0	IGNORE	true
14	which	_	which	WDT	O	_	organization	_	0	IGNORE	true
15	built	_	build	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
16	large	_	large	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	canal	_	canal	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	systems	_	system	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op1	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	network	_	network	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
22	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
23	towns	_	town	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	and	_	and	CC	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
25	villages,	_	villages,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
26	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
27	remains	_	remain	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	MOD_s	true
28	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	30	MOD_s	true
29	be	_	be	VB	O	_	person	_	0	IGNORE	true
30	viewed	_	view	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	MOD_s	true
31	in	_	in	IN	O	_	i	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	city	_	city	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
34	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
36	day.	_	day.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[33@@b@@city, 16@@p@@large, 6@@c@@city, 12@@n@@_NAME_, 19@@a@@and, 23@@g@@town, 12@@e@@ethnic-group, 15@@s@@build-01, 24@@g@@and, 2@@d@@area, 18@@d@@system, 21@@d@@network, 17@@p@@canal, 28@@s@@possible-01, 9@@c@@center, 35@@p@@this, 5@@s@@encompass-01, 30@@s@@view-01, 4@@n@@now, 27@@s@@remain-01, 6@@n@@_NAME_]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	founders	_	founder	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	found-01	(s())	5	APP_s	true
3	of	_	of	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	Airbnb	_name_	Airbnb	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
5	recognized	_	recognize	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_s	true
9	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	5	APP_o	true
10	unused	_	unused	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	MOD_s	true
11	resources,	_	resources,	NNP	O	_	thing	_	0	IGNORE	true
12	bedrooms,	_	bedrooms,	NNS	O	_	thing	_	0	IGNORE	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_o	true
16	need.	_	need.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@some, 9@@s@@have-03, 4@@n@@_NAME_, 14@@p@@other, 10@@s@@unused-01, 2@@w@@found-01, 4@@c@@company, 15@@d@@person, 8@@d@@person, 2@@p@@person, 5@@s@@recognize-01]
sentence=1	"He's	"he's	"He's	LS	O	_	person	_	0	IGNORE	true
2	hanging	_	hang	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-06	(s())	7	APP_op1	true
3	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
4	with	_	with	IN	O	_	i	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	celebrities,	_name_	celebrities,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	_NAME_	(s())	2	APP_s	true
7	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
8	has	_	have	VBZ	O	_	say-01	_	0	IGNORE	true
9	kind	_	kind	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-of	(mod())	11	MOD_mod	true
10	of	_	of	RB	O	_	$LEMMA$	_	0	IGNORE	true
11	become	_	become	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_op2	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	sort	_	sort	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	of	_	of	IN	O	_	person	_	0	IGNORE	true
16	celebrity	_	celebrity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	was	_	be	VBD	O	_	person	_	0	IGNORE	true
19	interested	_	interested	JJ	O	(s<root> / --LEX--  :ARG2 (g<s>))	interest-01	(s())	21	MOD_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	documenting	_	document	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
22	earlier	_	earlier	RBR	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	early	(mod())	21	MOD_mod	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
25	career",	_	career",	JJ	O	_	cause-01	_	0	IGNORE	true
26	Wilkins	_name_	Wilkins	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	21	APP_s	true
27	said.	_	said.	NN	O	_	i	_	0	IGNORE	true

nodealignment=[13@@s@@same-01, 9@@s@@kind-of, 22@@e@@early, 16@@d@@celebrity, 22@@m@@more, 7@@a@@and, 21@@s@@document-01, 11@@d@@become-01, 2@@s@@hang-out-06, 26@@p@@person, 6@@s@@_NAME_, 26@@n@@_NAME_, 14@@p@@sort, 19@@s@@interest-01]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	finally	_	finally	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	final	(mod())	4	MOD_mod	true
4	found	_	find	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_o	true
7	there	_	there	RB	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	10	MOD_s	true
10	dance	_	dance	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	6	MOD_s	true
11	with.	_	with.	RB	O	_	person	_	0	IGNORE	true

nodealignment=[5@@explicitanon0@@some, 7@@b@@there, 10@@s@@dance-01, 3@@p@@final, 4@@s@@find-01, 6@@d@@person, 9@@s@@possible-01, 1@@p@@well, 2@@d@@i]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
2	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	robe	_	robe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
5	I’d	i’d	I’d	NNP	O	_	_NAME_	_	0	IGNORE	true
6	brought	_	bring	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	from	_	from	IN	O	_	i	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	bathroom	_	bathroom	NN	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
11	wrapped	_	wrap	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_op2	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	around	_	around	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
14	her	_	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_op1	true
15	shoulders.	_	shoulders.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[10@@a@@and, 2@@s@@take-01, 1@@d@@i, 6@@s@@bring-01, 13@@b@@around, 11@@s@@wrap-01, 9@@s@@bathroom, 4@@d@@robe, 14@@d@@she]
sentence=1	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
2	spirits	_	spirit	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_op1	true
3	recovered,	_	recovered,	NNP	O	_	and	_	0	IGNORE	true
4	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
5	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
6	soon	_	soon	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	as-$LEMMA$-as	(mod())	15	MOD_mod	true
7	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
8	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
9	had	_	have	VBD	O	_	$LEMMA$-concession-91	_	0	IGNORE	true
10	got	_	get	VBN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-05	(s())	6	MOD_s	true
11	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	my	_	my	PRP$	O	_	cause-01	_	0	IGNORE	true
13	habit,	_	habit,	.	O	_	$LEMMA$	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
15	followed	_	follow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	APP_op2	true
16	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	he	_	0	IGNORE	true
19	garden	_	garden	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	have	_	have	VBP	O	_	person	_	0	IGNORE	true
22	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	told	_	tell	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
24	about.	_	about.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@s@@get-05, 15@@s@@follow-02, 22@@n@@already, 23@@s@@tell-01, 19@@d@@garden, 4@@a@@and, 6@@n@@as-soon-as, 2@@d@@spirit]
sentence=1	"Someone	"someone	"someone	CD	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	emailed	_	email	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
3	me	_	I	PRP	O	(d<root> / --LEX--)	i	()	2	APP_o2	true
4	earlier_today	_name_	today	NN	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	2	APP_o	true
5	talking	_	talk	VBG	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	2	MOD_mod	true
6	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	a	_	a	DT	O	_	1	_	0	IGNORE	true
8	tool	_	tool	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	group’s	_	group’s	NN	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	using	_	use	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	attack	_	attack	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_s	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	scientology	_	scientology	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_s	true
17	website.	_	website.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 1@@p@@person, 4@@n@@newspaper, 12@@s@@use-01, 8@@d@@tool, 2@@b@@email-01, 14@@s@@attack-01, 4@@n2@@_NAME_, 5@@t@@talk-01, 16@@n@@_NAME_, 3@@d@@i, 16@@p@@person]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
3	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
4	it's	_	it's	PRP$	O	_	thing	_	0	IGNORE	true
5	marketed,	_	marketed,	NNS	O	_	_NAME_	_	0	IGNORE	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_op2	true
7	the	_	the	DT	O	_	thing	_	0	IGNORE	true
8	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
9	we're	_	we're	NN	O	_	_NAME_	_	0	IGNORE	true
10	d-	_	d-	XX	O	_	et-cetera	_	0	IGNORE	true
11	—	_	—	FW	O	_	and	_	0	IGNORE	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	develop	_	develop	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	APP_op2	true
14	needs	_	need	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	13	APP_s	true
15	for	_	for	IN	O	_	thing	_	0	IGNORE	true
16	it.	_	it.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@a@@and, 1@@a@@and, 8@@t@@way, 13@@s@@develop-02, 14@@d@@need-01]
sentence=1	The	the	the	DT	O	_	and	_	0	IGNORE	true
2	results	_	result	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	very	_	very	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	reliable.	_	reliable.	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true

nodealignment=[2@@d@@result-01, 6@@s@@very, 7@@t@@reliable., 3@@d@@we, 4@@s@@get-01]
sentence=1	Eventually,	eventually,	Eventually,	LS	O	_	and	_	0	IGNORE	true
2	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	got	_	get	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
4	the	_	the	DT	O	_	he	_	0	IGNORE	true
5	break	_	break	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-19	(s())	3	APP_o	true
6	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
8	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	eager	_	eager	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	for:	_	for:	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@s@@eager-01, 5@@s@@break-19, 8@@s@@so, 3@@c@@get-01, 2@@d@@she]
sentence=1	Rather	rather	rather	RB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	instead-of-91	(s(), o())	11	MOD_s	true
2	than	_	than	IN	O	_	-	_	0	IGNORE	true
3	passively	_	passively	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	passive	(mod())	4	MOD_mod	true
4	attempting	_	attempt	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_o	true
5	to	_	to	TO	O	_	and	_	0	IGNORE	true
6	absorb	_	absorb	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	APP_s	true
7	new	_	new	JJ	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_s	true
8	information,	_	information,	NNS	O	_	and	_	0	IGNORE	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	learn	_	learn	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
12	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
13	to	_	to	TO	O	_	thing	_	0	IGNORE	true
14	make	_	make	VB	O	_	cause-01	_	0	IGNORE	true
15	conscious	_	conscious	JJ	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	decisions	_	decision	NNS	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	decide-01	(s(), o())	11	APP_o	true
17	about	_	about	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	methods	_	method	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	of	_	of	IN	O	_	thing	_	0	IGNORE	true
21	learning	_	learn	VBG	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	19	MOD_mod	true
22	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	use	_	use	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
25	(based	_	(based	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
26	on	_	on	IN	O	_	thing	_	0	IGNORE	true
27	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
28	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	intend	_	intend	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
30	to	_	to	TO	O	_	thing	_	0	IGNORE	true
31	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	29	APP_s	true
32	with	_	with	IN	O	_	thing	_	0	IGNORE	true
33	the	_	the	DT	O	_	thing	_	0	IGNORE	true
34	information),	_	information),	NNP	O	_	thing	_	0	IGNORE	true
35	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
36	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
37	will	_	will	MD	O	_	thing	_	0	IGNORE	true
38	select	_	select	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op1	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	29	APP_o	true
40	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	39	APP_op2	true
41	learning	_	learning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	42	MOD_mod	true
42	materials	_	material	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_s	true
43	that	_	that	WDT	O	_	thing	_	0	IGNORE	true
44	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
45	appropriate	_	appropriate	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
46	for	_	for	IN	O	_	thing	_	0	IGNORE	true
47	your	_	your	PRP$	O	_	thing	_	0	IGNORE	true
48	needs,	_	needs,	NNS	O	_	and	_	0	IGNORE	true
49	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	3	MOD_op1	true
50	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
51	persistent	_	persistent	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	49	APP_op2	true
52	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
53	will	_	will	MD	O	_	thing	_	0	IGNORE	true
54	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
55	in	_	in	IN	O	_	i	_	0	IGNORE	true
56	the	_	the	DT	O	_	thing	_	0	IGNORE	true
57	learning	_	learning	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	51	MOD_mod	true
58	activity.	_	activity.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[40@@s@@use-01, 49@@a@@and, 7@@d@@new-01, 19@@d@@method, 6@@s@@absorb-01, 51@@d@@persistent, 45@@s@@appropriate-02, 42@@d@@material, 21@@p@@learn-01, 38@@s@@select-01, 16@@g@@decide-01, 15@@t@@conscious, 57@@p@@learning-01, 29@@s@@intend-01, 31@@d@@do-02, 11@@c@@learn-01, 9@@d@@you, 4@@s@@attempt-01, 39@@a@@and, 25@@s@@(based-01, 3@@t@@passive, 41@@p@@learning-01, 1@@s@@instead-of-91, 24@@s@@use-01]
sentence=1	Mention	mention	mention	VBP	O	(b<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG1 (g<s>)  :ARG0 (y / you))	$LEMMA$-01	(s())	0	ROOT	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	1	APP_s	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	that	_	that	IN	O	_	-	_	0	IGNORE	true
6	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
8	like.	_	like.	RB	O	_	-	_	0	IGNORE	true

nodealignment=[3@@d@@you, 1@@y@@you, 4@@s@@know-01, 2@@d@@person, 1@@explicitanon0@@imperative, 7@@explicitanon0@@-, 1@@b@@mention-01]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
2	is	_	be	VBZ	O	_	$LEMMA$-temporally-at-91	_	0	IGNORE	true
3	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
4	fifth	_name_	fifth	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	5	(mod())	7	MOD_mod	true
5	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
6	I've	i've	i've	ADD	O	_	-	_	0	IGNORE	true
7	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	11	APP_s	true
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	a	_	a	DT	O	_	-	_	0	IGNORE	true
10	World_Cup	_name_	Cup	NNP	O	(g<root> / game  :name (n / --LEX--))	_NAME_	()	7	APP_o	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	felt	_	feel	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
14	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	1	_	0	IGNORE	true
16	first.	_	first.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@s@@contrast-01, 1@@d@@this, 13@@d@@feel-01, 10@@g@@game, 4@@o@@ordinal-entity, 10@@n@@_NAME_, 4@@explicitanon0@@5, 7@@s@@be-located-at-91]
sentence=1	Jealousy	jealousy	jealousy	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	envy-01	(s())	9	APP_s	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
4	achievements	_	achievement	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	achieve-01	()	5	APP_op1	true
5	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_s	true
6	seeming	_	seem	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	lifestyle	_	lifestyle	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
8	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
9	cause	_	cause	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
10	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	to	_	to	TO	O	_	thing	_	0	IGNORE	true
13	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	9	APP_o	true
14	smug	_	smug	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op1	true
15	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
16	arrogant	_	arrogant	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_op2	true
17	about	_	about	IN	O	_	thing	_	0	IGNORE	true
18	something	_	something	NN	O	(a<root> / --LEX--  :topic-of (w<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
19	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	think	_	think	VBP	O	(f<root> / --LEX--  :ARG1 (p<o>))	$LEMMA$-01	(o(s()))	18	MOD_s	true
21	they	_	they	PRP	O	_	person	_	0	IGNORE	true
22	do	_	do	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	20	APP_o	true
23	better	_	better	RBR	O	(b<root> / --LEX--  :ARG1 (p<s>)  :degree (m / more))	good-02	(s())	22	MOD_s	true
24	than	_	than	IN	O	_	more	_	0	IGNORE	true
25	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	MOD_op1	true
27	own	_	own	VBP	O	(d<root> / --LEX--)	$LEMMA$-01	()	26	APP_op2	true
28	/	_	/	,	O	_	slash	_	0	IGNORE	true
29	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	MOD_s	true
30	that	_	that	IN	O	_	thing	_	0	IGNORE	true
31	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	don't.	_	don't.	XX	O	_	-	_	0	IGNORE	true

nodealignment=[1@@s@@envy-01, 20@@f@@think-01, 9@@s@@cause-01, 15@@a@@or, 7@@d@@lifestyle, 16@@d@@arrogant, 13@@s@@feel-01, 27@@d@@own-01, 22@@s@@do-02, 14@@d@@smug, 23@@m@@more, 5@@a@@or, 10@@p@@another, 23@@b@@good-02, 6@@s@@seem-01, 18@@a@@something, 4@@d@@achieve-01, 8@@s@@possible-01, 11@@d@@person, 29@@s@@have-03, 4@@t@@thing, 26@@a@@or]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	felt	_	feel	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	his	_	he	PRP$	O	_	cause-01	_	0	IGNORE	true
4	hand	_	hand	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	tighten	_	tighten	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
6	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	the	_	the	DT	O	_	he	_	0	IGNORE	true
8	flight	_	flight	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	fly-01	(mod())	9	MOD_mod	true
9	helmet	_	helmet	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
10	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	held,	_	held,	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	2	MOD_s	true
12	swallowing	_	swallow	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_o	true
13	hard.	_	hard.	ADD	O	_	cause-01	_	0	IGNORE	true

nodealignment=[11@@s@@and, 1@@d@@He, 8@@p@@fly-01, 5@@s@@tighten-01, 2@@s@@feel-01, 4@@d@@hand, 9@@d@@helmet, 12@@d@@swallow-01]
sentence=1	"The	"the	"the	DT	O	_	mean-01	_	0	IGNORE	true
2	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	drew	_	draw	VBD	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-02	(mod(), s(), o())	9	MOD_mod	true
5	a	_	a	DT	O	_	thing	_	0	IGNORE	true
6	staircase	_	staircase	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	would	_	would	MD	O	_	thing	_	0	IGNORE	true
9	smash	_	smash	VB	O	(l<root> / --LEX--  :ARG0 (b<s>)  :ARG1 (t<o>))	$LEMMA$-01	(o(poss_UNIFY_s()))	15	APP_op1	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	head	_	head	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	9	APP_o	true
12	against	_	against	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	ceiling,	_	ceiling,	NNS	O	_	mean-01	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
16	the	_	the	DT	O	_	he	_	0	IGNORE	true
17	space	_	space	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
19	reducing	_	reduce	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
20	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
21	reducing,	_	reducing,	NNP	O	_	shit	_	0	IGNORE	true
22	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	15	APP_op3	true
23	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	would	_	would	MD	O	_	person	_	0	IGNORE	true
25	end	_	end	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-up-03	(s())	22	APP_op1	true
26	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
27	in	_	in	IN	O	_	i	_	0	IGNORE	true
28	the	_	the	DT	O	_	he	_	0	IGNORE	true
29	upper	_	upper	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	corner	_	corner	NN	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
31	of	_	of	IN	O	_	thing	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	ceiling.	_	ceiling.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[15@@a@@and, 29@@p@@upper, 4@@t@@draw-02, 9@@l@@smash-01, 22@@o@@and, 3@@d@@she, 17@@d@@space, 6@@d@@staircase, 25@@s@@end-up-03, 30@@d@@corner, 19@@s@@reduce-01, 11@@h@@head, 7@@d@@you]
sentence=1	We’ve	we’ve	We’ve	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	mass	_	mass	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	strikes	_	strike	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	2	APP_s	true
5	all	_	all	RB	O	_	$LEMMA$	_	0	IGNORE	true
6	around	_	around	IN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
7	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
8	world,	_	world,	NNS	O	_	and	_	0	IGNORE	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	countries	_	country	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
11	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	wouldn’t	_	wouldn’t	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	expect	_	expect	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	10	MOD_s	true
15	it.	_	it.	JJ	O	_	-	_	0	IGNORE	true

nodealignment=[13@@explicitanon0@@-, 6@@b@@around, 3@@p@@mass, 10@@b@@country, 14@@s@@expect-01, 4@@d@@strike-01, 2@@s@@see-01]
sentence=1	Many	many	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
2	southwest	_	southw	JJS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
3	Asian	_name_	asian	JJ	O	(c3<root> / continent  :name (n2 / --LEX--)  :location-of (c2<mod>))	_NAME_	(mod())	14	MOD_mod	true
4	kingdoms,	_	kingdoms,	NNS	O	_	and	_	0	IGNORE	true
5	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
6	as	_	as	IN	O	_	and	_	0	IGNORE	true
7	Saudi	_name_	saudi	JJ	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_op1	true
8	Arabia,	arabia,	arabia,	CD	O	_	and	_	0	IGNORE	true
9	Qatar,	qatar,	qatar,	CD	O	_	include-91	_	0	IGNORE	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	2	MOD_mod	true
11	the	_	the	DT	O	(d<root> / --LEX--)	person	()	14	APP_s	true
12	United_Arab	_name_	Arab	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	10	APP_op2	true
13	Emirates,	_name_	Emirates,	NFP	O	_	and	_	0	IGNORE	true
14	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
15	absolute	_	absolute	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	monarchs	_	monarchs	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
18	power	_	power	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	MOD_poss	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	unrestricted.	_	unrestricted.	ADD	O	_	$LEMMA$-01	_	0	IGNORE	true

nodealignment=[1@@explicitanon0@@many, 2@@p@@southw, 12@@c@@country, 7@@c@@country, 14@@s@@have-03, 10@@a@@and, 16@@d@@monarchs, 7@@n@@_NAME_, 3@@n2@@_NAME_, 18@@m@@power, 3@@c3@@continent, 11@@d@@person, 12@@n@@_NAME_, 15@@p@@absolute]
sentence=1	In	in	in	IN	O	_	name	_	0	IGNORE	true
2	2000,	_	2000,	CD	O	_	and	_	0	IGNORE	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
4	was	_	be	VBD	O	_	person	_	0	IGNORE	true
5	cast	_	cast	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	as	_	as	IN	O	_	have-org-role-91	_	0	IGNORE	true
7	Dean_Forester	_name_	Forester	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	5	APP_o	true
8	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	television	_	television	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	series	_	series	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
12	Gilmore_Girls,	_name_	Girls,	VBZ	O	_	and	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	role	_	role	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
15	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
16	played	_	play	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	MOD_s	true
17	until	_	until	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
18	2005.	_	2005.	CD	O	_	1	_	0	IGNORE	true

nodealignment=[3@@d@@he, 16@@s@@play-01, 11@@b@@series, 5@@s@@cast-01, 17@@p@@until, 7@@n@@_NAME_, 14@@p@@role, 7@@p@@person, 10@@p@@television]
sentence=1	You’ve	_name_	you’ve	NN	O	_	_NAME_	_	0	IGNORE	true
2	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	3	MOD_mod	true
3	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
4	them	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	the	_	the	DT	O	_	thing	_	0	IGNORE	true
7	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
8	you	_	you	PRP	O	_	thing	_	0	IGNORE	true
9	like	_	like	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
10	them,	_	them,	NNP	O	_	thing	_	0	IGNORE	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
13	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
14	move	_	move	VBP	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	27	MOD_mod	true
15	the	_	the	DT	O	_	company	_	0	IGNORE	true
16	adjusters	_	adjuster	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	lend-01	()	14	APP_s	true
17	up	_	up	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	or	_	or	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	14	MOD_mod	true
19	down	_	down	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op2	true
20	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	straps	_	strap	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
23	occasionally,	_	occasionally,	RB	O	_	and	_	0	IGNORE	true
24	the	_	the	DT	O	_	he	_	0	IGNORE	true
25	straps	_	strap	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
26	will	_	will	MD	O	_	thing	_	0	IGNORE	true
27	last	_	last	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
28	longer.	_	longer.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@d@@down, 14@@o@@move-01, 17@@d@@up, 5@@p@@just, 18@@a@@or, 16@@e2@@lend-01, 11@@s@@contrast-01, 4@@d@@they, 2@@p@@probable, 3@@s@@get-01, 22@@b@@strap, 9@@s@@like-01, 25@@d@@strap, 27@@s@@last-01, 7@@t@@way, 16@@p2@@person, 13@@d@@you]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	m-	_	m-	NN	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	32	APP_op2	true
4	—	_	—	,	O	_	mean-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
6	reason	_	reason	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
7	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
8	were	_	be	VBD	O	_	person	_	0	IGNORE	true
9	showing	_	show	VBG	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	6	APP_s	true
10	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
11	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	at	_	at	IN	O	_	i	_	0	IGNORE	true
13	college,	_	college,	NNS	O	_	_NAME_	_	0	IGNORE	true
14	was	_	be	VBD	O	_	person	_	0	IGNORE	true
15	just,	_	just,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	1	MOD_s	true
16	to	_	to	TO	O	_	thing	_	0	IGNORE	true
17	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	15	APP_o	true
18	us,	_	us,	JJ	O	_	_NAME_	_	0	IGNORE	true
19	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
20	know	_	know	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
21	if	_	if	IN	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	interrogative	(mod())	1	MOD_mod	true
22	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
23	trimmer,	_	trimmer,	NNS	O	(d<root> / --LEX--)	thing	()	24	APP_op1	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	APP_s	true
25	shoer	_	shoer	NN	O	(d<root> / --LEX--)	_NAME_	()	24	APP_op2	true
26	was	_	be	VBD	O	_	person	_	0	IGNORE	true
27	doing	_	do	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	20	APP_s	true
28	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
29	right,	_	right,	VBZ	O	_	and	_	0	IGNORE	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	1	APP_op2	true
31	—	_	—	,	O	_	expressive	_	0	IGNORE	true
32	plus	_	plus	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	and	(op2())	1	APP_op3	true
33	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
34	knowledge	_	knowledge	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	know-01	(s())	30	APP_op2	true
35	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
36	knowing	_	know	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	APP_s	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	bones	_	bone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	36	APP_s	true
40	ligaments.	_	ligaments.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[32@@a@@and, 6@@s@@cause-01, 21@@explicitanon0@@interrogative, 3@@g@@government-organization, 7@@d@@they, 3@@n@@_NAME_, 20@@s@@know-01, 38@@d@@bone, 28@@d@@it, 23@@d@@thing, 15@@s@@cause-01, 27@@s@@do-02, 24@@a@@and, 36@@s@@know-01, 10@@d@@us, 11@@d@@this, 17@@s@@get-04, 25@@d@@_NAME_, 30@@a@@and, 39@@a@@and, 9@@b@@show-01, 1@@a@@and, 34@@s@@know-01]
sentence=1	That	that	that	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-temporally-at-91	(s(), o())	0	ROOT	true
3	last	_	last	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
4	night,	_	night,	NNS	O	_	mean-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
6	second	_name_	second	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	2	(mod())	7	MOD_mod	true
7	night	_	night	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
8	Renata	_name_	Renata	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
9	didn’t	_	didn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
11	home.	_	home.	NNP	O	_	-	_	0	IGNORE	true

nodealignment=[8@@p@@person, 8@@n@@_NAME_, 6@@o@@ordinal-entity, 10@@s@@come-01, 9@@explicitanon0@@-, 2@@s@@be-temporally-at-91, 3@@p@@last, 6@@explicitanon0@@2, 7@@n@@night, 1@@d@@that]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	guess	_	guess	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	6	APP_s	true
5	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
6	figure	_	figure	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-05	(s(), o())	2	MOD_o	true
7	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
8	is,	_	is,	CC	O	_	thing	_	0	IGNORE	true
9	what	_	what	WP	O	(r<root> / --LEX--  :domain (q<dom>))	amr-unknown	(dom())	2	APP_o	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	square	_	square	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	root	_	root	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
13	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_o	true
14	negative	_	negative	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	15	MOD_s	true
15	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	13	MOD_mod	true
16	thir	_	thir	NN	O	_	thing	_	0	IGNORE	true
17	–	_	–	HYPH	O	_	thing	_	0	IGNORE	true
18	thi	_	thi	NNP	O	_	i	_	0	IGNORE	true
19	–	_	–	:	O	_	and	_	0	IGNORE	true
20	two	_	two	CD	O	_	2	_	0	IGNORE	true
21	thirds	_	third	NNS	O	_	3	_	0	IGNORE	true
22	is.	_	is.	.	O	_	thing	_	0	IGNORE	true

nodealignment=[9@@r@@amr-unknown, 2@@s@@guess-01, 5@@explicitanon0@@-, 15@@explicitanon0@@2, 14@@s@@negative-03, 12@@d@@root, 13@@s@@include-91, 11@@p@@square, 1@@d@@i, 6@@s@@figure-out-05, 4@@d@@i, 3@@p@@all]
sentence=1	Lots	lots	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
3	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_s	true
4	rehash	_	rehash	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op1	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	same	_	same	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	ground	_	ground	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
9	sometimes	_	sometimes	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
10	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	retell	_	retell	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_op2	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	countless	_	countless	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	count	(mod())	16	MOD_mod	true
15	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
17	have	_	have	VBP	O	_	person	_	0	IGNORE	true
18	told.	_	told.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@d@@ground, 1@@explicitanon0@@lot, 16@@d@@joke-01, 15@@p@@other, 9@@o@@sometimes, 6@@s@@same-01, 4@@s@@rehash-01, 3@@d@@joke-01, 13@@d@@story, 11@@s@@retell-01, 14@@explicitanon0@@count, 8@@a@@and]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	what	_	what	WP	O	_	cause-01	_	0	IGNORE	true
4	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_o	true
5	think,	_	think,	NNP	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	and	(mod())	2	MOD_mod	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	MOD_s	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	18	MOD_mod	true
10	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
13	does	_	do	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	18	APP_o	true
14	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
15	card	_	card	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	mode,	_	mode,	NNP	O	_	i	_	0	IGNORE	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	7	APP_o	true
19	a	_	a	DT	O	_	thing	_	0	IGNORE	true
20	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	MOD_s	true
21	time.	_	time.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[9@@o@@ordinal-entity, 7@@s@@think-01, 13@@s@@do-02, 12@@d@@it, 2@@s@@know-01, 4@@d@@i, 5@@explicitanon0@@and, 15@@d@@card, 18@@s@@take-10, 9@@explicitanon0@@1, 1@@d@@You, 20@@s@@long-03]
sentence=1	Oh	oh	oh	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	here's	_	here's	.	O	(r<root> / --LEX--  :domain (q<dom>))	expressive	(dom())	3	APP_dom	true
3	one	_	one	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_dom	true
5	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
6	open.	_	open.	VB	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	expressive	(mod())	5	MOD_mod	true

nodealignment=[3@@r@@one, 1@@p@@oh, 6@@explicitanon0@@expressive, 4@@d@@you, 2@@r@@expressive, 5@@s@@possible-01]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	are	_	be	VBP	O	_	person	_	0	IGNORE	true
3	aware	_	aware	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	realize-01	(s(), o())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	six	_	six	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	6	(mod())	6	MOD_mod	true
6	studies	_	study	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	3	APP_o	true
7	designed	_	design	VBN	O	(f<root> / --LEX--  :ARG3 (r<o>)  :ARG1 (y<s>))	$LEMMA$-01	(o(s()))	6	MOD_s	true
8	to	_	to	TO	O	_	thing	_	0	IGNORE	true
9	investigate	_	investigate	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	APP_o	true
10	the	_	the	DT	O	_	thing	_	0	IGNORE	true
11	effects	_	effect	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-03	(s())	9	APP_o	true
12	of	_	of	IN	O	_	thing	_	0	IGNORE	true
13	a	_	a	DT	O	_	1	_	0	IGNORE	true
14	substantial	_	substantial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	period	_	period	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	APP_s	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	limited	_	limited	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	limit-01	(s())	18	MOD_s	true
18	exposure	_	exposure	NN	O	(d<root> / --LEX--)	expose-01	()	15	APP_s	true
19	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
20	adult	_	adult	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	L2	l2	l2	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true
22	training	_	training	NN	O	(d<root> / --LEX--)	train-01	()	19	APP_o	true
23	[17],	_	[17],	XX	O	_	and	_	0	IGNORE	true
24	[18],	_	[18],	XX	O	_	and	_	0	IGNORE	true
25	[21]–[24],	_	[21]–[24],	XX	O	_	include-91	_	0	IGNORE	true
26	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
27	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
28	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
29	were	_	be	VBD	O	_	person	_	0	IGNORE	true
30	restricted	_	restrict	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
31	to	_	to	IN	O	_	and	_	0	IGNORE	true
32	the	_	the	DT	O	_	and	_	0	IGNORE	true
33	examination	_	examination	NN	O	(d<root> / --LEX--)	examine-01	()	30	APP_o	true
34	of	_	of	IN	O	_	person	_	0	IGNORE	true
35	behavioral	_	behavioral	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	(performance)	_	(performance)	ADD	O	_	mean-01	_	0	IGNORE	true
37	outcomes.	_	outcomes.	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true

nodealignment=[9@@s@@investigate-01, 1@@d@@We, 30@@s@@restrict-01, 21@@p@@_NAME_, 3@@s@@realize-01, 15@@s@@period, 19@@s@@follow-01, 18@@d@@expose-01, 6@@d@@study-01, 14@@p@@substantial, 7@@f@@design-01, 35@@p@@behavioral, 33@@d@@examine-01, 5@@explicitanon0@@6, 17@@s@@limit-01, 20@@p@@adult, 11@@s@@effect-03, 37@@p@@outcomes., 26@@p@@all, 22@@d@@train-01]
sentence=1	Try	try	try	VB	O	(h<root> / --LEX--  :mode (explicitanon0 / imperative)  :ARG0 (a<s>)  :ARG1 (p<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
2	to	_	to	TO	O	_	and	_	0	IGNORE	true
3	be	_	be	VB	O	_	you	_	0	IGNORE	true
4	playful	_	playful	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op1	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	1	APP_o	true
6	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
7	slightly	_	slightly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	slight	(mod())	8	MOD_mod	true
8	sarcastic	_	sarcastic	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
11	respond	_	respond	VBP	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	1	MOD_mod	true
12	to	_	to	IN	O	_	thing	_	0	IGNORE	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	statements	_	statement	NNS	O	(t2<root> / thing  :ARG1-of (d / --LEX--  :ARG0 (t<s>)))	state-01	(s())	11	APP_o	true
15	of	_	of	IN	O	_	thing	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	person	_	person	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	you're	_	you're	PRP$	O	_	person	_	0	IGNORE	true
19	talking	_	talk	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	to.	_	to.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[6@@p@@even, 4@@d@@playful, 10@@d@@you, 1@@h@@try-01, 14@@d@@state-01, 7@@s@@slight, 11@@t@@respond-01, 5@@a@@and, 8@@d@@sarcastic, 1@@explicitanon0@@imperative, 14@@t2@@thing, 19@@s@@talk-01, 17@@d@@person]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
2	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	22	MOD_o	true
3	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	1	MOD_mod	true
4	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	7	MOD_s	true
5	the	_	the	DT	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	22	APP_s	true
6	remaining	_	remain	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
7	passengers	_	passenger	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
8	on	_	on	IN	O	_	have-org-role-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	flight,	_	flight,	NNS	O	_	include-91	_	0	IGNORE	true
11	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
12	are	_	be	VBP	O	_	person	_	0	IGNORE	true
13	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	14	MOD_mod	true
14	considered	_	consider	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
15	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	and	(s(), o())	22	MOD_s	true
16	be	_	be	VB	O	(d<root> / --LEX--)	person	()	22	APP_o	true
17	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-13	(s())	16	MOD_s	true
18	contacts,	_	contacts,	NNP	O	_	and	_	0	IGNORE	true
19	have	_	have	VBP	O	_	person	_	0	IGNORE	true
20	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	been	_	be	VBN	O	_	person	_	0	IGNORE	true
22	contacted	_	contact	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
23	to	_	to	TO	O	_	and	_	0	IGNORE	true
24	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op1	true
25	reassurance	_	reassurance	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
26	and	_	and	CC	O	(a<root> / --LEX--  :op2 (h<op2>)  :op1 (d<op1>)  :purpose-of (s2<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	22	MOD_mod	true
27	answer	_	answer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	26	APP_op2	true
28	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
29	questions	_	question	NNS	O	(t<root> / thing  :ARG1-of (d / --LEX--))	$LEMMA$-01	()	27	APP_o	true
30	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
31	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	MOD_s	true
32	have;	_	have;	NNP	O	_	and	_	0	IGNORE	true
33	those	_	those	DT	O	_	that	_	0	IGNORE	true
34	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	22	MOD_mod	true
35	that	_	that	WDT	O	_	have-org-role-91	_	0	IGNORE	true
36	haven't	_	haven't	WDT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	38	MOD_mod	true
37	been	_	be	VBN	O	_	person	_	0	IGNORE	true
38	contacted	_	contact	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	34	MOD_s	true
39	did	_	do	VBD	O	_	person	_	0	IGNORE	true
40	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	41	MOD_mod	true
41	provide	_	provide	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
42	accurate	_	accurate	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	contact	_	contact	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	41	APP_o	true
44	information.	_	information.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[42@@p@@accurate, 25@@d@@reassurance, 36@@explicitanon0@@-, 3@@explicitanon0@@_NUMBER_, 6@@s@@remain-01, 29@@t@@thing, 15@@s@@and, 2@@s@@contrast-01, 24@@s@@provide-01, 40@@explicitanon0@@-, 4@@s@@include-91, 41@@s@@provide-01, 31@@s@@possible-01, 5@@s@@include-91, 27@@s@@answer-01, 29@@d@@question-01, 34@@explicitanon0@@_NUMBER_, 38@@s@@contact-01, 17@@s@@close-13, 20@@p@@also, 28@@p@@any, 43@@d@@contact-01, 14@@s@@consider-01, 7@@d@@passenger, 22@@s@@contact-01, 16@@d@@person, 1@@p@@all, 13@@explicitanon0@@-, 26@@a@@and]
sentence=1	There's	there's	There's	NNP	O	_	-	_	0	IGNORE	true
2	nothing	_	nothing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	5	APP_s	true
4	really	_	really	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	real-04	(s())	5	MOD_s	true
5	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
6	like	_	like	IN	O	_	resemble-01	_	0	IGNORE	true
7	eating.	_	eating.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@s@@real-04, 2@@d@@nothing, 5@@s@@feel-02, 3@@d@@i]
sentence=1	Another	another	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	theme	_	theme	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	Higuchi	_name_	Higuchi	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
4	repeated	_	repeat	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	4	MOD_mod	true
7	ambition	_	ambition	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
9	cruelty	_	cruelty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	the	_	the	DT	O	_	person	_	0	IGNORE	true
12	Meiji	_name_	Meiji	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	13	MOD_mod	true
13	middle	_	middle	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
14	class.	_	class.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[4@@s@@repeat-01, 9@@d@@cruelty, 8@@a@@and, 1@@p@@another, 13@@p@@middle, 7@@d@@ambition, 6@@p@@person, 2@@p@@theme, 12@@n@@_NAME_, 3@@n@@_NAME_, 3@@p@@person]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	guys	_	guy	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
3	wake	_	wake	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-02	(s(), o())	0	ROOT	true
4	me	_	I	PRP	O	_	i	_	0	IGNORE	true
5	up	_	up	RP	O	_	say-01	_	0	IGNORE	true
6	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	true
7	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
8	I'm	i'm	i'm	WP	O	_	$LEMMA$	_	0	IGNORE	true
9	trying	_	try	VBG	O	(s2<root> / --LEX--  :ARG1 (h<o>)  :ARG0 (y<s>)  :time-of (r<mod>))	$LEMMA$-01	(mod(), o(s()))	3	MOD_mod	true
10	to	_	to	TO	O	_	person	_	0	IGNORE	true
11	take	_	take	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_o	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
14	nap.	_	nap.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true

nodealignment=[2@@p@@guy, 6@@r@@rate-entity-91, 14@@d@@nap., 13@@p@@little, 1@@d@@You, 3@@s@@wake-up-02, 9@@s2@@try-01, 11@@s@@take-01]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
4	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
5	is,	_	is,	NNP	O	_	expressive	_	0	IGNORE	true
6	the	_	the	DT	O	_	he	_	0	IGNORE	true
7	women	_	woman	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_dom	true
8	aren't	_	aren't	RB	O	_	-	_	0	IGNORE	true
9	all	_	all	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	over	_	over	RB	O	(r<root> / --LEX--  :domain (q<dom>))	all-$LEMMA$	(dom())	4	APP_o	true
11	me.	_	me.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[1@@p@@all, 10@@r@@all-over, 7@@d@@woman, 3@@s@@possible-01, 9@@s@@all, 4@@s@@say-01, 2@@d@@i]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	8	APP_s	true
3	a	_	a	DT	O	_	contr$LEMMA$st-01	_	0	IGNORE	true
4	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	5	MOD_s	true
5	career	_	career	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	in	_	in	IN	O	_	i	_	0	IGNORE	true
7	poetry,	_	poetry,	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	and	(mod())	2	MOD_mod	true
8	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
9	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
10	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	late	_	late	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	attention	_	attention	NN	O	(d<root> / --LEX--)	attend-02	()	8	APP_o	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	have	_	have	VBP	O	_	person	_	0	IGNORE	true
16	garnered	_	garner	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	Mets-inspired	mets-inspired	mets-inspired	JJ	O	(p<root> / --LEX--  :ARG1 (b<s>)  :polarity (explicitanon0 / -))	_NAME_	(s())	13	MOD_s	true
21	work.	_	work.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[8@@s@@contrast-01, 11@@n@@late, 13@@d@@attend-02, 1@@d@@You, 2@@s@@have-03, 20@@p@@_NAME_, 4@@s@@long-03, 16@@s@@garner-01, 7@@p@@and, 20@@explicitanon0@@-, 5@@d@@career]
sentence=1	Well	well	well	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_dom	true
3	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	cause-01	(s(), o())	5	MOD_s	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	review	_	review	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
6	for	_	for	IN	O	_	infer-01	_	0	IGNORE	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
8	people,	_	people,	NNS	O	_	have-concession-91	_	0	IGNORE	true
9	depending	_	depend	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
10	on	_	on	IN	O	_	cause-01	_	0	IGNORE	true
11	what	_	what	WDT	O	_	amr-unknown	_	0	IGNORE	true
12	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	the_year	_name_	year	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
15	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	took	_	take	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	APP_o	true
17	it.	_	it.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[9@@s@@depend-01, 15@@d@@you, 16@@s@@take-01, 2@@d@@it, 14@@n@@year, 3@@s@@cause-01, 7@@explicitanon0@@some, 5@@r@@review, 1@@p@@well]
sentence=1	Every	every	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	time	_	time	NN	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	got	_	get	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-05	(s())	0	ROOT	true
5	up.	_	up.	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@p@@every, 2@@o@@time, 4@@s@@get-05, 3@@d@@i]
sentence=1	Ambiguity	ambiguity	ambiguity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	frightens	_	frighten	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
3	arrogant	_	arrogant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	2	APP_o	true
5	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
6	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	suggests	_	suggest	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
8	imperfection,	_	imperfection,	CD	O	_	and	_	0	IGNORE	true
9	change	_	change	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	10	APP_op1	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	APP_s	true
11	lack	_	lack	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_op2	true
12	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
13	certainty	_	certainty	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	(realities	_	(realities	-LRB-	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
15	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
16	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
17	must	_	must	MD	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	18	MOD_s	true
18	contend	_	contend	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
19	with	_	with	IN	O	_	-	_	0	IGNORE	true
20	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
21	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	18	MOD_s	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	can).	_	can).	NNP	O	_	thing	_	0	IGNORE	true

nodealignment=[10@@a@@and, 3@@p@@arrogant, 14@@d@@(realities, 2@@s@@frighten-01, 18@@s@@contend-01, 11@@s@@lack-01, 4@@d@@person, 21@@m@@most, 5@@s@@cause-01, 16@@p@@all, 1@@d@@ambiguity, 7@@s@@suggest-01, 9@@d@@change-01, 15@@d@@we, 21@@b2@@good-02, 17@@s@@obligate-01, 13@@d@@certainty]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	7	MOD_mod	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	exchange	_	exchange	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	1	APP_op1	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	fire,	_	fire,	NNP	O	_	_NAME_	_	0	IGNORE	true
6	North_Korea	_name_	Korea	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
7	stated	_	state	VBD	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
8	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
9	would	_	would	MD	O	_	and	_	0	IGNORE	true
10	attack	_	attack	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
11	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	loudspeakers	_	loudspeaker	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
13	broadcasting	_	broadcast	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_s	true
14	propaganda	_	propaganda	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
16	would	_	would	MD	O	_	and	_	0	IGNORE	true
17	respond,	_	respond,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	7	APP_o	true
18	militarily,	_	militarily,	NNS	O	_	-	_	0	IGNORE	true
19	within	_	within	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	after	(op1(), mod())	17	MOD_mod	true
20	48_hours	_name_	hour	NNS	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	19	APP_op1	true
21	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	person	_	0	IGNORE	true
23	broadcasts	_	broadcast	NNS	O	_	$LEMMA$-01	_	0	IGNORE	true
24	do	_	do	VBP	O	_	person	_	0	IGNORE	true
25	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	26	MOD_mod	true
26	stop.	_	stop.	VB	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	have-polarity-91	(mod(), s())	7	MOD_mod	true

nodealignment=[6@@n@@_NAME_, 26@@o@@have-polarity-91, 25@@explicitanon0@@-, 11@@p@@any, 6@@c@@country, 14@@d@@propaganda, 20@@t@@temporal-quantity, 15@@a@@and, 12@@d@@loudspeaker, 1@@w@@after, 7@@c@@state-01, 20@@m@@hour, 3@@d@@exchange-01, 19@@w@@after, 13@@s@@broadcast-01, 10@@s@@attack-01, 17@@s@@and]
sentence=1	She	she	She	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op1	true
2	handed	_	hand	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
3	me	_	I	PRP	O	_	i	_	0	IGNORE	true
4	a	_	a	DT	O	_	i	_	0	IGNORE	true
5	shirt	_	shirt	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
6	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
7	bought	_	buy	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	at	_	at	IN	O	_	i	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	stadium	_	stadium	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	she	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	gave	_	give	VBD	O	_	$LEMMA$-01	_	0	IGNORE	true
14	me	_	I	PRP	O	_	i	_	0	IGNORE	true
15	a	_	a	DT	O	_	i	_	0	IGNORE	true
16	big	_	big	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
17	hug.	_	hug.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@d@@She, 2@@s@@hand-01, 11@@a@@and, 7@@s@@buy-01, 10@@b@@stadium, 5@@d@@shirt, 16@@p@@big]
sentence=1	Wilkins	_name_	Wilkins	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
2	said,"	_	said,"	NNP	O	_	have-org-role-91	_	0	IGNORE	true
3	[Warhol]	[warhol]	[warhol]	XX	O	_	person	_	0	IGNORE	true
4	liked	_	like	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
7	photo	_	photo	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	booths	_	booth	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_op1	true
9	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	Polaroid's	_name_	Polaroid's	NNP	O	(d<root> / --LEX--)	_NAME_	()	13	APP_s	true
12	front	_	front	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	flash	_	flash	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	9	APP_op2	true
14	looked".	_	looked".	XX	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@d@@_NAME_, 8@@d@@booth, 9@@a@@and, 13@@s@@flash, 1@@n@@_NAME_, 7@@p@@photo, 1@@p@@person, 12@@p@@front, 4@@s@@like-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	find	_	find	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	fodder	_	fodder	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	lots	_	lot	NNS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	places	_	place	NNS	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
8	—	_	—	:	O	_	thing	_	0	IGNORE	true
9	from	_	from	IN	O	_	and	_	0	IGNORE	true
10	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
11	life,	_	life,	NNS	O	_	and	_	0	IGNORE	true
12	joke	_	joke	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	13	MOD_mod	true
13	files	_	file	NNS	O	(s<root> / --LEX--  :source-of (d<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
14	online,	_	online,	NN	O	_	and	_	0	IGNORE	true
15	by	_	by	IN	O	_	and	_	0	IGNORE	true
16	repurposing	_	repurpose	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	3	MOD_mod	true
17	jokes	_	joke	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	16	APP_s	true
18	you’ve	_	you’ve	NNP	O	_	thing	_	0	IGNORE	true
19	heard	_	hear	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	MOD_s	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	past,	_	past,	NNS	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	_	$LEMMA$	_	3	IGNORE	true
24	so	_	so	RB	O	_	$LEMMA$	_	0	IGNORE	true
25	on.	_	on.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@s@@hear-01, 13@@s@@file, 4@@d@@fodder, 16@@b@@repurpose-01, 12@@p@@joke-01, 2@@s@@possible-01, 5@@explicitanon0@@lot, 3@@s@@find-01, 1@@d@@You, 7@@b@@place, 17@@d@@joke-01]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	Senate	_name_	Senate	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	must	_	must	MD	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	0	ROOT	true
4	immediately	_	immediately	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	immediate	(mod())	5	MOD_mod	true
5	set	_	set	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	3	APP_o	true
6	to	_	to	TO	O	_	up-$LEMMA$	_	0	IGNORE	true
7	work	_	work	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	mission	_	mission	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	7	APP_o	true
11	President	president	President	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$REPL$	(s())	12	MOD_s	true
12	Biden	_name_	Biden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	10	APP_s	true
13	described—restoring	_	described—restoring	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	greatness	_	greatness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op1	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	13	APP_o	true
17	goodness	_	goodness	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op2	true
18	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
19	America.	_name_	America.	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@n@@immediate, 13@@s@@described—restoring-01, 10@@s@@mission, 7@@s@@work-01, 12@@n@@_NAME_, 2@@g@@government-organization, 11@@h@@have-org-role-91, 5@@c@@set-02, 17@@d@@goodness, 12@@p@@person, 15@@d@@greatness, 2@@n@@_NAME_, 3@@o@@obligate-01, 16@@a@@and, 11@@p2@@president]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	find	_	find	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
4	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
5	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	reinforces	_	reinforce	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	17	MOD_mod	true
7	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	the	_	the	DT	O	_	he	_	0	IGNORE	true
10	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	know-01	()	6	APP_o	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	have	_	have	VBP	O	_	person	_	0	IGNORE	true
13	gained,	_	gained,	VBN	O	_	and	_	0	IGNORE	true
14	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	does	_	do	VBZ	O	_	cause-01	_	0	IGNORE	true
16	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	17	MOD_mod	true
17	ensure	_	ensure	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
18	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	17	APP_s	true
20	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	information	_	information	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
23	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
24	will	_	will	MD	O	_	thing	_	0	IGNORE	true
25	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
26	to	_	to	TO	O	_	thing	_	0	IGNORE	true
27	do	_	do	VB	O	_	$LEMMA$-02	_	0	IGNORE	true
28	well	_	well	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-09	(mod())	2	MOD_mod	true
29	on	_	on	IN	O	_	thing	_	0	IGNORE	true
30	the	_	the	DT	O	_	thing	_	0	IGNORE	true
31	test.	_	test.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@some, 17@@s@@ensure-01, 22@@d@@information, 10@@d@@know-01, 2@@s@@find-02, 1@@d@@You, 28@@t@@well-09, 5@@d@@this, 20@@p@@all, 25@@s@@need-01, 6@@t@@reinforce-01, 19@@s@@have-03, 16@@explicitanon0@@-]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	group	_	group	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
3	whose	_	whose	WP$	O	_	have-03	_	0	IGNORE	true
4	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	3	(mod())	5	MOD_mod	true
5	robots	_	robot	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
6	collectively	_	collectively	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	collective	(mod())	7	MOD_mod	true
7	earned	_	earn	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_s	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	most	_	most	JJS	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	points	_	point	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	won	_	win	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	match.	_	match.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[5@@d@@robot, 2@@d@@group, 7@@s@@earn-01, 12@@p@@that, 6@@p@@collective, 11@@s@@win-01, 10@@d@@point, 4@@explicitanon0@@3, 9@@explicitanon0@@most]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_s	true
4	places	_	place	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
5	no	_	no	DT	O	_	-	_	0	IGNORE	true
6	one	_	one	NN	O	(d<root> / --LEX--)	no-$LEMMA$	()	9	APP_s	true
7	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
8	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	gone	_	go	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	4	MOD_o	true
10	before.	_	before.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[1@@d@@We, 8@@n@@ever, 2@@s@@possible-01, 3@@s@@go-02, 6@@d@@no-one, 9@@s@@go-02, 4@@d@@place]
sentence=1	After	after	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	19	MOD_mod	true
2	exposing	_	expose	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	true
3	the	_	the	DT	O	_	and	_	0	IGNORE	true
4	ants	_	ant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	fungus,	_	fungus,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
8	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
9	took	_	take	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_o	true
10	pictures	_	picture	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
11	of	_	of	IN	O	_	person	_	0	IGNORE	true
12	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	foraging	_	forage	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	MOD_s	true
14	arena	_	arena	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	three	_	three	CD	O	(d<root> / --LEX--)	3	()	17	APP_s	true
16	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
17	per	_	per	IN	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	rate-entity-91	(mod(), s())	18	MOD_mod	true
18	day,	_	day,	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	19	MOD_mod	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
20	counted	_	count	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op2	true
21	how	_	how	WRB	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	amr-unknown	(mod())	19	MOD_mod	true
22	many	_	many	JJ	O	_	monetary-quantity	_	0	IGNORE	true
23	ants	_	ant	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_s	true
24	were	_	be	VBD	O	_	person	_	0	IGNORE	true
25	present	_	present	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
26	on	_	on	IN	O	_	thing	_	0	IGNORE	true
27	each	_	each	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
28	food-source.	_	food-source.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	19	MOD_mod	true

nodealignment=[2@@s@@expose-01, 25@@s@@present-01, 10@@s@@picture-01, 28@@p@@_NAME_, 17@@r@@rate-entity-91, 21@@explicitanon0@@amr-unknown, 18@@explicitanon0@@1, 15@@d@@3, 8@@d@@we, 14@@d@@arena, 19@@a@@and, 9@@s@@take-01, 13@@s@@forage-01, 27@@p@@each, 23@@d@@ant, 4@@d@@ant, 20@@s@@count-01, 12@@p@@each, 1@@w@@after]
sentence=1	Citing	citing	cite	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_s	true
2	privacy	_	privacy	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	rules,	_	rules,	NNP	O	_	and	_	0	IGNORE	true
4	U.S.	_name_	U.S.	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	5	APP_s	true
5	officials	_	official	NNS	O	(p<root> / person  :ARG0-of (h / have-org-role-91  :ARG2 (o / --LEX--)  :ARG1 (n<s>)))	$LEMMA$	(s())	8	APP_s	true
6	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
7	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	said	_	say	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_s	true
9	why	_	why	WRB	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	cause-01	(s())	8	APP_o	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	team	_	team	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
12	was	_	be	VBD	O	_	person	_	0	IGNORE	true
13	initially	_	initially	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	initial	(mod())	14	MOD_mod	true
14	denied	_	deny	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	9	APP_s	true
15	visas,	_	visas,	NNS	O	_	_NAME_	_	0	IGNORE	true
16	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
17	Afghan	_name_	Afghan	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	18	APP_o	true
18	Ambassador	ambassador	Ambassador	NNP	O	(g<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG1 (m<o>)  :ARG0 (p<s>)))	$REPL$	(s(), o())	19	MOD_s	true
19	Hamdullah_Mohib	_name_	Mohib	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	20	APP_s	true
20	says	_	say	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	APP_o	true
21	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
22	were	_	be	VBD	O	_	person	_	0	IGNORE	true
23	concerns	_	concern	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	20	APP_o	true
24	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
25	would	_	would	MD	O	_	thing	_	0	IGNORE	true
26	attempt	_	attempt	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	APP_s	true
27	to	_	to	TO	O	_	and	_	0	IGNORE	true
28	remain	_	remain	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	APP_s	true
29	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
30	the_United_States	_name_	States	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	31	APP_op1	true
31	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	28	APP_s	true
32	in	_	in	IN	O	_	person	_	0	IGNORE	true
33	Canada	_name_	Canada	NNP	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	31	APP_op2	true
34	after	_	after	IN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	28	MOD_mod	true
35	the	_	the	DT	O	_	person	_	0	IGNORE	true
36	contest.	_	contest.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@explicitanon0@@-, 33@@c@@country, 4@@c@@country, 9@@t3@@thing, 31@@a@@or, 11@@d@@team, 18@@g@@ambassador, 30@@c@@country, 30@@n@@_NAME_, 13@@n@@initial, 34@@n@@after, 17@@n@@_NAME_, 26@@s@@attempt-01, 2@@p@@privacy, 23@@s@@concern-01, 5@@h@@have-org-role-91, 17@@c@@country, 28@@s@@remain-01, 5@@p@@person, 19@@n@@_NAME_, 16@@s@@contrast-01, 20@@s@@say-01, 4@@n@@_NAME_, 14@@s@@deny-01, 9@@t@@cause-01, 8@@s@@say-01, 18@@h@@have-org-role-91, 19@@p@@person, 1@@s@@cite-01, 33@@n@@_NAME_, 5@@o@@official]
sentence=1	Runs	runs	run	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	batted	_	bat	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
3	in	_	in	IN	O	_	and	_	0	IGNORE	true
4	171	_	171	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	2	MOD_mod	true

nodealignment=[2@@s@@bat-01, 1@@d@@run, 4@@explicitanon0@@_NUMBER_]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
4	using	_	use	VBG	O	(b<root> / --LEX--  :ARG1 (m<s>)  :manner-of (s<mod>))	$LEMMA$-01	(mod(), s())	2	MOD_mod	true
5	emails	_	email	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
6	on	_	on	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
8	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
9	hand	_	hand	NN	O	_	$LEMMA$	_	0	IGNORE	true
10	which	_	which	WDT	O	_	amr-unknown	_	0	IGNORE	true
11	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
12	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
14	voice	_	voice	NN	O	(c<root> / --LEX--  :domain (t<dom>)  :part-of (d<poss>))	$LEMMA$-01	(dom(), poss())	19	APP_op1	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
17	woman	_	woman	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
18	Eva	_name_	Eva	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	14	APP_dom	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	5	MOD_mod	true
20	narrative	_	narrative	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_op2	true
21	which	_	which	WDT	O	_	and	_	0	IGNORE	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	more	_	more	JJR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
25	perspective	_	perspective	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
28	man	_	man	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
29	Adam,	adam,	Adam,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
30	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
31	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
32	of	_	of	RB	O	_	$LEMMA$	_	0	IGNORE	true
33	confront	_	confront	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	38	APP_op1	true
34	them,	_	them,	NNP	O	_	mean-01	_	0	IGNORE	true
35	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
36	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	37	MOD_s	true
37	perspective	_	perspective	NN	O	(d<root> / --LEX--)	$LEMMA$	()	33	APP_s	true
38	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	APP_o	true
39	then	_	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
40	kind	_	kind	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
41	somehow	_	somehow	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	44	MOD_mod	true
42	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_s	true
43	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	38	APP_op2	true
44	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	43	APP_s	true
45	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
46	distortions	_	distortion	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	44	APP_o	true
47	in	_	in	IN	O	_	i	_	0	IGNORE	true
48	the	_	the	DT	O	_	thing	_	0	IGNORE	true
49	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
50	the	_	the	DT	O	_	thing	_	0	IGNORE	true
51	story	_	story	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	49	MOD_mod	true
52	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
53	told.	_	told.	JJ	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[14@@c@@voice-01, 46@@d@@distortion-01, 38@@a@@and, 4@@b@@use-01, 37@@d@@perspective, 25@@p@@perspective, 18@@n@@_NAME_, 39@@n@@then, 2@@s@@think-01, 49@@t@@way, 20@@d@@narrative, 42@@d@@you, 5@@d@@email, 18@@p@@person, 1@@d@@i, 36@@s@@differ-02, 33@@s@@confront-01, 41@@t@@somehow, 31@@p@@kind, 40@@p@@kind, 17@@d@@woman, 23@@s@@more, 12@@s@@more, 28@@p@@man, 51@@p@@story, 43@@s@@possible-01, 44@@s@@see-01, 19@@a@@and]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	obligate-01	(s(), o())	0	ROOT	true
3	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	4	MOD_mod	true
4	choice	_	choice	NN	O	(t<root> / thing  :ARG1-of (d / --LEX--))	choose-01	()	2	APP_o	true
5	but	_	but	IN	O	_	contrast-01	_	0	IGNORE	true
6	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
7	try	_	try	VB	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	2	MOD_mod	true
8	to	_	to	TO	O	_	1	_	0	IGNORE	true
9	work	_	work	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_o	true
10	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
11	every_day	_name_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :duration-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
12	to	_	to	TO	O	_	and	_	0	IGNORE	true
13	reward	_	reward	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	faith	_	faith	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	20	APP_s	true
19	have	_	have	VBP	O	_	person	_	0	IGNORE	true
20	placed	_	place	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	15	MOD_o	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	us.	_	us.	.	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[17@@n@@_NAME_, 10@@p@@together, 7@@d2@@try-01, 4@@d@@choose-01, 18@@d@@person, 13@@i@@reward-01, 20@@s@@place-01, 9@@s@@work-01, 2@@s@@obligate-01, 15@@d@@faith, 1@@d@@We, 3@@explicitanon0@@-, 4@@t@@thing, 17@@c@@country, 11@@t@@temporal-quantity, 11@@y@@day]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	achievement	_	achievement	NN	O	(d<root> / --LEX--)	achieve-01	()	11	APP_s	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	celebrate	_	celebrate	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
6	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
7	but	_	but	CC	O	(p<root> / --LEX--  :mod-of (s<mod>))	contrast-01	(mod())	11	MOD_mod	true
8	a	_	a	DT	O	_	1	_	0	IGNORE	true
9	step,	_	step,	NNP	O	_	mean-01	_	0	IGNORE	true
10	an	_	an	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
11	opening	_	opening	NN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
12	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
13	opportunity	_	opportunity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
14	to	_	to	IN	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	greater	_	great	JJR	O	(m<root> / more  :degree-of (o / --LEX--  :mod-of (g2<mod>)))	great	(mod())	18	MOD_mod	true
17	triumphs	_	triumph	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
18	and	_	and	CC	O	(o<root> / --LEX--  :op1 (r<op1>)  :op2 (p2<op2>)  :beneficiary-of (p<mod>))	$LEMMA$	(op2(), op1(), mod())	11	MOD_mod	true
19	achievements	_	achievement	NNS	O	(d<root> / --LEX--)	achieve-01	()	18	APP_op2	true
20	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
21	await	_	await	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	MOD_s	true
22	us.	_	us.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@o@@great, 16@@m@@more, 13@@d@@opportunity, 2@@d@@achieve-01, 3@@d@@we, 11@@s@@opening-01, 5@@n@@today, 17@@d@@triumph, 21@@s@@await-01, 19@@d@@achieve-01, 4@@s@@celebrate-01, 18@@o@@and, 7@@p@@contrast-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	think	_	think	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	have-concession-91	_	0	IGNORE	true
4	providing	_	provide	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	12	APP_s	true
5	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	4	APP_s	true
6	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
7	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
8	practical	_	practical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	education	_	education	NN	O	(d<root> / --LEX--)	educate-01	()	4	APP_o	true
10	is	_	be	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
11	one	_	one	CD	O	_	$LEMMA$	_	0	IGNORE	true
12	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	APP_o	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	empowering	_	empowering	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	16	MOD_s	true
16	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
18	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	19	MOD_s	true
19	offer	_	offer	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	16	MOD_o	true
20	a	_	a	DT	O	_	company	_	0	IGNORE	true
21	person.	_	person.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@s@@provide-01, 16@@d@@thing, 15@@s@@empowering-01, 18@@s@@possible-01, 14@@s@@most, 2@@s@@think-01, 9@@d@@educate-01, 5@@d@@person, 12@@s@@include-91, 8@@p@@practical, 17@@d@@you, 1@@d@@i, 19@@s@@offer-01]
sentence=1	Her	her	she	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_poss	true
2	video	_	video	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_s	true
3	"How	"how	"How	''	O	_	$LEMMA$	_	0	IGNORE	true
4	To	to	to	TO	O	_	thing	_	0	IGNORE	true
5	Avoid	avoid	avoid	VB	O	(d2<root> / --LEX--  :ARG1 (i<o>)  :ARG0 (p<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), o(s()))	2	MOD_mod	true
6	Talking	talking	talk	VBG	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
7	To	to	to	IN	O	_	and	_	0	IGNORE	true
8	People	people	People	NNS	O	(d<root> / --LEX--)	person	()	6	APP_o	true
9	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
10	Don't	don't	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
11	Want	want	want	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	MOD_s	true
12	To	to	to	TO	O	_	person	_	0	IGNORE	true
13	Talk	talk	talk	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	8	MOD_s	true
14	To	to	to	IN	O	_	-	_	0	IGNORE	true
15	"was	_	"was	NNP	O	_	person	_	0	IGNORE	true
16	featured	_	feature	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	articles	_	article	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	16	APP_o	true
19	by	_	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	The_New_York_Times	_name_	Times	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	21	APP_op1	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_poss	true
22	ABC_News	_name_	News	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	21	APP_op2	true
23	in	_	in	IN	O	_	i	_	0	IGNORE	true
24	August	_name_	August	NNP	O	(d<root> / date-entity  :month (explicitanon0 / --LEX--)  :time-of (p<mod>))	8	(mod())	16	MOD_mod	true
25	2011.	_	2011.	CD	O	_	1	_	0	IGNORE	true

nodealignment=[22@@n@@newspaper, 21@@a@@and, 11@@s@@want-01, 10@@explicitanon0@@-, 20@@n@@newspaper, 2@@m@@video, 13@@s@@talk-01, 24@@explicitanon0@@8, 9@@d@@You, 18@@m@@article, 20@@n2@@_NAME_, 22@@n2@@_NAME_, 6@@t@@talk-01, 1@@d@@she, 24@@d@@date-entity, 5@@d2@@avoid-01, 8@@d@@person, 16@@s@@feature-01]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
3	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	think	_	think	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	1	APP_op2	true
5	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_op1	true
6	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	help	_	help	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	4	APP_o	true
8	me	_	I	PRP	O	_	i	_	0	IGNORE	true
9	seeing	_	see	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	7	APP_o	true
10	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	9	APP_s	true
11	at	_	at	IN	O	_	cause-01	_	0	IGNORE	true
12	their	_	they	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
13	worst	_	bad	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	bad-05	(s())	9	APP_o	true
14	at	_	at	IN	O	_	event	_	0	IGNORE	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	very	_	very	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
17	beginning,	_	beginning,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
18	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
19	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
20	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
21	hear	_	hear	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	18	APP_s	true
22	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
23	doom	_	doom	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	21	MOD_op1	true
25	gloom.	_	gloom.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@p@@all, 1@@a@@and, 10@@d@@person, 9@@c@@see-01, 2@@d@@i, 7@@s@@help-01, 6@@explicitanon0@@-, 21@@s@@hear-01, 13@@b2@@bad-05, 18@@s@@cause-01, 16@@p@@very, 23@@d@@doom, 5@@d@@it, 3@@p@@just, 13@@m@@most, 4@@c@@think-01, 20@@d@@you, 24@@a@@and]
sentence=1	If	if	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	have-03	_	0	IGNORE	true
3	task	_	task	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_dom	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	are	_	be	VBP	O	_	person	_	0	IGNORE	true
6	trying	_	try	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
7	to	_	to	TO	O	_	thing	_	0	IGNORE	true
8	complete	_	complete	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
9	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
10	a	_	a	DT	O	_	-	_	0	IGNORE	true
11	difficult	_	difficult	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	15	APP_o	true
12	one,	_	one,	NN	O	_	and	_	0	IGNORE	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	can	_	can	MD	O	(f<root> / --LEX--  :ARG1 (p<o>))	possible-01	(o(s()))	0	ROOT	true
15	take	_	take	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	14	APP_o	true
16	a	_	a	DT	O	_	1	_	0	IGNORE	true
17	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
18	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
19	work.	_	work.	NN	O	(d<root> / --LEX--)	_NAME_	()	14	APP_s	true

nodealignment=[4@@d@@we, 6@@s@@try-01, 14@@f@@possible-01, 11@@r@@difficult, 8@@s@@complete-01, 17@@explicitanon0@@lot, 3@@d@@task, 19@@d@@_NAME_, 15@@s@@take-10]
sentence=1	So	so	so	RB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	cause-01	(o(s()))	0	ROOT	true
2	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
3	far	_	far	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	so-$LEMMA$	(mod())	8	MOD_mod	true
4	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	today	(mod())	5	MOD_mod	true
5	morning	_	morning	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	I've	i've	i've	ADD	O	_	$LEMMA$	_	0	IGNORE	true
7	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	read	_	read	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	1	APP_o	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	few	_	few	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	studies	_	study	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_o	true
12	(it's	_	(it's	.	O	_	multi-sentence	_	0	IGNORE	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	little	_	little	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	slow	_	slow	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-04	(s())	8	MOD_s	true
16	in	_	in	IN	O	_	i	_	0	IGNORE	true
17	the	_	the	DT	O	_	and	_	0	IGNORE	true
18	morning)	_	morning)	NNS	O	_	and	_	0	IGNORE	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	general	_	general	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	MOD_s	true
21	nuclear	_	nuclear	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nucleus	(mod())	22	MOD_mod	true
22	medicine	_	medicine	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
23	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	8	MOD_o	true
24	a	_	a	DT	O	_	c$LEMMA$use-01	_	0	IGNORE	true
25	lot	_	lot	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_s	true
28	takes	_	take	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-10	(s(), o())	23	APP_s	true
29	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	28	APP_o	true
30	for	_	for	IN	O	_	and	_	0	IGNORE	true
31	the	_	the	DT	O	_	$LEMMA$y	_	0	IGNORE	true
32	radio	_	radio	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
33	tracers	_	tracer	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
34	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
35	go	_	go	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-01	(mod(), s(), o())	28	MOD_mod	true
36	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
37	the	_	the	DT	O	_	and	_	0	IGNORE	true
38	body	_	body	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op1	true
39	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	35	APP_o	true
40	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
41	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	42	MOD_s	true
42	organ	_	organ	NN	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
43	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
44	are	_	be	VBP	O	_	person	_	0	IGNORE	true
45	targeting,	_	targeting,	CD	O	_	mean-01	_	0	IGNORE	true
46	so	_	so	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	23	MOD_s	true
47	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
48	have	_	have	VBP	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	46	APP_o	true
49	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
50	wait	_	wait	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	48	APP_s	true
51	a	_	a	DT	O	_	1	_	0	IGNORE	true
52	little	_	little	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	53	MOD_mod	true
53	bit	_	bit	NN	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	50	MOD_mod	true
54	in	_	in	IN	O	_	i	_	0	IGNORE	true
55	the	_	the	DT	O	_	person	_	0	IGNORE	true
56	morning.	_	morning.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@p@@just, 15@@s@@slow-04, 41@@s@@specific-02, 21@@p@@nucleus, 39@@a@@or, 22@@d@@medicine, 47@@d@@we, 33@@d@@tracer, 5@@m@@morning, 3@@n@@so-far, 38@@d@@body, 35@@s@@go-01, 1@@c@@cause-01, 46@@s@@cause-01, 5@@d@@date-entity, 10@@explicitanon0@@few, 50@@d@@wait-01, 29@@d@@time, 42@@d@@organ, 11@@s@@study-01, 28@@s@@take-10, 23@@s@@cause-01, 20@@s@@general-02, 52@@p@@little, 14@@s@@little, 48@@s@@obligate-01, 25@@explicitanon0@@lot, 27@@d@@stuff, 4@@p@@today, 53@@s@@bit, 8@@s@@read-01, 32@@p@@radio]
sentence=1	Even	even	even	RB	O	_	contrast-01	_	0	IGNORE	true
2	though	_	though	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-concession-91	(s(), o())	23	MOD_s	true
3	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_dom	true
4	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	2	APP_o	true
5	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
6	be	_	be	VB	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	-	_	0	IGNORE	true
8	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	9	MOD_s	true
9	way	_	way	NN	O	(t3<root> / --LEX--  :domain (t2<dom>)  :manner-of (s2<mod>))	$LEMMA$	(dom(), mod())	4	APP_s	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	get	_	get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-05	(s())	9	APP_mod	true
12	around	_	around	IN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
13	the	_	the	DT	O	_	he	_	0	IGNORE	true
14	island,	_	island,	NNS	O	_	_NAME_	_	0	IGNORE	true
15	a	_	a	DT	O	_	1	_	0	IGNORE	true
16	ride	_	ride	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
17	on	_	on	IN	O	_	-	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	bus	_	bus	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
20	is	_	be	VBZ	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	an	_	an	DT	O	_	thing	_	0	IGNORE	true
23	experience	_	experience	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
24	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
25	should	_	should	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	recommend-01	(s(), o())	23	MOD_s	true
26	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	25	MOD_mod	true
27	miss.	_	miss.	VB	O	_	-	_	0	IGNORE	true

nodealignment=[11@@s@@get-05, 25@@s@@recommend-01, 26@@explicitanon0@@-, 8@@b2@@good-02, 9@@t3@@way, 5@@explicitanon0@@-, 24@@d@@you, 21@@p@@still, 23@@s@@experience-01, 8@@m@@most, 3@@d@@they, 16@@d@@ride-01, 2@@s@@have-concession-91, 19@@b@@bus, 4@@s@@possible-01, 12@@d@@around]
sentence=1	Then	then	then	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
2	the	_	the	DT	O	_	name	_	0	IGNORE	true
3	Japanese	_name_	japanese	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	4	MOD_mod	true
4	gardens	_	garden	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
5	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
6	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
7	have	_	have	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	obligate-01	(s())	9	MOD_s	true
8	to	_	to	TO	O	_	obligate-01	_	0	IGNORE	true
9	pay	_	pay	VB	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
10	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
11	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	14	APP_s	true
13	will	_	will	MD	O	_	contrast-01	_	0	IGNORE	true
14	say	_	say	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
15	that	_	that	IN	O	_	and	_	0	IGNORE	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
18	definitely	_	definitely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	definite	(mod())	19	MOD_mod	true
19	worth	_	worth	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_o	true
20	it.	_	it.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@d@@worth-02, 1@@n@@then, 3@@c@@country, 14@@s@@say-01, 18@@t@@definite, 4@@d@@garden, 9@@g@@pay-01, 5@@d@@you, 11@@s@@contrast-01, 12@@d@@i, 3@@n@@_NAME_, 7@@s@@obligate-01]
sentence=1	Though	though	though	IN	O	_	have-concession-91	_	0	IGNORE	true
2	its	_	its	PRP$	O	_	it	_	0	IGNORE	true
3	original	_	original	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	readers	_	reader	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	read-01	()	6	APP_s	true
5	would	_	would	MD	O	_	thing	_	0	IGNORE	true
6	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	person	(s(), o())	24	MOD_o	true
7	had	_	have	VBN	O	(c2<root> / --LEX--  :ARG0 (i<s>)  :ARG1 (s<o>)  :concession-of (s2<mod>))	$LEMMA$-03	(mod(), s(), o())	24	MOD_mod	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	certain	_	certain	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
10	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	APP_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	context	_	context	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_mod	true
13	for	_	for	IN	O	_	thing	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	truly	_	truly	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	true-01	(s())	16	MOD_s	true
16	bizarre	_	bizarre	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
18	surprising	_	surprising	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	surprise-01	(s())	19	MOD_s	true
19	events	_	event	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
20	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	tells	_	tell	VBZ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
22	of,	_	of,	JJ	O	_	and	_	0	IGNORE	true
23	it’s	_	it’s	NNP	O	_	request-confirmation-91	_	0	IGNORE	true
24	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
25	that	_	that	IN	O	_	request-confirmation-91	_	0	IGNORE	true
26	The_Chemical_Wedding	_name_	Wedding	NNP	O	(d<root> / --LEX--)	_NAME_	()	30	APP_dom	true
27	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
28	now	_	now	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
29	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	30	MOD_mod	true
30	enjoyable	_	enjoyable	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	24	APP_s	true
31	without	_	without	IN	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	32	MOD_mod	true
32	knowing	_	know	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_op1	true
33	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
34	context,	_	context,	NNS	O	_	and	_	0	IGNORE	true
35	and	_	and	CC	O	(a<root> / --LEX--  :op2 (r<op2>)  :op1 (i<op1>)  :manner-of (s<mod>))	$LEMMA$	(op2(), op1(), mod())	30	MOD_mod	true
36	experiencing	_	experience	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	35	APP_op2	true
37	the	_	the	DT	O	_	person	_	0	IGNORE	true
38	book	_	book	NN	O	(d<root> / --LEX--)	$LEMMA$	()	36	APP_s	true
39	unmediated.	_	unmediated.	NN	O	_	cause-01	_	0	IGNORE	true

nodealignment=[21@@s@@tell-01, 6@@s@@person, 15@@s@@true-01, 31@@explicitanon0@@-, 24@@s@@possible-01, 29@@s@@more, 19@@p@@event, 4@@e2@@read-01, 32@@d@@know-01, 26@@d@@_NAME_, 36@@s@@experience-01, 4@@p2@@person, 38@@d@@book, 35@@a@@and, 3@@p@@original, 9@@p@@certain, 16@@p@@bizarre, 30@@r@@enjoyable, 10@@explicitanon0@@amount, 7@@c2@@have-03, 18@@s@@surprise-01, 28@@n@@now, 12@@d@@context]
sentence=1	Madam	madam	madam	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
2	Speaker,	_name_	Speaker,	NNP	O	_	say-01	_	0	IGNORE	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	1	MOD_mod	true
4	afternoon,	_	afternoon,	NNS	O	_	have-org-role-91	_	0	IGNORE	true
5	Senators	senators	senator	NNS	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	8	APP_o	true
6	will	_	will	MD	O	_	have-org-role-91	_	0	IGNORE	true
7	be	_	be	VB	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	8	MOD_mod	true
8	asked	_	ask	VBN	O	(s<root> / --LEX--  :ARG1 (c<s>)  :ARG2 (p<o>))	$LEMMA$-02	(s(s_UNIFY_o()))	0	ROOT	true
9	to	_	to	TO	O	_	have-org-role-91	_	0	IGNORE	true
10	vote	_	vote	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	APP_s	true
11	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	14	MOD_mod	true
14	Articles	articles	Articles	NNPS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	Impeachment	impeachment	Impeachment	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	elect-01	(mod())	14	MOD_mod	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	House	_name_	House	NNP	O	(g<root> / government-organization  :name (n / --LEX--))	_NAME_	()	19	APP_s	true
19	presented	_	present	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_o	true
20	on	_	on	IN	O	_	and	_	0	IGNORE	true
21	abuse	_	abuse	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_op1	true
22	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
23	power	_	power	NN	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_s	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (e<op2>)  :op1 (c<op1>)  :topic-of (t<mod>))	$LEMMA$	(op2(), op1(), mod())	19	MOD_mod	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	obstruction	_	obstruction	NN	O	(d<root> / --LEX--)	obstruct-01	()	24	APP_op2	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	Congress.	_name_	Congress.	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[21@@s@@abuse-01, 19@@s@@present-01, 16@@p@@elect-01, 5@@n@@_NAME_, 18@@n@@_NAME_, 7@@p@@person, 3@@p@@this, 1@@p@@madam, 14@@d@@Articles, 23@@d@@power, 13@@explicitanon0@@2, 24@@a@@and, 8@@s@@ask-02, 5@@g@@government-organization, 26@@d@@obstruct-01, 18@@g@@government-organization, 10@@s@@vote-01]
sentence=1	The_day	_name_	day	NN	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	3	MOD_mod	true
2	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
3	rained	_	rain	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	0	ROOT	true
4	in	_	in	IN	O	_	i	_	0	IGNORE	true
5	the	_	the	DT	O	_	be-located-at-91	_	0	IGNORE	true
6	garden	_	garden	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	3	MOD_mod	true

nodealignment=[1@@f@@festival, 1@@n3@@_NAME_, 3@@d@@rain-01, 6@@b@@garden]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	last_night	_name_	night	NN	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_o	true
5	was	_	be	VBD	O	_	say-01	_	0	IGNORE	true
6	—	_	—	ADD	O	_	thing	_	0	IGNORE	true

nodealignment=[4@@p@@person, 4@@n@@_NAME_, 2@@d@@you, 3@@s@@say-01, 1@@p@@all]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
3	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	noises	_	noise	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
7	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	prefer,	_	prefer,	NNP	O	_	mean-01	_	0	IGNORE	true
9	such	_	such	JJ	O	_	and	_	0	IGNORE	true
10	as	_	as	IN	O	_	and	_	0	IGNORE	true
11	a	_	a	DT	O	_	thing	_	0	IGNORE	true
12	bird	_	bird	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	cawing	_	cawing	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	14	APP_op1	true
14	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	18	APP_s	true
15	an	_	an	DT	O	_	1	_	0	IGNORE	true
16	explosion	_	explosion	NN	O	(d<root> / --LEX--)	explode-01	()	17	APP_s	true
17	sound	_	sound	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_op2	true
18	every	_	every	DT	O	(r<root> / --LEX--  :ARG4 (g2<s>)  :frequency-of (a3<mod>))	rate-entity-91	(mod(), s())	3	MOD_mod	true
19	time	_	time	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	a	_	a	DT	O	_	1	_	0	IGNORE	true
21	button	_	button	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
22	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
23	pushed.	_	pushed.	ADD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true

nodealignment=[21@@d@@button, 16@@d@@explode-01, 3@@s@@make-01, 1@@d@@You, 17@@s@@sound-01, 2@@s@@possible-01, 14@@a@@or, 18@@r@@rate-entity-91, 23@@s@@pushed.-01, 4@@p@@other, 13@@s@@cawing-01, 5@@d@@noise, 12@@d@@bird]
sentence=1	Tropical	tropical	tropical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	vegetation	_	vegetation	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
3	includes	_	include	VBZ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	and	_	0	IGNORE	true
5	pandanus	_	pandanus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op1	true
6	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_op1	true
7	screw	_	screw	NN	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_op2	true
8	pine,	_	pine,	NNP	O	_	mean-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	casuarina,	_	casuarina,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_op2	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	3	APP_s	true
12	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
13	mulberry	_	mulberry	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	APP_op3	true
14	tree,	_	tree,	RB	O	_	and	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	bark	_	bark	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	which	_	which	WDT	O	_	i	_	0	IGNORE	true
19	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
20	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	13	APP_mod	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	make	_	make	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_o	true
23	tapa	_	tapa	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_s	true
24	cloth.	_	cloth.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[22@@s@@make-01, 11@@a@@and, 7@@d@@screw, 10@@d@@casuarina,, 3@@s@@include-01, 2@@d@@vegetation, 16@@d@@bark, 13@@p@@mulberry, 23@@d@@tapa, 5@@d@@pandanus, 6@@a@@or, 20@@s@@use-01, 1@@p@@tropical]
sentence=1	There	there	there	EX	O	_	cause-01	_	0	IGNORE	true
2	are	_	be	VBP	O	_	thing	_	0	IGNORE	true
3	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	4	MOD_s	true
4	type	_	type	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
5	of	_	of	IN	O	_	thing	_	0	IGNORE	true
6	lighting	_	lighting	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
7	bulbs	_	bulb	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
8	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	MOD_s	true
9	at	_	at	IN	O	_	thing	_	0	IGNORE	true
10	home	_	home	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	can	_	can	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
12	affect	_	affect	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_s	true
13	the	_	the	DT	O	_	thing	_	0	IGNORE	true
14	overall	_	overall	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	lighting	_	light	VBG	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
16	consumption.	_	consumption.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[11@@s@@possible-01, 7@@d@@bulb, 6@@p@@lighting, 4@@p@@type, 14@@p@@overall, 3@@s@@differ-02, 15@@d@@light, 12@@s@@affect-01, 8@@s@@use-01, 10@@b@@home]
sentence=1	By	by	by	IN	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
3	way,	_	way,	NN	O	_	name	_	0	IGNORE	true
4	AKMA	_name_	AKMA	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_dom	true
5	was	_	be	VBD	O	_	person	_	0	IGNORE	true
6	the	_	the	DT	O	_	by-$LEMMA$-way	_	0	IGNORE	true
7	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	8	MOD_mod	true
8	guy	_	guy	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
10	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
11	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
12	to	_	to	TO	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	government-organization	(s(), o())	8	MOD_s	true
13	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	8	MOD_s	true
14	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
15	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	14	MOD_s	true
16	this,	_	this,	NNPS	O	_	person	_	0	IGNORE	true
17	with	_	with	IN	O	_	i	_	0	IGNORE	true
18	Lawrence_Lessig's_Free	_name_	Free	NNP	O	(p<root> / person  :name (n / --LEX--))	free-04	()	12	APP_o	true
19	Culture.	culture.	Culture.	NNPS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[7@@o@@ordinal-entity, 4@@n@@_NAME_, 18@@p@@person, 9@@d@@i, 14@@d@@something, 10@@s@@know-01, 8@@r@@guy, 4@@p@@person, 7@@explicitanon0@@1, 18@@n@@free-04, 13@@s@@do-02, 12@@s@@government-organization, 15@@s@@resemble-01]
sentence=1	A	a	a	DT	O	_	1	_	0	IGNORE	true
2	third	_name_	third	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	4	MOD_mod	true
3	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	factor	_	factor	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	15	MOD_s	true
5	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
6	the	_	the	DT	O	_	concern-02	_	0	IGNORE	true
7	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	12	APP_op1	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	event	_	event	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_mod	true
10	will	_	will	MD	O	_	thing	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	mediated:	_	mediated:	FW	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
13	will	_	will	MD	O	_	person	_	0	IGNORE	true
14	NBC	_name_	NBC	NNP	O	(c<root> / company  :name (n / --LEX--))	_NAME_	()	15	APP_s	true
15	have	_	have	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	12	APP_op2	true
16	its	_	its	PRP$	O	_	thing	_	0	IGNORE	true
17	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	19	MOD_s	true
18	sports	_	sport	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
19	broadcasters	_	broadcaster	NNS	O	(p<root> / person  :ARG0-of (w / --LEX--  :ARG1 (p2<s>)))	broadcast-01	(s())	15	APP_o	true
20	following	_	follow	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	15	MOD_s	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	event	_	event	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_o	true
23	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
24	having	_	have	VBG	O	_	cause-01	_	0	IGNORE	true
25	worked	_	work	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_op1	true
26	the	_	the	DT	O	_	he	_	0	IGNORE	true
27	Winter	_name_	Winter	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
28	Olympics?	olympics?	olympics?	NN	O	_	interrogative	_	0	IGNORE	true

nodealignment=[19@@p@@person, 25@@d@@work-01, 22@@d@@event, 23@@w@@after, 27@@p@@Winter, 18@@d@@sport, 19@@w@@broadcast-01, 14@@c@@company, 7@@t@@way, 2@@o@@ordinal-entity, 14@@n@@_NAME_, 9@@d@@event, 17@@m@@most, 4@@s@@factor, 3@@p@@important, 20@@s@@follow-01, 12@@a@@and, 15@@s@@have-03, 2@@explicitanon0@@3, 17@@b2@@good-02]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
2	it	_	it	PRP	O	_	$LEMMA$	_	1	IGNORE	true
3	probably	_	probably	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	probable	(mod())	5	MOD_mod	true
4	doesn't	_	doesn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	5	MOD_mod	true
5	seem	_	seem	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	APP_op1	true
6	that	_	that	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
7	way,	_	way,	NN	O	_	thing	_	0	IGNORE	true
8	by	_	by	IN	O	_	mean-01	_	0	IGNORE	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
11	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	12	APP_s	true
12	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	APP_s	true
13	myself,	_	myself,	NNS	O	_	thing	_	0	IGNORE	true
14	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	1	APP_op2	true
15	it's	_	it's	PRP$	O	_	contrast-01	_	0	IGNORE	true
16	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
17	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	something	_	something	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
19	that's	_	that's	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	here,	_	here,	NNS	O	_	multi-sentence	_	0	IGNORE	true
22	do	_	do	VBP	O	_	cause-01	_	0	IGNORE	true
23	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
24	know	_	know	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	APP_o	true
25	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
26	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	24	APP_o	true
27	mean?	_	mean?	VBD	O	_	interrogative	_	0	IGNORE	true

nodealignment=[14@@s@@contrast-01, 24@@s@@know-01, 18@@d@@something, 12@@s@@feel-01, 1@@a@@and, 4@@explicitanon0@@-, 23@@d@@you, 3@@p@@probable, 5@@s@@seem-01, 11@@d@@i, 17@@p@@just, 16@@n@@always, 26@@d@@i, 6@@p@@that]
sentence=1	This_year	_name_	year	NN	O	(n3<root> / --LEX--  :name-of (f / festival  :time-of (t<mod>)))	_NAME_	(mod())	11	MOD_mod	true
2	alone,	_	alone,	NNP	O	_	and	_	0	IGNORE	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	brutal	_	brutal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-02	(mod())	5	MOD_mod	true
5	attacks	_	attack	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	6	APP_op2	true
6	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	MOD_op1	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
8	circumstances,	_	circumstances,	NNS	O	_	and	_	0	IGNORE	true
9	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-org-role-91	(s(), o())	11	MOD_o	true
11	lost	_	lose	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
12	at	_	at	RB	O	_	cause-01	_	0	IGNORE	true
13	least	_	least	RBS	O	(p3<root> / person  :quant (a / --LEX--  :op1 (p<op1>)))	at-$LEMMA$	(op1())	18	APP_op1	true
14	80	_	80	CD	O	(d<root> / --LEX--)	_NUMBER_	()	13	APP_op1	true
15	peacekeepers,	_	peacekeepers,	JJ	O	_	$LEMMA$	_	0	IGNORE	true
16	humanitarian	_	humanitarian	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
17	workers	_	worker	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	work-01	(s())	18	APP_op2	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	11	APP_o	true
19	others,	_	others,	NNS	O	_	and	_	0	IGNORE	true
20	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
21	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	11	MOD_o	true
22	whom	_	whom	WP	O	_	have-org-role-91	_	0	IGNORE	true
23	gave	_	give	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
24	their	_	they	PRP$	O	_	person	_	0	IGNORE	true
25	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true
26	serving	_	serve	VBG	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	28	APP_op1	true
27	the_United_Nations	_name_	Nations	NNP	O	(o2<root> / organization  :name (n / --LEX--))	_NAME_	()	26	APP_o	true
28	and	_	and	CC	O	(a<root> / --LEX--  :op2 (h<op2>)  :op1 (d<op1>)  :purpose-of (s2<mod>))	$LEMMA$	(op2(s()), op1(s()), mod())	23	MOD_mod	true
29	trying	_	try	VBG	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	28	APP_op2	true
30	to	_	to	TO	O	_	person	_	0	IGNORE	true
31	better	_	better	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	29	APP_o	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	lives	_	life	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	31	APP_o	true
34	of	_	of	IN	O	_	person	_	0	IGNORE	true
35	others.	_	others.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[29@@c@@try-01, 13@@a@@at-least, 21@@s@@include-91, 25@@d@@life, 7@@p@@other, 26@@s@@serve-01, 11@@s@@lose-02, 28@@a@@and, 31@@s@@better-01, 5@@d@@attack-01, 4@@p@@brutal-02, 9@@d@@we, 10@@s@@have-org-role-91, 33@@d@@life, 1@@n3@@_NAME_, 13@@p3@@person, 23@@s@@give-01, 17@@s@@work-01, 27@@n@@_NAME_, 1@@f@@festival, 16@@d@@humanitarian, 27@@o2@@organization, 18@@a@@and, 14@@d@@_NUMBER_, 6@@a@@and, 20@@p@@all]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
2	only	_	only	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	like	_	like	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	ones	_	one	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	you're	_	you're	PRP	O	_	thing	_	0	IGNORE	true
7	featured	_	feature	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	5	MOD_s	true
8	in?	_	in?	ADD	O	_	interrogative	_	0	IGNORE	true

nodealignment=[1@@d@@You, 3@@s@@like-01, 5@@d@@one, 7@@s@@feature-01, 2@@p@@only]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	hope	_	hope	NN	O	(d<root> / --LEX--)	$LEMMA$ful-03	()	22	APP_o	true
3	she	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	spoke	_	speak	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	about—the	_	about—the	RB	O	_	_NAME_	_	0	IGNORE	true
6	strong	_	strong	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
7	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
8	happy	_	happy	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
9	hope—	_	hope—	ADD	O	_	mean-01	_	0	IGNORE	true
10	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
11	hope	_	hope	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	MOD_s	true
12	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
13	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
14	today,	_	today,	NNP	O	_	multi-sentence	_	0	IGNORE	true
15	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
16	a	_	a	DT	O	_	me$LEMMA$n-01	_	0	IGNORE	true
17	hope,	_	hope,	NNP	O	_	multi-sentence	_	0	IGNORE	true
18	of	_	of	IN	O	_	mean-01	_	0	IGNORE	true
19	course,	_	course,	NNP	O	_	and	_	0	IGNORE	true
20	that	_	that	WDT	O	_	i	_	0	IGNORE	true
21	is	_	be	VBZ	O	(d<root> / --LEX--)	person	()	0	ROOT	true
22	tempered	_	temper	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
23	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
24	reality.	_	reality.	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	22	MOD_mod	true

nodealignment=[3@@d@@she, 22@@s@@temper-01, 21@@d@@person, 8@@s@@happy-01, 6@@s@@strong-02, 13@@s@@feel-01, 24@@p@@_NAME_, 4@@s@@speak-01, 11@@s@@hope-01, 12@@d@@we, 2@@d@@hopeful-03]
sentence=1	So	so	so	CC	O	_	cause-01	_	0	IGNORE	true
2	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
3	going	_	go	VBG	O	_	$LEMMA$-02	_	0	IGNORE	true
4	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
5	go	_	go	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	12	APP_op1	true
6	in	_	in	RP	O	_	i	_	0	IGNORE	true
7	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
8	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (p<s>))	resemble-01	(s())	11	MOD_s	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	different	_	different	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	11	MOD_s	true
11	color	_	color	NN	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	23	APP_s	true
13	add	_	add	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	APP_op2	true
14	in	_	in	IN	O	_	i	_	0	IGNORE	true
15	the	_	the	DT	O	_	and	_	0	IGNORE	true
16	chapters	_	chapter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
17	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
18	gonna	_	gonna	VBP	O	_	i	_	0	IGNORE	true
19	be	_	be	VB	O	_	person	_	0	IGNORE	true
20	studying	_	study	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	16	MOD_s	true
21	for	_	for	IN	O	_	and	_	0	IGNORE	true
22	that,	_	that,	NNP	O	_	cause-01	_	0	IGNORE	true
23	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
24	I'm	i'm	i'm	PRP	O	_	i	_	0	IGNORE	true
25	super	_	super	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	stressed.	_	stressed.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o	true

nodealignment=[5@@s@@go-02, 25@@s@@super, 13@@s@@add-02, 8@@s@@resemble-01, 23@@s@@contrast-01, 20@@s@@study-01, 16@@d@@chapter, 26@@d@@stressed., 12@@a@@and, 11@@d@@color, 10@@s@@differ-02]
sentence=1	Every	every	every	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
3	to	_	to	TO	O	_	have-purpose-91	_	0	IGNORE	true
4	do	_	do	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	5	APP_op1	true
5	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
6	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_op2	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_s	true
8	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_o	true
9	to	_	to	TO	O	_	thing	_	0	IGNORE	true
10	do	_	do	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-02	(s())	5	MOD_s	true
11	at	_	at	IN	O	_	thing	_	0	IGNORE	true
12	that	_	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	14	MOD_s	true
14	moment.	_	moment.	ADD	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true

nodealignment=[12@@p@@that, 13@@s@@specific-02, 6@@d@@thing, 10@@s@@do-02, 4@@d@@do-02, 1@@p@@every, 8@@s@@want-01, 2@@s@@single-02, 14@@p@@moment., 7@@d@@you, 5@@a@@or]
sentence=1	Both	both	both	DT	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
2	arguments,	_	arguments,	NNP	O	_	resemble-01	_	0	IGNORE	true
3	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
4	presented	_	present	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	MOD_s	true
5	here,	_	here,	NNP	O	_	resemble-01	_	0	IGNORE	true
6	rely	_	rely	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	on	_	on	IN	O	_	thing	_	0	IGNORE	true
8	the	_	the	DT	O	_	thing	_	0	IGNORE	true
9	correctness	_	correctness	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_o	true
10	of	_	of	IN	O	_	thing	_	0	IGNORE	true
11	the	_	the	DT	O	_	thing	_	0	IGNORE	true
12	evolutionary	_	evolutionary	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	evolve-01	(mod())	13	MOD_mod	true
13	explanation	_	explanation	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	explain-01	(s())	9	APP_s	true
14	of	_	of	IN	O	_	thing	_	0	IGNORE	true
15	morality	_	morality	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
16	they	_	they	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	convey.	_	convey.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[9@@s@@correctness, 4@@s@@present-01, 12@@p@@evolve-01, 15@@d@@morality, 1@@d@@both, 6@@s@@rely-01, 13@@s@@explain-01]
sentence=1	Well,	_name_	Well,	NNP	O	_	and	_	0	IGNORE	true
2	w-	_	w-	XX	O	_	say-01	_	0	IGNORE	true
3	um,	_	um,	RB	O	_	and	_	0	IGNORE	true
4	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
5	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
6	put	_	put	VBP	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	11	MOD_mod	true
7	em	_	em	PRP	O	_	$LEMMA$	_	0	IGNORE	true
8	on	_	on	IN	O	_	name	_	0	IGNORE	true
9	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
10	horse's	_	horse'	NNS	O	_	$LEMMA$	_	0	IGNORE	true
11	hoof,	_	hoof,	RB	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
12	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
13	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	do,	_	do,	VBP	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	they're	_	they're	NNP	O	_	thing	_	0	IGNORE	true
16	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
17	made.	_	made.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[16@@n@@already, 14@@n@@do,, 12@@p@@all, 5@@d@@we, 6@@v@@put-01, 11@@d@@hoof,]
sentence=1	This	this	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	needs	_	need	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_snt1	true
3	more	_	more	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	discussion	_	discussion	NN	O	(d<root> / --LEX--)	discuss-01	()	2	APP_o	true
5	obviously:	_	obviously:	NNP	O	(m<root> / --LEX--  :snt2 (s<snt2>)  :snt3 (c2<snt3>)  :snt1 (c<snt1>))	multi-sentence	(snt2(), snt1(), snt3())	0	ROOT	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	chose	_	choose	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_snt2	true
8	public	_	public	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
9	domain	_	domain	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
10	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	7	MOD_o	true
11	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
12	texts	_	text	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_dom	true
13	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	use	_	use	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	MOD_s	true
15	are	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
16	public	_	public	JJ	O	_	$LEMMA$	_	0	IGNORE	true
17	domain	_	domain	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	5	APP_snt3	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
19	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	21	MOD_mod	true
21	want	_	want	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
22	to	_	to	TO	O	_	and	_	0	IGNORE	true
23	add	_	add	VB	O	(d<root> / --LEX--)	$LEMMA$-02	()	21	APP_s	true
24	new	_	new	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	23	MOD_s	true
25	restrictions,	_	restrictions,	NNS	O	_	-	_	0	IGNORE	true
26	especially	_	especially	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
27	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
28	non-commercial,	_	non-commercial,	XX	O	_	-	_	0	IGNORE	true
29	since	_	since	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	21	MOD_o	true
30	already	_	already	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
31	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
32	recordings	_	recording	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
33	are	_	be	VBP	O	_	person	_	0	IGNORE	true
34	being	_	be	VBG	O	_	person	_	0	IGNORE	true
35	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	29	APP_s	true
36	for	_	for	IN	O	_	and	_	0	IGNORE	true
37	a	_	a	DT	O	_	-	_	0	IGNORE	true
38	number	_	number	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
39	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
40	commercialish	_	commercialish	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	41	MOD_mod	true
41	projects	_	project	NNS	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	$LEMMA$	(mod())	35	MOD_mod	true
42	(I	(i	(i	FW	O	(d<root> / --LEX--)	_NAME_	()	44	APP_s	true
43	can't	_	can't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	44	MOD_mod	true
44	recall	_	recall	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	35	APP_o	true
45	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	47	MOD_mod	true
46	specific	_	specific	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	47	MOD_s	true
47	project	_	project	NN	O	(d<root> / --LEX--)	$LEMMA$	()	44	APP_o	true
48	names,	_	names,	NNS	O	_	and	_	0	IGNORE	true
49	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	29	MOD_s	true
50	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	52	MOD_mod	true
51	pay-education	_	pay-education	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	52	MOD_mod	true
52	sites	_	site	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	53	APP_s	true
53	use	_	use	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	49	APP_o	true
54	LV	_name_	LV	NNP	O	(t<root> / thing  :name (n / --LEX--))	_NAME_	()	53	APP_o	true
55	stuff).	_	stuff).	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[44@@s@@recall-02, 23@@d@@add-02, 42@@d@@_NAME_, 17@@r@@domain, 5@@m@@multi-sentence, 21@@s@@want-01, 18@@a@@and, 12@@d@@text, 6@@d@@we, 8@@s@@public-02, 49@@s@@contrast-01, 26@@p@@especially, 53@@s@@use-01, 41@@o@@project, 51@@p@@_NAME_, 30@@n@@already, 27@@explicitanon0@@-, 43@@explicitanon0@@-, 45@@p@@any, 46@@s@@specific-02, 7@@s@@choose-01, 40@@p@@commercialish, 32@@d@@recording, 54@@n@@_NAME_, 1@@d@@this, 54@@t@@thing, 24@@s@@new-01, 4@@d@@discuss-01, 10@@s@@cause-01, 47@@d@@project, 38@@explicitanon0@@number, 20@@explicitanon0@@-, 3@@p@@more, 50@@explicitanon0@@some, 35@@s@@use-01, 29@@s@@cause-01, 2@@s@@need-01, 52@@d@@site, 14@@s@@use-01, 9@@d@@domain]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	aspects	_	aspect	NNS	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	17	APP_s	true
3	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
4	the	_	the	DT	O	_	thing	_	0	IGNORE	true
5	joke	_	joke	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	APP_poss	true
6	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
7	tell,	_	tell,	VBZ	O	_	and	_	0	IGNORE	true
8	from	_	from	IN	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
9	the	_	the	DT	O	_	and	_	0	IGNORE	true
10	content	_	content	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
11	to	_	to	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	length,	_	length,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
14	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	APP_op2	true
15	to	_	to	TO	O	_	thing	_	0	IGNORE	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	suited	_	suit	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	APP_s	true
18	to	_	to	IN	O	_	thing	_	0	IGNORE	true
19	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
20	audience.	_	audience.	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true

nodealignment=[17@@s@@suit-01, 2@@h@@aspect, 20@@d@@audience., 10@@d@@content, 1@@p@@all, 5@@s@@joke-01, 6@@d@@you, 8@@a@@and, 14@@s@@need-01]
sentence=1	In	in	in	IN	O	_	cause-01	_	0	IGNORE	true
2	passing	_	pass	VBG	O	(m<root> / --LEX--  :ARG1 (i<s>)  :ARG2 (y<o>)  :condition-of (k<mod>))	$LEMMA$-05	(mod(), s(), o())	11	MOD_mod	true
3	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	office	_	office	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	Vice	vice	Vice	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
8	President,	president,	President,	NNP	O	_	-	_	0	IGNORE	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	do	_	do	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
12	so	_	so	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	the	_	the	DT	O	_	person	_	0	IGNORE	true
15	profound	_	profound	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	sense	_	sense	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
17	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	weight	_	weight	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	16	APP_s	true
20	of	_	of	IN	O	_	person	_	0	IGNORE	true
21	responsibility	_	responsibility	NN	O	(d<root> / --LEX--)	responsible-03	()	19	APP_s	true
22	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
23	will	_	will	MD	O	_	thing	_	0	IGNORE	true
24	fall	_	fall	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
25	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
26	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
27	shoulders	_	shoulder	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
28	tomorrow	_name_	tomorrow	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
29	and,	_	and,	JJ	O	_	person	_	0	IGNORE	true
30	therefore,	_	therefore,	NNS	O	_	contrast-01	_	0	IGNORE	true
31	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
32	the	_	the	DT	O	_	he	_	0	IGNORE	true
33	understanding,	_	understanding,	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	APP_o	true
34	the	_	the	DT	O	_	he	_	0	IGNORE	true
35	patience,	_	patience,	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	37	MOD_mod	true
36	the	_	the	DT	O	_	person	_	0	IGNORE	true
37	cooperation	_	cooperation	NN	O	(d<root> / --LEX--)	cooperate-01	()	33	APP_s	true
38	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
39	will	_	will	MD	O	_	person	_	0	IGNORE	true
40	need	_	need	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	37	MOD_s	true
41	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
42	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	43	MOD_mod	true
43	Americans.	_name_	Americans.	NNS	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	11	MOD_mod	true

nodealignment=[4@@d@@office, 24@@s@@fall-01, 9@@d@@i, 7@@d@@Vice, 16@@s@@sense-01, 35@@p@@patience,, 3@@p@@this, 40@@s@@need-01, 42@@p@@all, 21@@d@@responsible-03, 10@@p@@also, 43@@p@@_NAME_, 12@@p@@so, 15@@p@@profound, 28@@n@@tomorrow, 11@@s@@do-02, 2@@m@@pass-05, 33@@s@@understanding,, 37@@d@@cooperate-01, 27@@d@@shoulder, 19@@s@@weight]
sentence=1	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
2	the	_	the	DT	O	_	event	_	0	IGNORE	true
3	person	_	person	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
4	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_s	true
5	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	3	MOD_s	true
6	to	_	to	TO	O	_	-	_	0	IGNORE	true
7	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	3	MOD_s	true
8	to	_	to	TO	O	_	-	_	0	IGNORE	true
9	doesn't	_	doesn't	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	10	MOD_mod	true
10	want	_	want	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	MOD_s	true
11	to	_	to	TO	O	_	-	_	0	IGNORE	true
12	talk	_	talk	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	10	APP_o	true
13	to	_	to	IN	O	_	-	_	0	IGNORE	true
14	you,	_	you,	NNS	O	_	_NAME_	_	0	IGNORE	true
15	s/he	_	s/he	RB	O	_	$LEMMA$	_	0	IGNORE	true
16	always	_	always	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
17	has	_	have	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
18	the	_	the	DT	O	_	say-01	_	0	IGNORE	true
19	option	_	option	NN	O	(f<root> / --LEX--  :ARG1 (p<o>))	opt-01	(o(s()))	17	MOD_s	true
20	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
21	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	23	MOD_s	true
22	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	23	MOD_mod	true
23	responding	_	respond	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
24	to	_	to	IN	O	_	thing	_	0	IGNORE	true
25	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
26	message,	_	message,	NNS	O	_	and	_	0	IGNORE	true
27	as,	_	as,	XX	O	_	cause-01	_	0	IGNORE	true
28	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
30	point	_	point	NN	O	_	$LEMMA$	_	0	IGNORE	true
31	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
32	view,	_	view,	NNP	O	_	thing	_	0	IGNORE	true
33	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	35	APP_s	true
34	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
35	indistinguishable	_	indistinguishable	JJ	O	(w<root> / --LEX--  :polarity (explicitanon0 / -)  :ARG1 (p<s>)  :ARG2 (a<o>))	$LEMMA$	(s(), o())	17	APP_o	true
36	from	_	from	IN	O	_	-	_	0	IGNORE	true
37	him	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	38	APP_op1	true
38	or	_	or	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	35	APP_o	true
39	her	_	she	PRP	O	_	$LEMMA$	_	0	IGNORE	true
40	simply	_	simply	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	simple-02	(s())	42	MOD_s	true
41	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	17	MOD_s	true
42	away	_	away	RB	O	(d<root> / --LEX--)	$LEMMA$	()	41	APP_o	true
43	from	_	from	IN	O	_	-	_	0	IGNORE	true
44	the	_	the	DT	O	_	he	_	0	IGNORE	true
45	computer.	_	computer.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@f@@opt-01, 37@@d@@he, 9@@explicitanon0@@-, 10@@c@@want-01, 4@@d@@you, 35@@explicitanon0@@-, 41@@s@@be-located-at-91, 3@@p@@person, 33@@d@@this, 38@@o@@or, 5@@s@@want-01, 16@@n@@always, 42@@d@@away, 35@@w@@indistinguishable, 17@@s@@have-03, 22@@explicitanon0@@-, 7@@s@@talk-01, 23@@s@@respond-01, 12@@s@@talk-01, 40@@s@@simple-02, 21@@s@@simple-02]
sentence=1	Yeah	yeah	yeah	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op1	true
4	a	_	a	DT	O	_	1	_	0	IGNORE	true
5	percentage	_	percentage	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
6	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
7	the	_	the	DT	O	_	monetary-quantity	_	0	IGNORE	true
8	amount	_	amount	NN	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	5	APP_poss	true
9	of	_	of	IN	O	_	monetary-quantity	_	0	IGNORE	true
10	countries	_	country	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_mod	true
11	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
12	own,	_	own,	VBP	O	_	and	_	0	IGNORE	true
13	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
14	then,	_	then,	NNP	O	_	cause-01	_	0	IGNORE	true
15	for	_	for	IN	O	_	and	_	0	IGNORE	true
16	continents	_	continent	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	get	_	get	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_op2	true
19	another	_	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
20	set	_	set	NN	O	(d<root> / --LEX--)	$LEMMA$-02	()	18	APP_o	true
21	amount.	_	amount.	RB	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@a@@and, 8@@explicitanon0@@amount, 19@@p@@another, 5@@m@@percentage, 2@@d@@you, 16@@d@@continent, 20@@d@@set-02, 18@@s@@get-01, 1@@p@@yeah, 3@@s@@get-01, 10@@d@@country]
sentence=1	I'm	i'm	i'm	PRP	O	_	interest-01	_	0	IGNORE	true
2	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	being	_	be	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	0	ROOT	true
4	honest,	_	honest,	NFP	O	_	expressive	_	0	IGNORE	true
5	like,	_	like,	NNP	O	_	and	_	0	IGNORE	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	am	_	be	VBP	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	3	APP_s	true
8	not	_	not	RB	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	11	MOD_mod	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	good	_	good	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	MOD_s	true
12	place	_	place	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
13	with	_	with	IN	O	_	have-03	_	0	IGNORE	true
14	the	_	the	DT	O	_	thing	_	0	IGNORE	true
15	way	_	way	NN	O	_	$LEMMA$	_	0	IGNORE	true
16	I	i	I	PRP	O	_	thing	_	0	IGNORE	true
17	look.	_	look.	RB	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@s@@and, 7@@d@@be-located-at-91, 8@@explicitanon0@@-, 2@@p@@just, 12@@d@@place, 11@@s@@good-02]
sentence=1	But	but	but	CC	O	(h<root> / --LEX--  :ARG2 (m<o>))	contrast-01	(o(s()))	0	ROOT	true
2	there's	_	there'	VBZ	O	_	contrast-01	_	0	IGNORE	true
3	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	7	APP_s	true
6	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	want	_	want	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
8	to	_	to	IN	O	_	-	_	0	IGNORE	true
9	have,	_	have,	NNP	O	_	multi-sentence	_	0	IGNORE	true
10	so	_	so	RB	O	_	cause-01	_	0	IGNORE	true
11	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	1	MOD_s	true
12	coffee,	_	coffee,	NNP	O	_	and	_	0	IGNORE	true
13	I	i	I	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$REPL$	(mod())	1	MOD_mod	true
14	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	know	_	know	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	21	APP_op1	true
16	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
17	I	i	I	PRP	O	_	cause-01	_	0	IGNORE	true
18	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	want	_	want	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_o	true
20	that,	_	that,	NNS	O	_	cause-01	_	0	IGNORE	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	1	APP_o	true
22	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
23	I	i	I	PRP	O	_	contrast-01	_	0	IGNORE	true
24	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op2	true
25	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
26	beige:	_	beige:	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@s@@want-01, 13@@p@@i, 11@@s@@like-01, 1@@h@@contrast-01, 22@@p@@all, 7@@s@@want-01, 24@@s@@want-01, 3@@d@@thing, 15@@c@@know-01, 5@@d@@i, 21@@a@@and, 14@@p@@just, 6@@explicitanon0@@-, 18@@explicitanon0@@-]
sentence=1	Despite	despite	despite	IN	O	_	have-concession-91	_	0	IGNORE	true
2	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
3	much	_	much	JJ	O	_	$LEMMA$	_	0	IGNORE	true
4	humans	_	human	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
5	have	_	have	VBP	O	_	$LEMMA$-03	_	0	IGNORE	true
6	in	_	in	IN	O	_	thing	_	0	IGNORE	true
7	common,	_	common,	JJ	O	_	have-concession-91	_	0	IGNORE	true
8	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	9	MOD_mod	true
9	differences	_	difference	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	differ-02	(s())	13	APP_dom	true
10	are	_	be	VBP	O	_	have-concession-91	_	0	IGNORE	true
11	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	prevalent	_	prevalent	JJ	O	(r<root> / --LEX--  :domain (q<dom>))	prevail-02	(dom())	0	ROOT	true
14	than	_	than	IN	O	_	thing	_	0	IGNORE	true
15	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	13	MOD_mod	true
16	universals.	_	universals.	NN	O	_	mean-01	_	0	IGNORE	true

nodealignment=[13@@r@@prevail-02, 15@@p@@culture, 9@@s@@differ-02, 4@@d@@human, 12@@s@@more, 8@@p@@culture, 11@@s@@far]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	term	_	term	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	4	APP_o	true
3	is	_	be	VBZ	O	_	mean-01	_	0	IGNORE	true
4	qualified	_	qualify	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
5	by	_	by	IN	O	_	and	_	0	IGNORE	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	further	_	further	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	concept	_	concept	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
9	called	_	call	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	junction	_	junction	NN	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
12	which	_	which	WDT	O	_	mean-01	_	0	IGNORE	true
13	represents	_	represent	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_s	true
14	one	_	one	CD	O	(d<root> / --LEX--)	1	()	13	APP_o	true
15	idea,	_	idea,	NNP	O	_	thing	_	0	IGNORE	true
16	expressed	_	express	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	8	MOD_s	true
17	by	_	by	IN	O	_	thing	_	0	IGNORE	true
18	means	_	mean	NNS	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	4	MOD_o	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	two	_	two	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	2	(mod())	18	MOD_mod	true
21	or	_	or	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	4	MOD_op1	true
22	more	_	more	JJR	O	(d<root> / --LEX--)	$LEMMA$	()	21	APP_op2	true
23	elements,	_	elements,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
24	whereas	_	whereas	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	4	MOD_s	true
25	a	_	a	DT	O	_	thing	_	0	IGNORE	true
26	nexus	_	nexus	NN	O	(d<root> / --LEX--)	$LEMMA$	()	27	APP_s	true
27	combines	_	combine	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	APP_o	true
28	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	27	APP_o	true
29	ideas.	_	ideas.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[28@@explicitanon0@@2, 27@@s@@combine-01, 26@@d@@nexus, 28@@t@@thing, 22@@d@@more, 21@@a@@or, 7@@p@@further, 4@@s@@qualify-02, 8@@d@@concept, 14@@d@@1, 20@@explicitanon0@@2, 16@@s@@express-01, 2@@d@@term-01, 9@@s@@call-01, 11@@d@@junction, 24@@s@@contrast-01, 1@@p@@this, 18@@s@@mean-01, 13@@s@@represent-01]
sentence=1	He	he	He	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
2	made	_	make	VBD	O	_	cause-01	_	0	IGNORE	true
3	the	_	the	DT	O	_	he	_	0	IGNORE	true
4	common	_	common	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	error	_	error	NN	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	err-01	(o(s()))	11	APP_op1	true
6	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
7	identifying	_	identify	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	5	APP_o	true
8	maturity	_	maturity	NN	O	(d<root> / --LEX--)	mature-02	()	7	APP_o	true
9	with	_	with	IN	O	_	-	_	0	IGNORE	true
10	worth,	_	worth,	NNP	O	_	_NAME_	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	assumed	_	assume	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	11	APP_op2	true
13	that	_	that	IN	O	_	instead-of-91	_	0	IGNORE	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	love	_	love	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	27	APP_s	true
16	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	had	_	have	VBD	O	_	$LEMMA$-03	_	0	IGNORE	true
18	for	_	for	IN	O	_	$LEMMA$	_	0	IGNORE	true
19	her	_	she	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
20	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
21	a	_	a	DT	O	_	1	_	0	IGNORE	true
22	young	_	young	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
23	child	_	child	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
24	must	_	must	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	infer-01	(s())	12	APP_o	true
25	have	_	have	VB	O	_	cause-01	_	0	IGNORE	true
26	been	_	be	VBN	O	_	cause-01	_	0	IGNORE	true
27	lacking	_	lack	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	24	APP_s	true
28	in	_	in	IN	O	_	-	_	0	IGNORE	true
29	strength	_	strength	NN	O	(d<root> / --LEX--)	strong-02	()	30	APP_op2	true
30	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	27	MOD_op1	true
31	depth.	_	depth.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[29@@d@@strong-02, 1@@d@@He, 19@@d@@she, 5@@c@@err-01, 24@@s@@infer-01, 4@@p@@common, 23@@n@@child, 22@@p@@young, 27@@s@@lack-01, 30@@a@@and, 15@@s@@love-01, 12@@s@@assume-02, 11@@a@@and, 7@@s@@identify-01, 8@@d@@mature-02]
sentence=1	Today,	today,	Today,	NFP	O	_	and	_	0	IGNORE	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	threat	_	threat	NN	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$en-01	(s(), o())	13	APP_s	true
4	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_poss	true
6	democracy	_	democracy	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	3	APP_o	true
7	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	Presidency	presidency	Presidency	NNP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
10	itself	_	itself	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	has	_	have	VBZ	O	_	person	_	0	IGNORE	true
12	ended,	_	ended,	NNP	O	_	and	_	0	IGNORE	true
13	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	0	ROOT	true
14	the	_	the	DT	O	_	he	_	0	IGNORE	true
15	challenges	_	challenge	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	17	APP_s	true
16	we	_	we	PRP	O	_	$LEMMA$	_	13	IGNORE	true
17	face	_	face	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	a	_	a	DT	O	_	1	_	0	IGNORE	true
20	nation	_	nation	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
21	remain.	_	remain.	ADD	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[6@@m@@democracy, 5@@d@@our, 17@@s@@face-01, 13@@s@@contrast-01, 9@@d@@Presidency, 20@@p@@nation, 3@@t@@threaten-01, 15@@d@@challenge-01]
sentence=1	Among	among	among	IN	O	_	include-91	_	0	IGNORE	true
2	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
3	smaller	_	small	JJR	O	(f2<root> / --LEX--  :degree (m / more)  :mod-of (f<mod>))	small	(mod())	7	MOD_mod	true
4	works,	_	works,	NNS	O	_	thing	_	0	IGNORE	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	seventh	_name_	seventh	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	7	(mod())	7	MOD_mod	true
7	Humoresque	_name_	Humoresque	NNP	O	(w<root> / worship-place  :name (n / --LEX--))	_NAME_	()	8	APP_op1	true
8	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	20	APP_s	true
9	the	_	the	DT	O	_	person	_	0	IGNORE	true
10	song	_	song	NN	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op2	true
11	"Songs	"songs	"Songs	.	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
12	My	my	My	PRP$	O	_	i	_	0	IGNORE	true
13	Mother	mother	mother	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	14	APP_s	true
14	Taught	taught	Taught	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_o	true
15	Me"	me"	Me"	NNP	O	_	_NAME_	_	0	IGNORE	true
16	are	_	be	VBP	O	_	person	_	0	IGNORE	true
17	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	20	MOD_mod	true
18	widely	_	widely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	wide	(s())	20	APP_op2	true
19	performed	_	perform	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	20	APP_op1	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
21	recorded.	_	recorded.	NN	O	_	right-08	_	0	IGNORE	true

nodealignment=[7@@n@@_NAME_, 3@@m@@more, 3@@f2@@small, 18@@s@@wide, 13@@h@@have-rel-role-91, 7@@w@@worship-place, 6@@explicitanon0@@7, 17@@p@@also, 11@@p@@"Songs, 6@@o@@ordinal-entity, 13@@f@@mother, 20@@a@@and, 10@@d@@song, 19@@s@@perform-01, 8@@a@@and, 13@@p@@person, 14@@s@@Taught-01]
sentence=1	You	you	You	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	know	_	know	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	8	MOD_o	true
3	Kendra,	kendra,	kendra,	CD	O	_	_NAME_	_	0	IGNORE	true
4	y-	_	y-	UH	O	_	-	_	0	IGNORE	true
5	—	_	—	.	O	_	-	_	0	IGNORE	true
6	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	8	APP_s	true
7	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	know	_	know	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	0	ROOT	true
9	how	_	how	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	many	_	many	JJ	O	_	$LEMMA$	_	0	IGNORE	true
11	times	_	time	NNS	O	_	$LEMMA$	_	0	IGNORE	true
12	I	i	I	PRP	O	_	1	_	0	IGNORE	true
13	gotta	_	gotta	VBP	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	obligate-01	(o(s()))	8	APP_o	true
14	tell	_	tell	VB	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$-01	(s())	13	APP_o	true
15	you,	_	you,	NNS	O	_	thing	_	0	IGNORE	true
16	once	_	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
17	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	lie,	_	lie,	VBP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	8	MOD_s	true
19	once	_	once	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	lie	_	lie	VBP	O	(d<root> / --LEX--)	$LEMMA$-08	()	18	APP_o	true
22	—	_	—	.	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@o@@obligate-01, 1@@d@@You, 6@@d@@i, 8@@c@@know-01, 2@@s@@know-01, 14@@s@@tell-01, 18@@s@@and, 21@@d@@lie-08, 7@@explicitanon0@@-]
sentence=1	Make	make	make	VB	O	_	cause-01	_	0	IGNORE	true
2	sure	_	sure	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	en$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
4	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_dom	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
7	language	_	language	NN	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	2	APP_s	true
8	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
9	while	_	while	IN	O	_	contrast-01	_	0	IGNORE	true
10	speaking,	_	speaking,	NNP	O	_	-	_	0	IGNORE	true
11	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	get	_	get	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
14	a	_	a	DT	O	_	thing	_	0	IGNORE	true
15	literal	_	literal	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	knot	_	knot	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
17	in	_	in	IN	O	_	i	_	0	IGNORE	true
18	your	_	your	PRP$	O	_	cause-01	_	0	IGNORE	true
19	tongue!	_	tongue!	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	7	MOD_mod	true

nodealignment=[4@@d@@it, 16@@d@@knot, 13@@s@@get-01, 19@@b@@tongue!, 2@@s@@ensure-01, 7@@r@@language, 12@@explicitanon0@@-, 11@@d@@you, 15@@p@@literal]
sentence=1	Mathematician	mathematician	Mathematician	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	Hermann_Weyl	_name_	Weyl	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
3	said	_	say	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	testament,	_	testament,	NNS	O	_	thing	_	0	IGNORE	true
7	"This	"this	"this	UH	O	_	$LEMMA$	_	0	IGNORE	true
8	letter,	_	letter,	XX	O	_	resemble-01	_	0	IGNORE	true
9	if	_	if	IN	O	_	cause-01	_	0	IGNORE	true
10	judged	_	judge	VBN	O	(o<root> / --LEX--  :ARG1 (a<s>)  :condition-of (i<mod>))	$LEMMA$-01	(mod(), s())	25	MOD_mod	true
11	by	_	by	IN	O	_	and	_	0	IGNORE	true
12	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
13	novelty	_	novelty	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	14	APP_op1	true
14	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	10	APP_s	true
15	profundity	_	profundity	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	APP_op2	true
16	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
17	ideas	_	idea	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
18	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	contains,	_name_	contains,	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
20	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
21	perhaps	_	perhaps	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
22	the	_	the	DT	O	_	thing	_	0	IGNORE	true
23	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	substantial	_	substantial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	piece	_	piece	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
26	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
27	writing	_	writing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	write-01	(mod())	25	MOD_mod	true
28	in	_	in	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
30	whole	_	whole	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
31	literature	_	literature	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
32	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
33	mankind."	_	mankind."	NNP	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[2@@n@@_NAME_, 17@@d@@idea, 24@@p@@substantial, 1@@p@@Mathematician, 27@@p@@write-01, 13@@s@@novelty, 10@@o@@judge-01, 21@@p@@perhaps, 2@@p@@person, 5@@p@@this, 23@@s@@most, 25@@d@@piece, 30@@p@@whole, 31@@b@@literature, 15@@s@@profundity, 14@@a@@and, 3@@s@@say-01]
sentence=1	A	a	a	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
2	day	_	day	NN	O	(t<root> / temporal-quantity  :unit (y / --LEX--)  :quant-of (b<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	after,	_	after,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	counted	_	count	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	how	_	how	WRB	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	amr-unknown	(mod())	5	MOD_mod	true
7	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	number	(mod())	5	MOD_mod	true
8	spores	_	spore	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
9	were	_	be	VBD	O	_	person	_	0	IGNORE	true
10	still	_	still	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
11	alive.	_	alive.	RB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@p@@still, 2@@y@@day, 7@@explicitanon0@@number, 5@@s@@count-01, 4@@d@@we, 1@@explicitanon0@@1, 6@@explicitanon0@@amr-unknown, 2@@t@@temporal-quantity, 8@@d@@spore]
sentence=1	That's	that's	that's	PRP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
2	all	_	all	DT	O	(r<root> / --LEX--  :domain (q<dom>))	$LEMMA$	(dom())	0	ROOT	true
3	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_dom	true
4	said.	_	said.	VBD	O	_	thing	_	0	IGNORE	true

nodealignment=[3@@d@@it, 2@@r@@all]
sentence=1	So,	so,	So,	NNP	O	_	expressive	_	0	IGNORE	true
2	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
3	assumed	_	assume	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	0	ROOT	true
4	oh	_	oh	UH	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
5	that	_	that	DT	O	(explicitanon0<root> / --LEX--  :mode-of (c<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
6	like	_	like	UH	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	MOD_s	true
7	maybe	_	maybe	RB	O	_	$LEMMA$	_	0	IGNORE	true
8	it	_	it	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
9	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	3	MOD_s	true
10	just	_	just	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	3	APP_o	true
12	a	_	a	DT	O	_	thing	_	0	IGNORE	true
13	sore	_	sore	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	14	MOD_s	true
14	throat	_	throat	NN	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_o	true
15	gotten	_	get	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
16	because	_	because	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	11	MOD_o	true
17	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	didn't	_	didn't	MD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	19	MOD_mod	true
19	bother	_	bother	VB	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-02	(o(s()))	16	APP_s	true
20	to	_	to	TO	O	_	-	_	0	IGNORE	true
21	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	know	_	know	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	$LEMMA$-01	(mod())	19	MOD_mod	true
23	blow	_	blow	VB	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$-01	(mod())	24	MOD_mod	true
24	dry	_	dry	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_o	true
25	my	_	my	PRP$	O	_	i	_	0	IGNORE	true
26	hair.	_	hair.	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	11	MOD_s	true

nodealignment=[19@@c@@bother-02, 4@@p@@oh, 11@@s@@resemble-01, 22@@explicitanon0@@know-01, 3@@s@@assume-02, 5@@explicitanon0@@that, 15@@s@@get-01, 16@@s@@cause-01, 2@@d@@i, 18@@explicitanon0@@-, 23@@t@@blow-01, 6@@s@@resemble-01, 13@@s@@sore, 9@@s@@possible-01, 8@@d@@it, 10@@p@@just, 24@@s@@dry-01, 14@@d@@throat, 21@@d@@you, 26@@s@@hair.]
sentence=1	Terrestrial	terrestrial	terrestrial	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
2	objects,	_	objects,	NNS	O	_	and	_	0	IGNORE	true
3	such	_	such	JJ	O	_	$LEMMA$	_	0	IGNORE	true
4	as	_	as	IN	O	_	resemble-01	_	0	IGNORE	true
5	the	_	the	DT	O	_	thing	_	0	IGNORE	true
6	book	_	book	NN	O	(d<root> / --LEX--  :ARG1 (v<s>)  :example-of (s<mod>))	$LEMMA$	(mod(), s())	1	MOD_mod	true
7	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	reading,	_	reading,	NNPS	O	_	mean-01	_	0	IGNORE	true
10	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
11	far	_	far	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
12	too	_	too	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
13	little	_	little	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	mass	_	mass	NN	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_o	true
15	to	_	to	TO	O	_	cause-01	_	0	IGNORE	true
16	introduce	_	introduce	VB	O	(s<root> / --LEX--  :ARG1 (i2<o>)  :ARG0 (i<s>)  :purpose-of (c<mod>))	$LEMMA$-02	(mod(), s(), o())	10	MOD_mod	true
17	any	_	any	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	significant	_	significant	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	16	MOD_s	true
19	distortion.	_	distortion.	NN	O	_	-	_	0	IGNORE	true

nodealignment=[12@@s@@too, 13@@explicitanon0@@little, 17@@p@@any, 18@@s@@significant-02, 14@@d@@mass, 1@@d@@terrestrial, 7@@d@@you, 16@@s@@introduce-02, 10@@s@@have-03, 11@@s@@far, 6@@d@@book]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
3	case,	_	case,	NN	O	_	and	_	0	IGNORE	true
4	the	_	the	DT	O	_	person	_	0	IGNORE	true
5	excellent	_	excellent	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	6	MOD_s	true
6	advice	_	advice	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	advise-01	(s())	18	APP_s	true
7	offered	_	offer	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
8	by	_	by	IN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
9	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
10	instructors	_	instructor	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	teach-01	()	7	APP_s	true
11	on	_	on	IN	O	_	thing	_	0	IGNORE	true
12	assisting	_	assist	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	6	APP_s	true
13	chute	_	chute	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	opening	_	opening	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	open-01	(s())	12	APP_s	true
15	may	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	0	ROOT	true
16	be	_	be	VB	O	_	person	_	0	IGNORE	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	assistance	_	assistance	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	assist-01	(s())	15	APP_s	true
19	to	_	to	IN	O	_	thing	_	0	IGNORE	true
20	you.	_	you.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[12@@s@@assist-01, 5@@s@@excellent-02, 10@@e2@@teach-01, 15@@s@@possible-01, 7@@s@@offer-01, 14@@s@@open-01, 2@@p@@this, 10@@p2@@person, 6@@s@@advise-01, 18@@s@@assist-01, 8@@p@@by, 13@@d@@chute]
sentence=1	Rathbun	_name_	Rathbun	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	asserted	_	assert	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
3	that	_	that	IN	O	_	name	_	0	IGNORE	true
4	Scientology	_name_	Scientology	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	7	APP_s	true
5	officials,	_	officials,	NNP	O	_	have-org-role-91	_	0	IGNORE	true
6	"...	_	"...	XX	O	_	person	_	0	IGNORE	true
7	plied	_	ply	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	2	APP_o	true
8	the	_	the	DT	O	(i<root> / --LEX--  :beneficiary-of (n<mod>))	person	(mod())	2	MOD_mod	true
9	Sheriff's	_name_	Sheriff's	NNP	O	(m<root> / military  :name (n / --LEX--)  :mod-of (t<mod>))	_NAME_	(mod())	10	MOD_mod	true
10	detective	_	detective	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
11	with	_	with	IN	O	_	-	_	0	IGNORE	true
12	a	_	a	DT	O	_	1	_	0	IGNORE	true
13	grand	_	grand	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	conspiracy	_	conspiracy	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	conspire-01	(s(), o())	7	MOD_s	true
15	theory,	_	theory,	NNS	O	_	cause-01	_	0	IGNORE	true
16	characterizing	_	characterize	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
17	me	_	I	PRP	O	_	cause-01	_	0	IGNORE	true
18	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	'anti-christ'	_	'anti-christ'	NNS	O	_	expressive	_	0	IGNORE	true
21	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
22	the	_	the	DT	O	_	have-org-role-91	_	0	IGNORE	true
23	church	_	church	NN	O	_	$LEMMA$	_	0	IGNORE	true
24	of	_	of	IN	O	_	person	_	0	IGNORE	true
25	Scientology.	_name_	Scientology.	NNS	O	_	_NAME_	_	0	IGNORE	true
26	...	_	...	:	O	_	multi-sentence	_	0	IGNORE	true
27	The	the	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
28	next	_	next	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	31	MOD_mod	true
29	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
30	Daniel	_name_	Daniel	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	31	APP_s	true
31	knows	_	know	VBZ	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	$LEMMA$-01	(mod(), s(), o())	29	MOD_mod	true
32	he's	_	he's	NN	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
33	in	_	in	IN	O	_	be-located-at-91	_	0	IGNORE	true
34	a	_	a	DT	O	_	1	_	0	IGNORE	true
35	cell	_	cell	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	31	APP_o	true
36	where	_	where	WRB	O	_	cause-01	_	0	IGNORE	true
37	he	_	he	PRP	O	_	cause-01	_	0	IGNORE	true
38	sat	_	sit	VBD	O	(d<root> / --LEX--)	$LEMMA$-01	()	35	APP_mod	true
39	for	_	for	IN	O	_	3	_	0	IGNORE	true
40	the_next_30	_name_	30	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	38	MOD_mod	true
41	hours."	_	hours."	NNP	O	_	year	_	0	IGNORE	true

nodealignment=[9@@n@@_NAME_, 9@@m@@military, 29@@p@@thing, 1@@p@@person, 30@@n@@_NAME_, 2@@s@@assert-01, 38@@d@@sit-01, 40@@explicitanon0@@_NUMBER_, 10@@d@@detective, 30@@p@@person, 35@@b@@cell, 4@@p@@person, 4@@n@@_NAME_, 31@@t@@know-01, 1@@n@@_NAME_, 8@@i@@person, 7@@t@@ply-01, 16@@s@@characterize-01, 14@@s@@conspire-01, 13@@p@@grand, 28@@p@@next]
sentence=1	The	the	the	DT	O	_	he	_	0	IGNORE	true
2	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	11	APP_s	true
3	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	talk	_	talk	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	MOD_o	true
5	to	_	to	IN	O	_	and	_	0	IGNORE	true
6	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
7	interact	_	interact	VB	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	2	MOD_s	true
8	with	_	with	IN	O	_	-	_	0	IGNORE	true
9	are	_	be	VBP	O	_	person	_	0	IGNORE	true
10	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	blinking	_	blink	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
12	constantly,	_	constantly,	NNP	O	_	thing	_	0	IGNORE	true
13	so	_	so	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
16	everyone	_	everyone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	accustomed	_	accustom	VBN	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-01	(mod(), s(), o())	11	MOD_mod	true
19	to	_	to	IN	O	_	cause-01	_	0	IGNORE	true
20	ignoring	_	ignore	VBG	O	(d<root> / --LEX--)	$LEMMA$-01	()	18	APP_o	true
21	it.	_	it.	NN	O	_	thing	_	0	IGNORE	true

nodealignment=[20@@d@@ignore-01, 2@@d@@person, 7@@s@@interact-01, 4@@s@@talk-01, 14@@o@@often, 3@@d@@we, 13@@s@@so, 11@@s@@blink-01, 16@@d@@everyone, 10@@p@@also, 18@@b@@accustom-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	0	ROOT	true
3	mention	_	mention	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_s	true
4	parenthetically	_	parenthetically	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	surprise-01	(mod())	3	MOD_mod	true
5	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	there	_	there	EX	O	_	cause-01	_	0	IGNORE	true
7	is	_	be	VBZ	O	_	relative-position	_	0	IGNORE	true
8	a	_	a	DT	O	_	thing	_	0	IGNORE	true
9	fantastic	_	fantastic	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	MOD_s	true
10	launch	_	launch	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$-01	(mod())	11	MOD_mod	true
11	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
12	—	_	—	:	O	_	cause-01	_	0	IGNORE	true
13	taken	_	take	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	from	_	from	IN	O	_	ballistic	_	0	IGNORE	true
15	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
16	POV	_name_	POV	NNP	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	13	APP_o	true
17	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	person	_	0	IGNORE	true
19	rocket	_	rocket	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_poss	true
20	on	_	on	IN	O	_	name	_	0	IGNORE	true
21	the	_	the	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	name	(mod())	2	MOD_mod	true
22	JPL	jpl	JPL	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
23	Stardust	stardust	Stardust	NNP	O	(n<root> / --LEX--  :name-of (s<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	website	_	website	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
25	—	_	—	,	O	_	and	_	0	IGNORE	true
26	highly	_	highly	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	high	(mod())	27	MOD_mod	true
27	recommended	_	recommend	VBN	O	(h<root> / --LEX--  :ARG2 (m<o>))	$LEMMA$-01	(o(s()))	11	MOD_s	true
28	—	_	—	:	O	_	and	_	0	IGNORE	true
29	best	_	good	JJS	O	(b2<root> / --LEX--  :ARG1 (b<s>)  :degree (m / most))	good-02	(s())	27	APP_o	true
30	I've	i've	i've	JJ	O	_	thing	_	0	IGNORE	true
31	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	seen	_	see	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	29	MOD_s	true
33	—	_	—	,	O	_	$LEMMA$	_	0	IGNORE	true
34	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	36	MOD_mod	true
35	the	_	the	DT	O	_	and	_	0	IGNORE	true
36	way	_	way	NN	O	(t<root> / --LEX--  :extent-of (k<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
37	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
38	the	_	the	DT	O	_	person	_	0	IGNORE	true
39	launch	_	launch	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	21	MOD_s	true
40	pad,	_	pad,	RB	O	_	and	_	0	IGNORE	true
41	too.	_	too.	UH	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[39@@s@@launch-01, 21@@p@@name, 34@@p@@all, 2@@s@@recommend-01, 16@@m@@POV, 4@@t@@surprise-01, 27@@h@@recommend-01, 36@@t@@way, 11@@d@@video, 23@@n@@_NAME_, 24@@b@@website, 19@@d@@rocket, 26@@s@@high, 29@@b2@@good-02, 13@@s@@take-01, 10@@p@@launch-01, 3@@s@@mention-01, 22@@n@@_NAME_, 1@@d@@i, 9@@s@@fantastic-03, 32@@s@@see-01, 29@@m@@most, 31@@n@@ever]
sentence=1	That	that	that	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
2	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-temporally-at-91	(s())	10	MOD_s	true
3	the	_	the	DT	O	_	person	_	0	IGNORE	true
4	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	5	MOD_mod	true
5	night	_	night	NN	O	(d<root> / date-entity  :dayperiod (m / --LEX--)  :time-of (w<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
6	Renata	_name_	Renata	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
7	didn’t	_	didn’t	NNP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	8	MOD_mod	true
8	come	_	come	VB	O	(g<root> / --LEX--  :ARG4 (n<o>)  :ARG1 (t<s>))	$LEMMA$-01	(s(), o())	10	APP_op1	true
9	home	_	home	RB	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_o	true
10	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
11	it	_	it	PRP	O	_	-	_	0	IGNORE	true
12	doesn’t	_	doesn’t	UH	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	13	MOD_mod	true
13	take	_	take	VB	O	(o<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (s<o>))	$LEMMA$-10	(o(s()))	10	APP_op2	true
14	Freud	_name_	Freud	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	13	APP_s	true
15	to	_	to	TO	O	_	and	_	0	IGNORE	true
16	figure	_	figure	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-out-05	(s())	13	APP_o	true
17	out	_	out	RP	O	_	possible-01	_	0	IGNORE	true
18	what	_	what	WP	O	_	amr-unknown	_	0	IGNORE	true
19	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
20	meant.	_	meant.	RB	O	_	interrogative	_	0	IGNORE	true

nodealignment=[12@@explicitanon0@@-, 1@@p@@that, 13@@o@@take-10, 14@@n@@_NAME_, 5@@m@@night, 8@@g@@come-01, 9@@d@@home, 16@@s@@figure-out-05, 10@@a@@and, 14@@p@@person, 4@@o@@ordinal-entity, 5@@d@@date-entity, 6@@p@@person, 2@@s@@be-temporally-at-91, 4@@explicitanon0@@1, 7@@explicitanon0@@-, 6@@n@@_NAME_]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	concept,	_	concept,	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	mean-01	(s(), o())	32	MOD_s	true
3	that	_	that	DT	O	_	$LEMMA$	_	0	IGNORE	true
4	man	_	man	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	divinely	_	divinely	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	just-02	(mod())	7	MOD_mod	true
7	elected	_	elect	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
8	to	_	to	IN	O	_	and	_	0	IGNORE	true
9	salvation,	_	salvation,	CD	O	_	and	_	0	IGNORE	true
10	or	_	or	CC	O	_	$LEMMA$	_	7	IGNORE	true
11	to	_	to	IN	O	_	contrast-01	_	0	IGNORE	true
12	damnation,	_	damnation,	NNP	O	_	and	_	0	IGNORE	true
13	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
14	the	_	the	DT	O	_	contrast-01	_	0	IGNORE	true
15	center	_	center	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	32	APP_op1	true
16	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
18	predestination	_	predestination	NN	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
19	dogma,	_	dogma,	NNS	O	(d<root> / --LEX--)	and	()	32	APP_op3	true
20	that	_	that	IN	O	_	name	_	0	IGNORE	true
21	later,	_	later,	NNP	O	_	and	_	0	IGNORE	true
22	the	_	the	DT	O	_	he	_	0	IGNORE	true
23	Geneva	_name_	Geneva	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	24	MOD_mod	true
24	reformer	_	reformer	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	4	MOD_s	true
25	Calvin,	_name_	calvin,	CD	O	_	person	_	0	IGNORE	true
26	made	_	make	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	MOD_s	true
27	the	_	the	DT	O	_	he	_	0	IGNORE	true
28	center	_	center	NN	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_o	true
29	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
30	his	_	he	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
31	teaching,	_	teaching,	NNP	O	_	thing	_	0	IGNORE	true
32	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	0	ROOT	true
33	that	_	that	IN	O	_	name	_	0	IGNORE	true
34	subsequently,	_	subsequently,	NNS	O	_	so	_	0	IGNORE	true
35	under	_	under	IN	O	_	$LEMMA$	_	0	IGNORE	true
36	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	38	MOD_mod	true
37	historical	_	historical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	history	(mod())	38	MOD_mod	true
38	preconditions	_	precondition	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	39	APP_op2	true
39	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	43	MOD_op1	true
40	circumstances,	_	circumstances,	NNP	O	_	and	_	0	IGNORE	true
41	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	32	APP_op2	true
42	be	_	be	VB	O	_	person	_	0	IGNORE	true
43	linked	_	link	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	APP_s	true
44	closely	_	closely	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	close-10	(s())	43	MOD_s	true
45	with	_	with	IN	O	_	-	_	0	IGNORE	true
46	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
47	prosperous	_	prosperous	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	prosper-01	(s())	48	MOD_s	true
48	middle	_	middle	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	43	APP_s	true
49	class,	_	class,	NNS	O	_	person	_	0	IGNORE	true
50	in	_	in	IN	O	_	i	_	0	IGNORE	true
51	the	_	the	DT	O	_	person	_	0	IGNORE	true
52	Netherlands,	_name_	netherlands,	NN	O	(d<root> / --LEX--)	_NAME_	()	53	APP_op1	true
53	and	_	and	CC	O	(b<root> / --LEX--  :op2 (r<op2>)  :op1 (h<op1>)  :location-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	43	MOD_mod	true
54	in	_	in	IN	O	_	i	_	0	IGNORE	true
55	England.	_name_	England.	NNS	O	(c<root> / country  :name (n / --LEX--))	_NAME_	()	53	APP_op2	true

nodealignment=[15@@s@@center, 32@@a@@and, 7@@s@@elect-01, 2@@s@@mean-01, 28@@d@@center, 23@@c@@city, 48@@d@@middle, 55@@c@@country, 53@@b@@and, 39@@a@@and, 41@@s@@possible-01, 19@@d@@and, 23@@n@@_NAME_, 26@@s@@make-01, 24@@s@@reformer, 43@@s@@link-01, 1@@p@@this, 38@@d@@precondition, 55@@n@@_NAME_, 37@@p@@history, 6@@t@@just-02, 36@@p@@other, 4@@d@@man, 44@@s@@close-10, 47@@s@@prosper-01, 52@@d@@_NAME_, 18@@d@@predestination]
sentence=1	Various	various	various	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
2	local	_	local	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	4	MOD_s	true
3	fan	_	fan	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	organizations	_	organization	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
5	were	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-located-at-91	(s(), o())	11	APP_op1	true
6	there	_	there	RB	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_o	true
7	in	_	in	IN	O	_	i	_	0	IGNORE	true
8	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
9	charitable	_	charitable	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
10	capacity,	_	capacity,	NNS	O	_	and	_	0	IGNORE	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	0	ROOT	true
12	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	14	MOD_mod	true
13	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
14	fans	_	fan	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
15	donned	_	don	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
16	costumes,	_	costumes,	NNP	O	_	and	_	0	IGNORE	true
17	many	_	many	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	11	MOD_o	true
19	which	_	which	WDT	O	_	have-org-role-91	_	0	IGNORE	true
20	they	_	they	PRP	O	_	person	_	0	IGNORE	true
21	themselves	_	themselves	PRP	O	_	person	_	0	IGNORE	true
22	created.	_	created.	RB	O	_	person	_	0	IGNORE	true

nodealignment=[5@@s@@be-located-at-91, 6@@d@@there, 9@@p@@charitable, 1@@p@@various, 12@@explicitanon0@@1000, 14@@d@@fan, 17@@explicitanon0@@many, 2@@s@@local-02, 12@@m@@multiple, 4@@d@@organization, 3@@p@@fan, 11@@a@@and, 18@@s@@include-91, 15@@s@@don-01]
sentence=1	Here's	here's	here's	XX	O	_	and	_	0	IGNORE	true
2	a	_	a	DT	O	_	thing	_	0	IGNORE	true
3	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
4	vegan	_	vegan	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
5	cupcake	_	cupcake	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	recipe	_	recipe	NN	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
7	to	_	to	TO	O	_	name	_	0	IGNORE	true
8	use	_	use	VB	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_s	true
9	as	_	as	IN	O	_	or	_	0	IGNORE	true
10	a	_	a	DT	O	_	thing	_	0	IGNORE	true
11	base	_	base	NN	O	(s<root> / --LEX--  :ARG2 (g<s>))	$LEMMA$	(s())	8	APP_o	true
12	for	_	for	IN	O	_	and	_	0	IGNORE	true
13	whatever	_	whatever	WDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
14	flavored	_	flavor	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
15	icing	_	icing	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_s	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
17	want	_	want	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	MOD_s	true
18	to	_	to	TO	O	_	thing	_	0	IGNORE	true
19	add	_	add	VB	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-02	(s(), o())	15	MOD_o	true
20	to	_	to	IN	O	_	and	_	0	IGNORE	true
21	it.	_	it.	VB	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[19@@t@@add-02, 6@@d@@recipe, 11@@s@@base, 14@@s@@flavor-01, 13@@p@@whatever, 16@@d@@you, 15@@d@@icing-01, 8@@s@@use-01, 4@@p@@vegan, 5@@p@@cupcake, 3@@p@@great, 17@@s@@want-01]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	accidentally	_	accidentally	RB	O	(t<root> / --LEX--  :manner-of (h<mod>))	accident	(mod())	3	MOD_mod	true
3	posted	_	post	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	I	i	I	PRP	O	_	$REPL$	_	0	IGNORE	true
7	meant	_	mean	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	9	MOD_s	true
8	to	_	to	IN	O	_	person	_	0	IGNORE	true
9	schedule.	_	schedule.	ADD	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	_NAME_	(mod())	3	MOD_mod	true

nodealignment=[1@@d@@i, 2@@t@@accident, 5@@d@@video, 3@@s@@post-01, 7@@s@@mean-02, 9@@explicitanon0@@_NAME_]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	11	APP_op1	true
3	such	_	such	PDT	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
4	a	_	a	DT	O	_	cause-01	_	0	IGNORE	true
5	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	time	_	time	NN	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_o	true
7	being	_	be	VBG	O	(b<root> / --LEX--  :ARG1 (h<s>)  :ARG2 (a<o>)  :time-of (d<mod>))	$LEMMA$-located-at-91	(mod(), s(), o())	2	MOD_mod	true
8	back	_	back	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
9	in	_	in	IN	O	_	i	_	0	IGNORE	true
10	Glacier	_name_	Glacier	NNP	O	(c<root> / city  :name (n / --LEX--)  :location-of (l<mod>))	_NAME_	(mod())	7	MOD_mod	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
12	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	13	APP_s	true
13	hope	_	hope	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_op2	true
14	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
15	inspired	_	inspire	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	13	APP_o	true
16	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_o	true
17	to	_	to	TO	O	_	and	_	0	IGNORE	true
18	come	_	come	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	21	APP_op1	true
19	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
20	here	_	here	RB	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	15	APP_o2	true
22	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	21	APP_op2	true
23	one	_	one	CD	O	(d<root> / --LEX--)	1	()	22	APP_s	true
24	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	23	MOD_s	true
25	our	_	our	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
26	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
27	favorite	_	favorite	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	favor-01	(s())	29	MOD_s	true
28	national	_	national	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	nation	(mod())	29	MOD_mod	true
29	parks	_	park	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
30	we've	_	we've	NN	O	_	thing	_	0	IGNORE	true
31	ever	_	ever	RB	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	32	MOD_mod	true
32	been	_	be	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-located-at-91	(s())	29	MOD_s	true
33	to	_	to	IN	O	_	name	_	0	IGNORE	true
34	in	_	in	IN	O	_	i	_	0	IGNORE	true
35	the	_	the	DT	O	_	thing	_	0	IGNORE	true
36	USA.	usa.	usa.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[21@@a@@and, 5@@p@@great, 11@@a@@and, 13@@s@@hope-01, 32@@s@@be-located-at-91, 12@@d@@i, 22@@s@@see-01, 6@@d@@time, 24@@s@@include-91, 10@@n@@_NAME_, 3@@s@@such, 7@@b@@be-located-at-91, 2@@s@@have-03, 14@@d@@this, 16@@d@@you, 26@@s@@most, 8@@p@@back, 1@@d@@We, 23@@d@@1, 20@@d@@here, 29@@d@@park, 10@@c@@city, 15@@b@@inspire-01, 27@@s@@favor-01, 18@@s@@come-01, 28@@p@@nation, 31@@n@@ever]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	2	APP_s	true
2	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	3	APP_op1	true
3	chips,	_	chips,	NNP	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	and	(op2(), op1())	0	ROOT	true
4	I	i	I	PRP	O	_	1	_	0	IGNORE	true
5	want	_	want	VBP	O	(c<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (m<o>))	$LEMMA$-01	(o(s()))	2	APP_o	true
6	white	_	white	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_o	true
7	toast,	_	toast,	.	O	_	and	_	0	IGNORE	true
8	it's	_	it's	PRP	O	_	now	_	0	IGNORE	true
9	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-much	(mod())	11	MOD_mod	true
10	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	I	i	I	PRP	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	2	MOD_mod	true
13	eat	_	eat	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	MOD_s	true
14	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
15	day.	_	day.	NN	O	(d<root> / --LEX--)	_NAME_	()	3	APP_op2	true

nodealignment=[15@@d@@_NAME_, 11@@p@@all, 14@@p@@all, 6@@s@@white-02, 1@@d@@i, 3@@a@@and, 12@@explicitanon0@@1, 10@@p@@much, 2@@c@@want-01, 9@@s@@pretty-much, 5@@c@@want-01, 13@@s@@eat-01]
sentence=1	"That's	"that's	"That's	LS	O	_	person	_	0	IGNORE	true
2	why	_	why	WRB	O	(t3<root> / thing  :ARG0-of (t / --LEX--  :ARG1 (t2<s>)))	cause-01	(s())	0	ROOT	true
3	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	did	_	do	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	2	APP_s	true
5	the	_	the	DT	O	_	person	_	0	IGNORE	true
6	Campbell_Soup	_name_	Soup	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	7	MOD_mod	true
7	cans	_	can	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	8	APP_op1	true
8	or	_	or	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	4	APP_o	true
9	the	_	the	DT	O	_	mean-01	_	0	IGNORE	true
10	Marilyn	_name_	Marilyn	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_op2	true
11	pictures,	_	pictures,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
12	these	_	these	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	this	(mod())	14	MOD_mod	true
13	iconic	_	iconic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	14	MOD_mod	true
14	products	_	product	NNS	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	8	APP_op3	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	American	_name_	american	JJ	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	17	MOD_mod	true
17	culture	_	culture	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
18	whether	_	whether	IN	O	_	interrogative	_	0	IGNORE	true
19	they	_	they	PRP	O	_	person	_	0	IGNORE	true
20	be	_	be	VBP	O	_	$LEMMA$-located-at-91	_	0	IGNORE	true
21	in	_	in	IN	O	_	i	_	0	IGNORE	true
22	film,	_	film,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
23	video	_	video	NN	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_op1	true
24	or	_	or	CC	O	(a<root> / --LEX--  :op2 (c<op2>)  :op1 (p<op1>)  :condition-of (d<mod>))	$LEMMA$	(op2(), op1(), mod())	4	MOD_mod	true
25	actually	_	actually	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	actual-02	(s())	26	MOD_s	true
26	products	_	product	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	24	APP_op2	true
27	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	26	APP_s	true
28	consumed.	_	consumed.	VBP	O	_	have-condition-91	_	0	IGNORE	true

nodealignment=[24@@a@@or, 2@@t3@@thing, 26@@s@@product, 7@@d@@can, 27@@d@@we, 10@@n@@_NAME_, 12@@p@@this, 25@@s@@actual-02, 8@@a@@or, 23@@d@@video, 4@@s@@do-02, 2@@t@@cause-01, 16@@n@@_NAME_, 13@@p@@iconic, 14@@m@@product, 6@@p@@_NAME_, 17@@d@@culture, 10@@p@@person, 16@@c@@country, 3@@d@@he]
sentence=1	We	we	We	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	2	APP_s	true
2	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
3	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	2	APP_o	true
5	who	_	who	WP	O	_	have-03	_	0	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	great	_	great	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	at	_	at	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	politics;	_	politics;	NNP	O	_	and	_	0	IGNORE	true
10	some	_	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
11	people	_	people	NNS	O	(a<root> / --LEX--  :topic-of (w<mod>))	person	(mod())	4	MOD_mod	true
12	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
13	give	_	give	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	MOD_s	true
14	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
15	the	_	the	DT	O	_	person	_	0	IGNORE	true
16	war	_	war	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	stuff	_	stuff	NN	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_o	true
18	to;	_	to;	NFP	O	_	and	_	0	IGNORE	true
19	someone	_	someone	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_s	true
20	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
21	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
22	in	_	in	IN	O	_	have-org-role-91	_	0	IGNORE	true
23	charge	_	charge	NN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-05	(o2(), s(), o())	4	MOD_o	true
24	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	Britney_Spears	_name_	Spears	NNPS	O	(p<root> / person  :name (n / --LEX--)  :mod-of (e<mod>))	_NAME_	(mod())	27	MOD_mod	true
27	story	_	story	NN	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_o2	true
28	of	_	of	IN	O	_	$LEMMA$	_	0	IGNORE	true
29	the	_	the	DT	O	_	person	_	0	IGNORE	true
30	week	_	week	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
31	—	_	—	:	O	_	and	_	0	IGNORE	true
32	the	_	the	DT	O	_	person	_	0	IGNORE	true
33	entertainment	_	entertainment	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	27	MOD_mod	true
34	stories.	_	stories.	UH	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[13@@s@@give-01, 2@@s@@have-03, 1@@d@@We, 23@@b@@charge-05, 30@@n@@week, 11@@a@@person, 33@@p@@entertainment, 3@@explicitanon0@@some, 19@@d@@someone, 27@@d@@story, 16@@p@@war, 14@@p@@all, 7@@p@@great, 10@@explicitanon0@@some, 26@@n@@_NAME_, 17@@d@@stuff, 4@@d@@person, 26@@p@@person]
sentence=1	Another	another	another	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
3	non-locals	_	non-local	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
4	don't	_	don't	VBP	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	6	MOD_mod	true
5	often	_	often	RB	O	(o<root> / --LEX--  :frequency-of (m<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	realize	_	realize	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
7	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
8	that	_	that	IN	O	_	name	_	0	IGNORE	true
9	Cleveland's	_name_	Cleveland's	NNP	O	_	_NAME_	_	0	IGNORE	true
10	long	_	long	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	11	MOD_s	true
11	history	_	history	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
12	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
13	industrial	_	industrial	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	industry	(mod())	14	MOD_mod	true
14	wealth	_	wealth	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
15	has	_	have	VBZ	O	_	cause-01	_	0	IGNORE	true
16	left	_	leave	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-13	(s(), o())	6	APP_o	true
17	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	chock	_	chock	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
19	full	_	full	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-09	(s(), o())	18	MOD_s	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	cultural	_	cultural	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	culture	(mod())	22	MOD_mod	true
22	riches	_	riches	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
23	as	_	as	RB	O	_	cause-01	_	0	IGNORE	true
24	well	_	well	RB	O	_	$LEMMA$	_	0	IGNORE	true
25	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	6	MOD_s	true
26	the	_	the	DT	O	_	cause-01	_	0	IGNORE	true
27	beginnings	_	beginning	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	begin-01	(s())	25	APP_o	true
28	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
29	a	_	a	DT	O	_	-	_	0	IGNORE	true
30	"sustainable	_	"sustainable	XX	O	(p<root> / possible-01  :ARG1 (l / --LEX--))	possible-01	()	27	APP_s	true
31	city"	_	city"	XX	O	_	and	_	0	IGNORE	true
32	movement.	_	movement.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@explicitanon0@@-, 11@@d@@history, 25@@s@@cause-01, 13@@p@@industry, 3@@d@@non-local, 1@@p@@another, 22@@d@@riches, 6@@s@@realize-01, 16@@s@@leave-13, 14@@p@@wealth, 18@@d@@chock, 10@@s@@long-03, 19@@s@@full-09, 21@@p@@culture, 30@@p@@possible-01, 5@@o@@often, 27@@s@@begin-01, 30@@l@@possible-01, 2@@p@@thing]
sentence=1	Finishing	finishing	finish	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_s	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	largest	_	large	JJS	O	(t<root> / --LEX--  :degree (m / most)  :mod-of (g<mod>))	large	(mod())	4	MOD_mod	true
4	item	_	item	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	your	_	your	PRP$	O	_	$LEMMA$	_	0	IGNORE	true
7	list	_	list	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
8	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
9	things	_	thing	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
10	to	_	to	TO	O	_	thing	_	0	IGNORE	true
11	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	7	MOD_s	true
12	will	_	will	MD	O	_	thing	_	0	IGNORE	true
13	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	APP_op1	true
14	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	feel	_	feel	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	13	APP_o	true
16	extra	_	extra	JJ	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	productive	_	productive	JJ	O	(d<root> / --LEX--)	$LEMMA$-03	()	15	APP_s	true
18	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
19	give	_	give	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	18	APP_op2	true
20	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	boost	_	boost	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	19	APP_s	true
23	to	_	to	TO	O	_	$LEMMA$	_	0	IGNORE	true
24	do	_	do	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	22	APP_s	true
25	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
26	things	_	thing	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
27	you’ve	_	you’ve	NNP	O	_	cause-01	_	0	IGNORE	true
28	been	_	be	VBN	O	_	person	_	0	IGNORE	true
29	pushing	_	push	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	26	MOD_s	true
30	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	the	_	the	DT	O	_	thing	_	0	IGNORE	true
32	side.	_	side.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@d@@item, 24@@s@@do-02, 26@@d@@thing, 22@@s@@boost-01, 7@@b@@list, 19@@s@@give-01, 18@@a@@and, 3@@t@@large, 9@@g@@thing, 15@@s@@feel-01, 13@@s@@make-02, 17@@d@@productive-03, 11@@s@@do-02, 16@@s@@extra, 1@@s@@finish-01, 29@@s@@push-01, 25@@p@@other, 3@@m@@most]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	time	_	time	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
5	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	15	APP_op1	true
6	to	_	to	TO	O	_	thing	_	0	IGNORE	true
7	write	_	write	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	5	APP_s	true
8	down	_	down	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	summaries	_	summary	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	7	APP_o	true
10	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
11	all	_	all	PDT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	13	MOD_mod	true
12	the	_	the	DT	O	_	thing	_	0	IGNORE	true
13	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
14	points,	_	points,	NNS	O	_	and	_	0	IGNORE	true
15	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
16	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	are	_	be	VBP	O	_	monetary-quantity	_	0	IGNORE	true
18	confident	_	confident	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	15	APP_op2	true
19	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	have	_	have	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	18	APP_s	true
21	the	_	the	DT	O	_	thing	_	0	IGNORE	true
22	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
23	you	_	you	PRP	O	_	cause-01	_	0	IGNORE	true
24	need	_	need	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	MOD_s	true
25	to	_	to	TO	O	_	thing	_	0	IGNORE	true
26	do	_	do	VB	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-02	(mod(), s())	24	MOD_mod	true
27	well	_	well	RB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	26	MOD_s	true
28	on	_	on	IN	O	_	thing	_	0	IGNORE	true
29	the	_	the	DT	O	_	thing	_	0	IGNORE	true
30	exam.	_	exam.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[11@@p@@all, 1@@p@@this, 18@@s@@confident-01, 24@@s@@need-01, 22@@d@@knowledge, 15@@a@@and, 20@@s@@have-03, 26@@i@@do-02, 5@@s@@possible-01, 27@@s@@well-09, 7@@s@@write-01, 9@@d@@summary-01, 13@@p@@important, 2@@n@@time, 3@@d@@you]
sentence=1	It	it	It	PRP	O	_	$LEMMA$	_	0	IGNORE	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	decided	_	decide	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
4	that	_	that	IN	O	_	thing	_	0	IGNORE	true
5	a	_	a	DT	O	_	1	_	0	IGNORE	true
6	collaborative	_	collaborative	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
7	online	_	online	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	review	_	review	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	9	APP_s	true
9	process	_	process	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	12	APP_s	true
10	would	_	would	MD	O	_	thing	_	0	IGNORE	true
11	be	_	be	VB	O	_	person	_	0	IGNORE	true
12	used	_	use	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	3	APP_s	true
13	to	_	to	IN	O	_	thing	_	0	IGNORE	true
14	"discover"	_	"discover"	NNP	O	_	mean-01	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	microscopically	_	microscopically	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	ethnical	(mod())	17	MOD_mod	true
17	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
18	samples	_	sample	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	12	APP_o	true
19	the	_	the	DT	O	_	person	_	0	IGNORE	true
20	capsule	_	capsule	NN	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_s	true
21	collected.	_	collected.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[16@@p@@ethnical, 17@@p@@small, 12@@s@@use-01, 8@@d@@review-01, 7@@p@@online, 6@@p@@collaborative, 3@@s@@decide-01, 20@@d@@capsule, 18@@s@@sample-01, 9@@s@@process-02]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	economic	_	economic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	economy	(mod())	3	MOD_mod	true
3	ills	_	ill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	suffer	_	suffer	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	7	MOD_o	true
6	have	_	have	VBP	O	_	person	_	0	IGNORE	true
7	come	_	come	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	0	ROOT	true
8	upon	_	upon	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	us	_	us	PRP	O	_	$LEMMA$	_	0	IGNORE	true
10	over	_	over	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	several	_	several	JJ	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	7	MOD_mod	true
12	decades.	_	decades.	NNS	O	_	1	_	0	IGNORE	true

nodealignment=[5@@s@@suffer-01, 2@@p@@economy, 4@@d@@we, 3@@d@@ill, 7@@s@@come-03, 11@@explicitanon0@@several]
sentence=1	“On	“on	“On	NNP	O	_	$LEMMA$	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	other	_	other	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	0	ROOT	true
4	hand,”	_	hand,”	NNP	O	_	expressive	_	0	IGNORE	true
5	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	10	APP_s	true
6	said,	_	said,	NNP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	say-01	(s(), o())	3	MOD_s	true
7	“he’s	_	“he’s	NNP	O	_	person	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	10	MOD_mod	true
10	super	_	super	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$	(s())	6	APP_o	true
11	we’ve	_name_	we’ve	NNP	O	_	thing	_	0	IGNORE	true
12	had	_	have	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	10	MOD_o	true
13	who	_	who	WP	O	_	have-org-role-91	_	0	IGNORE	true
14	keeps	_	keep	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	MOD_s	true
15	the	_	the	DT	O	_	he	_	0	IGNORE	true
16	boiler,	_	boiler,	NNPS	O	_	$LEMMA$	_	0	IGNORE	true
17	the	_	the	DT	O	_	$LEMMA$	_	0	IGNORE	true
18	door	_	door	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op1	true
19	buzzers,	_	buzzers,	NNS	O	_	mean-01	_	0	IGNORE	true
20	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	14	APP_o	true
21	the	_	the	DT	O	_	person	_	0	IGNORE	true
22	electrical	_	electrical	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	electricity	(mod())	23	MOD_mod	true
23	system	_	system	NN	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_op2	true
24	in	_	in	IN	O	_	i	_	0	IGNORE	true
25	perfect	_	perfect	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	26	MOD_s	true
26	working	_	work	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-09	(s())	23	MOD_s	true
27	order.”	_	order.”	NNP	O	_	interrogative	_	0	IGNORE	true

nodealignment=[14@@s@@keep-01, 3@@d@@other, 6@@s@@say-01, 5@@d@@i, 20@@a@@and, 25@@s@@perfect-02, 10@@s@@super, 9@@o@@ordinal-entity, 18@@d@@door, 9@@explicitanon0@@1, 12@@s@@have-03, 22@@p@@electricity, 26@@s@@work-09, 23@@d@@system]
sentence=1	And	and	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	0	ROOT	true
2	the	_	the	DT	O	_	he	_	0	IGNORE	true
3	images	_	image	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	10	APP_s	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	6	APP_s	true
5	will	_	will	MD	O	_	person	_	0	IGNORE	true
6	see	_	see	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	3	MOD_o	true
7	today	_name_	today	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
8	are	_	be	VBP	O	_	person	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	testament	_	testament	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	testify-01	(s(), o())	1	APP_op2	true
11	to	_	to	IN	O	_	thing	_	0	IGNORE	true
12	the	_	the	DT	O	_	person	_	0	IGNORE	true
13	amazing	_	amazing	JJ	O	(s<root> / --LEX--  :ARG0 (y<s>))	amaze-01	(s())	14	MOD_s	true
14	work	_	work	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	10	APP_o	true
15	done	_	do	VBN	O	_	$LEMMA$-02	_	0	IGNORE	true
16	by	_	by	IN	O	_	include-91	_	0	IGNORE	true
17	the	_	the	DT	O	_	person	_	0	IGNORE	true
18	thousands	_	thousand	NNS	O	(explicitanon0<root> / --LEX--  :op1-of (m / multiple  :quant-of (b<mod>)))	1000	(mod())	20	MOD_mod	true
19	of	_	of	IN	O	_	1	_	0	IGNORE	true
20	workers	_	worker	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	14	APP_s	true
21	across	_	across	IN	O	(b<root> / --LEX--  :op1 (p2<op1>)  :location-of (p<mod>))	$LEMMA$	(op1(), mod())	20	MOD_mod	true
22	our	_	our	PRP$	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_poss	true
23	nation	_	nation	NN	O	(m<root> / --LEX--  :poss (i<poss>))	$LEMMA$	(poss())	21	APP_op1	true
24	who	_	who	WP	O	_	1	_	0	IGNORE	true
25	dedicated	_	dedicate	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	20	MOD_s	true
26	years	_name_	year	NNS	O	(t2<root> / temporal-quantity  :unit (m / --LEX--)  :op1-of (m2 / multiple  :duration-of (w<mod>)))	$LEMMA$	(mod())	25	MOD_mod	true
27	to	_	to	IN	O	_	$LEMMA$	_	0	IGNORE	true
28	this	_	this	DT	O	(d<root> / --LEX--)	$LEMMA$	()	25	APP_o	true
29	project.	_	project.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@m@@multiple, 22@@d@@our, 26@@m@@year, 21@@b@@across, 13@@s@@amaze-01, 20@@p2@@person, 10@@s@@testify-01, 1@@a@@and, 25@@t@@dedicate-01, 20@@e2@@work-01, 6@@s@@see-01, 4@@d@@we, 3@@d@@image, 26@@m2@@multiple, 26@@t2@@temporal-quantity, 23@@m@@nation, 28@@d@@this, 18@@explicitanon0@@1000, 14@@s@@work-01, 7@@n@@today]
sentence=1	In	in	in	IN	O	_	person	_	0	IGNORE	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	eyes	_	eye	NNS	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$	(s(), o())	7	MOD_o	true
4	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
5	many	_	many	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	3	APP_s	true
6	in	_	in	IN	O	_	person	_	0	IGNORE	true
7	the	_	the	DT	O	(d<root> / --LEX--)	person	()	15	APP_o	true
8	world,	_	world,	NNS	O	_	1	_	0	IGNORE	true
9	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
10	every	_	every	DT	O	(r<root> / --LEX--  :ARG3 (t<s>)  :frequency-of (t2<mod>))	rate-entity-91	(mod(), s())	12	MOD_mod	true
11	4-year	_	4-year	CD	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	year	()	12	APP_s	true
12	ceremony	_	ceremony	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$	(s())	15	APP_s	true
13	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_s	true
14	accept	_	accept	VBP	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	12	MOD_o	true
15	as	_	as	IN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
16	normal	_	normal	JJ	O	(d<root> / --LEX--)	$LEMMA$-02	()	14	APP_o2	true
17	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
18	nothing	_	nothing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	21	MOD_mod	true
19	less	_	less	JJR	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
20	than	_	than	IN	O	_	thing	_	0	IGNORE	true
21	a	_	a	DT	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	1	(s(), o())	15	MOD_s	true
22	miracle.	_	miracle.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[12@@s@@ceremony, 5@@p@@person, 10@@r@@rate-entity-91, 3@@s@@eye, 16@@d@@normal-02, 14@@b@@accept-01, 11@@t@@temporal-quantity, 15@@s@@cause-01, 19@@p@@less, 7@@d@@person, 9@@p@@this, 13@@d@@we, 5@@n@@many, 18@@p@@nothing, 11@@m@@year, 21@@s@@1]
sentence=1	It	it	It	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o	true
2	was	_	be	VBD	O	_	person	_	0	IGNORE	true
3	pretty	_	pretty	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$-much	(mod())	4	MOD_mod	true
4	much	_	much	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
5	the	_	the	DT	O	_	and	_	0	IGNORE	true
6	first	_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	7	MOD_mod	true
7	thing	_	thing	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
8	he	_	he	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_s	true
9	told	_	tell	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	0	ROOT	true
10	us	_	us	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	9	APP_o2	true
11	when,	_	when,	NNP	O	_	and	_	0	IGNORE	true
12	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
13	first	_name_	first	JJ	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	1	(mod())	18	MOD_mod	true
14	years,	_	years,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
15	we	_	we	PRP	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
16	were	_	be	VBD	O	_	person	_	0	IGNORE	true
17	all	_	all	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
18	bunched	_	bunch	VBN	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	$LEMMA$-01	(mod(), s())	9	MOD_mod	true
19	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	18	MOD_mod	true
20	in	_	in	IN	O	_	i	_	0	IGNORE	true
21	the	_	the	DT	O	_	he	_	0	IGNORE	true
22	unfamiliar	_	unfamiliar	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	23	MOD_s	true
23	dusty	_	dusty	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	classroom.	_	classroom.	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	9	MOD_mod	true

nodealignment=[6@@o@@ordinal-entity, 10@@d@@us, 22@@s@@unfamiliar-02, 9@@b@@tell-01, 13@@o@@ordinal-entity, 6@@explicitanon0@@1, 23@@p@@dusty, 19@@p@@together, 1@@d@@It, 13@@explicitanon0@@1, 8@@d@@he, 17@@p@@all, 3@@s@@pretty-much, 4@@p@@much, 24@@b@@classroom., 18@@s@@bunch-01, 7@@p@@thing, 15@@p@@we]
sentence=1	Get	get	Get	VB	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	feedback	_	feedback	NN	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	1	APP_s	true
3	from	_	from	IN	O	_	have-org-role-91	_	0	IGNORE	true
4	researchers	_	researcher	NNS	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	research-01	()	2	APP_s	true
5	on	_	on	IN	O	_	thing	_	0	IGNORE	true
6	possible	_	possible	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	4	MOD_s	true
7	subjects,	_	subjects,	NNP	O	_	thing	_	0	IGNORE	true
8	based	_	base	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-02	(s(), o())	2	MOD_s	true
9	on	_	on	IN	O	_	thing	_	0	IGNORE	true
10	the	_	the	DT	O	_	person	_	0	IGNORE	true
11	knowledge	_	knowledge	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op1	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	8	APP_o	true
13	skills	_	skill	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op2	true
14	they	_	they	PRP	O	_	person	_	0	IGNORE	true
15	feel	_	feel	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	12	MOD_o	true
16	librarians	_	librarian	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	15	APP_s	true
17	need;	_	need;	NNP	O	_	person	_	0	IGNORE	true

nodealignment=[8@@s@@base-02, 12@@a@@and, 11@@d@@knowledge, 13@@d@@skill, 1@@s@@Get-01, 6@@s@@possible-01, 4@@p2@@person, 15@@s@@feel-01, 4@@e2@@research-01, 2@@s@@feedback-01, 16@@d@@librarian]
sentence=1	Some	some	some	DT	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	disciplines,	_	disciplines,	NNS	O	_	resemble-01	_	0	IGNORE	true
3	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	7	MOD_s	true
4	political	_	political	JJ	O	(d<root> / --LEX--)	politics	()	3	APP_o	true
5	science,	_	science,	NNP	O	_	and	_	0	IGNORE	true
6	are	_	be	VBP	O	_	person	_	0	IGNORE	true
7	organized	_	organize	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
8	around	_	around	IN	O	_	$LEMMA$	_	0	IGNORE	true
9	a	_	a	DT	O	_	1	_	0	IGNORE	true
10	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	11	MOD_s	true
11	professional	_	professional	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	7	APP_s	true
12	society,	_	society,	NNP	O	_	and	_	0	IGNORE	true
13	whose	_	whose	WP$	O	_	have-org-role-91	_	0	IGNORE	true
14	membership	_	membership	NN	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	15	MOD_mod	true
15	roll	_	roll	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	approximates	_	approximate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_mod	true
17	a	_	a	DT	O	_	1	_	0	IGNORE	true
18	full	_	full	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	19	MOD_mod	true
19	census	_	census	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	[7].	_	[7].	.	O	_	interrogative	_	0	IGNORE	true

nodealignment=[14@@p@@membership, 15@@d@@roll, 19@@d@@census, 16@@s@@approximate-01, 10@@s@@single-02, 11@@p@@professional, 3@@s@@resemble-01, 7@@s@@organize-01, 4@@d@@politics, 1@@explicitanon0@@some, 18@@p@@full]
sentence=1	It's	it's	it's	PRP	O	_	cut-02	_	0	IGNORE	true
2	life-changing,	_	life-changing,	NNP	O	_	shit	_	0	IGNORE	true
3	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
4	so	_	so	RB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	cause-01	(s(), o())	0	ROOT	true
5	for	_	for	IN	O	_	cause-01	_	0	IGNORE	true
6	the_first_couple_of_weeks	_name_	week	NNS	O	(b<root> / broadcast-program  :name (n4 / --LEX--))	_NAME_	()	11	APP_o	true
7	that's	_	that's	IN	O	_	_NAME_	_	0	IGNORE	true
8	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
9	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	11	APP_s	true
10	could	_	could	MD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	possible-01	(s(), o())	17	APP_s	true
11	focus	_	focus	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	10	APP_o	true
12	on,	_	on,	NFP	O	_	and	_	0	IGNORE	true
13	was	_	be	VBD	O	_	thing	_	0	IGNORE	true
14	how	_	how	WRB	O	_	thing	_	0	IGNORE	true
15	life-changing	_	life-changing	JJ	O	(d<root> / --LEX--)	$LEMMA$	()	18	APP_op1	true
16	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
17	was	_	be	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	thing	(s())	4	APP_s	true
18	and	_	and	CC	O	(o<root> / --LEX--  :op1 (b<op1>))	$LEMMA$	(op1())	10	APP_s	true
19	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
20	was	_	be	VBD	O	_	person	_	0	IGNORE	true
21	really	_	really	RB	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	scary.	_	scary.	JJ	O	(d<root> / --LEX--)	multi-sentence	()	4	APP_o	true

nodealignment=[21@@s@@really, 9@@d@@i, 17@@s@@thing, 10@@s@@possible-01, 6@@n4@@_NAME_, 11@@s@@focus-01, 6@@b@@broadcast-program, 15@@d@@life-changing, 8@@p@@all, 18@@o@@and, 22@@d@@multi-sentence, 4@@s@@cause-01]
sentence=1	The	the	the	DT	O	_	contrast-01	_	0	IGNORE	true
2	single	_	single	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	MOD_s	true
3	most	_	most	RBS	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	4	MOD_mod	true
4	costly	_	costly	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	thing	_	thing	NN	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_o	true
6	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	spend	_	spend	VBP	O	(g<root> / --LEX--  :ARG3 (t<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	on	_	on	IN	O	_	thing	_	0	IGNORE	true
9	is	_	be	VBZ	O	_	monetary-quantity	_	0	IGNORE	true
10	rent	_	rend	VBN	O	(d<root> / --LEX--)	$LEMMA$-01	()	11	APP_op2	true
11	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	7	MOD_op1	true
12	advertising,	_	advertising,	NNP	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	and	(s(), o())	7	MOD_s	true
13	those	_	those	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	that	(mod())	7	MOD_mod	true
14	two	_	two	CD	O	(t<root> / thing  :quant (explicitanon0 / --LEX--))	2	()	16	APP_s	true
15	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	make	_	make	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-up-07	(s(), o())	12	APP_o	true
17	up	_	up	RP	O	_	$LEMMA$	_	0	IGNORE	true
18	the	_	the	DT	O	_	thing	_	0	IGNORE	true
19	bulk	_	bulk	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_o	true
20	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
21	what	_	what	WP	O	_	thing	_	0	IGNORE	true
22	we	_	we	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	spend.	_	spend.	VBP	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@a@@and, 16@@s@@make-up-07, 3@@s@@most, 12@@s@@and, 19@@d@@bulk, 7@@g@@spend-01, 6@@d@@we, 13@@p@@that, 14@@explicitanon0@@2, 15@@p@@together, 14@@t@@thing, 10@@d@@rend-01, 2@@s@@single-02, 5@@d@@thing, 4@@p@@costly]
sentence=1	The	the	the	DT	O	_	person	_	0	IGNORE	true
2	way	_	way	NN	O	(t<root> / --LEX--  :manner-of (h<mod>))	$LEMMA$	(mod())	7	APP_s	true
3	cuisines	_	cuisine	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_s	true
4	vary	_	vary	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	2	APP_mod	true
5	across	_	across	IN	O	_	$LEMMA$	_	0	IGNORE	true
6	cultures	_	culture	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o	true
7	fascinates	_	fascinate	VBZ	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
8	many	_	many	JJ	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	7	APP_o	true
9	people.	_	people.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[8@@n@@many, 3@@d@@cuisine, 2@@t@@way, 6@@d@@culture, 7@@s@@fascinate-01, 4@@s@@vary-01, 8@@p@@person]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
2	is	_	be	VBZ	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	12	APP_op1	true
3	in	_	in	IN	O	_	i	_	0	IGNORE	true
4	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
5	Luther	_name_	Luther	NNP	O	(p<root> / --LEX--  :mod-of (s<mod>))	_NAME_	(mod())	6	MOD_mod	true
6	book	_	book	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
7	some	_	some	DT	O	(p<root> / person  :quant (n / --LEX--))	$LEMMA$	()	15	APP_s	true
8	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	18	MOD_s	true
9	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	11	APP_s	true
10	are	_	be	VBP	O	_	person	_	0	IGNORE	true
11	reading,	_	reading,	CD	O	(s<root> / --LEX--  :ARG1 (p<s>))	shit	(s())	12	APP_op2	true
12	and	_	and	CC	O	(a<root> / --LEX--  :op1 (s<op1>)  :op2 (r<op2>)  :op4 (e<op4>)  :op3 (h<op3>))	$LEMMA$	(op2(), op1(), op4(), op3())	0	ROOT	true
13	um,	_	um,	NN	O	_	and	_	0	IGNORE	true
14	if	_	if	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	have-condition-91	(s(), o())	12	MOD_s	true
15	you,	_	you,	NNS	O	(m<root> / --LEX--  :ARG1 (m2<o>)  :ARG0 (t<s>)  :condition-of (g<mod>))	$LEMMA$-01	(mod(), s(), o())	12	MOD_mod	true
16	this_evening	_name_	evening	NN	O	(d<root> / --LEX--)	bomb-01	()	15	APP_o	true
17	when	_	when	WRB	O	_	$LEMMA$	_	0	IGNORE	true
18	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_op3	true
19	go	_	go	VBP	O	(v<root> / --LEX--  :ARG0 (i2<s>)  :time-of (p<mod>))	$LEMMA$-01	(mod(), s())	23	MOD_mod	true
20	home,	_	home,	NNP	O	_	and	_	0	IGNORE	true
21	if	_	if	IN	O	_	have-condition-91	_	0	IGNORE	true
22	you	_	you	PRP	O	_	$LEMMA$	_	0	IGNORE	true
23	wanna	_	wanna	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	14	APP_o	true
24	meditate	_	meditate	VB	O	(d<root> / --LEX--)	$LEMMA$-01	()	23	APP_s	true
25	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
26	on	_	on	IN	O	_	thing	_	0	IGNORE	true
27	more,	_	more,	NNS	O	_	thing	_	0	IGNORE	true
28	on	_	on	IN	O	_	thing	_	0	IGNORE	true
29	–	_	–	HYPH	O	_	thing	_	0	IGNORE	true
30	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
31	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
32	more,	_	more,	VBZ	O	_	$LEMMA$	_	0	IGNORE	true
33	it's	_	it's	PRP	O	(d<root> / --LEX--)	$LEMMA$-located-at-91	()	12	APP_op4	true
34	on	_	on	IN	O	_	$LEMMA$	_	0	IGNORE	true
35	page	_	page	NN	O	(b<root> / --LEX--  :location-of (h<mod>))	$LEMMA$	(mod())	33	MOD_mod	true
36	three	_	three	CD	O	(explicitanon0<root> / --LEX--  :value-of (o / ordinal-entity  :ord-of (p<mod>)))	3	(mod())	35	MOD_mod	true
37	eleven.	_	eleven.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[16@@d@@bomb-01, 6@@b@@book, 1@@p@@this, 24@@d@@meditate-01, 36@@o@@ordinal-entity, 2@@d@@be-located-at-91, 12@@a@@and, 19@@v@@go-01, 36@@explicitanon0@@3, 9@@d@@you, 8@@s@@include-91, 11@@s@@shit, 7@@p@@person, 7@@n@@some, 18@@d@@you, 15@@m@@you,-01, 5@@p@@_NAME_, 33@@d@@it's-located-at-91, 14@@s@@have-condition-91, 35@@b@@page, 23@@s@@wanna-01]
sentence=1	This	this	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	2	MOD_mod	true
2	conjecture	_	conjecture	NN	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
3	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
4	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
5	supported	_	support	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	by	_	by	IN	O	_	cause-01	_	0	IGNORE	true
7	other	_	other	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	letters	_	letter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
9	Galois	_name_	Galois	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	11	APP_s	true
10	later	_	later	RB	O	(e<root> / --LEX--  :degree (m / more)  :time-of (p<mod>))	late	(mod())	11	MOD_mod	true
11	wrote	_	write	VBD	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	8	MOD_o	true
12	to	_	to	IN	O	_	person	_	0	IGNORE	true
13	his	_	he	PRP$	O	_	person	_	0	IGNORE	true
14	friends	_	friend	NNS	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	11	APP_o2	true
15	the_night	_name_	night	NN	O	(t<root> / temporal-quantity  :unit (m / --LEX--))	$LEMMA$	()	16	APP_op1	true
16	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	11	MOD_mod	true
17	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
18	died.	_	died.	RB	O	_	multiple	_	0	IGNORE	true

nodealignment=[4@@p@@also, 16@@w@@before, 15@@t@@temporal-quantity, 14@@h@@have-rel-role-91, 2@@d@@conjecture-01, 14@@f@@friend, 15@@m@@night, 10@@e@@late, 9@@p@@person, 8@@d@@letter, 14@@p@@person, 5@@s@@support-01, 7@@p@@other, 9@@n@@_NAME_, 10@@m@@more, 1@@p@@this, 11@@b@@write-01]
sentence=1	In	in	in	IN	O	_	thing	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	5	MOD_mod	true
3	paper,	_	paper,	NNS	O	_	and	_	0	IGNORE	true
4	we	_	we	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	5	APP_s	true
5	report	_	report	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
6	upon	_	upon	IN	O	_	thing	_	0	IGNORE	true
7	the	_	the	DT	O	_	person	_	0	IGNORE	true
8	novel	_	novel	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	9	MOD_mod	true
9	insights	_	insight	NNS	O	(d<root> / --LEX--)	$LEMMA$-01	()	5	APP_o	true
10	eye-tracking	_	eye-tracking	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	11	MOD_s	true
11	techniques	_	technique	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	13	APP_s	true
12	have	_	have	VBP	O	_	cause-01	_	0	IGNORE	true
13	provided	_	provide	VBN	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	9	MOD_o	true
14	into	_	into	IN	O	_	-	_	0	IGNORE	true
15	the	_	the	DT	O	_	thing	_	0	IGNORE	true
16	unconscious	_	unconscious	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	17	MOD_mod	true
17	processes	_	process	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	13	APP_o2	true
18	of	_	of	IN	O	_	thing	_	0	IGNORE	true
19	viewing	_	view	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	unique	_	unique	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	22	MOD_mod	true
22	collection	_	collection	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	collect-01	(s())	19	APP_s	true
23	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
24	Zurbarán	_name_	Zurbarán	NNP	O	(d<root> / --LEX--)	_NUMBER_	()	22	APP_s	true
25	artworks.	_	artworks.	ADD	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[4@@d@@we, 19@@s@@view-01, 16@@p@@unconscious, 17@@s@@process-02, 2@@p@@this, 8@@p@@novel, 10@@s@@eye-tracking-01, 11@@d@@technique, 9@@d@@insight-01, 24@@d@@_NUMBER_, 13@@b@@provide-01, 21@@p@@unique, 22@@s@@collect-01, 5@@s@@report-01]
sentence=1	Why	why	why	WRB	O	(a<root> / --LEX--  :ARG0-of (c / cause-01  :ARG1 (n<s>)))	amr-unknown	(s())	0	ROOT	true
2	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	1	APP_s	true
3	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	4	APP_s	true
4	bother	_	bother	VB	O	(b<root> / --LEX--  :ARG1 (i<o>)  :ARG2 (h<o2>)  :ARG0 (a<s>))	$LEMMA$-01	(o2(), s(), o())	2	APP_s	true
5	my	_	my	PRP$	O	_	say-01	_	0	IGNORE	true
6	child	_	child	NN	O	(p<root> / person  :ARG0-of (h / have-rel-role-91  :ARG2 (f / --LEX--)))	$LEMMA$	()	4	APP_o	true
7	with	_	with	IN	O	_	i	_	0	IGNORE	true
8	memory	_	memory	NN	O	(d<root> / --LEX--)	$LEMMA$	()	4	APP_o2	true
9	when	_	when	WRB	O	_	amr-unknown	_	0	IGNORE	true
10	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
11	can	_	can	MD	O	(p<root> / --LEX--  :ARG1 (s2<o>)  :time-of (s<mod>))	possible-01	(mod(), o(s()))	4	MOD_mod	true
12	buy	_	buy	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	11	APP_o	true
13	a	_	a	DT	O	_	thing	_	0	IGNORE	true
14	computer	_	computer	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
15	that	_	that	WDT	O	_	$LEMMA$	_	0	IGNORE	true
16	will	_	will	MD	O	_	thing	_	0	IGNORE	true
17	remember	_	remember	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	14	MOD_s	true
18	everything	_	everything	NN	O	(d<root> / --LEX--)	$LEMMA$	()	17	APP_o	true
19	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	20	APP_s	true
20	asked	_	ask	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	18	MOD_o	true
21	him	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
22	to	_	to	IN	O	_	thing	_	0	IGNORE	true
23	remember?	_	remember?	VB	O	_	thing	_	0	IGNORE	true

nodealignment=[11@@p@@possible-01, 6@@p@@person, 3@@d@@i, 6@@h@@have-rel-role-91, 1@@a@@amr-unknown, 14@@d@@computer, 20@@s@@ask-02, 19@@d@@you, 6@@f@@child, 17@@s@@remember-01, 8@@d@@memory, 18@@d@@everything, 1@@c@@cause-01, 12@@s@@buy-01, 4@@b@@bother-01, 2@@s@@recommend-01]
sentence=1	In	in	in	IN	O	_	i	_	0	IGNORE	true
2	his	_	he	PRP$	O	_	and	_	0	IGNORE	true
3	observations	_	observation	NNS	O	(t<root> / --LEX--  :ARG1 (t2<o>)  :ARG0 (i<s>)  :time-of (f<mod>))	observe-02	(mod(), s(), o())	8	MOD_mod	true
4	of	_	of	IN	O	_	name	_	0	IGNORE	true
5	pin	_	pin	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	factories,	_	factories,	NNP	O	_	and	_	0	IGNORE	true
7	Smith	smith	Smith	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
8	noticed	_	notice	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
9	that	_	that	IN	O	_	1	_	0	IGNORE	true
10	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	11	MOD_mod	true
11	worker	_	worker	NN	O	(p2<root> / person  :ARG0-of (e2 / --LEX--))	work-01	()	14	APP_s	true
12	alone	_	alone	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	11	MOD_mod	true
13	might	_	may	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	APP_s	true
14	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	13	APP_s	true
15	20	_	20	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	16	MOD_mod	true
16	pins	_	pin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_o	true
17	in	_	in	IN	O	_	th$LEMMA$g	_	0	IGNORE	true
18	a	_	a	DT	O	_	1	_	0	IGNORE	true
19	day,	_	day,	NN	O	_	$LEMMA$	_	0	IGNORE	true
20	but	_	but	CC	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	contrast-01	(s(), o())	8	APP_o	true
21	that	_	that	IN	O	_	contrast-01	_	0	IGNORE	true
22	a	_	a	DT	O	_	1	_	0	IGNORE	true
23	small	_	small	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	24	MOD_mod	true
24	business	_	business	NN	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_s	true
25	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
26	10	_	10	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	27	MOD_mod	true
27	workers	_	worker	NNS	O	(g<root> / --LEX--  :consist (r<mod>))	work-01	(mod())	24	MOD_mod	true
28	(some	_	(some	.	O	_	$LEMMA$	_	0	IGNORE	true
29	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (p<s>))	include-91	(s())	24	MOD_s	true
30	whom	_	whom	WP	O	_	amr-unknown	_	0	IGNORE	true
31	would	_	would	MD	O	_	person	_	0	IGNORE	true
32	need	_	need	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	34	MOD_o	true
33	to	_	to	TO	O	_	person	_	0	IGNORE	true
34	complete	_	complete	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	24	MOD_s	true
35	two	_	two	CD	O	(d<root> / --LEX--)	2	()	36	APP_op1	true
36	or	_	or	CC	O	(b2<root> / --LEX--  :op1 (explicitanon0<op1>)  :op2 (explicitanon1<op2>)  :quant-of (b<mod>))	$LEMMA$	(op2(), op1(), mod())	34	MOD_mod	true
37	three	_	three	CD	O	(d<root> / --LEX--)	3	()	36	APP_op2	true
38	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
39	the	_	the	DT	O	_	include-91	_	0	IGNORE	true
40	18	_	18	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	41	MOD_mod	true
41	tasks	_	task	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	34	APP_o	true
42	involved	_	involve	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	41	MOD_s	true
43	with	_	with	IN	O	_	-	_	0	IGNORE	true
44	pin-making),	_	pin-making),	PRP	O	_	and	_	0	IGNORE	true
45	could	_	could	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	20	APP_o	true
46	make	_	make	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	45	APP_s	true
47	48,000	_	48,000	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	_NUMBER_	(mod())	48	MOD_mod	true
48	pins	_	pin	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	46	APP_o	true
49	in	_	in	IN	O	_	after	_	0	IGNORE	true
50	a	_	a	DT	O	_	1	_	0	IGNORE	true
51	day.	_	day.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[41@@d@@task, 40@@explicitanon0@@_NUMBER_, 42@@s@@involve-01, 8@@s@@notice-01, 3@@t@@observe-02, 5@@d@@pin, 46@@s@@make-01, 26@@explicitanon0@@_NUMBER_, 24@@d@@business, 37@@d@@3, 16@@d@@pin, 13@@s@@possible-01, 35@@d@@2, 32@@s@@need-01, 10@@explicitanon0@@1, 12@@p@@alone, 15@@explicitanon0@@_NUMBER_, 14@@s@@make-01, 45@@s@@possible-01, 29@@s@@include-91, 20@@s@@contrast-01, 23@@p@@small, 47@@explicitanon0@@_NUMBER_, 34@@s@@complete-01, 7@@p@@person, 36@@b2@@or, 11@@p2@@person, 7@@n@@_NAME_, 11@@e2@@work-01, 27@@g@@work-01, 48@@d@@pin]
sentence=1	With	with	with	IN	O	_	-	_	0	IGNORE	true
2	this	_	this	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	agricultural	_	agricultural	JJ	O	(d<root> / --LEX--)	agriculture	()	5	APP_op1	true
4	revolution,	_	revolution,	NNS	O	_	cause-01	_	0	IGNORE	true
5	and	_	and	CC	O	(a<root> / --LEX--  :op1 (e<op1>)  :op2 (o2<op2>)  :example-of (r<mod>))	$LEMMA$	(op2(), op1(), mod())	17	MOD_mod	true
6	the	_	the	DT	O	_	person	_	0	IGNORE	true
7	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
8	abundant	_	abundant	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	12	MOD_mod	true
9	and	_	and	CC	O	_	$LEMMA$	_	0	IGNORE	true
10	reliable	_	reliable	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	rely-01	(s())	12	MOD_s	true
11	food	_	food	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_s	true
12	supplies	_	supply	NNS	O	(s<root> / --LEX--  :ARG1 (p<s>))	supply-01	(s())	5	APP_op2	true
13	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
14	brought,	_	brought,	ADD	O	_	and	_	0	IGNORE	true
15	populations	_	population	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_s	true
16	grew	_	grow	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	17	APP_op1	true
17	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	0	ROOT	true
18	people	_	people	NNS	O	(d<root> / --LEX--)	person	()	22	APP_s	true
19	were	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
20	able	_	able	JJ	O	(s<root> / --LEX--  :ARG1 (p<s>))	possible-01	(s())	17	APP_op2	true
21	to	_	to	TO	O	_	thing	_	0	IGNORE	true
22	develop	_	develop	VB	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-02	(s(), o())	20	APP_s	true
23	a	_	a	DT	O	_	thing	_	0	IGNORE	true
24	more	_	more	RBR	O	(s<root> / --LEX--  :degree-of (t<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
25	settled	_	settle	VBN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-03	(s())	26	MOD_s	true
26	way	_	way	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_o	true
27	of	_	of	IN	O	_	cause-01	_	0	IGNORE	true
28	life,	_	life,	NNS	O	_	and	_	0	IGNORE	true
29	building	_	build	VBG	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-01	(mod(), s())	22	MOD_mod	true
30	permanent	_	permanent	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	29	MOD_mod	true
31	settlements.	_	settlements.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[18@@d@@person, 29@@i@@build-01, 12@@s@@supply-01, 26@@d@@way, 11@@d@@food, 17@@a@@and, 3@@d@@agriculture, 25@@s@@settle-03, 30@@p@@permanent, 10@@s@@rely-01, 7@@s@@more, 15@@d@@population, 2@@p@@this, 20@@s@@possible-01, 8@@p@@abundant, 5@@a@@and, 24@@s@@more, 22@@s@@develop-02, 16@@s@@grow-01]
sentence=1	All	all	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
2	you	_	you	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_s	true
3	do	_	do	VBP	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-02	(s())	5	APP_s	true
4	is	_	be	VBZ	O	_	thing	_	0	IGNORE	true
5	like	_	like	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	resemble-01	(s(), o())	0	ROOT	true
6	go,	_	go,	XX	O	(s<root> / --LEX--  :ARG1 (p<s>))	and	(s())	5	APP_o	true
7	t-	_	t-	XX	O	_	contrast-01	_	0	IGNORE	true
8	two	_	two	CD	O	(d<root> / --LEX--)	2	()	6	APP_s	true
9	over	_	over	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	one.	_	one.	NN	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[9@@p@@over, 3@@s@@do-02, 6@@s@@and, 2@@d@@you, 1@@p@@all, 5@@s@@resemble-01, 8@@d@@2]
sentence=1	Whitmore	_name_	Whitmore	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	told	_	tell	VBD	O	(w<root> / --LEX--  :ARG2 (t<o2>)  :ARG1 (w2<o>)  :ARG0 (i<s>))	$LEMMA$-01	(s(), o(s_UNIFY_o2()))	0	ROOT	true
3	LA_Weekly	_name_	Weekly	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	2	APP_o2	true
4	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
5	on	_	on	IN	O	_	10	_	0	IGNORE	true
6	October_6	_name_	6	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_DATE_	(mod())	23	MOD_mod	true
7	after	_	after	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	23	MOD_mod	true
8	traveling	_	travel	VBG	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	7	APP_op1	true
9	back	_	back	RB	O	(a<root> / --LEX--  :direction-of (r<mod>))	$LEMMA$	(mod())	8	MOD_mod	true
10	from	_	from	IN	O	_	$LEMMA$	_	0	IGNORE	true
11	Florida,_Montalvo	_name_	Montalvo	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	8	APP_s	true
12	"walked	_	"walked	''	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	19	APP_op1	true
13	into	_	into	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	lobby	_	lobby	NN	O	(h<root> / --LEX--  :part-of (i<poss>))	$LEMMA$	(poss())	12	APP_o	true
15	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
16	the	_	the	DT	O	_	person	_	0	IGNORE	true
17	East_L.A.	_name_	L.A.	NNP	O	(c<root> / country  :name (n / --LEX--)  :mod-of (p<mod>))	_NAME_	(mod())	18	MOD_mod	true
18	station	_	station	NN	O	(d<root> / --LEX--)	$LEMMA$	()	14	APP_poss	true
19	and	_	and	CC	O	(a<root> / --LEX--  :op1 (c<op1>)  :op2 (l<op2>))	$LEMMA$	(op2(s()), op1(s()))	2	APP_o	true
20	turned	_	turn	VBD	O	(r<root> / --LEX--  :ARG0 (h<s>  :ARG1-of r))	$LEMMA$-in-06	(s())	19	APP_op2	true
21	himself	_	himself	PRP	O	_	person	_	0	IGNORE	true
22	in",	_	in",	RB	O	_	and	_	0	IGNORE	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	2	MOD_op1	true
24	told	_	tell	VBD	O	(t<root> / --LEX--  :ARG0 (y<s>)  :ARG2 (i<o>))	$LEMMA$-01	(s(), o())	23	APP_op2	true
25	the	_	the	DT	O	_	person	_	0	IGNORE	true
26	police,	_	police,	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_o	true
27	"everything	_	"everything	ADD	O	(d<root> / --LEX--)	$LEMMA$	()	24	APP_s	true
28	he	_	he	PRP	O	_	$LEMMA$	_	0	IGNORE	true
29	did".	_	did".	NNP	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[3@@n2@@_NAME_, 2@@w@@tell-01, 17@@c@@country, 6@@n@@_DATE_, 19@@a@@and, 9@@a@@back, 12@@s@@"walked-01, 27@@d@@"everything, 18@@d@@station, 1@@p@@person, 17@@n@@_NAME_, 3@@n@@newspaper, 11@@p@@person, 23@@a@@and, 11@@n@@_NAME_, 1@@n@@_NAME_, 20@@r@@turn-in-06, 8@@s@@travel-01, 24@@t@@tell-01, 14@@h@@lobby, 7@@w@@after, 26@@d@@police,]
sentence=1	The_day	_name_	day	NN	O	(n<root> / --LEX--  :time-of (p<mod>))	$LEMMA$	(mod())	10	MOD_mod	true
2	before	_	before	IN	O	(w<root> / --LEX--  :op1 (h<op1>)  :time-of (b<mod>))	$LEMMA$	(op1(), mod())	1	MOD_mod	true
3	the	_	the	DT	O	_	be-temporally-at-91	_	0	IGNORE	true
4	outbreak	_	outbreak	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$en-01	(s())	2	APP_op1	true
5	of	_	of	IN	O	_	name	_	0	IGNORE	true
6	World_War	_name_	War	NNP	O	(w<root> / war  :name (n / --LEX--))	_NAME_	()	4	APP_s	true
7	II,	ii,	II,	NNP	O	_	name	_	0	IGNORE	true
8	Łódź	_name_	Łódź	NNP	O	_	_NUMBER_	_	0	IGNORE	true
9	was	_	be	VBD	O	(d<root> / --LEX--)	person	()	10	APP_o	true
10	inhabited	_	inhabit	VBN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	0	ROOT	true
11	by	_	by	IN	O	_	name	_	0	IGNORE	true
12	approximately	_	approximately	RB	O	(s<root> / --LEX--  :op1 (explicitanon0<op1>)  :quant-of (b<mod>))	$LEMMA$	(op1(), mod())	10	MOD_mod	true
13	672,000	_	672,000	CD	O	(d<root> / --LEX--)	_NUMBER_	()	12	APP_op1	true
14	people,	_	people,	NNS	O	_	include-91	_	0	IGNORE	true
15	among	_	among	IN	O	_	include-91	_	0	IGNORE	true
16	whom	_	whom	WP	O	_	include-91	_	0	IGNORE	true
17	35%	_	35%	VBZ	O	_	have-org-role-91	_	0	IGNORE	true
18	were	_	be	VBD	O	(p<root> / --LEX--  :mod-of (s<mod>))	person	(mod())	10	MOD_mod	true
19	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
20	Jewish	_name_	jewish	JJ	O	(r<root> / religious-group  :name (n / --LEX--)  :mod-of (m2<mod>))	_NAME_	(mod())	21	MOD_mod	true
21	faith	_	faith	NN	O	(d<root> / --LEX--)	$LEMMA$	()	22	APP_op2	true
22	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	MOD_op1	true
23	some	_	some	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true
24	15%	_	15%	CD	O	_	have-org-role-91	_	0	IGNORE	true
25	were	_	be	VBD	O	(d<root> / --LEX--)	person	()	10	APP_s	true
26	ethnic	_	ethnic	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
27	German.	_name_	German.	NNS	O	_	_NAME_	_	0	IGNORE	true

nodealignment=[10@@s@@inhabit-01, 20@@r@@religious-group, 6@@n@@_NAME_, 23@@p@@some, 25@@d@@person, 9@@d@@person, 21@@d@@faith, 18@@p@@person, 20@@n@@_NAME_, 2@@w@@before, 4@@s@@outbreaken-01, 26@@p@@ethnic, 12@@s@@approximately, 1@@n@@day, 6@@w@@war, 13@@d@@_NUMBER_, 22@@a@@and]
sentence=1	I	i	I	PRP	O	(d<root> / --LEX--)	$REPL$	()	3	APP_s	true
2	also	_	also	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	3	MOD_mod	true
3	have	_	have	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-03	(s(), o())	0	ROOT	true
4	a	_	a	DT	O	_	thing	_	0	IGNORE	true
5	profile	_	profile	NN	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
6	they	_	they	PRP	O	(d<root> / --LEX--)	$LEMMA$	()	7	APP_s	true
7	fill	_	fill	VBP	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-out-03	(s(), o())	5	MOD_o	true
8	out	_	out	RP	O	_	$LEMMA$	_	0	IGNORE	true
9	for	_	for	IN	O	_	and	_	0	IGNORE	true
10	me,	_	me,	NN	O	_	and	_	0	IGNORE	true
11	a	_	a	DT	O	_	$LEMMA$	_	0	IGNORE	true
12	mini-MMPI	mini-mmpi	mini-mmpi	NN	O	(o<root> / --LEX--  :purpose-of (a2<mod>))	_NAME_	(mod())	5	MOD_mod	true
13	that	_	that	IN	O	_	$LEMMA$	_	0	IGNORE	true
14	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
15	developed,	_	developed,	VBZ	O	_	cause-01	_	0	IGNORE	true
16	so	_	so	IN	O	_	cause-01	_	0	IGNORE	true
17	that	_	that	IN	O	_	cause-01	_	0	IGNORE	true
18	I	i	I	PRP	O	_	$LEMMA$	_	0	IGNORE	true
19	have	_	have	VBP	O	(i<root> / --LEX--  :ARG1 (c<s>)  :purpose-of (d<mod>))	$LEMMA$-03	(mod(), s())	26	MOD_mod	true
20	an	_	an	DT	O	_	thing	_	0	IGNORE	true
21	idea	_	idea	NN	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_s	true
22	--	_	--	:	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	cause-01	(s(), o())	3	MOD_s	true
23	Rebecca	_name_	Rebecca	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	24	APP_op2	true
24	and	_	and	CC	O	(a<root> / --LEX--  :op2 (f<op2>))	$LEMMA$	(op2())	26	APP_s	true
25	I	i	I	PRP	O	_	1	_	0	IGNORE	true
26	put	_	put	VBD	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	22	APP_o	true
27	it	_	it	PRP	O	_	$LEMMA$	_	0	IGNORE	true
28	together	_	together	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	26	MOD_mod	true

nodealignment=[28@@p@@together, 22@@s@@cause-01, 1@@d@@i, 21@@d@@idea, 3@@s@@have-03, 2@@p@@also, 12@@o@@_NAME_, 19@@i@@have-03, 6@@d@@they, 5@@d@@profile, 24@@a@@and, 7@@s@@fill-out-03, 26@@s@@put-01, 23@@n@@_NAME_, 23@@p@@person]
sentence=1	Cornyn's	_name_	Cornyn's	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	2	APP_s	true
2	statement	_	statement	NN	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	state-01	(s(), o())	0	ROOT	true
3	added,	_	added,	NNP	O	_	and	_	0	IGNORE	true
4	"There	"there	"there	CD	O	(n<root> / --LEX--  :time-of (p<mod>))	_NAME_	(mod())	2	MOD_mod	true
5	is	_	be	VBZ	O	_	person	_	0	IGNORE	true
6	no	_	no	DT	O	(explicitanon0<root> / --LEX--  :polarity-of (e<mod>))	-	(mod())	7	MOD_mod	true
7	question	_	question	NN	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	2	APP_o	true
8	Houston	_name_	Houston	NNP	O	(c<root> / city  :name (n / --LEX--))	_NAME_	()	12	APP_s	true
9	should	_	should	MD	O	(s<root> / --LEX--  :ARG1 (p<s>))	recommend-01	(s())	7	APP_s	true
10	have	_	have	VB	O	_	person	_	0	IGNORE	true
11	been	_	be	VBN	O	_	person	_	0	IGNORE	true
12	selected	_	select	VBN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	9	APP_s	true
13	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
14	a	_	a	DT	O	_	1	_	0	IGNORE	true
15	final	_	final	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	16	MOD_mod	true
16	home	_	home	NN	O	(d<root> / --LEX--)	$LEMMA$	()	12	APP_o	true
17	for	_	for	IN	O	_	mean-01	_	0	IGNORE	true
18	one	_	one	CD	O	(explicitanon0<root> / --LEX--  :quant-of (b<mod>))	1	(mod())	16	MOD_mod	true
19	of	_	of	IN	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	include-91	(s(), o())	2	MOD_s	true
20	the	_	the	DT	O	_	person	_	0	IGNORE	true
21	orbiters	_	orbiter	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	19	APP_o	true
22	—	_	—	,	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	have-org-role-91	(s(), o())	2	MOD_s	true
23	even	_	even	RB	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	25	MOD_mod	true
24	Administrator	administrator	Administrator	NNP	O	(p2<root> / --LEX--  :ARG2-of (h / have-org-role-91  :ARG0 (p<s>)))	$LEMMA$	(s())	25	MOD_s	true
25	Bolden	_name_	Bolden	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	26	APP_s	true
26	stated	_	state	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>))	$LEMMA$-01	(s())	22	APP_o	true
27	as	_	as	IN	O	_	cause-01	_	0	IGNORE	true
28	much.	_	much.	NN	O	_	multi-sentence	_	0	IGNORE	true

nodealignment=[24@@p2@@Administrator, 2@@s@@state-01, 18@@explicitanon0@@1, 7@@s@@question-01, 12@@s@@select-01, 25@@p@@person, 23@@p@@even, 21@@d@@orbiter, 24@@h@@have-org-role-91, 16@@d@@home, 25@@n@@_NAME_, 8@@c@@city, 4@@n@@_NAME_, 26@@s@@state-01, 22@@s@@have-org-role-91, 1@@n@@_NAME_, 19@@s@@include-91, 9@@s@@recommend-01, 15@@p@@final, 1@@p@@person, 8@@n@@_NAME_, 6@@explicitanon0@@-]
sentence=1	Warhol	_name_	Warhol	NNP	O	(p<root> / person  :name (n / --LEX--))	_NAME_	()	3	APP_s	true
2	was	_	be	VBD	O	_	cause-01	_	0	IGNORE	true
3	close	_	close	JJ	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-13	(s(), o())	0	ROOT	true
4	to	_	to	IN	O	_	and	_	0	IGNORE	true
5	important	_	important	JJ	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	6	MOD_mod	true
6	touchstones	_	touchstone	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	3	APP_o	true
7	of	_	of	IN	O	_	include-91	_	0	IGNORE	true
8	the	_	the	DT	O	_	person	_	0	IGNORE	true
9	1960s,	_	1960s,	CD	O	_	and	_	0	IGNORE	true
10	including	_	include	VBG	O	(s<root> / --LEX--  :ARG1 (w<s>)  :ARG2 (d<o>))	$LEMMA$-01	(s(), o())	6	MOD_o	true
11	art,	_	art,	JJ	O	_	$LEMMA$	_	0	IGNORE	true
12	music,	_	music,	NNP	O	_	and	_	0	IGNORE	true
13	consumer	_	consumer	NN	O	(d<root> / --LEX--)	consume-01	()	16	APP_op2	true
14	culture,	_	culture,	NNP	O	_	and	_	0	IGNORE	true
15	fashion,	_	fashion,	NNP	O	_	$LEMMA$	_	0	IGNORE	true
16	and	_	and	CC	O	(a<root> / --LEX--  :op2 (s<op2>)  :op1 (l<op1>)  :op3 (s2<op3>))	$LEMMA$	(op2(), op1(), op3())	10	MOD_op1	true
17	celebrity	_	celebrity	NN	O	(d<root> / --LEX--)	$LEMMA$	()	16	APP_op3	true
18	worship,	_	worship,	NNS	O	_	$LEMMA$	_	0	IGNORE	true
19	which	_	which	WDT	O	_	$LEMMA$	_	0	IGNORE	true
20	were	_	be	VBD	O	_	person	_	0	IGNORE	true
21	all	_	all	DT	O	(p<root> / --LEX--  :mod-of (s<mod>))	$LEMMA$	(mod())	23	MOD_mod	true
22	buzzwords	_	buzzword	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op1	true
23	and	_	and	CC	O	(a<root> / --LEX--  :op1 (b<op1>)  :op2 (g<op2>))	$LEMMA$	(op2(), op1())	10	APP_s	true
24	images	_	image	NNS	O	(d<root> / --LEX--)	$LEMMA$	()	23	APP_op2	true
25	Wikinews	_name_	Wikinews	NNP	O	(n<root> / newspaper  :name (n2 / --LEX--))	_NAME_	()	26	APP_s	true
26	observed	_	observe	VBD	O	(s<root> / --LEX--  :ARG0 (y<s>)  :ARG1 (a<o>))	$LEMMA$-01	(s(), o())	23	MOD_o	true
27	at	_	at	IN	O	_	thing	_	0	IGNORE	true
28	USI's	usi's	usi'	NNS	O	_	_NAME_	_	0	IGNORE	true
29	opening	_	open	VBG	O	(s<root> / --LEX--  :ARG1 (d<s>)  :time-of (m<mod>))	open-01	(mod(), s())	26	MOD_mod	true
30	exhibit.	_	exhibit.	NN	O	_	$LEMMA$	_	0	IGNORE	true

nodealignment=[1@@n@@_NAME_, 13@@d@@consume-01, 29@@s@@open-01, 22@@d@@buzzword, 24@@d@@image, 3@@s@@close-13, 26@@s@@observe-01, 23@@a@@and, 10@@s@@include-01, 5@@p@@important, 21@@p@@all, 25@@n@@newspaper, 1@@p@@person, 25@@n2@@_NAME_, 17@@d@@celebrity, 6@@d@@touchstone, 16@@a@@and]
sentence=1	Who's	who's	Who's	NNPS	O	(s<root> / --LEX--  :ARG1 (p<s>))	$LEMMA$-01	(s())	0	ROOT	true
2	the	_	the	DT	O	_	person	_	0	IGNORE	true
3	party	_	party	NN	O	(d<root> / --LEX--)	$LEMMA$	()	1	APP_s	true
4	being	_	be	VBG	O	_	person	_	0	IGNORE	true
5	s-	_	s-	XX	O	_	$LEMMA$	_	0	IGNORE	true
6	served?	_	served?	XX	O	_	interrogative	_	0	IGNORE	true

nodealignment=[3@@d@@party, 1@@s@@Who's-01]

